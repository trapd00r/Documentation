From zsh-workers-return-18250-mason-zsh=primenet.com.au@sunsite.dk Mon Feb 17 10:39:20 2003
Return-Path: <zsh-workers-return-18250-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 3455 invoked from network); 17 Feb 2003 10:39:19 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 17 Feb 2003 10:39:19 -0000
Received: (qmail 2860 invoked by alias); 17 Feb 2003 10:39:09 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 18250
Received: (qmail 2852 invoked from network); 17 Feb 2003 10:39:09 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 17 Feb 2003 10:39:09 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [62.189.183.235] by sunsite.dk (MessageWall 1.0.8) with SMTP; 17 Feb 2003 10:39:9 -0000
Received: from exchange01.csr.com (unverified) by 
 (Content Technologies SMTPRS 4.2.1) with ESMTP id <T6077cc9753c0a88d01354@> for <zsh-workers@sunsite.dk>;
 Mon, 17 Feb 2003 10:45:57 +0000
Received: from csr.com (tinky-winky.csr.com [192.168.144.127]) by exchange01.csr.com with SMTP (Microsoft Exchange Internet Mail Service Version 5.5.2650.21)
	id DQ47M0GG; Mon, 17 Feb 2003 10:39:38 -0000
To: zsh-workers@sunsite.dk
Subject: Re: Memory leaks found by valgrind 
In-reply-to: "Felix Rosencrantz"'s message of "Sat, 08 Feb 2003 10:03:25 PST."
             <20030208180325.69634.qmail@web10402.mail.yahoo.com> 
Date: Mon, 17 Feb 2003 10:39:10 +0000
Message-ID: <13316.1045478350@csr.com>
From: Peter Stephenson <pws@csr.com>

Felix Rosencrantz wrote:
> 659 bytes in 4 blocks are definitely lost in loss record 8 of 13
>    at 0x40165A60: malloc (vg_clientfuncs.c:100)
>    by 0x8086055: zalloc (mem.c:490)
>    by 0x80E2122: calclist (compresult.c:1583)
>    by 0x80E8750: complistmatches (complist.c:1607)

Most of the amatches linked list is on the heap (according to one
comment), but the widths element of each structure is dynamically
allocated.  It's hard to see when it should be freed.  It's currently
only allocated and freed in one function (calclist()); maybe that
function simply needs more logic, but I can't be sure.

> (This one seems to have come from children processes.)
> 464 bytes in 4 blocks are definitely lost in loss record 5 of 11
>    at 0x40165A60: malloc (vg_clientfuncs.c:100)
>    by 0x80861D5: zcalloc (mem.c:508)
>    by 0x807983C: addproc (jobs.c:832)
>    by 0x805D6BE: execpline (exec.c:1057)

I presume this is because when we enter a subshell we don't completely
delete the stuff in the job table, just delete a few bits of it and zero
the rest out.  I have a patch for this at home, but it's not a major
problem.  The only case I can see where it would become one was a
long-lived shell instance recursively starting a subshell while the
original shell exited, which isn't a normal use.

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR Ltd., Science Park, Milton Road,
Cambridge, CB4 0WH, UK                          Tel: +44 (0)1223 692070


**********************************************************************
The information transmitted is intended only for the person or
entity to which it is addressed and may contain confidential 
and/or privileged material. 
Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by 
persons or entities other than the intended recipient is 
prohibited.  
If you received this in error, please contact the sender and 
delete the material from any computer.
**********************************************************************

