From zsh-workers-request@math.gatech.edu  Wed Nov  8 15:57:54 1995
Received: from math.gatech.edu (euclid.skiles.gatech.edu [130.207.146.50]) by werple.net.au (8.7/8.7.1) with SMTP id PAA15689 for <mason@werple.mira.net.au>; Wed, 8 Nov 1995 15:57:48 +1100 (EST)
Received: by math.gatech.edu (5.x/SMI-SVR4)
	id AA17533; Tue, 7 Nov 1995 23:44:33 -0500
Resent-Date: Tue, 07 Nov 1995 23:39:44 -0500
Old-Return-Path: <coleman@math.gatech.edu>
Message-Id: <199511080439.XAA18735@redwood.skiles.gatech.edu>
X-Mailer: exmh version 1.6.4 10/10/95
To: Geoff Wing <mason@werple.net.au>
Cc: zsh-workers@math.gatech.edu (zsh-list)
Subject: Re: brk/sbrk protos 
In-Reply-To: Your message of "Tue, 07 Nov 1995 14:53:15 +1100."
             <199511070353.OAA09495@werple.net.au> 
Mime-Version: 1.0
Content-Type: text/plain
Date: Tue, 07 Nov 1995 23:39:44 -0500
From: Richard Coleman <coleman@math.gatech.edu>
Resent-Message-Id: <"14Iz61.0.tH4.mM3em"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/559
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

> Heyla rc, can you take the brk and sbrk protos out of mem.c and
>  have configure work them out.

I'm not sure how we could do this in a robust fashion.
Each system keeps these prototypes hidden in a different place.
About the only thing I could do is grep in a few places for the
caddr_t type and use that if I find it.  Since these prototypes
are only used if you define ZSH_MEM, I not sure if we would
gain anything by this.  In general, it appears to be better to
use your systems malloc unless you are trying to debug memory
allocation problems.

Actually this reminds me of a couple of things I've been
wanting to do to mem.c.  I would like to separate mem.c into two
parts.  I would put the code for zsh's version of malloc/free/
etc... into its own file zmalloc.c (or whatever) and keep the
parts that zsh always uses (heap allocation, ...)  in mem.c

My rationale for this is that we could then experiment with using
alternate implementations of malloc such as GNU malloc or BSD
malloc.  Since the GNU malloc is GPL'ed, we couldn't include it
in the zsh distribution, but you could always download it yourself
and use it.

Just a random thought.

rc

