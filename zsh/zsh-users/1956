From zsh-workers-request@math.gatech.edu Thu Dec 03 04:29:16 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 11391 invoked from network); 3 Dec 1998 04:29:14 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 3 Dec 1998 04:29:14 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.9.1/8.9.1) id XAA09736;
	Wed, 2 Dec 1998 23:24:11 -0500 (EST)
Resent-Date: Wed, 2 Dec 1998 23:24:05 -0500 (EST)
To: zsh-users@math.gatech.edu
Path: mason
From: mason@primenet.com.au (Geoff Wing)
Newsgroups: lists.zsh.users
Subject: Re: counting in "for" loops
Date: 3 Dec 1998 04:22:57 GMT
Organization: PrimeNet Computer Consultants
Lines: 38
Message-ID: <slrn76c4h1.9s2.mason@coral.primenet.com.au>
References: <19981202170030.A2789@math.fu-berlin.de>
Reply-To: mason@primenet.com.au
NNTP-Posting-Host: coral.primenet.com.au
X-Trace: coral.primenet.com.au 912658977 11283 203.43.15.2 (3 Dec 1998 04:22:57 GMT)
X-Complaints-To: usenet@coral.primenet.com.au
NNTP-Posting-Date: 3 Dec 1998 04:22:57 GMT
User-Agent: slrn/0.9.5.4 (UNIX)
Resent-Message-ID: <"xE0n92.0.bN2.b9XPs"@math>
Resent-From: zsh-users@math.gatech.edu
X-Mailing-List: <zsh-users@math.gatech.edu> archive/latest/1956
X-Loop: zsh-users@math.gatech.edu
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Sven Guckes <guckes@math.fu-berlin.de> typed:
:Again, I look at the manual and  I cannot find
:how to do a simple count within a for loop.
:	$ for count in ???; do
:	> echo -n $count
:	> done
:	1 2 3 4 5 6 7 8 9 10
:What do I need for "???"?
:Why isn't this in the manual as an example?  *sigh*

The manual does list quite a few methods if you read it above and below
the section on for loops.  Most people would have found a method they
like and use it.  It's not as if there aren't a few choices.  For starters:

% count=1; while ( [[ $count -le 10 ]] ); do echo -n $count; let count++; done
% count=1; while ( [[ $count -le 10 ]] ); do echo -n $count; (( count++ )); done
% count=1; while ( [[ count -le 10 ]] ); do echo -n $count; let count++; done
% count=1; while ( [[ count -le 10 ]] ); do echo -n $count; (( count++ )); done
% count=1; while ( [[ $count -le 10 ]] ) { echo -n $count; let count++ }
% count=1; while ( [[ $count -le 10 ]] ) { echo -n $count; (( count++ )) }
% count=1; while ( [[ count -le 10 ]] ) { echo -n $count; let count++ }
% count=1; until ( [[ $count -gt 10 ]] ) { echo -n $count; (( count++ )) }
% count=1; until ( [[ count -gt 10 ]] ); do echo -n $count; let count++; done
% count=1; until ( [[ $count -gt 10 ]] ); do echo -n $count; (( count++ )); done
% count=1; until ( [[ count -gt 10 ]] ) { echo -n $count; let count++ }
% count=1; until ( [[ count -gt 10 ]] ) { echo -n $count; (( count++ )) }
% count=1; repeat 10; do echo -n $count; let count++; done
% count=1; repeat 10; do echo -n $count; (( count++ )); done
% count=1; repeat 10 { echo -n $count; let count++ }
% count=1; repeat 10 { echo -n $count; (( count++ )) }
% for count in {1..10}; do echo -n $count; done
% for count in {1..10}; echo -n $count
zsh-3.1.5% for (( count=1; count <= 10; count++ )); do echo -n $count; done
zsh-3.1.5% for ((count=1; count<=10; count++)) echo -n $count

-- 
Geoff Wing   <gcw@pobox.com>            Mobile : 0412 162 441
Work URL: http://www.primenet.com.au/   Ego URL: http://pobox.com/~gcw/

