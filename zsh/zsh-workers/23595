From zsh-workers-return-23595-mason-zsh=primenet.com.au@sunsite.dk Sun Jun 24 15:33:38 2007
Return-Path: <zsh-workers-return-23595-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 5708 invoked from network); 24 Jun 2007 15:33:36 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.1 (2007-05-02) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.1
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 24 Jun 2007 15:33:36 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 89961 invoked from network); 24 Jun 2007 15:33:30 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 24 Jun 2007 15:33:30 -0000
Received: (qmail 6301 invoked by alias); 24 Jun 2007 15:33:24 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 23595
Received: (qmail 6292 invoked from network); 24 Jun 2007 15:33:23 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 24 Jun 2007 15:33:23 -0000
Received: (qmail 89142 invoked from network); 24 Jun 2007 15:33:23 -0000
Received: from acolyte.scowler.net (216.254.112.45)
  by a.mx.sunsite.dk with SMTP; 24 Jun 2007 15:33:20 -0000
Received: by acolyte.scowler.net (Postfix, from userid 1000)
	id BCC725C3C6; Sun, 24 Jun 2007 11:33:19 -0400 (EDT)
Date: Sun, 24 Jun 2007 11:33:19 -0400
From: Clint Adams <clint@zsh.org>
To: zsh-workers@sunsite.dk
Subject: PATCH: _git archive
Message-ID: <20070624153319.GA2725@scowler.net>
Mail-Followup-To: zsh-workers@sunsite.dk
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable
User-Agent: Mutt/1.5.13 (2006-08-11)

git archive from Nikolai Weibull's repo

Index: Completion/Unix/Command/_git
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
RCS file: /cvsroot/zsh/zsh/Completion/Unix/Command/_git,v
retrieving revision 1.6
diff -u -r1.6 _git
--- Completion/Unix/Command/_git	24 Jun 2007 15:15:59 -0000	1.6
+++ Completion/Unix/Command/_git	24 Jun 2007 15:31:02 -0000
@@ -1,4 +1,4 @@
-#compdef git git-annotate git-apply git-checkout-index git-commit-tree git=
-hash-object git-index-pack git-init-db git-merge-index git-mktag git-pack-=
objects git-prune-packed git-read-tree git-unpack-objects git-update-index =
git-write-tree git-cat-file git-diff-index git-diff-files git-diff-stages g=
it-diff-tree git-fsck-objects git-ls-files git-ls-tree git-merge-base git-n=
ame-rev git-rev-list git-show-index git-tar-tree git-unpack-file git-var gi=
t-verify-pack git-clone-pack git-fetch-pack git-http-fetch git-local-fetch =
git-peek-remote git-receive-pack git-send-pack git-ssh-fetch git-ssh-upload=
 git-update-server-info git-upload-pack git-add git-am git-applymbox git-bi=
sect git-branch git-checkout git-cherry-pick git-clone git-commit git-diff =
git-fetch git-format-patch git-grep git-log git-ls-remote git-merge git-mv =
git-octopus git-pull git-push git-rebase git-repack git-reset git-resolve g=
it-revert git-shortlog git-show-branch git-status git-verify-tag git-whatch=
anged git-applypatch git-archimport git-convert-objects git-cvsimport git-l=
ost-found git-merge-one-file git-prune git-relink git-svnimport git-symboli=
c-ref git-tag git-update-ref git-check-ref-format git-cherry git-count-obje=
cts git-daemon git-get-tar-commit-id git-mailinfo git-mailsplit git-patch-i=
d git-request-pull git-send-email git-stripspace
+#compdef git git-annotate git-apply git-checkout-index git-commit-tree git=
-hash-object git-index-pack git-init-db git-merge-index git-mktag git-pack-=
objects git-prune-packed git-read-tree git-unpack-objects git-update-index =
git-write-tree git-cat-file git-diff-index git-diff-files git-diff-stages g=
it-diff-tree git-fsck-objects git-ls-files git-ls-tree git-merge-base git-n=
ame-rev git-rev-list git-show-index git-tar-tree git-unpack-file git-var gi=
t-verify-pack git-clone-pack git-fetch-pack git-http-fetch git-local-fetch =
git-peek-remote git-receive-pack git-send-pack git-ssh-fetch git-ssh-upload=
 git-update-server-info git-upload-pack git-add git-am git-applymbox git-bi=
sect git-branch git-checkout git-cherry-pick git-clone git-commit git-diff =
git-fetch git-format-patch git-grep git-log git-ls-remote git-merge git-mv =
git-octopus git-pull git-push git-rebase git-repack git-reset git-resolve g=
it-revert git-shortlog git-show-branch git-status git-verify-tag git-whatch=
anged git-applypatch git-archimport git-archive git-convert-objects git-cvs=
import git-lost-found git-merge-one-file git-prune git-relink git-svnimport=
 git-symbolic-ref git-tag git-update-ref git-check-ref-format git-cherry gi=
t-count-objects git-daemon git-get-tar-commit-id git-mailinfo git-mailsplit=
 git-patch-id git-request-pull git-send-email git-stripspace
=20
 # Commands not completed:
 # git-sh-setup
@@ -87,6 +87,7 @@
     'applymbox:apply patches from a mailbox'
     'applypatch:apply one patch extracted from an e-mail'
     'archimport:import an Arch repository into git'
+    'archive:create an archive of files from a named tree'
     'bisect:find the change that introduced a bug'
     'branch:create and show branches'
     'cat-file:provide content or type information for repository objects'
@@ -698,6 +699,46 @@
     '::signoff file:__git_signoff_file' && ret=3D0
 }
=20
+_git-archive () {
+  local curcontext=3D$curcontext state line
+  declare -A opt_args
+
+  declare -a backend_args
+
+  if (( words[(I)--format=3D*] > 0 && words[(I)--format=3D*] < CURRENT ));=
 then
+    case ${words[$words[(I)--format=3D*]]#--format=3D} in
+      (zip)
+        backend_args=3D(
+          '-0[do not deflate files]'
+          '-1[minimum compression]'
+          '-2[a little more compression]'
+          '-3[slightly more compression]'
+          '-4[a bit more compression]'
+          '-5[even more compression]'
+          '-6[slightly even more compression]'
+          '-7[getting there]'
+          '-8[close to maximum compression]'
+          '-9[maximum compression]')
+        ;;
+    esac
+  fi
+
+  _arguments -C \
+    '--format=3D-[format of the resulting archive]:archive format:__git_ar=
chive_formats' \
+    '(- :)--list[list available archive formats]' \
+    '--prefix=3D-[prepend the given path prefix to to each filename]' \
+    $backend_args \
+    '--remote=3D-[archive remote repository]:remote repository:__git_any_r=
epositories' \
+    ':tree-ish:__git_tree_ishs' \
+    '*:tree file:->files' && ret=3D0
+
+  case $state in
+    (files)
+      __git_tree_files $line[1] && ret=3D0
+      ;;
+  esac
+}
+
 _git-bisect () {
   local bisect_cmds
=20
@@ -1488,3 +1529,13 @@
 __git_is_indexed () {
   [[ -n $(git ls-files $REPLY) ]]
 }
+
+__git_archive_formats () {
+  local expl
+  declare -a formats
+
+  formats=3D(${${(f)"$(_call_program archive-formats git archive --list)"}=
})
+  __git_command_successful || return
+
+  _wanted archive-formats expl 'archive format' compadd $formats
+}

