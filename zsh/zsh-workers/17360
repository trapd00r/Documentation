From zsh-workers-return-17360-mason-zsh=primenet.com.au@sunsite.dk Mon Jun 24 09:38:55 2002
Return-Path: <zsh-workers-return-17360-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 6191 invoked from network); 24 Jun 2002 09:38:51 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 24 Jun 2002 09:38:51 -0000
Received: (qmail 11654 invoked by alias); 24 Jun 2002 09:38:45 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 17360
Received: (qmail 11642 invoked from network); 24 Jun 2002 09:38:45 -0000
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: PATCH: accept-line-and-down-history
Date: Mon, 24 Jun 2002 10:38:17 +0100
Message-ID: <21365.1024911497@csr.com>
From: Peter Stephenson <pws@csr.com>

You've already seen this since it was accidentally wrapped up in the
$CUTBUFFER/$killring patch, but it's completely separate and I won't
commit it with that.

This changes the behaviour of accept-line-and-down-history to accept the
line unconditionally, even if it can't go down in the history.
Previously, if you were on the last line in the history it just beeped.
The thinking behind this is that you can use this as a replacement
binding for accept-line, getting the down-history behaviour for free
when you're not at a newly typed line.  However, you have to remember to
type `\e>' when you're finished with the previous history chunk or you
keep getting new lines.  Even so, can anyone suggest a reason why the
old behaviour would be a feature?

Index: Src/Zle/zle_hist.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/Zle/zle_hist.c,v
retrieving revision 1.7
diff -u -r1.7 zle_hist.c
--- Src/Zle/zle_hist.c	5 Mar 2002 16:33:19 -0000	1.7
+++ Src/Zle/zle_hist.c	24 Jun 2002 09:30:33 -0000
@@ -250,11 +250,11 @@
 {
     Histent he;
 
-    if (!(he = movehistent(quietgethist(histline), 1, HIST_FOREIGN)))
-	return 1;
-    zpushnode(bufstack, ztrdup(he->text));
+    if ((he = movehistent(quietgethist(histline), 1, HIST_FOREIGN))) {
+	zpushnode(bufstack, ztrdup(he->text));
+	stackhist = he->histnum;
+    }
     done = 1;
-    stackhist = he->histnum;
     return 0;
 }
 

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR Ltd., Science Park, Milton Road,
Cambridge, CB4 0WH, UK                          Tel: +44 (0)1223 392070


**********************************************************************
The information transmitted is intended only for the person or
entity to which it is addressed and may contain confidential 
and/or privileged material. 
Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by 
persons or entities other than the intended recipient is 
prohibited.  
If you received this in error, please contact the sender and 
delete the material from any computer.
**********************************************************************

