From zsh-workers-return-25367-mason-zsh=primenet.com.au@sunsite.dk Fri Aug 01 13:43:18 2008
Return-Path: <zsh-workers-return-25367-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 21765 invoked from network); 1 Aug 2008 13:43:16 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 1 Aug 2008 13:43:16 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 77297 invoked from network); 1 Aug 2008 13:43:10 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 1 Aug 2008 13:43:10 -0000
Received: (qmail 18923 invoked by alias); 1 Aug 2008 13:42:02 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 25367
Received: (qmail 18872 invoked from network); 1 Aug 2008 13:41:53 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 1 Aug 2008 13:41:53 -0000
Received: from cluster-d.mailcontrol.com (cluster-d.mailcontrol.com [217.69.20.190])
	by bifrost.dotsrc.org (Postfix) with ESMTPS id D378B805A42E
	for <zsh-workers@sunsite.dk>; Fri,  1 Aug 2008 15:41:46 +0200 (CEST)
Received: from cameurexb01.EUROPE.ROOT.PRI ([193.128.72.68])
	by rly37d.srv.mailcontrol.com (MailControl) with ESMTP id m71Df0Cd018465
	for <zsh-workers@sunsite.dk>; Fri, 1 Aug 2008 14:41:42 +0100
Received: from news01 ([10.103.143.38]) by cameurexb01.EUROPE.ROOT.PRI with Microsoft SMTPSVC(6.0.3790.3959);
	 Fri, 1 Aug 2008 14:37:47 +0100
Date: Fri, 1 Aug 2008 14:37:47 +0100
From: Peter Stephenson <pws@csr.com>
To: zsh-workers@sunsite.dk
Subject: Re: Weird exit caused in a trap DEBUG which sources a file.
Message-ID: <20080801143747.19b65086@news01>
In-Reply-To: <6cd6de210808010529h11898619kba301fddf8b72f00@mail.gmail.com>
References: <6cd6de210807301938m28e05c84vf6296aa5b1bc0d44@mail.gmail.com>
	<200807310901.m6V91g8T002478@news01.csr.com>
	<6cd6de210807310305q5954b65ax405f51e54d6754ee@mail.gmail.com>
	<6cd6de210808010529h11898619kba301fddf8b72f00@mail.gmail.com>
Organization: CSR
X-Mailer: Claws Mail 3.5.0 (GTK+ 2.12.8; i386-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 01 Aug 2008 13:37:47.0704 (UTC) FILETIME=[C914F380:01C8F3DB]
X-Scanned-By: MailControl A-08-50-03 (www.mailcontrol.com) on 10.68.0.147
X-Virus-Scanned: ClamAV 0.92.1/7911/Fri Aug  1 14:10:36 2008 on bifrost
X-Virus-Status: Clean

On Fri, 1 Aug 2008 08:29:29 -0400
"Rocky Bernstein" <rocky.bernstein@gmail.com> wrote:
> Looks like the crucial change that makes zsh 4.3.5-dev and current SVN
> sources fail is an extra source after the trap DEBUG:

Thanks, this is what I needed.

The source code wasn't handling the variable that indicates a trap has told
us to return from a function properly.  The variable is only primed for
action if negative.  That's the init.c hunk.

The signals.c hunk is to save and restore trapreturn for nested trap
handlers.  I'm not sure it's necessary; I am sure it's not wrong and
prevents hostages to fortune.

The hairy trap tests still pass, which is good; it would be better to add
this as a test, too, which shouldn't be too hard as there's nothing here
that depends on external behaviour.

I've documented the variable trapreturn better.

Index: Src/exec.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/exec.c,v
retrieving revision 1.135
diff -u -r1.135 exec.c
--- Src/exec.c	31 Jul 2008 08:44:21 -0000	1.135
+++ Src/exec.c	1 Aug 2008 13:29:06 -0000
@@ -64,7 +64,23 @@
 /**/
 mod_export int errflag;
  
-/* Status of return from a trap */
+/*
+ * Status of return from a trap.
+ * This is only active if we are inside a trap, else its value
+ * is irrelevant.  It is initialised to -1 for a function trap and
+ * -2 for a non-function trap and if negative is decremented as
+ * we go deeper into functions and incremented as we come back up.
+ * The value is used to decide if an explicit "return" should cause
+ * a return from the caller of the trap; it does this by setting
+ * trapreturn to a status (i.e. a non-negative value).
+ *
+ * In summary, trapreturn is
+ * - zero unless we are in a trap
+ * - negative in a trap unless it has triggered.  Code uses this
+ *   to detect an active trap.
+ * - non-negative in a trap once it was triggered.  It should remain
+ *   non-negative until restored after execution of the trap.
+ */
  
 /**/
 int trapreturn;
Index: Src/init.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/init.c,v
retrieving revision 1.87
diff -u -r1.87 init.c
--- Src/init.c	31 Jul 2008 08:44:21 -0000	1.87
+++ Src/init.c	1 Aug 2008 13:29:06 -0000
@@ -191,7 +191,7 @@
 	    exit(lastval);
 	if (((!interact || sourcelevel) && errflag) || retflag)
 	    break;
-	if (trapreturn) {
+	if (trapreturn >= 0) {
 	    lastval = trapreturn;
 	    trapreturn = 0;
 	}
Index: Src/signals.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/signals.c,v
retrieving revision 1.47
diff -u -r1.47 signals.c
--- Src/signals.c	31 Jul 2008 08:44:21 -0000	1.47
+++ Src/signals.c	1 Aug 2008 13:29:06 -0000
@@ -1085,6 +1085,7 @@
     int trapret = 0;
     int obreaks = breaks;
     int oretflag = retflag;
+    int otrapreturn = trapreturn;
     int isfunc;
     int traperr;
 
@@ -1183,6 +1184,7 @@
 	trapret = trapreturn + 1;
     }
     traperr = errflag;
+    trapreturn = otrapreturn;
     execrestore();
     lexrestore();
 

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070

