From zsh-workers-return-25266-mason-zsh=primenet.com.au@sunsite.dk Sat Jul 05 19:50:09 2008
Return-Path: <zsh-workers-return-25266-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20423 invoked from network); 5 Jul 2008 19:50:07 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 5 Jul 2008 19:50:07 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 24305 invoked from network); 5 Jul 2008 19:50:02 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 5 Jul 2008 19:50:02 -0000
Received: (qmail 4357 invoked by alias); 5 Jul 2008 19:49:59 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 25266
Received: (qmail 4346 invoked from network); 5 Jul 2008 19:49:59 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 5 Jul 2008 19:49:59 -0000
Received: from mtaout02-winn.ispmail.ntl.com (mtaout02-winn.ispmail.ntl.com [81.103.221.48])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 498AF80524FA
	for <zsh-workers@sunsite.dk>; Sat,  5 Jul 2008 21:49:46 +0200 (CEST)
Received: from aamtaout02-winn.ispmail.ntl.com ([81.103.221.35])
          by mtaout02-winn.ispmail.ntl.com with ESMTP
          id <20080705195442.WQHI7070.mtaout02-winn.ispmail.ntl.com@aamtaout02-winn.ispmail.ntl.com>
          for <zsh-workers@sunsite.dk>; Sat, 5 Jul 2008 20:54:42 +0100
Received: from pws-pc ([81.107.40.67]) by aamtaout02-winn.ispmail.ntl.com
          with ESMTP
          id <20080705195309.QGOJ29365.aamtaout02-winn.ispmail.ntl.com@pws-pc>
          for <zsh-workers@sunsite.dk>; Sat, 5 Jul 2008 20:53:09 +0100
Date: Sat, 5 Jul 2008 20:49:43 +0100
From: Peter Stephenson <p.w.stephenson@ntlworld.com>
To: zsh workers <zsh-workers@sunsite.dk>
Subject: Re: list-color && extended_glob
Message-ID: <20080705204943.5781d742@pws-pc>
In-Reply-To: <20080705185936.GF19334@fsst.voodoo.lan>
References: <20080705185936.GF19334@fsst.voodoo.lan>
X-Mailer: Claws Mail 3.4.0 (GTK+ 2.12.10; x86_64-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Virus-Scanned: ClamAV 0.92.1/7642/Sat Jul  5 20:16:02 2008 on bifrost
X-Virus-Status: Clean

On Sat, 05 Jul 2008 20:59:36 +0200
Frank Terbeck <ft@bewatermyfriend.org> wrote:
> Let's assume someone wants colorful completion for kill(1):
> 
> [snip]
> autoload -U compinit && compinit
> zmodload -i zsh/complist
> zstyle ':completion:*:kill:*' command 'ps xf -u $USER -o pid,%cpu,cmd'
> zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
> [snap]
> 
> This only works, if you also setopt extendedglob. If you do not want
> that option set this way of coloring the completion list will not
> work.
> 
> Would it be possible to silently set extendedglob for all style
> evaluations (similar to the fact, that it is set in all completion
> functions by default)?

The problem is not with the style, which sets ZLS_COLORS for later use.
By the time it is examined the completion function has exited and the
top-level options are in effect.

The documentation for ZLS_COLORS, however, implies that extended
globbing is always applied in patterns of this form, and without it
they're pretty useless, so I think it's reasonable to ensure that this
is the case.

Index: Doc/Zsh/mod_complist.yo
===================================================================
RCS file: /cvsroot/zsh/zsh/Doc/Zsh/mod_complist.yo,v
retrieving revision 1.23
diff -u -r1.23 mod_complist.yo
--- Doc/Zsh/mod_complist.yo	16 May 2008 11:49:21 -0000	1.23
+++ Doc/Zsh/mod_complist.yo	5 Jul 2008 19:47:08 -0000
@@ -100,7 +100,8 @@
 (`tt(*)') followed by any string. The var(value) given for such a
 string will be used for all files whose name ends with the string.
 The var(name) may also be an equals sign (`tt(=)') followed by a
-pattern.  The var(value) given for this pattern will be used for all
+pattern; the tt(EXTENDED_GLOB) option will be turned on for evaluation
+of the pattern.  The var(value) given for this pattern will be used for all
 matches (not just filenames) whose display string are matched by
 the pattern.  Definitions for both of these take precedence over the
 values defined for file types and the form with the leading asterisk 
Index: Src/Zle/complist.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/Zle/complist.c,v
retrieving revision 1.116
diff -u -r1.116 complist.c
--- Src/Zle/complist.c	16 May 2008 09:37:56 -0000	1.116
+++ Src/Zle/complist.c	5 Jul 2008 19:47:11 -0000
@@ -1923,6 +1923,7 @@
 complistmatches(UNUSED(Hookdef dummy), Chdata dat)
 {
     static int onlnct = -1;
+    static int extendedglob;
 
     Cmgroup oamatches = amatches;
 
@@ -1945,6 +1946,8 @@
      * useful outside.
      */
     pushheap();
+    extendedglob = opts[EXTENDEDGLOB];
+    opts[EXTENDEDGLOB] = 1;
 
     getcols();
 
@@ -1958,6 +1961,7 @@
 	noselect = 1;
 	amatches = oamatches;
 	popheap();
+	opts[EXTENDEDGLOB] = extendedglob;
 	return 1;
     }
     if (inselect || mlbeg >= 0)
@@ -1990,6 +1994,7 @@
 	if (asklist()) {
 	    amatches = oamatches;
 	    popheap();
+	    opts[EXTENDEDGLOB] = extendedglob;
 	    return (noselect = 1);
 	}
     }
@@ -2034,6 +2039,7 @@
     amatches = oamatches;
 
     popheap();
+    opts[EXTENDEDGLOB] = extendedglob;
 
     return noselect;
 }


-- 
Peter Stephenson <p.w.stephenson@ntlworld.com>
Web page now at http://homepage.ntlworld.com/p.w.stephenson/

