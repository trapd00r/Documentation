From zsh-workers-return-10097-mason-zsh=primenet.com.au@sunsite.auc.dk Sun Mar 12 21:36:50 2000
Return-Path: <zsh-workers-return-10097-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 14243 invoked from network); 12 Mar 2000 21:36:49 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 12 Mar 2000 21:36:49 -0000
Received: (qmail 2876 invoked by alias); 12 Mar 2000 21:36:40 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 10097
Received: (qmail 2858 invoked from network); 12 Mar 2000 21:36:38 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1000312213629.ZM28219@candle.brasslantern.com>
Date: Sun, 12 Mar 2000 21:36:29 +0000
In-Reply-To: <38CBB634.816D2213@u.genie.co.uk>
Comments: In reply to Oliver Kiddle <opk@u.genie.co.uk>
        "PATCH: _groups and _condition" (Mar 12,  3:22pm)
References: <38CBB634.816D2213@u.genie.co.uk>
X-Mailer: Z-Mail (5.0.0 30July97)
To: Oliver Kiddle <opk@u.genie.co.uk>,
        Zsh workers <zsh-workers@sunsite.auc.dk>
Subject: Re: PATCH: _groups and _condition
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Mar 12,  3:22pm, Oliver Kiddle wrote:
} Subject: PATCH: _groups and _condition
}
} Also here, is a patch against _condition so that it completes only files
} after more of its options.

This question isn't really directed at Oliver, but:

Out of curiosity, why doesn't _condition complete any of the options
themselves?  E.g. If I do

	zsh% [[ -<TAB>

it just inserts a space.  I expected it to list -n, -z, -t, etc.

} Incidentally, I had a look at whether it would be possible to add a
} completion for test and, more specifically, the '[' builtin. Putting
} [ or \[ after #compdef doesn't work.

I can't see any reason why it shouldn't.  (The form with no backslash.)
It works for me.  Did you remember to remove your ~/.zcompdump file?

} I can't use '[' as a key to an
} associative array if I use an assignment like: foo[\[]=whatever though
} it works fine if I do: a='[';foo[$a]=whatever or use an array style
} assignment.

That's because the string inside [ ] isn't tokenized yet at the point
where foo[\[] is tested by isident().  As a result, skipparens() finds
what appear to be unbalanced brackets.  This is a known bug with the
parser, resulting from the way associative arrays were grafted on.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

