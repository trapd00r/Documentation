From zsh-workers-return-13809-mason-zsh=primenet.com.au@sunsite.dk Wed Mar 28 09:49:17 2001
Return-Path: <zsh-workers-return-13809-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 17776 invoked from network); 28 Mar 2001 09:49:16 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 28 Mar 2001 09:49:16 -0000
Received: (qmail 9465 invoked by alias); 28 Mar 2001 09:49:09 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 13809
Received: (qmail 9453 invoked from network); 28 Mar 2001 09:49:08 -0000
Date: Wed, 28 Mar 2001 11:49:02 +0200 (MET DST)
Message-Id: <200103280949.LAA16960@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.dk
CC: Mario Lang <mlang@home.delysid.org>
In-reply-to: Sven Wischnowsky's message of Wed, 28 Mar 2001 11:00:44 +0200
	(MET DST)
Subject: PATCH: Re: Backticks and                       other tricks


[ moved to -workers ]

I wrote:

> ...
>
>   if (( ! $+_ecasound_opts )); then
>     local filters i

Since the filters array is to be used later it should of course be
before that `if' (or stored in a global _ecasound_filters array).

And I forgot to say that the values can be retrieved with

  ${(M)filters:#<name>:*}

or
  ${filters[(R)<name>:*]}

as in:

  if [[ -n $state ]]; then
    local what=${${(M)filters:#${state}:*}#*:*:} pat
  
    pat="${${what//[^:]##}[2,-1]}"
    pat="${pat//::/*,}"
  
    if [[ $PREFIX = ${~pat}*, ]]; then
      _message 'too many parameters'
    else
      while [[ -n $pat ]] && ! compset -P $pat; do
        pat=$pat[3,-1]
        what=${what%:*:*}
      done
      _message "${${what%:*}##*:} in ${what##*:}"
    fi
  fi

(I guess something like that was what Mario was aiming at).


Anyway, what I really wanted to say (and that's why it's on -workers): 
if you try this with a `&& return 0' after the `_arguments ...' you'll 
notice that competion after, e.g. `-ef1:' yields nothing.  That's a
result of the change that removed the 300-return-value -- it has added 
the option itself and hence `_arguments' returns zero.  Ugly.  Very.

I can't think of a completely satisfying solution now.  Taking the
current option from the arrays of known options isn't good, because
then one wouldn't get offered an option `-foo' if that is already on
the line and there are other options starting with `-foo'.

So for now let's use the patch below.  It adds the options only if
there is no `->state' action to use or if we are not in the same word
after the option.


Bye
 Sven

Index: Completion/Base/_arguments
===================================================================
RCS file: /cvsroot/zsh/zsh/Completion/Base/_arguments,v
retrieving revision 1.33
diff -u -r1.33 _arguments
--- Completion/Base/_arguments	2001/03/27 13:03:51	1.33
+++ Completion/Base/_arguments	2001/03/28 09:48:26
@@ -319,7 +319,8 @@
         fi
       done
 
-      if [[ -z "$matched$hasopts" ]] && _requested options &&
+      if [[ -z "$matched$hasopts" && ( -z "$aret" || "$PREFIX" = "$origpre" ) ]] &&
+          _requested options &&
           { ! zstyle -T ":completion:${curcontext}:options" prefix-needed ||
             [[ "$origpre" = [-+]* || -z "$aret$mesg$tried" ]] } ; then
 	local prevpre="$PREFIX" previpre="$IPREFIX"

--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

