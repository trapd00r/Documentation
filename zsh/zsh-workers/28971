From zsh-workers-return-28971-mason-zsh=primenet.com.au@zsh.org Fri Apr 01 23:41:01 2011
Return-Path: <zsh-workers-return-28971-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 29060 invoked by alias); 1 Apr 2011 23:41:01 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28971
Received: (qmail 85 invoked from network); 1 Apr 2011 23:40:49 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <110401164030.ZM4003@torch.brasslantern.com>
Date: Fri, 01 Apr 2011 16:40:30 -0700
In-reply-to: <20110401214835.GA47239@redoubt.spodhuis.org>
Comments: In reply to Phil Pennock <zsh-workers+phil.pennock@spodhuis.org>
   "Re: zsh hangs sometimes continued." (Apr  1,  5:48pm)
References: <1301593035.6016.ezmlm@zsh.org>
	<1B2B2EF98D55CB41BD16F13B18B9B0080EA2084C@FFBRUE001.cfmu.corp.eurocontrol.int>
	<20110401102846.482a9165@pwslap01u.europe.root.pri>
	<110401071802.ZM3412@torch.brasslantern.com>
	<20110401214835.GA47239@redoubt.spodhuis.org>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-workers@zsh.org
Subject: Re: zsh hangs sometimes continued.
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Apr 1,  5:48pm, Phil Pennock wrote:
} Subject: Re: zsh hangs sometimes continued.
}
} On 2011-04-01 at 07:18 -0700, Bart Schaefer wrote:
} > Reading the explanation left me wondering whether there's an additional
} > problem in the event that the shell is spawning processes fast enough
} > for the PID of a terminated-but-not-yet-reaped job to have been re-used
} > in a new still-running job?
} 
} Is this an April Fool's joke?  [suffering flu, can't tell]

No, I'm just using the word "reaped" too loosely.

My thought was that a job in pipeline or the like might still have a
slot in *zsh's* job table (if the rest of the pipeline had not exited)
even though the corresponding process was already gone (and had been
waited-for in the SIGCHLD handler).  Hence zsh could end up thinking
it needed to do a synchronous wait for the old job which, if the pid
was never re-used, would immediately fail, but if the pid was reused
would instead hang while the new one with the same pid was still
running (and then maybe fail to mark the newer one as done in its
actual job slot).

On further reflection, though, either this must already have been
impossible, or the test in PWS's patch would cover it as well.

