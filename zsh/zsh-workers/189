From zsh-workers-request@math.gatech.edu  Sun Jul  9 15:50:59 1995
Received: from gatech.edu (gatech.edu [130.207.244.244]) by werple.mira.net.au (8.6.12/8.6.9) with SMTP id PAA24371 for <mason@werple.mira.net.au>; Sun, 9 Jul 1995 15:50:55 +1000
Received: from math (math.skiles.gatech.edu) by gatech.edu with SMTP id AA09127
  (5.65c/Gatech-10.0-IDA for <mason@werple.mira.net.au>); Sun, 9 Jul 1995 01:50:34 -0400
Received: by math (5.x/SMI-SVR4)
	id AA10210; Sun, 9 Jul 1995 01:47:00 -0400
Resent-Date: Sun, 9 Jul 1995 06:47:31 +0100 (BST)
Old-Return-Path: <zefram@dcs.warwick.ac.uk>
From: Zefram <A.Main@dcs.warwick.ac.uk>
Message-Id: <27410.199507090547@stone.dcs.warwick.ac.uk>
Subject: Re: A couple of queries
To: coleman@math.gatech.edu (Richard Coleman)
Date: Sun, 9 Jul 1995 06:47:31 +0100 (BST)
In-Reply-To: <9507090453.AA10898@redwood.skiles.gatech.edu> from "Richard Coleman" at Jul 9, 95 00:53:47 am
X-Loop: zefram@dcs.warwick.ac.uk
X-Stardate: [-31]5951.20
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: zefram@dcs.warwick.ac.uk
Resent-Message-Id: <"32kFs1.0.SV2.Jrs_l"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/189
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

-----BEGIN PGP SIGNED MESSAGE-----

>I haven't seen that code.  I was going to remove that comment, but forgot.
>The code has been posix-ified considerably since the start of the 2.6
>cycle.

The code in that function seems to indicate that S_IF* isn't POSIX.
Not having a copy of POSIX.1 (and the library here won't open for a
while :-(), can someone confirm that this is the case?  Should the code
be rewritten to use the (ugly, less efficient) S_IS* macros?

>I'm not against adding them if they don't add too much code.  I think these
>would be useful.  But I would prefer to use the same option for all of them.
>So we need an option letter that is free on all of these builtins, and would
>have to change compctl -L to match this.  Since compctl -L is new, this
>shouldn't cause too much problem.

I'd like them all to use the same letter, and was rather disappointed
to see that typeset -L is taken.  -L is a very obvious, quite intuitive
choice, so personally I'd be prepared to have an exception.  I would
probably have chosen -Q.

If we want them *all* to be the same letter, the possibilities are -J,
- -M, -U, -V, -W, -Y, -w and -y, assuming -Q is taken by compctl.  (Hmm,
I hope we don't start needing to use digits for compctl, it's terribly
ugly (why did we do that with zsh's command line options?))  None of
these is anywhere near as good as -L; can someone come up with a
rational reason to pick one of them?  Perhaps -M for coMMands?

>But I would prefer that we wait until the next beta release before this is
>implemented.  My box is overflowing with patches.  I'm in the process
>of making more changes to the code dealing with internal hash tables.  So
>any patch adding these features would be broken by the time I receive it.

I don't think so.  Most of the listing code is there already -- I'll
just need to add a little code to output in a different format.  It's a
fundamentally simple addition.  Anyway, I'll wait for the next beta
before writing this stuff.

 -zefram

-----BEGIN PGP SIGNATURE-----
Version: 2.6.i

iQBVAgUBL/9tWWWJ8JfKi+e9AQGG9gH8D6R7CNNYlLOtDorySrrmFR8lS3YrFjUb
UNhpCrtbXeqMBOUAhoVJs6VGX6vim12nV0BkWuctCeemzL5DCKkFWw==
=s7Jb
-----END PGP SIGNATURE-----

