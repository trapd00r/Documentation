From zsh-workers-return-26025-mason-zsh=primenet.com.au@sunsite.dk Tue Nov 11 18:23:10 2008
Return-Path: <zsh-workers-return-26025-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2878 invoked from network); 11 Nov 2008 18:23:06 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.3 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 11 Nov 2008 18:23:06 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 28197 invoked from network); 11 Nov 2008 18:23:02 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 11 Nov 2008 18:23:02 -0000
Received: (qmail 14709 invoked by alias); 11 Nov 2008 18:22:54 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 26025
Received: (qmail 14699 invoked from network); 11 Nov 2008 18:22:54 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 11 Nov 2008 18:22:54 -0000
Received: from cluster-d.mailcontrol.com (cluster-d.mailcontrol.com [217.69.20.190])
	by bifrost.dotsrc.org (Postfix) with ESMTPS id 2E77680308BE
	for <zsh-workers@sunsite.dk>; Tue, 11 Nov 2008 19:22:49 +0100 (CET)
Received: from cameurexb01.EUROPE.ROOT.PRI ([193.128.72.68])
	by rly16d.srv.mailcontrol.com (MailControl) with ESMTP id mABIMnrv015448
	for <zsh-workers@sunsite.dk>; Tue, 11 Nov 2008 18:22:49 GMT
Received: from news01.csr.com ([10.103.143.38]) by cameurexb01.EUROPE.ROOT.PRI with Microsoft SMTPSVC(6.0.3790.3959);
	 Tue, 11 Nov 2008 18:22:48 +0000
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.14.2/8.13.4) with ESMTP id mABIMmfB003281
	for <zsh-workers@sunsite.dk>; Tue, 11 Nov 2008 18:22:48 GMT
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.14.2/8.14.2/Submit) with ESMTP id mABIMlvo003277
	for <zsh-workers@sunsite.dk>; Tue, 11 Nov 2008 18:22:48 GMT
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: PATCH: improvement to zle -F handling
X-Mailer: MH-E 8.0.3; nmh 1.3; GNU Emacs 22.1.1
Date: Tue, 11 Nov 2008 18:22:47 +0000
Message-ID: <3276.1226427767@csr.com>
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 11 Nov 2008 18:22:48.0911 (UTC) FILETIME=[80548DF0:01C9442A]
X-Scanned-By: MailControl A_08_51_00 (www.mailcontrol.com) on 10.68.0.126
X-Virus-Scanned: ClamAV 0.92.1/8609/Tue Nov 11 13:53:28 2008 on bifrost
X-Virus-Status: Clean

Experience suggests that if one has a handler installed for a file
descriptor within zle, it's better to handle user input as soon as any
is available.  This makes it easier for the user to take some action to
take care of huge amounts of data continually spewing out, for example.
(Welcome to short-range digital wireless development.)

Index: Src/Zle/zle_main.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/Zle/zle_main.c,v
retrieving revision 1.118
diff -u -r1.118 zle_main.c
--- Src/Zle/zle_main.c	26 Sep 2008 09:11:30 -0000	1.118
+++ Src/Zle/zle_main.c	11 Nov 2008 18:19:57 -0000
@@ -585,7 +585,7 @@
 	    fds[i+1].events = POLLIN;
 	}
 # endif
-	do {
+	for (;;) {
 # ifdef HAVE_POLL
 	    int poll_timeout;
 
@@ -694,6 +694,19 @@
 	    /* If error or unhandled timeout, give up. */
 	    if (selret < 0)
 		break;
+	    /*
+	     * If there's user input handle it straight away.
+	     * This improves the user's ability to handle exceptional
+	     * conditions like runaway output.
+	     */
+	    if (
+# ifdef HAVE_POLL
+		 (fds[0].revents & POLLIN)
+# else
+		 FD_ISSET(SHTTY, &foofd)
+# endif
+		 )
+		break;
 	    if (nwatch && !errtry) {
 		/*
 		 * Copy the details of the watch fds in case the
@@ -755,13 +768,7 @@
 		zfree(lwatch_fds, lnwatch*sizeof(int));
 		freearray(lwatch_funcs);
 	    }
-	} while (!
-# ifdef HAVE_POLL
-		 (fds[0].revents & POLLIN)
-# else
-		 FD_ISSET(SHTTY, &foofd)
-# endif
-		 );
+	}
 # ifdef HAVE_POLL
 	zfree(fds, sizeof(struct pollfd) * nfds);
 # endif


-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070

