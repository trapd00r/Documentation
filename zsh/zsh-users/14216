From zsh-users-return-14216-mason-zsh=primenet.com.au@sunsite.dk Thu Jul 02 20:14:16 2009
Return-Path: <zsh-users-return-14216-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 23450 invoked from network); 2 Jul 2009 20:14:04 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from new-brage.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.254.104)
  by ns1.primenet.com.au with SMTP; 2 Jul 2009 20:14:04 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 87841 invoked from network); 2 Jul 2009 20:13:52 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 2 Jul 2009 20:13:52 -0000
Received: (qmail 20987 invoked by alias); 2 Jul 2009 20:13:30 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 14216
Received: (qmail 20971 invoked from network); 2 Jul 2009 20:13:29 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 2 Jul 2009 20:13:29 -0000
Received: from ey-out-2122.google.com (ey-out-2122.google.com [74.125.78.27])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 0173D8030803
	for <zsh-users@sunsite.dk>; Thu,  2 Jul 2009 22:13:25 +0200 (CEST)
Received: by ey-out-2122.google.com with SMTP id 9so482450eyd.21
        for <zsh-users@sunsite.dk>; Thu, 02 Jul 2009 13:13:25 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:received:in-reply-to:references
         :date:message-id:subject:from:to:content-type
         :content-transfer-encoding;
        bh=AyHrh5bo6sCa/eCdpzGnaFPomd6i6U2qgWmQfhqCXOw=;
        b=tQI5HR+QFehPffU4vXqjzqKJUh33gLg5uLIKSYWas6RXfRyiaymAEW/1ytEsu5uuiS
         UzHW2as15yk8TXQkXTqM7ckfjUF79kvnr+nApy/4aCKvA7dUZbq8kvfJc5QC+F0H/GMD
         UgmY/8/6KqoNmO26FkctUCq1ySo05bDkqyl1s=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type:content-transfer-encoding;
        b=T4amt7Z9TLiqsbI9Xrv4WGTDZVArbHn8wDTr3nWTa5Aexj9QkRq8UnAujSb+1uJQmc
         j6LNn+K9Mxds+Ka/j0FJkP9hONKFOLdtNfBR2ZcjAQHwWGiaPB7PGzlr744vGFfqeaJG
         VUzSMv7eblsD7tWr+jPEb3+wrsS+mCNDaXBtE=
MIME-Version: 1.0
Received: by 10.210.37.11 with SMTP id k11mr1399487ebk.89.1246565604965; Thu, 
	02 Jul 2009 13:13:24 -0700 (PDT)
In-Reply-To: <alpine.LNX.2.00.0907021554160.28404@averatec>
References: <198303.88532.qm@web23507.mail.ird.yahoo.com>
	 <237967ef0907021250x5b621333m875aff26fa8aeaac@mail.gmail.com>
	 <alpine.LNX.2.00.0907021554160.28404@averatec>
Date: Thu, 2 Jul 2009 22:13:22 +0200
Message-ID: <237967ef0907021313m3b3a2b74x376ec7b1152de81c@mail.gmail.com>
Subject: Re: Mimicking tcsh line-editing behavior
From: Mikael Magnusson <mikachu@gmail.com>
To: Zsh Users <zsh-users@sunsite.dk>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-Virus-Scanned: ClamAV 0.94.2/9535/Thu Jul  2 10:57:25 2009 on bifrost
X-Virus-Status: Clean

2009/7/2 Benjamin R. Haskell <zsh@benizi.com>:
> On Thu, 2 Jul 2009, Mikael Magnusson wrote:
>
>> On 2009/7/2 Rhyme Tan wrote:
>> > My default shell is tcsh. In tcsh I can use alt(meta)-backspace, alt-F or
>> > alt-B to delete, or move forward or backward through a path.
>> >
>> > For example I type:
>> >
>> > ls /An/Example/of/a/Path/Name/
>> >
>> > To delete Path/Name/, I simply hold down the alt key and press backspace
>> > twice (alt-backspace x2). This will leave me with the path
>> > &quot;/An/Example/of/a/&quot;. I cannot do this in zsh because pressing
>> > alt-backspace will delete the whole path (that is,
>> > &quot;/An/Example/of/a/Path/Name/&quot;). Is there some magic config option
>> > I can pass to zsh to duplicate the behavior of alt-backspace, -F, or -B) in
>> > tcsh?
>> >
>> > Thanks.
>>
>> This was posted here some time ago (months, years, who knows?)

This seems to be an early version
http://www.zsh.org/mla/users/2005/msg01312.html

>> and I
>> have used it since:
>>
>> _my_extended_wordchars='*?_-.[]~=&;!#$%^(){}<>:@,\\';
>>
>> [... trimmed ...]
>
> Mikael -- that seems like overkill... Is there something particularly
> useful about all of the "\\"- and quoted-or-not logic?
>
> I get roughly what the OP was asking for by simply setting:
>
> WORDCHARS='*?_-.[]~&;!#$%^(){}<>'
>
> in my ~/.zshenv.
>
> The important bit is that '/' is not present in my preferred WORDCHARS
> list, but it is in the default list.  ('.' is another one that seems to be
> commonly omitted, in order to backspace to the '.'s in domain names/IP
> addresses or file.extensions.)

Well, I still like to delete the whole word occasionally, so having
both is useful. Just removing the / doesn't seem to handle paths with
spaces either, so /foobar/with\ spaces/in\ it gives
/foobar/with\ spaces/in\
/foobar/with\ spaces
/foobar/with\
which is very annoying when directories have 6 spaces in them :). As
for being overkill, I have the whole thing I pasted in a separate file
so it doesn't clutter up my .zshrc

-- 
Mikael Magnusson

