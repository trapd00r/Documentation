From zsh-workers-return-13474-mason-zsh=primenet.com.au@sunsite.dk Wed Feb 14 18:01:07 2001
Return-Path: <zsh-workers-return-13474-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 12042 invoked from network); 14 Feb 2001 18:01:06 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 14 Feb 2001 18:01:06 -0000
Received: (qmail 19959 invoked by alias); 14 Feb 2001 18:00:59 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 13474
Received: (qmail 19947 invoked from network); 14 Feb 2001 18:00:58 -0000
Message-ID: <Tc0a8890c51ba890230@mailsweeper01.cambridgesiliconradio.com>
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: Re: More incompatibility :-) RE: PATCH: 3.1.9-dev-8: Re: Word splitting in zsh 
In-Reply-To: Your message of "Tue, 13 Feb 2001 11:33:12 PST."
             <010213113312.ZM27482@candle.brasslantern.com> 
Date: Wed, 14 Feb 2001 18:00:30 +0000
From: Peter Stephenson <pws@csr.com>

> The two possible solutions to this are (1) make ${=...} behave the way
> Andrej says is "logical", so that e.g. with shwordsplit turned off, in
> ${=x+${y}} no word splitting would happen at all (because it's not on
> in $y, even though it's on for $x; or (2) figure out how to reset the
> value of mult_spbreak to 0 during $(...) (mult_shwsplit is ignored if
> mult_spbreak is 0).
> 
> (1) actually means removing mult_spbreak and mult_shwsplit entirely; I
> put them in because I thought to do otherwise would be too great a
> behavior change from the way zsh works without the patch.

I'd go for the original patch, plus (1).  Almost certainly if there are
side effects we won't find out until the patch is in place anyway.

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
Cambridge Silicon Radio, Unit 300, Science Park, Milton Road,
Cambridge, CB4 0XL, UK                          Tel: +44 (0)1223 392070

