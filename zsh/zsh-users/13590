From zsh-users-return-13590-mason-zsh=primenet.com.au@sunsite.dk Thu Dec 11 17:14:55 2008
Return-Path: <zsh-users-return-13590-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 8299 invoked from network); 11 Dec 2008 17:14:52 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 11 Dec 2008 17:14:52 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 82916 invoked from network); 11 Dec 2008 17:14:39 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 11 Dec 2008 17:14:39 -0000
Received: (qmail 21851 invoked by alias); 11 Dec 2008 17:14:24 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13590
Received: (qmail 21841 invoked from network); 11 Dec 2008 17:14:24 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 11 Dec 2008 17:14:24 -0000
Received: from vms173007pub.verizon.net (vms173007pub.verizon.net [206.46.173.7])
	by bifrost.dotsrc.org (Postfix) with ESMTP id A906680524C3
	for <zsh-users@sunsite.dk>; Thu, 11 Dec 2008 18:14:17 +0100 (CET)
Received: from torch.brasslantern.com ([96.238.220.215])
 by vms173007.mailsrvcs.net
 (Sun Java System Messaging Server 6.2-6.01 (built Apr  3 2006))
 with ESMTPA id <0KBQ00AX71VUVU50@vms173007.mailsrvcs.net> for
 zsh-users@sunsite.dk; Thu, 11 Dec 2008 10:59:57 -0600 (CST)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id mBBH14HS021587	for
 <zsh-users@sunsite.dk>; Thu, 11 Dec 2008 09:01:05 -0800
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id mBBH145k021586	for zsh-users@sunsite.dk; Thu,
 11 Dec 2008 09:01:04 -0800
Date: Thu, 11 Dec 2008 09:01:02 -0800
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: child PID in TRAPCHLD?
In-reply-to: <1228977150.25525.1289458191@webmail.messagingengine.com>
To: zsh-users@sunsite.dk
Message-id: <081211090104.ZM21585@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <1228977150.25525.1289458191@webmail.messagingengine.com>
Comments: In reply to "Anthony Heading" <ajrh@ajrh.net>
 "child PID in TRAPCHLD?" (Dec 11,  1:32am)
X-Virus-Scanned: ClamAV 0.92.1/8746/Thu Dec 11 05:14:26 2008 on bifrost
X-Virus-Status: Clean

On Dec 11,  1:32am, Anthony Heading wrote:
} 
} I'm trying to catch the termination of background commands.

I know this seems blasphemous on a shell mailing list, but at some
point you've just got to learn a language that was designed with
this kind of thing in mind (perl, python) rather than try to wedge
everything into the shell.

} Using TRAPCHLD seems sensible

Be aware that the trap isn't tripped until after the shell has done
all of its internal job-reaping, so by the time you get control there
is nothing left of the job to manipulate.

On the other hand, that does mean that ...

} perhaps zsh could be enhanced to set $! to that PID locally inside the
} TRAPCHLD handler?

... is not impossible, although it'd be unlike other shells.

} but I can't see a way to identify the PID (or job id) of the command
} that has ended. Am I missing something?

You can find out indirectly by examining the $jobstates array from
the zsh/parameter module to find out what's NOT there.

    zmodload zsh/parameter
    typeset -ga joblist
    TRAPCLD () {
      emulate -L zsh
      local i pid
      for (( i=$#joblist ; i; --i ))
      do
        pid=$joblist[i]; 
        [[ -n ${jobstates[(R)*:$pid=*]} ]] && continue
	joblist[i]=()
	print $pid exited
      done
    }
    repeat 4 do sleep 3 & joblist+=( $! ); done

Note for this you have to maintain your own $joblist array of the PIDs
that you care about.  There's also an inevitable race condition in the
event that the background job exits before you can add it to $joblist.

-- 

