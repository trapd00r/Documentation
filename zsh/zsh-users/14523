From zsh-users-return-14523-mason-zsh=primenet.com.au@zsh.org Tue Nov 03 20:08:25 2009
Return-Path: <zsh-users-return-14523-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 27544 invoked by alias); 3 Nov 2009 20:08:25 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14523
Received: (qmail 25504 invoked from network); 3 Nov 2009 20:08:23 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.2.5
Received-SPF: none (ns1.primenet.com.au: domain at seiken.de does not designate permitted sender hosts)
From: Joke de Buhr <joke.de.buhr@seiken.de>
Organization: http://www.seiken.de/
To: zsh-users@zsh.org
Subject: Re: multi threaded script
Date: Tue, 3 Nov 2009 20:52:11 +0100
User-Agent: KMail/1.12.2 (Linux/2.6.31-14-generic; KDE/4.3.2; x86_64; ; )
References: <ed7b1c610911030834r383be469u2f0674311d697202@mail.gmail.com>
In-Reply-To: <ed7b1c610911030834r383be469u2f0674311d697202@mail.gmail.com>
MIME-Version: 1.0
Content-Type: multipart/signed;
  boundary="nextPart3211667.HZNpXJyD1s";
  protocol="application/pgp-signature";
  micalg=pgp-sha1
Content-Transfer-Encoding: 7bit
Message-Id: <200911032052.11987.joke.de.buhr@seiken.de>

--nextPart3211667.HZNpXJyD1s
Content-Type: Text/Plain;
  charset="utf-8"
Content-Transfer-Encoding: quoted-printable

On Tuesday 03 November 2009 17:34:57 Baptiste Daroussin wrote:
> Hi,
>=20
> I wanted to write a script that needs to be multithreaded, for example
> an UI in zsh/curses that does things in background while the UI is
> still responsive.

It's possible to do background tasks in subshells. Simple append an & to=20
the end of the subshell list:

  print "hi_0"; { print "hi_1"; sleep 60; print "hi_2"} & print "hi_3"; \
     sleep 20; print "hi_4"


Somewhere on the internet there is an example in bash of how to setup a=20
multiprocess shell program which uses subshells as worker processes. The=20
communication between these processes is done via named pipes. It's much=20
like Apache's worker process model.

Here is a simple and quick suggestion how such an architecture may look=20
like in zsh:


#!/bin/zsh

worker() {
    while (true) {
        print "job started: $1"

        read -u 0
        eval "$REPLY"

        print "job done: $1"
    }
}

mkfifo pipe
worker "worker 0" < pipe &  workers+=3D($!)
worker "worker 1" < pipe &  workers+=3D($!)

print "sleep 20" >> pipe
print "sleep 30" >> pipe
print "sleep 5; ls; sleep 5" >> pipe
sleep 20
print "sleep 20" >> pipe

print "exit\nexit" >> pipe

wait ${workers[*]}
rm pipe
exit 0

--nextPart3211667.HZNpXJyD1s
Content-Type: application/pgp-signature; name=signature.asc 
Content-Description: This is a digitally signed message part.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.9 (GNU/Linux)

iQIcBAABCgAGBQJK8InrAAoJEMcNQWzYfbLs2LsP/A+8GUIUGl0cbzvGqZ9f239D
8400kUeYbbL9cxP+nzgOiOV/3q0XrkJI1wg+6j1J3E6juJ+BtNm6cbdvxudYRqm9
GZGi75vANg4En72n68U0vZvxfwUnJkampnrD9ULhViJETPSaB3wJ6+yLm9A5b4J6
AMYFBtYDv2AIgPGUrnMBbheEoAuGeTpYUyhTMznjrd3S0aPfqZPHI5xDDfPh0de+
wckfLK3HDHxVNiPDJ5NfLtXXPgd+ytRE14C8YxCk7AIj4S3x3p8PiB8NdhG3Gq9I
B7ibnivWFWJFu3QbaT9MjUxUs8zYTXnwtEeN3yzbTzIPSZ2otKZx1i7kyVIzQ55J
TXm90TKKpIHTUbXW9d0ojk6EluLSQBDyj6uhVaO5m+QICaNk8AxXmi2yA5Ib84Ro
1GLBugNBB+9CeKC7sEz9eUlJUhwe8zUB981C4rZbCJ0UKDOIseKLZCwcpWZy2q+q
jFQKSiM4bm4kAeoaPHw2njEQsVAtGQttztHELN0RMTWPLoN/tZ1flnTwHNywihVa
AbCwuIiooY2t8FWcNav857ON7gUgqMx2bebWgGGLn2Y5+weagZISj13kWY8O9t/A
bbvBXGtG7/OOpmTEvX5WliOFHhx9Q6lcEAIg+r4+vn4HABbrrBbmMmpzyaZObs0B
K4TR0155/hKzAqRgbLb3
=o9qQ
-----END PGP SIGNATURE-----

--nextPart3211667.HZNpXJyD1s--

