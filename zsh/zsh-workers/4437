From zsh-workers-request@math.gatech.edu Mon Oct 19 11:03:18 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20542 invoked from network); 19 Oct 1998 11:03:17 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 19 Oct 1998 11:03:17 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.9.1/8.9.1) id GAA25356;
	Mon, 19 Oct 1998 06:55:28 -0400 (EDT)
Resent-Date: Mon, 19 Oct 1998 06:55:28 -0400 (EDT)
Message-Id: <199810191059.LAA13707@diamond.tao.co.uk>
Subject: Re: zsh exit status
To: phil@athenaeum.demon.co.uk (Phil Pennock)
Date: Mon, 19 Oct 1998 11:59:09 +0100 (BST)
From: "Zefram" <zefram@tao.co.uk>
Cc: zsh-workers@math.gatech.edu
In-Reply-To: <199810182327.AAA00825@athenaeum.demon.co.uk> from "Phil Pennock" at Oct 19, 98 00:27:11 am
X-Mailer: ELM [version 2.4 PL25]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"Sw0wg1.0.7C6.WgnAs"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4437
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Phil Pennock wrote:
>When zsh exits, it returns the exit code of the last process to exit.
>Which is correct.  However, when the last process exited on a signal, it
>returns the full status back.

What actually happens is that the process exiting on a signal (e.g.,
SIGINT) is immediately converted into a high normal exit status (e.g.,
130), at the point that the status is retrieved using wait().  If the
value in lastval ($?) is >128, it is impossible to determine from it
whether the last command exited normally or on a signal.  When zsh
subsequently exits, it exits *normally* with the high exit status.
If the invoking shell is another Bourne-like shell, it similarly won't
be able to tell whether zsh exited on a signal or not; with Perl you'd
be able to tell the difference.

>I've checked, and both bash and pdksh also pass this unchanged.  Is
>this behaviour mandated by any standards?

POSIX.2 isn't 100% clear about it, but it looks like the only reasonable
interpretation to me.

-zefram

