From zsh-workers-return-16283-mason-zsh=primenet.com.au@sunsite.dk Fri Nov 23 08:13:53 2001
Return-Path: <zsh-workers-return-16283-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 22680 invoked from network); 23 Nov 2001 08:13:51 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 23 Nov 2001 08:13:51 -0000
Received: (qmail 17447 invoked by alias); 23 Nov 2001 08:13:40 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16283
Received: (qmail 17436 invoked from network); 23 Nov 2001 08:13:40 -0000
Message-Id: <7D865FB0D0A1D5118B6E000347055BBB14848C@G9JNT.mgb01.telekom.de>
From: "Wischnowsky, Sven" <Sven.Wischnowsky@t-systems.de>
To: zsh-workers@sunsite.dk
Subject: Re: [bug report] 4.0.2 / 4.0.4 dumps core
Date: Fri, 23 Nov 2001 09:13:17 +0100
Mime-Version: 1.0
X-Mailer: Internet Mail Service (5.5.2653.19)
Content-Type: text/plain


Bart wrote:

> ...
> 
> } > rather than simply allowing the completion code to poke bytes into
> } > the real reswdtab.
> } 
> } But it isn't the completion code. At least not for me. It SEGVed in
> } the pattern matching code (called from the completion code).
> 
> Yes, but it's the completion code that's "violating" the pattern match
> code API, in the sense that the pattern match code is supposed to get
> writable strings and the completion code isn't providing them.

Yes (but I'd still prefer it if the matching code that really only needs
to read the strings it gets wouldn't modify them -- but that's probably a
different matter).

> } And I was tempted to change that code to at least test if it was
> } trying to write a '\0' onto the Null-byte at the end of a string.
> 
> That would unnecessarily penalize every other caller of the pattern
> match code, wouldn't it?

Yes, but not much, and, as I forgot to write, I don't suggest adding that
because it could result in weird bugs (it always worked because it only
ever needed to write a Nul-byte onto the Nul-byte which it really didn't
do, but then it suddenly needs to write a Nul-byte in the middle and...).

> If there's no problem with using dupstring() in dumphashtable(), then
> I'd prefer to commit my patch rather than yours.

No objections at all from my side.

Bye
  Sven

