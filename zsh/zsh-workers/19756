From zsh-workers-return-19756-mason-zsh=primenet.com.au@sunsite.dk Mon Apr 12 01:04:19 2004
Return-Path: <zsh-workers-return-19756-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 26182 invoked from network); 12 Apr 2004 01:04:18 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 12 Apr 2004 01:04:18 -0000
Received: (qmail 11564 invoked by alias); 12 Apr 2004 01:04:13 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 19756
Received: (qmail 11553 invoked from network); 12 Apr 2004 01:04:12 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 12 Apr 2004 01:04:12 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [130.225.247.86] by sunsite.dk (MessageWall 1.0.8) with SMTP; 12 Apr 2004 1:4:12 -0000
Received: (qmail 1109 invoked from network); 12 Apr 2004 01:04:12 -0000
Received: from wbar3.sjo1-4-11-009-147.sjo1.dsl-verizon.net (HELO candle.brasslantern.com) (4.11.9.147)
  by a.mx.sunsite.dk with SMTP; 12 Apr 2004 01:04:10 -0000
Received: (from schaefer@localhost)
	by candle.brasslantern.com (8.11.6/8.11.6) id i3C148m18256
	for zsh-workers@sunsite.dk; Sun, 11 Apr 2004 18:04:08 -0700
X-Authentication-Warning: candle.brasslantern.com: schaefer set sender to schaefer@closedmail.com using -f
From: Bart Schaefer <schaefer@brasslantern.com>
Message-Id: <1040412010407.ZM18255@candle.brasslantern.com>
Date: Mon, 12 Apr 2004 01:04:07 +0000
In-Reply-To: <slrnc7jib7.567.mason@g.primenet.com.au>
Comments: In reply to Geoff Wing <mason@primenet.com.au>
        "Re: Crash of 4.2.0-dev-1" (Apr 11, 10:40pm)
References: <slrnc7hv93.g5j.mason@g.primenet.com.au> 
	<1040411160938.ZM17940@candle.brasslantern.com> 
	<slrnc7jib7.567.mason@g.primenet.com.au>
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-workers@sunsite.dk
Subject: Re: Crash of 4.2.0-dev-1
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Spam-Checker-Version: SpamAssassin 2.63 on a.mx.sunsite.dk
X-Spam-Level: ****
X-Spam-Status: No, hits=4.7 required=6.0 tests=RCVD_IN_DYNABLOCK,
	RCVD_IN_NJABL,RCVD_IN_NJABL_DIALUP,RCVD_IN_SORBS autolearn=no 
	version=2.63
X-Spam-Hits: 4.7

On Apr 11, 10:40pm, Geoff Wing wrote:
}
} : Because files loaded with kshautoload have to contain the full function
} : definition
} 
} OK, according to the manual zshbuiltins(1) in autoload:
} 
}  ... With ksh-style autoloading, the contents of the file will not be
}      executed immediately.  Instead, the function created will contain
}      the contents of the file ...

Note that this excerpt applies specifically to +X with either -k or with
ksh_autoload set.  The trailing part you've omitted goes on:

   ... plus a call to the function itself appended to it ...

You have to look in zshmisc(1) under "Autoloading functions" to find the
real explanation of ksh_autoload:

       If the KSH_AUTOLOAD option is set, or  the  file  contains
       only  a simple definition of the function, the file's con-
       tents will be executed.  This  will  normally  define  the
       function in question, but may also perform initialization,
       which is executed in the context of  the  function  execu-
       tion, and may therefore define local parameters.  It is an
       error if the function is not defined by loading the  file.

       Otherwise,  the  function body (with no surrounding `func-
       name() {...}') is taken to be the complete contents of the
       file.  ...

} : Whereas zsh expects it to have been defined as:
} :
} :     kshtest () {
} : 	kshtest () {
} : 	    print "Running kshtest"
} : 	    unfunction kshtest
} : 	}
} : 	kshtest "$@"
} :     }
} 
} This is what I get.

If in fact your file "kshtest" contains exactly the two lines
	print "Running kshtest"
	unfunction kshtest
and you ran
	setopt ksh_autoload
	autoload +X -k kshtest
then it should be impossible for you to have gotten the kshtest-within-
kshtest form you just quoted.  If you *do* somehow get the nested def'n
shown above, then the bug *won't* be tickled -- the but only happens if
the nested kshtest def'n does *not* appear, but both the "unfunction"
and the call with "$@" *do* appear.

