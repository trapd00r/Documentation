From zsh-users-return-3513-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Nov 07 19:08:11 2000
Return-Path: <zsh-users-return-3513-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16239 invoked from network); 7 Nov 2000 19:08:10 -0000
Received: from sunsite.dk (HELO sunsite.auc.dk) (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 7 Nov 2000 19:08:10 -0000
Received: (qmail 3711 invoked by alias); 7 Nov 2000 19:07:58 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 3513
Received: (qmail 3702 invoked from network); 7 Nov 2000 19:07:56 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <001107110735.ZM13325@candle.brasslantern.com>
Date: Tue, 7 Nov 2000 11:07:35 -0800
In-Reply-To: <20001107103547.A5606@corp.phone.com>
Comments: In reply to Matt Armstrong <matt@corp.phone.com>
        "TRAPEXIT doesn't get executed" (Nov  7, 10:35am)
References: <20001107103547.A5606@corp.phone.com>
X-Mailer: Z-Mail Lite (5.0.0 30July97)
To: Matt Armstrong <matt@corp.phone.com>, zsh-users@sunsite.auc.dk
Subject: Re: TRAPEXIT doesn't get executed
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Nov 7, 10:35am, Matt Armstrong wrote:
> Subject: TRAPEXIT doesn't get executed
>   
> ---------------------------------------------------------
> #!/usr/bin/zsh
>   
> set -x
>   
> function TRAPEXIT {
>     print "executed TRAPEXIT"
> }
> sleep 10
> ---------------------------------------------------------
>   
> And hit Ctrl-C while "sleep 10" is executing, the TRAPEXIT isn't
> executed.

This is a bit subtle, and I'm not entirely sure zsh is doing the right thing,
but what's happening here is that because zsh is running a script (rather
than interactively), it has not ignored SIGINT.  So the SIGINT is actually
being received by zsh and the c-runtime-library default SIGINT handler is
being called, which kills the process; there's no opportunity for zsh to run
the exit trap.

This is done in part so that shell loops that execute nothing but builtin
commands can nevertheless be interrupted by signals.  However, it might be
that zsh should trap SIGINT anyway and simply respond to it by exiting.

> ---------------------------------------------------------
> #!/usr/bin/zsh
>   
> set -x
> 
> function TRAPEXIT {
>     print "executed TRAPEXIT"
> }
> function TRAPINT {
>     print "executed TRAPINT"
> }
> sleep 10
> ---------------------------------------------------------
> 
> And hit Ctrl-C, both TRAPINT and TRAPEXIT get executed.

In this case, you've explicitly overridden the default SIGINT handler by
declaring a SIGINT trap function, so zsh *doesn't* exit on the SIGINT;
instead it exits by falling off the end after "sleep" is killed (by that
same signal -- the tty driver delivers it to all the processes in the tty
process group).  Put another "print" after the sleep in both scripts and
try again, and you'll see that in the second case the script is still
running after the interrupt, but in the first case it's not.

