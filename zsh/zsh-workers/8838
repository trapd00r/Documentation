From zsh-workers-return-8838-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Dec 01 12:07:12 1999
Return-Path: <zsh-workers-return-8838-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 12584 invoked from network); 1 Dec 1999 12:07:11 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 1 Dec 1999 12:07:11 -0000
Received: (qmail 18593 invoked by alias); 1 Dec 1999 12:07:06 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 8838
Received: (qmail 18586 invoked from network); 1 Dec 1999 12:07:05 -0000
Date: Wed, 1 Dec 1999 13:07:03 +0100 (MET)
Message-Id: <199912011207.NAA14863@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: Sven Wischnowsky's message of Wed, 1 Dec 1999 13:02:04 +0100
	(MET)
Subject: Re: PATCH: _prompt: two useless ':*:'


I wrote:

> Alexandre Duret-Lutz wrote:
> 
> > ~ % prompt -<TAB>
> > ~ % prompt -_arguments: bad pattern: adam1):*: [253]
> > 
> > parse_cadef/parse_caarg won't split the action at colons once the
> > first `:*pattern:' is encountered in a description, or for description
> > of normal/rest arguments (starting with `n:', `*:' or `:').
> > 
> > Should this be said en zshcompsys.1 ?  I guess this means we can
> > write `:foo:((a\:bar b\:baz))' without needing to escape colons in
> > such cases (I didn't try).
> 
> Since things may change (i.e. meaning may be given to things which are 
> now not meaningful), I thought it better to not document this. In the
> pure shell code version this wasn't possible, btw.

... I was about to add something about `until I re-read the docs' --
and then hit C-cC-c too early. Sorry.

So...

Bye
 Sven

diff -u olddoc/Zsh/compsys.yo Doc/Zsh/compsys.yo
--- olddoc/Zsh/compsys.yo	Mon Nov 29 10:10:40 1999
+++ Doc/Zsh/compsys.yo	Wed Dec  1 13:06:21 1999
@@ -1899,7 +1899,9 @@
 two colons the tt(words) special array and the tt(CURRENT) special
 parameter are modified to refer only to the words after the option
 (with two colons) or to the words covered by this description (with
-three colons) during the execution or evaluation of the var(action).
+three colons) during the execution or evaluation of the
+var(action). Note that only one such `tt(:*)'-specification is useful
+and no other argument specification may be given after it.
 
 In the simplest form the var(opt-spec) is just the option name
 beginning with a minus or a plus sign, such as `tt(-foo)'. In this

--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

