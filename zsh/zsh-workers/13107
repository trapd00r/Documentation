From zsh-workers-return-13107-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Nov 01 09:33:24 2000
Return-Path: <zsh-workers-return-13107-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2750 invoked from network); 1 Nov 2000 09:33:23 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 1 Nov 2000 09:33:23 -0000
Received: (qmail 5455 invoked by alias); 1 Nov 2000 09:33:14 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 13107
Received: (qmail 5447 invoked from network); 1 Nov 2000 09:33:14 -0000
Date: Wed, 1 Nov 2000 10:33:12 +0100 (MET)
Message-Id: <200011010933.KAA03826@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: "Bart Schaefer"'s message of Mon, 30 Oct 2000 16:18:08 +0000
Subject: PATCH: Re: zsh-3.1.9-dev-6 crashes occassionally


Bart Schaefer wrote:

> ...
> 
> One other item of note:  For some strange reason, it's not possible to
> alter TRAPxxx functions with "zed -f".  They come up in the editor, and
> if you create one from scratch it sticks, but no changes that you make
> to an already-existing TRAPxxx function are remembered.  No matter how
> you exit zed, they always revert to their previous value.

It's pretty obvious if you look at zed. It calls $cleanup at the end,
which contains the output of `trap'. And hence it resets all trap
functions.

This should fix that. It doesn't fix the bug that one can't edit
TRAPINT and TRAPEXIT (which are used by zed), though. Hm.

Bye
 Sven

Index: Functions/Misc/zed
===================================================================
RCS file: /cvsroot/zsh/zsh/Functions/Misc/zed,v
retrieving revision 1.3
diff -u -r1.3 zed
--- Functions/Misc/zed	2000/07/27 08:14:54	1.3
+++ Functions/Misc/zed	2000/11/01 09:30:00
@@ -55,7 +55,7 @@
     var="$1() {
 }"
   fi
-  vared var && eval function "$var"
+  vared var && eval "$cleanup ;" function "$var"
 else
   [[ -f $1 ]] && var="$(<$1)"
   while vared var

--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

