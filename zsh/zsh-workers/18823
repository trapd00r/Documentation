From zsh-workers-return-18823-mason-zsh=primenet.com.au@sunsite.dk Mon Jul 07 10:07:28 2003
Return-Path: <zsh-workers-return-18823-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 19063 invoked from network); 7 Jul 2003 10:07:27 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 7 Jul 2003 10:07:27 -0000
Received: (qmail 8643 invoked by alias); 7 Jul 2003 10:07:22 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 18823
Received: (qmail 27091 invoked from network); 7 Jul 2003 09:40:41 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 7 Jul 2003 09:40:41 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [62.189.183.235] by sunsite.dk (MessageWall 1.0.8) with SMTP; 7 Jul 2003 9:40:41 -0000
Received: from EXCHANGE02.csr.com (unverified) by MAILSWEEPER01.cambridgesiliconradio.com
 (Content Technologies SMTPRS 4.3.10) with ESMTP id <T63439b44bdc0a88d0128c@MAILSWEEPER01.cambridgesiliconradio.com> for <zsh-workers@sunsite.dk>;
 Sun, 6 Jul 2003 10:40:11 +0100
Received: from csr.com ([192.168.144.127]) by EXCHANGE02.csr.com with Microsoft SMTPSVC(5.0.2195.5329);
	 Mon, 7 Jul 2003 10:39:48 +0100
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: Re: PATCH: failed autoload 
In-reply-to: "Bart Schaefer"'s message of "Sun, 06 Jul 2003 21:15:24 -0000."
             <1030706211524.ZM17053@candle.brasslantern.com> 
Date: Mon, 07 Jul 2003 10:40:38 +0100
Message-ID: <3940.1057570838@csr.com>
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 07 Jul 2003 09:39:48.0709 (UTC) FILETIME=[B51A3950:01C3446B]

Bart Schaefer wrote:
> Suppose you're calling the failing function in a loop.  Now you'll get
> the error repeatedly, as often as the loop manages to keep running,
> rather than only once.
> 
> schaefer<509> repeat 7 breakthis
> breakthis:3: parse error near `\n'
> breakthis:3: parse error near `\n'
>...

But surely that's correct?  If the function gets redefined to a no-op it
silently succeeds, which could in principle cause untold mayhem.

% cat ~/fns/copy_file_to_backup
# deliberate typo
if [[ -f $1 ]]: then
  cp $1 ~/backup_files
fi
% autoload copy_file_to_backup
% for f in *; do copy_file_to_backup $1 && rm -f $1; done

(I haven't dared tried this but I think you get the picture even if the
example's a bit awry.)

I've noticed the old behaviour with trepidation before, but never done
anything about it; I don't remember there being any discussion about
making it a deliberate feature.

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR Ltd., Science Park, Milton Road,
Cambridge, CB4 0WH, UK                          Tel: +44 (0)1223 692070


**********************************************************************
The information transmitted is intended only for the person or
entity to which it is addressed and may contain confidential 
and/or privileged material. 
Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by 
persons or entities other than the intended recipient is 
prohibited.  
If you received this in error, please contact the sender and 
delete the material from any computer.
**********************************************************************

