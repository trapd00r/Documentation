From zsh-workers-request@euclid.skiles.gatech.edu  Fri Aug  9 02:47:26 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by coral.primenet.com.au (8.7.5/8.7.3) with ESMTP id CAA04343 for <mason@primenet.com.au>; Fri, 9 Aug 1996 02:47:24 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id MAA11517; Thu, 8 Aug 1996 12:44:44 -0400 (EDT)
Resent-Date: Thu, 8 Aug 1996 12:44:44 -0400 (EDT)
From: Brady Montz <bradym@cs.arizona.edu>
Message-Id: <199608081643.JAA26608@mahler.cs.arizona.edu>
Subject: Possible hpux bug
To: zsh-workers@math.gatech.edu
Date: Thu, 8 Aug 1996 09:43:23 -0700 (MST)
X-Mailer: ELM [version 2.4 PL24 PGP3 *ALPHA*]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"R0cxv3.0.qp2.xbX2o"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/1934
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

This problem only appears in hpux 9.01. It doesn't happen on linux,
solaris, or OSF1. I'm running 3.0pre6 on all those machines.

If I enter at the prompt:

source file

everything's happy. If, however, I do:

func()
{
  source file
}
func

Then I get a bunch of blank lines on the screen as the file gets
sourced. The number of blank lines seems to be roughly the number of zsh
commands in the file, not the number of lines in the file. To partially
rule out silliness on my part, this also happens when I remove all my zsh
startup files and log in, so zsh is only running on its internal
defaults. Is this a (known) bug, or am I just missing something?

For the curious, here's where this arose:

In an effort to polish off the portability of my dotfiles (since they have
to work on 4 different architectures and 6 differene OS's now), I wrote this
following function:

source_files() {
        basefile=$HOME/init/$1/$2
        if [ -f $basefile ]
        then
                source $basefile
        fi
        if [ -f $basefile.$ARCH ]
        then
                source $basefile.$ARCH
        fi 
        if [ -f $basefile.$SYSTEM ]
        then
                source $basefile.$SYSTEM
        fi 
        if [ -f $basefile.$ARCH.$SYSTEM ]
        then
                source $basefile.$ARCH.$SYSTEM
        fi
}

I keep my bourne family shell files in ~/init/bourne, and I keep the files in
my home directory machine independent, and then I stick a "source_files bourne
env" say into my .zprofile and it goes and finds all the ~/init/bourne/env.*
files that apply to the current machine and sources them.

bradym@cs.arizona.edu

