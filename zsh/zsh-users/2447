From zsh-users-return-2447-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Jul 19 18:41:20 1999
Return-Path: <zsh-users-return-2447-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 742 invoked from network); 19 Jul 1999 18:40:57 -0000
Received: from ns2.primenet.com.au (HELO primenet.com.au) (@203.24.36.3)
  by ns1.primenet.com.au with SMTP; 19 Jul 1999 18:40:57 -0000
Received: (qmail 29290 invoked from network); 19 Jul 1999 17:58:39 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns2.primenet.com.au with SMTP; 19 Jul 1999 17:58:38 -0000
Received: (qmail 29255 invoked by alias); 19 Jul 1999 17:38:20 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 2447
Received: (qmail 29245 invoked from network); 19 Jul 1999 17:38:18 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <990719173814.ZM10360@candle.brasslantern.com>
Date: Mon, 19 Jul 1999 17:38:13 +0000
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-users@sunsite.auc.dk
Subject: Getting completion to tell the user what to do
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

This ought to be an easy one in the new 3.1.6 completion system, but I just
can't get it to work.

I'm trying to complete "subject string goes here" as in

	mail -s "subject string goes here"

What I want is to offer no completions at all, because the subject is free-
form text, but print a hint to the user as to what he's supposed to type.

The following almost works (inside a completion function the rest of which
is not interesting):

  compadd -S '' -X 'Please enter the subject of the message' ''

but because there's a unique completion, the explanation is printed only
when the user types ^D, and there's no beep to let him know why tab isn't
doing anything.  OK, I thought, I can force a listing:

  compadd -S '' -X 'Please enter the subject of the message' ''
  compstate[list]=list
  compstate[force_list]=yes
  compstate[restore]=no

but that doesn't work -- there's still no explanation printed.

What obvious thing have I forgotten/overlooked here?  Is there an entirely
better alternative to using compadd -X ?

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

