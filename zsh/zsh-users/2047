Message-Id: <9901260907.AA16441@ibmth.df.unipi.it>
To: zsh-users@sunsite.auc.dk
Subject: Re: o'reilly zsh book? 
Date: Tue, 26 Jan 1999 10:07:17 +0100
From: Peter Stephenson <pws@ibmth.df.unipi.it>
Status: RO
X-Mailing-List: <zsh-users@sunsite.auc.dk> 2047

Sweth Chandramouli wrote:
> so i guess my questions are, would anyone else who is more involved
> in the development side (and thus has a better understanding of the
> internals) be interested in co-writing an o'reilly zsh book, and would the
> list as a whole be opposed to being a sounding board for any questions
> that might come up?

I'd possibly be interested, too.  I would say you'd have to start
putting it together on the basis of 3.0, particularly since there
isn't an active archive manager at the moment, and add bits if there's
ever a stable release of 3.1 (I don't know what Zefram's criteria are,
since as far as I know 3.1 is about as stable as 3.0 --- more so
without the extra patches --- on the common ground).

I don't know about the audience, except that hardly any physicists are
going to buy it.  However, at IfH where I was working before --- they
have a quite large computer centre --- it's a standard shell, so there
must be a definite, if hidden, potential audience, given that there's
currently nothing beyond the documentation, unlike Emacs, where there
are already several books and more readable online documentation.  On
the other hand, a book shouldn't be an excuse for bad documentation.

As for contents, my starting point would be to include things like
  1. Setting up; .zshrc, .zshenv etc.; converting from other shells;
     picking your options (in some detail, I would think, since
     this is a key point), emulate etc.; getting the history the way
     you want it; defining a prompt; mail messages.
  2. Basic syntax issues, with pointers to other reference works for
     more detail, enough to write more complex .-files; variables and
     arrays and useful builtins; functions (bearing in mind it isn't
     going to be a programming tract).  Discourage too much use of the
     variant syntaxes.
  3. Basic command line editing, vi/emacs modes, bindkey, multi-line
     issues; vared and print -z $(...) and tips about niceties like
     the buffer stack.
  4. Expansions, including globbing and parameters, and some
     reasonably painless guide to the order this all happens in
     and how to modify it via things like eval and globsubst.
  5. Maybe room somewhere for a ragbag of tips, like the things
     included in the FAQ, e.g. use of chpwd, multios, disown, all
     those things people tell you about and then you forget.
  6. Completion (compctl style).  I put it down here since you can't
     avoid using everything else to get it working properly.
--- and then when 3.1 comes along, you can think about adding stuff on
the modules, new style completion, associative arrays, and so on.

-- 
Peter Stephenson <pws@ibmth.df.unipi.it>       Tel: +39 050 844536
WWW:  http://www.ifh.de/~pws/
Dipartimento di Fisica, Via Buonarroti 2, 56127 Pisa, Italy

