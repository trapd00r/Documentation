From zsh-users-return-14682-mason-zsh=primenet.com.au@zsh.org Tue Dec 22 09:36:46 2009
Return-Path: <zsh-users-return-14682-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 9037 invoked by alias); 22 Dec 2009 09:36:46 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14682
Received: (qmail 29723 invoked from network); 22 Dec 2009 09:36:45 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <091222013609.ZM4589@torch.brasslantern.com>
Date: Tue, 22 Dec 2009 01:36:09 -0800
In-reply-to: <alpine.LNX.2.01.0912220049480.25312@hp.internal>
Comments: In reply to "Benjamin R. Haskell" <zsh@benizi.com>
 "Re: Autocompletion doesn't work with kanji" (Dec 22,  1:50am)
References: <4B30085F.2010505@christoph-d.de>
	<alpine.LNX.2.01.0912220049480.25312@hp.internal>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-users@zsh.org
Subject: Re: Autocompletion doesn't work with kanji
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Dec 22,  1:50am, Benjamin R. Haskell wrote:
}
} > I noticed that I can rename _foo_bar to anything and the problem 
} > persists. However, removing the line with _foo_bar completely also makes 
} > the problem disappear. But removing this line would break the real grml 
} > .zshrc, so this is not a solution.
} 
} Something makes me doubt that's the essential line in the real grml
} .zshrc that's doing what you want.

I've just had a quick look at the grml zshrc, and the line in there is
_last_try="$HISTNO$BUFFER$CURSOR" (not _foo_bar).  The full context is:

        zstyle -e ':completion:*' completer '
            if [[ $_last_try != "$HISTNO$BUFFER$CURSOR" ]] ; then
                _last_try="$HISTNO$BUFFER$CURSOR"
                reply=(_complete _match _ignored _prefix _files)
            else
               ...
            fi'

Aside:  I think there's also an unrelated bug, this ...

    # allow one error for every three characters typed in approximate completer
    zstyle ':completion:*:approximate:'    max-errors 'reply=( $((($#PREFIX+$#SUFFIX)/3 )) numeric )'

... should also be using zstyle -e, otherwise the assignment to reply is
not really meaningful.

} I suspect you're somehow ending up with ISO-2022-JP encoding, where kanji 
} 'hon' and hiragana 'a' encode to the following sequences:
} 
} 0x672C  1b 24 42 4b 5c 1b 28 42  == \033$BK\033(B
} 0x3042  1b 24 42 24 22 1b 28 42  == \033$B$"\033(B
} 
} $BUFFER contains the line as edited thus far.  So, in one case, there's 
} an extra double-quote hanging about that messes things up.

No, that's not it.  Zsh will parse away the double quotes in the
string "$HISTNO$BUFFER$CURSOR" before ever expanding $BUFFER -- a
quote within the value of $BUFFER won't be treated as part of the
parse.
 
} It might be as simple as using 'setopt multibyte' somewhere.

This, however, may be true.  The doubling of the "A" may indicate that
something is not correctly counting the number of bytes in the buffer.

On the other hand, if removing the assignment fixes the problem, then
there may be memory corruption from miscounting during the assignment.

Christoph, can you try reproducing this with zsh built from the most
current sources?

