From zsh-workers-request@euclid.skiles.gatech.edu Mon Feb 10 02:19:57 1997
Return-Path: <zsh-workers-request@euclid.skiles.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 19460 invoked from network); 10 Feb 1997 02:19:55 -0000
Received: from euclid.skiles.gatech.edu (list@130.207.146.50)
  by coral.primenet.com.au with SMTP; 10 Feb 1997 02:19:55 -0000
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id VAA06288; Sun, 9 Feb 1997 21:14:33 -0500 (EST)
Resent-Date: Sun, 9 Feb 1997 21:14:33 -0500 (EST)
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <970209182149.ZM7964@candle.brasslantern.com>
Date: Sun, 9 Feb 1997 18:21:49 -0800
In-Reply-To: "C. v. Stuckrad" <stucki@math.fu-berlin.de>
        "((Re: set -vx changes output of)) subshells" (Feb  9, 11:45pm)
References: <Pine.GSO.3.95q.970209232720.23982B-100000@petzval>
Reply-To: schaefer@nbn.com
X-Mailer: Z-Mail (4.0b.820 20aug96)
To: "C. v. Stuckrad" <stucki@math.fu-berlin.de>,
        Zsh hackers list <zsh-workers@math.gatech.edu>
Subject: Re: ((Re: set -vx changes output of)) subshells
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-Message-ID: <"Dg9xl2.0.BY1.9Ie_o"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/2883
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

On Feb 9, 11:45pm, C. v. Stuckrad wrote:
} Subject: ((Re: set -vx changes output of)) subshells
}
} On Wed, 5 Feb 1997, Daniel Dignam wrote:
} >    My assumption was that the set -vx didn't get inherited by the
} > subshells, but my understanding would appear to be false, I guess $()
} > isn't really a subshell ...
} 
} Well, This reminds me of a question I never could get solved so far:
} 
} How, if it is at all possible, can a $(...) subshell or the inside of a
} construct 'know' that is not '*THE* interactive' shell ?

It is true that there is no guaranteed way to discover that you are in a
subshell.  However, both `monitor' and `zle' become unset when entering
a subshell, so if you normally set either of those, `[[ -o monitor ]]' or
`[[ -o zle ]]' will become false when you've entered a subshell.

Inside $(...), `[[ -t 1 ]]' will detect that the output isn't a terminal.

} Simple but irritating (for me) exammple:
} 
} Assume you make a function 'xswt' which sets Window titles in X11-Xterms.
} Then you include 'xswt' inside of chpwd, so it gets executed at every 'cd'

The solution to this *specific* problem is to put `xswt' in preprompt(),
not in chpwd().

You should probably test `[[ -t 1 ]]' in `xswt' even so, in case somebody
calls it directly.

-- 
Bart Schaefer                             Brass Lantern Enterprises
http://www.well.com/user/barts            http://www.nbn.com/people/lantern

