From zsh-users-return-8767-mason-zsh=primenet.com.au@sunsite.dk Thu Apr 28 18:35:44 2005
Return-Path: <zsh-users-return-8767-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 7206 invoked from network); 28 Apr 2005 18:35:43 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 28 Apr 2005 18:35:43 -0000
Received: (qmail 53957 invoked from network); 28 Apr 2005 18:35:37 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 28 Apr 2005 18:35:37 -0000
Received: (qmail 3040 invoked by alias); 28 Apr 2005 18:35:29 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 8767
Received: (qmail 3027 invoked from network); 28 Apr 2005 18:35:28 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 28 Apr 2005 18:35:28 -0000
Received: (qmail 52960 invoked from network); 28 Apr 2005 18:35:28 -0000
Received: from p54851a7b.dip0.t-ipconnect.de (HELO solfire) (84.133.26.123)
  by a.mx.sunsite.dk with SMTP; 28 Apr 2005 18:35:20 -0000
Received: from localhost ([127.0.0.1])
	by solfire with esmtp (Exim 4.42)
	id 1DRDrh-0000fd-Lr
	for zsh-users@sunsite.dk; Thu, 28 Apr 2005 20:35:58 +0200
Date: Thu, 28 Apr 2005 20:35:57 +0200 (CEST)
Message-Id: <20050428.203557.41646998.Meino.Cramer@gmx.de>
To: zsh-users@sunsite.dk
From: Meino Christian Cramer <Meino.Cramer@gmx.de>
X-Mailer: Mew version 4.1 on Emacs 21.3 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
X-SA-Exim-Connect-IP: 127.0.0.1
X-SA-Exim-Rcpt-To: zsh-users@sunsite.dk
X-SA-Exim-Mail-From: Meino.Cramer@gmx.de
Subject: Aaaaargggghhh... :)
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-SA-Exim-Version: 4.1+cvs (built Sat, 28 Aug 2004 13:10:40 +0200)
X-SA-Exim-Scanned: Yes (on solfire)
X-Spam-Checker-Version: SpamAssassin 3.0.2 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, score=-0.5 required=6.0 tests=BAYES_00,RCVD_IN_NJABL_DUL,
	RCVD_IN_SORBS_DUL autolearn=no version=3.0.2
X-Spam-Hits: -0.5


Hi,

 am I totally .... ?

 There is a neat keeper function described here:
 
   http://www.unixreview.com/documents/s=9513/ur0501a/ur0501a.htm

 But it seems, that I am not able to get the desribed script working
 for me.

 I always tell me:

   No such widget `_expand-kept-result'

 or 

   No such widget `_expand-kept-result

 I tried to remove/add underscores but it does not help either.

 What is the bug in my implementation of that keeper funtionality?

 Here is my script:

# ======================================================================
# keep
# ----------------------------------------------------------------------
function keep {
    setopt localoptions nomarkdirs nonomatch nocshnullglob nullglob
    kept=()         # Erase old value in case of error on next line
    kept=($~*)
    if [[ ! -t 0 ]]; then
        local line
        while read line; do
            kept+=( $line )   # += is a zsh 4.2+ feature
        done
    fi
    print -Rc - ${^kept%/}(T)
}
# ......................................................................
alias keep='noglob keep'
#......................................................................
function keep {
    setopt localoptions nomarkdirs nonomatch nocshnullglob nullglob
    kept=()         # Erase old value in case of error on next line
    kept=($~*)
    if [[ ! -t 0 ]]; then
        local line
        while read line; do
            kept+=( $line )   # += is a zsh 4.2+ feature
        done
    fi
    print -Rc - ${^kept%/}(T)
}
# !

_insert_kept() {
    (( $#kept )) || return 1
    local action
    zstyle -s :completion:$curcontext insert-kept action
    if [[ -n $action ]]
    then compstate[insert]=$action
    elif [[ $WIDGET = *expand* ]]
    then compstate[insert]=all
    fi
    if [[ $WIDGET = *expand* ]]
    then compadd -U ${(M)kept:#${~words[CURRENT]}}
    else compadd -a kept
    fi
}      

 _expand_word_and_keep() {
     function compadd() {
         local -A args
         zparseopts -E -A args J:
         if [[ $args[-J] == all-expansions ]]
         then
             builtin compadd -A kept "$@"
             kept=( ${(Q)${(z)kept}} )
         fi
         builtin compadd "$@"
     }
     local result
     _main_complete _expand
     result=$?
     unfunction compadd
     return result
 }

zle -C _expand_word complete-word _expand_word_and_keep
zstyle ':completion:expand-kept-result:*' completer _insert_kept      
bindkey '^XK' expand-kept-result
bindkey '^Xk' insert-kept-result 




Thank you very much for any help in advance!
Happy zshing!
Meino







 # ======================================================================


     

