From zsh-workers-return-15283-mason-zsh=primenet.com.au@sunsite.dk Fri Jul 06 10:43:56 2001
Return-Path: <zsh-workers-return-15283-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 23643 invoked from network); 6 Jul 2001 10:43:55 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 6 Jul 2001 10:43:55 -0000
Received: (qmail 20757 invoked by alias); 6 Jul 2001 10:42:50 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 15283
Received: (qmail 20740 invoked from network); 6 Jul 2001 10:42:48 -0000
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
Date: Fri, 6 Jul 2001 12:41:30 +0200 (MET DST)
Message-Id: <200107061041.MAA12536@beta.informatik.hu-berlin.de>
To: zsh-workers@sunsite.dk
Subject: Re: RE: Preserve initial // in path name completion
In-Reply-To: <004f01c10607$02c00180$21c9ca95@mow.siemens.ru>

Andrej Borsenkow wrote:

> ...
> 
> To my immense surprise even with preserve-prefix unset (but with your patch
> and suitably set fake-files) and squeeze-slashes it happily completed inside
> UNC paths, even respecting all matchers. Looks, like fake-files win?

Err... the patch shouldn't make a difference with the style set, does it
work without the patch, too? (And with the patch below.)

> ...
> 
> This obviously happens only with root$; any other share I've tried works.

This was a more general problem because the test for parameter
expansions in the string to complete didn't check if the `$' was
preceded by a backslash.  Fix below.  I'll commit it (to the stable
branch, too).


Bye
  Sven

Index: Completion/Unix/Type/_path_files
===================================================================
RCS file: /cvsroot/zsh/zsh/Completion/Unix/Type/_path_files,v
retrieving revision 1.6
diff -u -r1.6 _path_files
--- Completion/Unix/Type/_path_files	2001/06/18 09:53:17	1.6
+++ Completion/Unix/Type/_path_files	2001/07/06 10:40:04
@@ -190,7 +190,7 @@
 
 # Now let's have a closer look at the string to complete.
 
-if [[ "$pre" = [^][*?#^\|\<\>]#(\`[^\`]#\`|\$)*/* && "$compstate[quote]" != \' ]]; then
+if [[ "$pre" = [^][*?#^\|\<\>\\]#(\`[^\`]#\`|\$)*/* && "$compstate[quote]" != \' ]]; then
 
   # If there is a parameter expansion in the word from the line, we try
   # to complete the beast by expanding the prefix and completing anything

-- 
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

