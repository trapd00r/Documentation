From zsh-users-return-15743-mason-zsh=primenet.com.au@zsh.org Mon Jan 31 04:00:55 2011
Return-Path: <zsh-users-return-15743-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 15560 invoked by alias); 31 Jan 2011 04:00:55 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15743
Received: (qmail 25954 invoked from network); 31 Jan 2011 04:00:42 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <110130200006.ZM15976@torch.brasslantern.com>
Date: Sun, 30 Jan 2011 20:00:06 -0800
In-reply-to: <1296434058-sup-5600@samurai.icir.org>
Comments: In reply to Matthias Vallentin <vallentin@icsi.berkeley.edu>
 "Redirect output of time builtin" (Jan 30,  4:39pm)
References: <1296434058-sup-5600@samurai.icir.org>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-users <zsh-users@zsh.org>
Subject: Re: Redirect output of time builtin
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Jan 30,  4:39pm, Matthias Vallentin wrote:
}
} Is it possible to redirect output from the time builtin?

Sure.  It's printed to stderr.  The trick is that it's parsed as if

    time { pipeline including redirects }

so to redirect the output of time rather than the output of pipeline,
you must put in your own braces:

    { time pipeline including redirects } 2> stderr.txt

In order to split the stderr of time from the stderr of the pipeline,
you need to get a little trickier:

    { time simple command 2>&3 } 3>&2 2>time.txt

It might be easier to see what's going on there if you write the
redirections in the order that they are actually performed by the
shell when executing the command:

    3>&2 2>time.txt { time 2>&3 simple command }

Thus, 3 becomes the same as 2, then 2 goes to the file time.txt
(leaving 3 pointing where 2 used to point), then time implicitly
grabs 2 for its stderr, then 2 becomes the same as 3 (back to the
original 2 again, but leaving time's stderr directed to time.txt),
and finally the simple command runs with 2 as its stderr.

I replaced the pipeline with a simple command to keep the explanation
short; if you have an actual pipeline rather than a simple command,
placement of the 2>&3 becomes more complicated.

Additional note:  The time builtin applied to any construct that is
executed in the current shell, is silently ignored.  So although
it's syntactically OK to put an opening curly or a repeat-loop or
the like immediately after the time keyword, you'll get no timing
statistics.  You have to use parens instead, to force a subshell,
which is then timed.

