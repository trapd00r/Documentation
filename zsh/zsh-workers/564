From zsh-workers-request@math.gatech.edu  Wed Nov  8 23:02:12 1995
Received: from math.gatech.edu (euclid.skiles.gatech.edu [130.207.146.50]) by werple.net.au (8.7/8.7.1) with SMTP id XAA04662 for <mason@werple.mira.net.au>; Wed, 8 Nov 1995 23:02:06 +1100 (EST)
Received: by math.gatech.edu (5.x/SMI-SVR4)
	id AA18737; Wed, 8 Nov 1995 06:41:28 -0500
Resent-Date: Wed, 8 Nov 1995 12:39:21 +0100 (MET)
Old-Return-Path: <hzoli@cs.elte.hu>
From: Zoltan Hidvegi <hzoli@cs.elte.hu>
Message-Id: <199511081139.MAA20821@bolyai.cs.elte.hu>
Subject: Re: more to go from BUGS
To: zsh-workers@math.gatech.edu (zsh-workers)
Date: Wed, 8 Nov 1995 12:39:21 +0100 (MET)
In-Reply-To: <199511080937.UAA28046@werple.net.au> from "Geoff Wing" at Nov 8, 95 08:37:16 pm
X-Mailer: ELM [version 2.4 PL24]
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-Id: <"M_F2n2.0.da4.dT9em"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/564
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Geoff Wing wrote:
> Heyla, here are some more comments about BUGS:
> 
>  ------------------------------------------------------------------------
>  Redisplay zle function does not work.
>  ------------------------------------------------------------------------
> Yes it does. Please provide an instance where it doesn't.

Are we reading the same BUGS file?  The one from beta11 does not have this
line.

>  ------------------------------------------------------------------------
>  % test=test
>  % echo "${test##`echo '*'`}"
>  test
>  sh gives empty string here. Is it a bug or a feature?
>  ------------------------------------------------------------------------
> I didn't get this.  I got something far worse.  Anything after it, eg.
> % echo "${test##`echo '*'`}" ; echo foobar
> got totally ignored, and the first echo provided no output.

The substitution code is very bugy in the baseline.  This bug is left after my
cleanups.  I do not know what the baseline version does here.

>  ------------------------------------------------------------------------
>  % zsh -c 'cat a_long_file | less'
>  can be interrupted with ^C. The prompt comes back and less is orphaed.
>  If you go to the end of the file with less and cat terminates, ^C
>  will not terminate less.
>  ------------------------------------------------------------------------
> Worked absolutely fine on my machine (NetBSD 1.0A & NetBSD 1.1_ALPHA)

That's also changed in the new BUGS file.  It works for you since less is now
executed without fork.  But try

% zsh -c 'cat a_long_file | less ; :'

and you will see what I mean.  Less behaves well here since it terminates
after it notices that it lost the terminal.  But if you put any program which
ignores INT in place of less, it will continue running after the interrupt.
E.g.:

% zsh -c "sleep 20 | zsh -c 'trap \"\" INT ; while true ; do : ; done' ; :"

Wait a few seconds after starting it and interrupt.  The looping zsh will not
terminate and will eat CPU time in the background.  This is really bad since
you won't notice it unless you do a ps.

Bye,

  Zoltan

