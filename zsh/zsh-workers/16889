From zsh-workers-return-16889-mason-zsh=primenet.com.au@sunsite.dk Sun Mar 24 15:16:21 2002
Return-Path: <zsh-workers-return-16889-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2262 invoked from network); 24 Mar 2002 15:16:19 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 24 Mar 2002 15:16:19 -0000
Received: (qmail 20640 invoked by alias); 24 Mar 2002 15:16:10 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16889
Received: (qmail 20629 invoked from network); 24 Mar 2002 15:16:08 -0000
Date: Sun, 24 Mar 2002 01:01:04 -0800 (PST)
From: Wayne Davison <wayned@users.sourceforge.net>
X-X-Sender:  <wayne@phong.blorf.net>
To: Bart Schaefer <schaefer@brasslantern.com>
Cc: Zsh hackers list <zsh-workers@sunsite.dk>
Subject: Re: Piping stderr (was Re: Two bug reports)
In-Reply-To: <1020323224514.ZM29171@candle.brasslantern.com>
Message-ID: <Pine.LNX.4.33L2.0203240032180.20227-100000@phong.blorf.net>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

On Sat, 23 Mar 2002, Bart Schaefer wrote:
> On Mar 23,  1:18pm, Wayne Davison wrote:
> } I'm wondering if it would be nice to create a syntax for piping just
> } stderr?
>
> You mean, other than `2>>(...)'?

Uh ...  Yeah, Yeah.  That's what I meant.  _Other_ than that.  :-)

(I had apparently neglected to find that syntax when I was searching
the zsh man page.)

So, I suppose that Peter's reply to David Hughes could be ammended to
say that in addition to turning off multios, he could change this
command:

    /bin/sh -c 'echo out; echo err >&2' 2>&1 >/dev/null | cat

into this one:

    /bin/sh -c 'echo out; echo err >&2' >/dev/null 2>>(cat)

The bad thing about this idiom is that it doesn't wait for "cat" to
finish before moving on.  If we implemented my proposed stderr-pipe
syntax, the following command wouldn't have that problem:

    /bin/sh -c 'echo out; echo err >&2' >/dev/null 2>|& cat

> Hmm.  `|&' is short for `2>&1 |'.  What would the new syntax be short
> for?

It wouldn't be short for anything.  Instead "|" would become short for
"1>|&".  The construct simply means "take the numbered file handle and
pipe it to stdin of the following command."

> The problem being that in order to pipe "just stderr" you have
> to dispose of stdout somehow.

No, stdout doesn't need to be affected at all.  If the user wants stdout
to go somewhere other than the default, it can be redirected explicitly
(as I did above).

..wayne..

