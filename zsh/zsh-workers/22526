From zsh-workers-return-22526-mason-zsh=primenet.com.au@sunsite.dk Wed Jun 28 14:26:11 2006
Return-Path: <zsh-workers-return-22526-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2608 invoked from network); 28 Jun 2006 14:26:08 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.4 required=5.0 tests=AWL,BAYES_00,
	FORGED_RCVD_HELO autolearn=ham version=3.1.3
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 28 Jun 2006 14:26:08 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 37516 invoked from network); 28 Jun 2006 14:26:03 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 28 Jun 2006 14:26:03 -0000
Received: (qmail 11935 invoked by alias); 28 Jun 2006 14:26:00 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 22526
Received: (qmail 11926 invoked from network); 28 Jun 2006 14:26:00 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 28 Jun 2006 14:26:00 -0000
Received: (qmail 37245 invoked from network); 28 Jun 2006 14:26:00 -0000
Received: from cluster-d.mailcontrol.com (217.69.20.190)
  by a.mx.sunsite.dk with SMTP; 28 Jun 2006 14:25:58 -0000
Received: from cameurexb01.EUROPE.ROOT.PRI ([62.189.241.200])
	by rly12d.srv.mailcontrol.com (MailControl) with ESMTP id k5SEPhLa019272
	for <zsh-workers@sunsite.dk>; Wed, 28 Jun 2006 15:25:43 +0100
Received: from news01.csr.com ([10.103.143.38]) by cameurexb01.EUROPE.ROOT.PRI with Microsoft SMTPSVC(6.0.3790.1830);
	 Wed, 28 Jun 2006 15:25:42 +0100
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.13.4/8.13.4) with ESMTP id k5SEPgfh029048
	for <zsh-workers@sunsite.dk>; Wed, 28 Jun 2006 15:25:42 +0100
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.13.4/8.13.4/Submit) with ESMTP id k5SEPgKn029045
	for <zsh-workers@sunsite.dk>; Wed, 28 Jun 2006 15:25:42 +0100
Message-Id: <200606281425.k5SEPgKn029045@news01.csr.com>
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: PATCH: extended ${(#)...}
Date: Wed, 28 Jun 2006 15:25:42 +0100
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 28 Jun 2006 14:25:42.0608 (UTC) FILETIME=[BCA5BD00:01C69ABE]
Content-Type: text/plain
MIME-Version: 1.0
X-Scanned-By: MailControl A-07-00-10 (www.mailcontrol.com) on 10.68.0.122

Another way of getting Unicode characters, this time directly from
numbers in parameters.  For example, ${(#):-0xa5} is a Yen sign.
Note this is strictly Unicode, not the current character set.

I was lazy and hijacked \Uxxxxxxxx.  Really that junk of getkeystring()
needs separating out.

Index: Doc/Zsh/expn.yo
===================================================================
RCS file: /cvsroot/zsh/zsh/Doc/Zsh/expn.yo,v
retrieving revision 1.66
diff -u -r1.66 expn.yo
--- Doc/Zsh/expn.yo	22 May 2006 09:52:34 -0000	1.66
+++ Doc/Zsh/expn.yo	28 Jun 2006 14:23:10 -0000
@@ -649,6 +649,9 @@
 Evaluate the resulting words as numeric expressions and output the
 characters corresponding to the resulting integer.  Note that this form is
 entirely distinct from use of the tt(#) without parentheses.
+
+If the tt(MULTIBYTE) option is set and the number is greater than 127
+(i.e. not an ASCII character) it is treated as a Unicode character.
 )
 item(tt(%))(
 Expand all tt(%) escapes in the resulting words in the same way as in in
Index: Src/subst.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/subst.c,v
retrieving revision 1.52
diff -u -r1.52 subst.c
--- Src/subst.c	28 Jun 2006 13:12:55 -0000	1.52
+++ Src/subst.c	28 Jun 2006 14:23:12 -0000
@@ -889,6 +889,29 @@
     return 1;
 }
 
+/* Evaluation for (#) flag */
+
+static char *
+substevalchar(char *ptr)
+{
+    zlong ires = mathevali(ptr);
+
+    if (errflag)
+	return NULL;
+    if (isset(MULTIBYTE) && ires > 127) {
+	char buf[10];
+	int dummy;
+
+	/* inefficient: should separate out \U handling from getkeystring */
+	sprintf(buf, "\\U%.8x", (unsigned int)ires);
+	return getkeystring(buf, &dummy, 2, NULL);
+    } else {
+	ptr = zhalloc(2);
+	sprintf(ptr, "%c", (int)ires);
+	return ptr;
+    }
+}
+
 /* parameter substitution */
 
 #define	isstring(c) ((c) == '$' || (char)(c) == String || (char)(c) == Qstring)
@@ -2269,13 +2292,7 @@
 	/*
 	 * Evaluate the value numerically and output the result as
 	 * a character.
-	 *
-	 * Note this doesn't yet handle Unicode or multibyte characters:
-	 * that will need handling more generally probably by
-	 * an additional flag of some sort.
 	 */
-	zlong ires;
-
 	if (isarr) {
 	    char **aval2, **avptr, **av2ptr;
 
@@ -2283,20 +2300,14 @@
 
 	    for (avptr = aval, av2ptr = aval2; *avptr; avptr++, av2ptr++)
 	    {
-		ires = mathevali(*avptr);
-		if (errflag)
+		if (!(*av2ptr = substevalchar(*avptr)))
 		    return NULL;
-		*av2ptr = zhalloc(2);
-		sprintf(*av2ptr, "%c", (int)ires);
 	    }
 	    *av2ptr = NULL;
 	    aval = aval2;
 	} else {
-	    ires = mathevali(val);
-	    if (errflag)
+	    if (!(val = substevalchar(val)))
 		return NULL;
-	    val = zhalloc(2);
-	    sprintf(val, "%c", (int)ires);
 	}
     }
     /*

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070


To access the latest news from CSR copy this link into a web browser:  http://www.csr.com/email_sig.php

