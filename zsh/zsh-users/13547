From zsh-users-return-13547-mason-zsh=primenet.com.au@sunsite.dk Tue Dec 09 11:30:38 2008
Return-Path: <zsh-users-return-13547-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 18566 invoked from network); 9 Dec 2008 11:30:34 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00,HTML_MESSAGE
	autolearn=ham version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 9 Dec 2008 11:30:34 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 17076 invoked from network); 9 Dec 2008 11:30:17 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 9 Dec 2008 11:30:17 -0000
Received: (qmail 28337 invoked by alias); 9 Dec 2008 11:29:55 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13547
Received: (qmail 27414 invoked from network); 9 Dec 2008 11:27:53 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 9 Dec 2008 11:27:53 -0000
Received: from wa-out-1112.google.com (wa-out-1112.google.com [209.85.146.181])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 7F85480308BE
	for <zsh-users@sunsite.dk>; Tue,  9 Dec 2008 12:27:49 +0100 (CET)
Received: by wa-out-1112.google.com with SMTP id n7so1043123wag.29
        for <zsh-users@sunsite.dk>; Tue, 09 Dec 2008 03:27:48 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:to
         :subject:mime-version:content-type;
        bh=nFqAcwwvRJB6BDfBAuvTvEPEETMup/3AyWuN14ChxPc=;
        b=mmqcxsz4JsPZJ7KkcFpFY7YtBeHQNDmV/LU4bi6Xp0czfkHOqfDlXVEhRPZ7sMV3fx
         q4q8Bm9I4nBwZzAwwkHd0FtvGberVCz8EoQm3UABRF6V+IVW5a2QNWp7QDcX2aKPjiPX
         U8GasoCRbxz5GKsjc2qQJY5YmEIuKCkgtR0fo=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:to:subject:mime-version:content-type;
        b=GcTr95NLGyOZ4iH6TYNqC6IBaZsBVirdyLb9hluNpxNytYHpfGl5NOJxspneg3XHaP
         lbyuQXv2Abwo96yUWPzHKhxbPpMF52nkhgkrQPURrHlFLsPs+rSbJm6sumFxnVoZtkUy
         e/BZ0u2AK9w5Jk5Ic7XWHjD2prar7ZS2dV9TU=
Received: by 10.114.205.1 with SMTP id c1mr15336wag.11.1228822068387;
        Tue, 09 Dec 2008 03:27:48 -0800 (PST)
Received: by 10.114.60.16 with HTTP; Tue, 9 Dec 2008 03:27:48 -0800 (PST)
Message-ID: <6cd6de210812090327o11abb9f3w2cc932515e4dbef8@mail.gmail.com>
Date: Tue, 9 Dec 2008 06:27:48 -0500
From: "Rocky Bernstein" <rocky.bernstein@gmail.com>
To: "Zsh users list" <zsh-users@sunsite.dk>
Subject: Is this correct? Redirecting stdin/stout to implement a gdb-like "set inferior tty" in zshdb
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_68655_7089871.1228822068380"
X-Virus-Scanned: ClamAV 0.92.1/8735/Tue Dec  9 09:53:21 2008 on bifrost
X-Virus-Status: Clean

------=_Part_68655_7089871.1228822068380
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Recently I needed to debug a GNU autoconf configure script which seems to do
funky things with stdin and stdout. I realized that the shell debuggers
really should have the equivalent of gdb's "set inferior tty" (
http://www.mcs.vuw.ac.nz/cgi-bin/info2www?(gdb)Input/Output)

Something along the lines of the below is what I came up with. But is this
correct? $1 of course supposed to be the tty like say /dev/pts/1 on a
GNU/Linuxy box.  When I tried it with the tty of another terminal, I'm
getting output to the terminal but not input. I'm not sure it even makes
sense to try to mug the input from another terminal or whether two processes
(not even parent related) can read from the same input.

#!/usr/local/bin/zsh
typeset line
exec 7<&0 </dev/null 6>&1  # Line taken from an autoconf "configure" script.
#...
exec {_Dbg_fdi} <> $1
while : ; do
  vared -e -h -p "foo> " line <&${_Dbg_fdi} || break
  builtin print -- "$line" >&${_Dbg_fdi}
  line=''
done
echo "That's all folks! (${_Dbg_fdi})"

Does zsh have <> like ksh does? It wasn't rejected, so I assume it does.

Finally, in looking at zsh documentation I see the way-cool tcp stuff. This
seems to make it doable to implement remote debugging over a tcp
connection.  And remote debugging (via sockets) is generally how front-ends
like Eclipse or the Java netbeans debuggers work. It also can be very
helpful in debugging remote processes. However right now I don't have need
or plans to put this in. I mention in case there's someone out there is
interested in hacking on.

------=_Part_68655_7089871.1228822068380
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Recently I needed to debug a GNU autoconf configure script which seems to do funky things with stdin and stdout. I realized that the shell debuggers really should have the equivalent of gdb&#39;s &quot;set inferior tty&quot; (<br>
<a href="http://www.mcs.vuw.ac.nz/cgi-bin/info2www?(gdb)Input/Output">http://www.mcs.vuw.ac.nz/cgi-bin/info2www?(gdb)Input/Output</a>)<br><br>Something along the lines of the below is what I came up with. But is this correct? $1 of course supposed to be the tty like say /dev/pts/1 on a GNU/Linuxy box.&nbsp; When I tried it with the tty of another terminal, I&#39;m getting output to the terminal but not input. I&#39;m not sure it even makes sense to try to mug the input from another terminal or whether two processes (not even parent related) can read from the same input.<br>
<br>#!/usr/local/bin/zsh<br>typeset line<br>exec 7&lt;&amp;0 &lt;/dev/null 6&gt;&amp;1&nbsp; # Line taken from an autoconf &quot;configure&quot; script.<br>#...<br>exec {_Dbg_fdi} &lt;&gt; $1<br>while : ; do<br>&nbsp; vared -e -h -p &quot;foo&gt; &quot; line &lt;&amp;${_Dbg_fdi} || break<br>
&nbsp; builtin print -- &quot;$line&quot; &gt;&amp;${_Dbg_fdi}<br>&nbsp; line=&#39;&#39;<br>done<br>echo &quot;That&#39;s all folks! (${_Dbg_fdi})&quot;<br><br>Does zsh have &lt;&gt; like ksh does? It wasn&#39;t rejected, so I assume it does. <br>
<br>Finally, in looking at zsh documentation I see the way-cool tcp stuff. This seems to make it doable to implement remote debugging over a tcp connection.&nbsp; And remote debugging (via sockets) is generally how front-ends like Eclipse or the Java netbeans debuggers work. It also can be very helpful in debugging remote processes. However right now I don&#39;t have need or plans to put this in. I mention in case there&#39;s someone out there is interested in hacking on.<br>
<br>

------=_Part_68655_7089871.1228822068380--

