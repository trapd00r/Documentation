From zsh-workers-return-23870-mason-zsh=primenet.com.au@sunsite.dk Sun Sep 30 18:17:12 2007
Return-Path: <zsh-workers-return-23870-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 17724 invoked from network); 30 Sep 2007 18:17:03 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.3 (2007-08-08) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.3
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 30 Sep 2007 18:17:03 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 73106 invoked from network); 30 Sep 2007 18:16:57 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 30 Sep 2007 18:16:57 -0000
Received: (qmail 19115 invoked by alias); 30 Sep 2007 18:16:50 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 23870
Received: (qmail 19098 invoked from network); 30 Sep 2007 18:16:50 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 30 Sep 2007 18:16:50 -0000
Received: (qmail 72433 invoked from network); 30 Sep 2007 18:16:50 -0000
Received: from acolyte.scowler.net (216.254.112.45)
  by a.mx.sunsite.dk with SMTP; 30 Sep 2007 18:16:45 -0000
Received: by acolyte.scowler.net (Postfix, from userid 1000)
	id 4661C5C368; Sun, 30 Sep 2007 14:16:44 -0400 (EDT)
Date: Sun, 30 Sep 2007 14:16:44 -0400
From: Clint Adams <schizo@debian.org>
To: Romain Francoise <rfrancoise@debian.org>, 444747@bugs.debian.org
Cc: zsh-workers@sunsite.dk
Subject: Re: Bug#444747: git-mergetool completion missing
Message-ID: <20070930181644.GA30873@scowler.net>
Mail-Followup-To: Romain Francoise <rfrancoise@debian.org>,
	444747@bugs.debian.org, zsh-workers@sunsite.dk
References: <20070930174625.13166.78399.reportbug@elegiac.orebokech.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable
In-Reply-To: <20070930174625.13166.78399.reportbug@elegiac.orebokech.com>
User-Agent: Mutt/1.5.16 (2007-06-11)

On Sun, Sep 30, 2007 at 07:46:25PM +0200, Romain Francoise wrote:
> zsh doesn't know about git-mergetool.  If you add it, having completion
> for unmerged files would be nice (but it's probably a bit tricky to
> implement because git-ls-files --unmerged implies --stage).

Maybe someone has an idea about that.

Index: Completion/Unix/Command/_git
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
RCS file: /cvsroot/zsh/zsh/Completion/Unix/Command/_git,v
retrieving revision 1.32
diff -u -r1.32 _git
--- Completion/Unix/Command/_git	30 Sep 2007 11:29:36 -0000	1.32
+++ Completion/Unix/Command/_git	30 Sep 2007 18:15:07 -0000
@@ -1,4 +1,4 @@
-#compdef git git-add git-am git-annotate git-apply git-applymbox git-apply=
patch git-archimport git-archive git-bisect git-blame git-branch git-cat-fi=
le git-check-attr git-check-ref-format git-checkout git-checkout-index git-=
cherry git-cherry-pick git-clean git-clone git-clone-pack git-commit git-co=
mmit-tree git-convert-objects git-count-objects git-cvsexportcommit git-cvs=
import git-cvsserver git-daemon git-describe git-diff git-diff-files git-di=
ff-index git-diff-stages git-diff-tree git-fast-import git-fetch git-fetch-=
pack git-fmt-merge-msg git-for-each-ref git-format-patch git-fsck git-gc gi=
t-get-tar-commit-id git-grep git-hash-object git-http-fetch git-http-push g=
it-imap-send git-index-pack git-init git-instaweb git-local-fetch git-log g=
it-lost-found git-ls-files git-ls-remote git-ls-tree git-mailinfo git-mails=
plit git-merge git-merge-base git-merge-file git-merge-index git-merge-one-=
file git-merge-tree git-mktag git-mktree git-mv git-name-rev git-octopus gi=
t-pack-objects git-pack-redundant git-pack-refs git-patch-id git-peek-remot=
e git-prune git-prune-packed git-pull git-push git-quiltimport git-read-tre=
e git-rebase git-receive-pack git-reflog git-relink git-remote git-repack g=
ut-runstatus git-config git-request-pull git-rerere git-reset git-rev-list =
git-rev-parse git-revert git-rm git-send-email git-send-pack git-sh-setup g=
it-shell git-shortlog git-show git-show-branch git-show-index git-show-ref =
git-ssh-fetch git-ssh-upload git-status git-stripspace git-svn git-svnimpor=
t git-symbolic-ref git-tag git-tar-tree git-unpack-file git-unpack-objects =
git-update-index git-update-ref git-update-server-info git-upload-archive g=
it-upload-pack git-var git-verify-pack git-verify-tag git-whatchanged git-w=
rite-tree
+#compdef git git-add git-am git-annotate git-apply git-applymbox git-apply=
patch git-archimport git-archive git-bisect git-blame git-branch git-cat-fi=
le git-check-attr git-check-ref-format git-checkout git-checkout-index git-=
cherry git-cherry-pick git-clean git-clone git-clone-pack git-commit git-co=
mmit-tree git-convert-objects git-count-objects git-cvsexportcommit git-cvs=
import git-cvsserver git-daemon git-describe git-diff git-diff-files git-di=
ff-index git-diff-stages git-diff-tree git-fast-import git-fetch git-fetch-=
pack git-fmt-merge-msg git-for-each-ref git-format-patch git-fsck git-gc gi=
t-get-tar-commit-id git-grep git-hash-object git-http-fetch git-http-push g=
it-imap-send git-index-pack git-init git-instaweb git-local-fetch git-log g=
it-lost-found git-ls-files git-ls-remote git-ls-tree git-mailinfo git-mails=
plit git-merge git-merge-base git-merge-file git-merge-index git-merge-one-=
file git-merge-tree git-mergetool git-mktag git-mktree git-mv git-name-rev =
git-octopus git-pack-objects git-pack-redundant git-pack-refs git-patch-id =
git-peek-remote git-prune git-prune-packed git-pull git-push git-quiltimpor=
t git-read-tree git-rebase git-receive-pack git-reflog git-relink git-remot=
e git-repack gut-runstatus git-config git-request-pull git-rerere git-reset=
 git-rev-list git-rev-parse git-revert git-rm git-send-email git-send-pack =
git-sh-setup git-shell git-shortlog git-show git-show-branch git-show-index=
 git-show-ref git-ssh-fetch git-ssh-upload git-status git-stripspace git-sv=
n git-svnimport git-symbolic-ref git-tag git-tar-tree git-unpack-file git-u=
npack-objects git-update-index git-update-ref git-update-server-info git-up=
load-archive git-upload-pack git-var git-verify-pack git-verify-tag git-wha=
tchanged git-write-tree
=20
 # TODO: All if (( words[(I)-option] )) should be turned into
 # if (( words[(I)-option] > 0 && words[(I)-option] < CURRENT )), as the us=
er
@@ -260,7 +260,8 @@
     'hash-object:compute object ID from a file'
     'patch-id:compute unique ID for a patch'
     'fsck:verify the connectivity and validity of the objects in the datab=
ase'
-    'lost-found:recover lost references that luckily have not yet been pru=
ned')
+    'lost-found:recover lost references that luckily have not yet been pru=
ned'
+    'mergetool:run merge conflict resolution tools to resolve merge confli=
cts')
=20
   local -a internal_commands
   internal_commands=3D(
@@ -2491,6 +2492,16 @@
   _message 'no arguments allowed; accepts input file on standard input'
 }
=20
+(( $+functions[_git-mergetool] )) ||
+_git-mergetool () {
+  local curcontext=3D$curcontext state line
+  typeset -A opt_args
+
+  _arguments -C \
+    '(-t --tool)'{-t,--tool=3D}':merge resolution tool:(kdiff3 tkdiff meld=
 xxdiff emerge vimdiff gvimdiff opendiff)' \
+    '*:conflicted file:_files' && ret=3D0
+}
+
 # ---
=20
 (( $+functions[__git_guard] )) ||

