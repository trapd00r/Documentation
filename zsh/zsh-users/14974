From zsh-users-return-14974-mason-zsh=primenet.com.au@zsh.org Sat Mar 27 04:15:02 2010
Return-Path: <zsh-users-return-14974-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1957 invoked by alias); 27 Mar 2010 04:15:02 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14974
Received: (qmail 27875 invoked from network); 27 Mar 2010 04:14:50 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <100326211435.ZM29504@torch.brasslantern.com>
Date: Fri, 26 Mar 2010 21:14:35 -0700
In-reply-to: <alpine.LN8.2.00.1003260804010.10812@ckhb06.ckhb.org>
Comments: In reply to "S. Cowles" <scowles@ckhb.org>
 "Re: array element subsetting" (Mar 26, 12:32pm)
References: <Xns9D456D0F33B88zzappergmailcom@80.91.229.10>
	<20100324120359.GA29984@fermat.math.technion.ac.il>
	<Xns9D45D21E0B19Azzappergmailcom@80.91.229.10>
	<alpine.LN8.2.00.1003260202111.10812@ckhb06.ckhb.org>
	<100326074148.ZM29047@torch.brasslantern.com>
	<alpine.LN8.2.00.1003260804010.10812@ckhb06.ckhb.org>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-users@zsh.org
Subject: Re: array element subsetting
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Mar 26, 12:32pm, S. Cowles wrote:
} Subject: Re: array element subsetting
}
} On Fri, 26 Mar 2010, Bart Schaefer wrote:
} 
} > 	print ${(e):-'${${=:-'${^a}' ""}[2]}'}
} 
} I hadn't previously used the parameter expansion (e) or array creation
} ${=...} methods. The inline array element addition is new to me; I
} missed it in Peter's Manual, book, and the zshall man page.

It isn't really "inline array element addition" -- it's just adding a
space and a pair of empty quotes to the end of a string.  What turns
it into an array element is the combination of ${(e)...} which expands
the ${=:-...} expression and thereby removes the quotes, and ${=...}
which splits on the space.

The important bit is the ${^a} wedged in the middle, which turns the
array of strings into an array of parameter expressions wrapped around
those strings.  This is not a very space-efficient way to emulate a
multi-dimensional indexing, even if it's compact to write.
 
} Would it be worth considering adding a new subsection on Array
} Subsetting to the ARRAY PARAMETERS section of the man pages [...]?

I'm not sure it's a common enough thing to want to do in shell code
to be enshrined in the manual, but I'll defer that decision to PWS.
I'd suggest it go in the FAQ except I don't recall it ever having
been asked before, so the "frequent" part hardly applies ...

Incidentally, one might wonder why

	print ${(e):-'${${:-'${^a}'}[(w)N]}'}

doesn't work.  The manual says:

  w
     If the parameter subscripted is a scalar then this flag makes
     subscripting work on words instead of characters.  The default
     word separator is whitespace.

The answer is that it does work, as long as the value of N is less
than the number of words in any string.  However, the result of
${three_word_string[(w)4]} is the last word in the string, not an
empty element as results with ${${=three_word_string}[4]}.

