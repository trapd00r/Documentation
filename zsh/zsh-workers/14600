From zsh-workers-return-14600-mason-zsh=primenet.com.au@sunsite.dk Thu May 31 07:22:40 2001
Return-Path: <zsh-workers-return-14600-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2312 invoked from network); 31 May 2001 07:22:39 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 31 May 2001 07:22:39 -0000
Received: (qmail 21908 invoked by alias); 31 May 2001 07:22:30 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 14600
Received: (qmail 21895 invoked from network); 31 May 2001 07:22:29 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1010531072201.ZM5601@candle.brasslantern.com>
Date: Thu, 31 May 2001 07:22:01 +0000
In-Reply-To: <20010530232209.B49870@lizzy.bugworks.com>
Comments: In reply to Jos Backus <josb@cncdsl.com>
        "Re: zsh and autoconf-2.50" (May 30, 11:22pm)
References: <20010530155301.H47866@lizzy.bugworks.com> 
	<Pine.LNX.4.33L2.0105301618520.5838-100000@phong.blorf.net> 
	<20010530165042.J47866@lizzy.bugworks.com> 
	<010530171233.ZM4082@candle.brasslantern.com> 
	<20010530181550.K47866@lizzy.bugworks.com> 
	<1010531045212.ZM5393@candle.brasslantern.com> 
	<20010530232209.B49870@lizzy.bugworks.com>
X-Mailer: Z-Mail (5.0.0 30July97)
To: Jos Backus <josb@cncdsl.com>
Subject: Re: zsh and autoconf-2.50
Cc: zsh-workers@sunsite.dk
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On May 30, 11:22pm, Jos Backus wrote:
}
} I have attached the Purify results of a ``gmake check'', hopefully that's OK

Grepping "leaked" from all those files shows a whopping 3 bytes lost from 
parse_cadef() during the entire testing process.  I'd say we're doing
pretty well.  Thanks, Josh.

There are a few array over-reads:

purify.zsh.8428.out:ABR: Array bounds read:
purify.zsh.8428.out-  * This is occurring while in:
purify.zsh.8428.out-    parse_class    [complete.c:405]
purify.zsh.8428.out-    parse_pattern  [complete.c:358]
--
purify.zsh.8428.out:ABR: Array bounds read:
purify.zsh.8428.out-  * This is occurring while in:
purify.zsh.8428.out-    parse_pattern  [complete.c:359]
purify.zsh.8428.out-    parse_cmatcher [complete.c:298]
--
purify.zsh.8841.out:ABR: Array bounds read:
purify.zsh.8841.out-  * This is occurring while in:
purify.zsh.8841.out-    get_cadef      [computil.c:1032]
purify.zsh.8841.out-    bin_comparguments [computil.c:1789]

No over-writes.  Also a few uninitialized reads, all in the same place:

purify.zsh.7241.out:UMR: Uninitialized memory read:
purify.zsh.7241.out-  * This is occurring while in:
purify.zsh.7241.out-    paramsubst     [subst.c:1183]
purify.zsh.7241.out-    stringsubst    [subst.c:129]
--
purify.zsh.7241.out:UMR: Uninitialized memory read:
purify.zsh.7241.out-  * This is occurring while in:
purify.zsh.7241.out-    paramsubst     [subst.c:1183]
purify.zsh.7241.out-    stringsubst    [subst.c:129]
--
purify.zsh.8350.out:UMR: Uninitialized memory read:
purify.zsh.8350.out-  * This is occurring while in:
purify.zsh.8350.out-    paramsubst     [subst.c:1183]
purify.zsh.8350.out-    stringsubst    [subst.c:129]

The uninitialized memory is deep in a zsh heap block, so the data about
where it was allocated doesn't help at all.

If there's anything else useful in there, it was lost in all the spew about
file descriptors being opened and duplicated.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

