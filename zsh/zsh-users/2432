From zsh-users-return-2432-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Jul 13 11:30:37 1999
Return-Path: <zsh-users-return-2432-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 17123 invoked from network); 13 Jul 1999 11:30:35 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 13 Jul 1999 11:30:35 -0000
Received: (qmail 18450 invoked by alias); 13 Jul 1999 11:30:23 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 2432
Received: (qmail 18443 invoked from network); 13 Jul 1999 11:30:22 -0000
Date: Tue, 13 Jul 1999 13:30:20 +0200 (MET DST)
Message-Id: <199907131130.NAA30286@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-users@sunsite.auc.dk
In-reply-to: Peter Stephenson's message of Mon, 12 Jul 1999 16:47:10 +0200
Subject: Re: Test version zsh-3.1.6-test-1


Peter Stephenson wrote:

> Much of the new code is fairly well tested, so my main interest now is to
> sort out compilation problems for systems we may not have tried.  In
> particular, it would be helpful if anyone compiling this (including regular
> zsh-workers) could check against the notes for their configuration in
> Etc/MACHINES, and drop a note to zsh-workers@sunsite.auc.dk about anything
> different, i.e. successful compilations on configurations not mentioned at
> all, or problems not mentioned for configurations which are supposed to
> work, or problems which seem to have been exaggerated --- don't assume we
> know anything machine-specific which isn't in Etc/MACHINES.

Under DU 4.0 with gcc-2.8.1 I get a SEGV in a piece of completely
correct C-code in bin_read(). I can work around this by using the
patch below -- which, of course, is completely silly.

Dunno if this should be included, but the SEGV is deadly: it fails on
e.g. the read in compinit.

Bye
 Sven

diff -u ../zn/os/builtin.c Src/builtin.c
--- ../zn/os/builtin.c	Tue Jul 13 10:58:50 1999
+++ Src/builtin.c	Tue Jul 13 13:22:33 1999
@@ -3251,10 +3251,15 @@
     }
 
     firstarg = *args;
-    if (*args && **args == '?')
-	args++;
-    /* default result parameter */
-    reply = *args ? *args++ : ops['A'] ? "reply" : "REPLY";
+    if (*args && **args == '?') {
+    	args++;
+	/* default result parameter */
+	reply = *args ? *args++ : ops['A'] ? "reply" : "REPLY";
+	/* (If we put this reply=... after the `if' gcc-2.8.1 under
+	   Digital Unix 4.0 generates incorrect code.) */
+    } else
+	reply = *args ? *args++ : ops['A'] ? "reply" : "REPLY";
+
     if (ops['A'] && *args) {
 	zwarnnam(name, "only one array argument allowed", NULL, 0);
 	return 1;

--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

