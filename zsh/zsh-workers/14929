From zsh-workers-return-14929-mason-zsh=primenet.com.au@sunsite.dk Fri Jun 15 10:26:05 2001
Return-Path: <zsh-workers-return-14929-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20195 invoked from network); 15 Jun 2001 10:26:04 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 15 Jun 2001 10:26:04 -0000
Received: (qmail 17231 invoked by alias); 15 Jun 2001 10:25:34 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 14929
Received: (qmail 17214 invoked from network); 15 Jun 2001 10:25:34 -0000
Message-ID: <Tc0a88d015428448ca0@mailsweeper01.cambridgesiliconradio.com>
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: Re: Latest cvs hangs in completion tests 
In-reply-to: ""Bart Schaefer""'s message of "Fri, 15 Jun 2001 10:05:31 -0000."
             <1010615100531.ZM32447@candle.brasslantern.com> 
Date: Fri, 15 Jun 2001 11:25:31 +0100
From: Peter Stephenson <pws@csr.com>

"Bart Schaefer" wrote:
> On Jun 14,  4:48pm, Peter Whaite wrote:
> } 
> } I noticed this after the readonly patch (#14915) went in.
> 
> The problem is that assignments to the positional parameters has become
> broken:

That's the basis of it.  I was just getting there.  The following seems to
do the trick.  The tests now run, are then any more potential problems?

Index: Src/params.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/params.c,v
retrieving revision 1.49
diff -u -r1.49 params.c
--- Src/params.c	2001/06/14 09:49:02	1.49
+++ Src/params.c	2001/06/15 10:20:45
@@ -108,13 +108,12 @@
  
 /* Nodes for special parameters for parameter hash table */
 
-static
 #ifdef HAVE_UNION_INIT
 # define BR(X) {X}
-struct param
+typedef struct param initparam;
 #else
 # define BR(X) X
-struct iparam {
+typedef struct iparam {
     struct hashnode *next;
     char *nam;			/* hash data                             */
     int flags;			/* PM_* flags (defined in zsh.h)         */
@@ -127,9 +126,10 @@
     char *ename;		/* name of corresponding environment var */
     Param old;			/* old struct for use with local         */
     int level;			/* if (old != NULL), level of localness  */
-}
+} initparam;
 #endif
-special_params[] ={
+
+static initparam special_params[] ={
 #define SFN(X) BR(((void (*)_((Param, char *)))(X)))
 #define GFN(X) BR(((char *(*)_((Param)))(X)))
 #define IPDEF1(A,B,C,D) {NULL,A,PM_INTEGER|PM_SPECIAL|D,BR(NULL),SFN(C),GFN(B),stdunsetfn,10,NULL,NULL,NULL,0}
@@ -248,6 +248,15 @@
 
 {NULL, NULL}
 };
+
+/*
+ * Special way of referring to the positional parameters.  Unlike $*
+ * and $@, this is not readonly.  This parameter is not directly
+ * visible in user space.
+ */
+initparam argvparam_pm = IPDEF9F("", &pparams, NULL, \
+				 PM_ARRAY|PM_SPECIAL|PM_DONTIMPORT);
+
 #undef BR
 
 #define IS_UNSET_VALUE(V) \
@@ -502,7 +511,7 @@
 	while ((++ip)->nam)
 	    paramtab->addnode(paramtab, ztrdup(ip->nam), ip);
 
-    argvparam = (Param) paramtab->getnode(paramtab, "*");
+    argvparam = (Param) &argvparam_pm;
 
     noerrs = 2;
 
-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR Ltd., Unit 300, Science Park, Milton Road,
Cambridge, CB4 0XL, UK                          Tel: +44 (0)1223 392070


**********************************************************************
The information transmitted is intended only for the person or
entity to which it is addressed and may contain confidential 
and/or privileged material. 
Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by 
persons or entities other than the intended recipient is 
prohibited.  
If you received this in error, please contact the sender and 
delete the material from any computer.
**********************************************************************

