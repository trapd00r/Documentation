From zsh-workers-return-25755-mason-zsh=primenet.com.au@sunsite.dk Fri Sep 26 22:45:33 2008
Return-Path: <zsh-workers-return-25755-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 280 invoked from network); 26 Sep 2008 22:45:30 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.9 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 26 Sep 2008 22:45:30 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 97800 invoked from network); 26 Sep 2008 22:45:13 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 26 Sep 2008 22:45:13 -0000
Received: (qmail 14818 invoked by alias); 26 Sep 2008 22:44:59 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 25755
Received: (qmail 14800 invoked from network); 26 Sep 2008 22:44:59 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 26 Sep 2008 22:44:59 -0000
Received: from uucp.gnuu.de (banki.eumelnet.de [83.246.114.63])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 63EA580308B9
	for <zsh-workers@sunsite.dk>; Sat, 27 Sep 2008 00:44:54 +0200 (CEST)
Received: by uucp.gnuu.de (Postfix, from userid 10)
	id C80A9488036; Sat, 27 Sep 2008 00:44:52 +0200 (CEST)
X-DKIM: Sendmail DKIM Filter v2.5.2 uucp.gnuu.de C80A9488036
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=gnuu.de; s=banki;
	t=1222469092; i=@alea.gnuu.de; bh=wZvZC48lHWqUm/g1f6B5HzsKNvOBc09Yl
	xlx3bBG9uQ=; h=To:From:Subject:Date:Message-ID:Mime-Version:
	 Content-Type:Content-Transfer-Encoding:Sender; b=IbuNsIsuThRa+ccNJ
	JLWaJXJkRLhh0yySgxmfxBdzENCEkywYOUAzQtPiE3758pU1TmDeo0tGSCEZeoByDnb
	fG1tS/1k3v7Ok4BuT82z7RAJ/Em+/jfgrJ3h7e1ZH53fXZAlTmX39/jB6z49uh3FQVx
	YWqe/ElJ7ebHMVymSux0=
Received: from news by alea.gnuu.de with local (Exim 4.63)
	(envelope-from <news@alea.gnuu.de>)
	id 1KjLuA-0003TM-TE
	for zsh-workers@sunsite.dk; Sat, 27 Sep 2008 00:35:19 +0200
To: zsh-workers@sunsite.dk
Path: not-for-mail
From: =?UTF-8?Q?J=C3=B6rg?= Sommer <joerg@alea.gnuu.de>
Newsgroups: local.mailinglist.zsh
Subject: Next improve of completion of modprobe module parameters
Date: Fri, 26 Sep 2008 22:35:18 +0000 (UTC)
Lines: 94
Message-ID: <slrngdqot6.mvh.joerg@alea.gnuu.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-Trace: alea.gnuu.de 1222468518 12941 192.168.0.5 (26 Sep 2008 22:35:18 GMT)
X-Complaints-To: usenet@alea.gnuu.de
User-Agent: slrn/0.9.9 (Linux)
Sender: news <news@alea.gnuu.de>
X-Virus-Scanned: ClamAV 0.92.1/8344/Fri Sep 26 17:34:14 2008 on bifrost
X-Virus-Status: Clean

Hi,

maybe, someone has a better idea how to remove the elements of
loaded_modules from modules in the second patch. Or can someone explain
this:

% a=12\|4
% b=( {10..15} )
% echo ${b:#($a)}
10 11 12 13 14 15
% eval "echo \${b:#($a)}"
10 11 13 14 15

Why doesn't the non‐eval version work?

commit 1afe1e700c8a205790fcd57cf50abae8fa176d15
Author: Jörg Sommer <joerg@alea.gnuu.de>
Date:   Fri Sep 26 20:55:02 2008 +0200

    Restrict names of modules files to *.ko

diff --git a/Completion/Linux/Command/_modutils b/Completion/Linux/Command/_modutils
index f422fac..378c2d5 100644
--- a/Completion/Linux/Command/_modutils
+++ b/Completion/Linux/Command/_modutils
@@ -78,7 +78,7 @@ case "$state" in
     modules=( ${${${${(f)"$(_call_program modules ${(M)words[1]##*/}modprobe -l 2>/dev/null)"}:#}##*/}%%.*} )
     _tags files modules
     while _tags; do
-      _requested files expl "module file"  _files && ret=0
+      _requested files expl "module file"  _files -g '*.ko' && ret=0
       _requested modules expl module compadd -a modules && ret=0
     done
   ;;

commit a9e52391259d3daf77b0fb74e9eb9bbd09e4ed1a
Author: Jörg Sommer <joerg@alea.gnuu.de>
Date:   Fri Sep 26 20:56:43 2008 +0200

    Print only non‐loaded modules as modprobe completion

diff --git a/Completion/Linux/Command/_modutils b/Completion/Linux/Command/_modutils
index 378c2d5..7c6c666 100644
--- a/Completion/Linux/Command/_modutils
+++ b/Completion/Linux/Command/_modutils
@@ -38,7 +38,7 @@ case "$service" in
       '(-C --config)'{-C,--config}'[specify config file]:config file:_files' \
       "(-r --remove -l --list -t --type -a --all $ign)"{-r,--remove}'[remove module (stacks)]' \
       "(* -l --list -r --remove $ign)"{-l,--list}'[list matching modules]' \
-      "(-c $ign)1:modules:->all_modules" \
+      "(-c $ign)1:modules:->loadable_modules" \
       "(-c -l --list -t --type $ign)*:params:->params" && ret=0
       
       [[ -n $state ]] && (( $+opt_args[-r] )) && state=loaded_modules        
@@ -62,20 +62,28 @@ case "$service" in
 esac 
 
 case "$state" in
-  loaded_modules)
+  loaded_modules|loadable_modules)
     if [[ -r /proc/modules ]]; then
-     modules=(${${(f)"$(</proc/modules)"}%% *})
+     loaded_modules=(${${(f)"$(</proc/modules)"}%% *})
     elif [[ -x /sbin/lsmod ]]; then
-     modules=(${${(f)"$(/sbin/lsmod)"}[2,-1]%% *})
+     loaded_modules=(${${(f)"$(/sbin/lsmod)"}[2,-1]%% *})
     else
      return 1
     fi
-    
-    _wanted modules expl 'loaded module' compadd -a modules && return
-  ;;
+
+    if [[ $state = loaded_modules ]]; then
+        _wanted modules expl 'loaded module' compadd -a loaded_modules && return
+        return ret
+    fi
+  ;&
 
   all_modules)
     modules=( ${${${${(f)"$(_call_program modules ${(M)words[1]##*/}modprobe -l 2>/dev/null)"}:#}##*/}%%.*} )
+
+    if [[ $state = loadable_modules ]]; then
+        eval "modules=( \${modules:#(${(j:|:)${=loaded_modules//_/-}})} )"
+    fi
+
     _tags files modules
     while _tags; do
       _requested files expl "module file"  _files -g '*.ko' && ret=0

Bye, Jörg
-- 
"The future is here. It's just not widely distributed yet."
                                       (William Gibson)

