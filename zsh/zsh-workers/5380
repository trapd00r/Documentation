From zsh-workers-return-5380-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Feb 15 09:33:06 1999
Return-Path: <zsh-workers-return-5380-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16642 invoked from network); 15 Feb 1999 09:33:05 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 15 Feb 1999 09:33:05 -0000
Received: (qmail 28554 invoked by alias); 15 Feb 1999 09:32:43 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 5380
Received: (qmail 28530 invoked from network); 15 Feb 1999 09:32:41 -0000
Date: Mon, 15 Feb 1999 10:31:55 +0100 (MET)
Message-Id: <199902150931.KAA23823@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: "Bart Schaefer"'s message of Sat, 13 Feb 1999 16:50:25 -0800
Subject: Re:  Misc. questions/remarks on new completion stuff


Bart Schaefer wrote:

> I think "complist" could do with a better name.  I've repeatedly been deluded
> into thinking that it's only used when generating completion listings, when
> really it adds possible matches that can be inserted on the command line.

Right, any suggestions, anyone? (Hm, `compgen' looks ugly.)


> Speaking of complist, what's the difference between
> 	compadd -m foo bar baz boing
> and
> 	complist -k '(foo bar baz boing)'
> ??  How much other overlap is there between these two commands?

Not much more. `compadd -m $...' is `complist -s '$...''. The overlap
was only caused by adding the `-m' option to `compadd' which I added
for the cases where one wants more control over the other strings and
flags stored with the matches and doesn't want to do the matching by
hand.

> In Functions/Completion/*, I think "#array" is a bad name for that tag.  The
> "#function" tag means the function will actually generate matches, that is,
> call compadd or complist.  But a "#array" file doesn't generate an array of
> matches -- it generates an array of arguments to complist.  Why not use the
> tag "#complist" or "#complist-args" so it's more obvious what's going on?

I choose `#array' only to quickly finish the examples so that we can
play with them and didn't like it at the time, too. Although the
`#array' files have to set up an array (with the name of the file).

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

