From zsh-users-return-13123-mason-zsh=primenet.com.au@sunsite.dk Mon Aug 11 02:12:51 2008
Return-Path: <zsh-users-return-13123-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 15177 invoked from network); 11 Aug 2008 02:12:39 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 11 Aug 2008 02:12:39 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 21740 invoked from network); 11 Aug 2008 02:11:27 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 11 Aug 2008 02:11:27 -0000
Received: (qmail 28737 invoked by alias); 11 Aug 2008 02:10:25 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13123
Received: (qmail 28702 invoked from network); 11 Aug 2008 02:10:19 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 11 Aug 2008 02:10:19 -0000
Received: from asmtpout015.mac.com (asmtpout015.mac.com [17.148.16.90])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 93070809A180
	for <zsh-users@sunsite.dk>; Mon, 11 Aug 2008 04:10:12 +0200 (CEST)
MIME-version: 1.0
Content-transfer-encoding: 7BIT
Content-type: text/plain; charset=US-ASCII; format=flowed; delsp=yes
Received: from macmini.hfriedman.rdsl.lmi.net ([66.117.137.114])
 by asmtp015.mac.com
 (Sun Java(tm) System Messaging Server 6.3-6.03 (built Mar 14 2008; 32bit))
 with ESMTPA id <0K5E00J5BZCVPA90@asmtp015.mac.com> for zsh-users@sunsite.dk;
 Sun, 10 Aug 2008 19:10:09 -0700 (PDT)
Cc: Zsh Users <zsh-users@sunsite.dk>
Message-id: <16FB966D-1296-41AB-963B-B39BAF801426@mac.com>
From: "Eric D. Friedman" <eric_friedman@mac.com>
To: Phil Pennock <zsh-workers+phil.pennock@spodhuis.org>
In-reply-to: <20080810130323.GA75798@redoubt.spodhuis.org>
Subject: Re: Multi-Minute Startup?
Date: Sun, 10 Aug 2008 19:10:06 -0700
References: <c4e763ac0808062357g44f7b75amf30db12fc1535409@mail.gmail.com>
 <alpine.LNX.1.10.0808070254580.26055@elation.Princeton.EDU>
 <c4e763ac0808070020r595f3b64u38eeefbc37bc85b6@mail.gmail.com>
 <alpine.LNX.1.10.0808070327310.26055@elation.Princeton.EDU>
 <c4e763ac0808070152k2846913dn4b637fe9ea275ef2@mail.gmail.com>
 <alpine.LNX.1.10.0808070509320.26055@elation.Princeton.EDU>
 <19AAE650-59D0-4C1D-A26B-A7761B4C05BC@mac.com>
 <20080810130323.GA75798@redoubt.spodhuis.org>
X-Mailer: Apple Mail (2.928.1)
X-Virus-Scanned: ClamAV 0.92.1/8003/Mon Aug 11 01:05:21 2008 on bifrost
X-Virus-Status: Clean

Many, many thanks for sharing this -- you've saved me countless hours  
of (probably failing at) figuring this out.  I especially appreciated  
the "fishing lesson" that came with the fish, i.e. the TRACE_ZSH_* tips.

I do wish zsh would make it a little less cumbersome for all of us  
though -- you and I can't be the only people with these environmental  
issues.

Eric


On Aug 10, 2008, at 6:03 AM, Phil Pennock wrote:

> On 2008-08-08 at 11:16 -0700, Eric D. Friedman wrote:
>> I was the original poster with that long completion pause and none of
>> the suggested solutions actually worked out.  Following the advice in
>> this thread, I ran a shell with -l -x on and captured the relavant
>> bits.
>
> Working in an NFS/LDAP/Kerberos environment with a largish number of
> users (>10k), I periodically have to debug "what's gone wrong now?".
>
> In ~/.zshenv I set:
> ----------------------------8< cut here  
> >8------------------------------
> [[ -n $TRACE_ZSH_TIME ]] && PS4='+[%D{%M:%S}]%N:%i> '
> if [[ -n $TRACE_ZSH ]]; then
>        [[ -n "$TRACE_ZSH_FILE" ]] && exec 2> "${TRACE_ZSH_FILE}"
>        setopt xtrace
> fi
> ----------------------------8< cut here  
> >8------------------------------
>
> % TRACE_ZSH_TIME=t TRACE_ZSH=t TRACE_ZSH_FILE=$HOME/ztrace.out zsh
>
> This is often informative.
>
>>       The big pause occurs at the last line in the following.  Any
>> ideas as to what else I could try? My goal is to not have the
>> completion system show me every user in my company's home dir when I
>> do the first cd<TAB>; I'd never use that completion and it takes far
>> too long to get it anyway.
> [...]
>> +_all_labels:39> compadd -F _comp_ignore -J -default- -qS/ -k  
>> userdirs
>
> Various things I tried were never sufficient, as userdirs would always
> get populated somehow.  Until I cheated.
>
> The short version: ensure that 'userdirs' is a local variable inside  
> the
> completion system, populated with the values you want.  I do this by
> adding to $_comp_setup -- making sure that none of the rest of the
> things that hit LDAP cause slow-downs have led to what I have below.
>
> I keep the users I want to tab-complete in a file, ~/.userdirs and  
> then
> hack things so that only that is used.  My code uses  
> zfilter_comments()
> which is a function I frequently use to pull in files for data and  
> skip
> comments, etc.  Comments in files are handy, reading those files
> efficiently in zsh also handy.
>
> The main things are to avoid the automatic population of userdirs when
> it's empty and to ensure that things like ssh, scp, etc don't hit LDAP
> either.  I have ~/.sshusers contain things like my own usercode,  
> "root"
> and various production accounts.  ~/.sshhosts contains hostnames.
>
> Note that I have "users whose home-directories I care about" and  
> "users
> I ssh to the accounts of" and these are very different; the former
> includes colleagues and the latter includes role accounts.  Because of
> this split, we have the loop setting completion of users to $sshusers
> for only some commands.  Hrm, wonder why 'users' is used, not
> 'accounts'?
>
> Note that using "zstyle -e" and "reply=($array)" lets me modify the
> array at run-time and have it immediately affect completion.
>
> "is-at-least" is one of the Misc/ functions provided, I autoload it
> before this point.
>
> I make sure that I split up the completion dumps by host since  
> different
> hosts have different versions of zsh, etc etc, so I don't want that
> continually getting trashed within NFS.
>
> Here's hoping that I'm not missing anything relevant when looking over
> my config now.  Believe it or not, this is simplified.
>
> ----------------------------8< cut here  
> >8------------------------------
> function zfilter_comments {
>        local f infile="$1"
>        while read f; do
>                [[ -n ${f%%[$' \t']*\#*} && ${f#[#;]} == $f ]] ||  
> continue
>                print -r -- ${f%%[$' \t']*\#*}
>        done < "$infile"
> }
>
> typeset -a sshhosts sshusers
> [[ -f ~/.sshhosts ]] && sshhosts=( $(zfilter_comments ~/.sshhosts) )
> [[ -f ~/.sshusers ]] && sshusers=( $(zfilter_comments ~/.sshusers) )
>
> local c
> for c in ssh rsync sftp scp slogin
> do
>        [[ ${#sshhosts} -gt 0 ]] && \
>          zstyle -e ':completion:*:'"$c"':*' hosts 'reply=($sshhosts)'
>        [[ ${#sshusers} -gt 0 ]] && \
>          zstyle -e ':completion:*:'"$c"':*' users 'reply=($sshusers)'
> done
> unset c
>
> zstyle -e ':completion:*' my-accounts 'reply=($sshusers)'
> zstyle ':completion:*' other-accounts ''
> zstyle -e ':completion:*' accounts 'reply=($sshusers)'
>
> function reset_userdirs {
> # There is a zsh internal map, userdirs, exposed by zsh/parameter;
> # it's read-only though.
> 	[[ -f ~/.userdirs ]] || return
> 	local _u
> 	local -a _ud
> 	_ud=( $(zfilter_comments ~/.userdirs) )
> 	for _u in $_ud; do hash -d $_u="/home/$_u"; done
> }
>
> if is-at-least 4.2.0; then autoload -Uz compinit ; else autoload -U  
> compinit ; fi
> [[ -d "${ZDOTDIR:-$HOME}/.zcompdumps" ]] || mkdir -m 0700 -p "$ 
> {ZDOTDIR:-$HOME}/.zcompdumps"
> compinit -u -d "${ZDOTDIR:-$HOME}/.zcompdumps/${HOST%%.*}"
>
> # Hack to turn off userdirs completion by overriding userdirs.
> # This overrides userdirs as a local variable inside the completion
> # system, not touching the global variable.  We don't need to load
> # zsh/parameter to achieve this.
> _comp_setup+=$'\ntypeset -a userdirs\nreset_userdirs'
> reset_userdirs
> ----------------------------8< cut here  
> >8------------------------------
>
> -Phil

