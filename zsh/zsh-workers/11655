From zsh-workers-return-11655-mason-zsh=primenet.com.au@sunsite.auc.dk Tue May 30 11:08:05 2000
Return-Path: <zsh-workers-return-11655-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 5196 invoked from network); 30 May 2000 11:08:03 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 30 May 2000 11:08:03 -0000
Received: (qmail 2356 invoked by alias); 30 May 2000 11:07:40 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 11655
Received: (qmail 2348 invoked from network); 30 May 2000 11:07:39 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer goliath.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: "Sven Wischnowsky" <wischnow@informatik.hu-berlin.de>,
   <zsh-workers@sunsite.auc.dk>
Subject: RE: More make check failure
Date: Tue, 30 May 2000 15:07:14 +0400
Message-ID: <000101bfca27$35ad7a40$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="koi8-r"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
In-Reply-To: <200005301036.MAA20699@beta.informatik.hu-berlin.de>
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6700

> How do you have configured the shell? With zsh's allocator? Secure
> free? Memory debugging? Other debugging options?
>

bor@itsrm2% cat =zshconf
#!/tools/bin/zsh
LIBS=-lg

/tools/src/zsh/configure --prefix=/tools --enable-zsh-debug --enable-fun
ction-subdirs

Large integers and LFS are enabled and supported.

> And do you always get that failure?

Two times already at least.

Do you get it with:
>
>   compdef foo foo
>   foo() {
>     compadd -M 'm:{a-zA-Z}={A-Za-z}
>                 r:|[.,_-]=* r:[^A-Z0-9]||[A-Z0-9]=*
>                 r:[A-Z0-9]||[^A-Z0-9]=*
>                 r:[^0-9]||[0-9]=* r:|=*' \
>         build.out build.out1 build.out2
>   }
>
> and trying `foo bui<TAB><TAB><TAB>'? It should do the same as the
> test, I'm just getting paranoid.
>

I am not sure, what should I get:

bor@itsrm2% zsh -f
itsrm2% autoload compinit; compinit -D
itsrm2% {
cursh>   compdef foo foo
cursh>   foo() {
cursh function>     compadd -M 'm:{a-zA-Z}={A-Za-z}
cursh function quote>                 r:|[.,_-]=*
r:[^A-Z0-9]||[A-Z0-9]=*
cursh function quote>                 r:[A-Z0-9]||[^A-Z0-9]=*
cursh function quote>                 r:[^0-9]||[0-9]=* r:|=*' \
cursh function>         build.out build.out1 build.out2
cursh function>   }
cursh> }
itsrm2% foo build.out<CURSOR HERE>
build.out    build.out1   build.out2


-andrej

