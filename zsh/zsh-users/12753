From zsh-users-return-12753-mason-zsh=primenet.com.au@sunsite.dk Wed Apr 02 16:42:06 2008
Return-Path: <zsh-users-return-12753-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 18440 invoked from network); 2 Apr 2008 16:42:03 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 2 Apr 2008 16:42:03 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 50412 invoked from network); 2 Apr 2008 16:41:47 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 2 Apr 2008 16:41:47 -0000
Received: (qmail 17843 invoked by alias); 2 Apr 2008 16:41:36 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12753
Received: (qmail 17826 invoked from network); 2 Apr 2008 16:41:35 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 2 Apr 2008 16:41:35 -0000
Received: from vms173001pub.verizon.net (vms173001pub.verizon.net [206.46.173.1])
	by bifrost.dotsrc.org (Postfix) with ESMTP id BF9CD82DC37D
	for <zsh-users@sunsite.dk>; Wed,  2 Apr 2008 18:41:27 +0200 (CEST)
Received: from torch.brasslantern.com ([71.116.79.77])
 by vms173001.mailsrvcs.net
 (Sun Java System Messaging Server 6.2-6.01 (built Apr  3 2006))
 with ESMTPA id <0JYP00FDUICJM7B0@vms173001.mailsrvcs.net> for
 zsh-users@sunsite.dk; Wed, 02 Apr 2008 11:41:08 -0500 (CDT)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id m32Gf6XF000654	for
 <zsh-users@sunsite.dk>; Wed, 02 Apr 2008 09:41:07 -0700
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id m32Gf6lf000653	for zsh-users@sunsite.dk; Wed,
 02 Apr 2008 09:41:06 -0700
Date: Wed, 02 Apr 2008 09:41:06 -0700
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: 'i' subscript flag
In-reply-to: <20080402153742.GA13167@okita>
To: zsh-users ml <zsh-users@sunsite.dk>
Message-id: <080402094106.ZM652@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <20080402153742.GA13167@okita>
Comments: In reply to Anthony Charles <antho.charles@gmail.com>
 "'i' subscript flag" (Apr  2,  5:37pm)
X-Virus-Scanned: ClamAV 0.91.2/6557/Wed Apr  2 17:56:29 2008 on bifrost
X-Virus-Status: Clean

On Apr 2,  5:37pm, Anthony Charles wrote:
}
} man zshparam says: 
} "i   Like `r', but gives the index of the match instead; this may not
} be combined with a second argument."
} 
} I just wonder why this can't be combined with another flag which would
} be useful in this case for example:
} 
} Saito% X="bar foo paz"
} Saito% print $X[(i)p*]
} 9
} Saito% print $X[(wi)p*]
} 9
} 
} but one may expect to get '3'. Is this a design choice?

In some sense, yes.  It has to do with the way that the internals of
parameter expansion were originally implemented (long before any kind
of reverse-subscripting was possible) and what it was reasonable to
layer on top of that.

Since you can always do e.g.

    % print ${${=X}[(i)p*]}
    3

it's not that significant a restriction.

