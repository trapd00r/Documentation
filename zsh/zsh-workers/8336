From zsh-workers-return-8336-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Oct 20 06:44:32 1999
Return-Path: <zsh-workers-return-8336-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20037 invoked from network); 20 Oct 1999 06:44:30 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 20 Oct 1999 06:44:30 -0000
Received: (qmail 2835 invoked by alias); 20 Oct 1999 06:36:21 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 8336
Received: (qmail 2790 invoked from network); 20 Oct 1999 06:36:18 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <991020063212.ZM7398@candle.brasslantern.com>
Date: Wed, 20 Oct 1999 06:32:12 +0000
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-workers@sunsite.auc.dk
Subject: Obscure issues with "zle complete-word ..."
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

At the top of _history_complete_word is the following test:

  if [[ $WIDGET = *newer ]]; then
    direction=older
  else
    direction=newer
  fi

However, the value of $WIDGET matches neither *newer nor *older when the
function is called via

  zle complete-word _history_complete_word

As it is, for example, when placed in compconfig[incremental_completer]
for use by incremental-complete-word.

I've just erased and retyped this next paragraph four times, so I guess
I really don't know what I expect to be done about this.  I suppose the
only way is to create two functions as well as two widgets.

This caused me to notice something else; the documentation for the "zle"
command says:

    WIDGET [ -n NUM ] [ -N ] ARGS ...
          Invoke the specified widget.  This can only be done when ZLE
          is active; normally this will be within a user-defined widget.

           [...]

          Any further arguments will be passed to the widget.  If it is
          a shell function, these are passed down as positional
          parameters; for builtin widgets it is up to the widget in
          question what it does with them.  Currently arguments are
          only handled by the incremental-search commands, the
          history-search-forward and -backward and the correspeonding
          functions prefixed by vi-, and by universal-argument.

Clearly complete-word (and other builtin completion widgets?) also will
accept arguments.  Are there other widgets that aren't mentioned?  Is it
time to start documenting the arguments in the subsctions on "Standard
Widgets"?

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

