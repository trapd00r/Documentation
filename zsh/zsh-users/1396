From zsh-workers-request@math.gatech.edu Wed Mar 18 18:07:37 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 4256 invoked from network); 18 Mar 1998 18:07:36 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 18 Mar 1998 18:07:36 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.8.5/8.8.5) id MAA04768;
	Wed, 18 Mar 1998 12:52:36 -0500 (EST)
Resent-Date: Wed, 18 Mar 1998 12:51:56 -0500 (EST)
From: "Bart Schaefer" <schaefer@brasslantern.com>
Message-Id: <980318095103.ZM3680@candle.brasslantern.com>
Date: Wed, 18 Mar 1998 09:51:03 -0800
In-Reply-To: <199803180803.AAA00183@tammananny.tiger>
Comments: In reply to Quinn Dunkan <quinn@envy.ugcs.caltech.edu>
        "ideas" (Mar 18, 12:03am)
References: <199803180803.AAA00183@tammananny.tiger>
X-Mailer: Z-Mail (4.0b.820 20aug96)
To: zsh-users@math.gatech.edu
Subject: Re: ideas
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-Message-ID: <"FAPqy2.0.181.xc04r"@math>
Resent-From: zsh-users@math.gatech.edu
X-Mailing-List: <zsh-users@math.gatech.edu> archive/latest/1396
X-Loop: zsh-users@math.gatech.edu
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

On Mar 18, 12:03am, Quinn Dunkan wrote:
} Subject: ideas
}
} ${...#...} and ${...%...} chop things off the begginning or ends
} of variables, and I've wondered why there isn't something like
} ${i:s/foo/bar} to replace foo in $i with bar. With ${(S)...%...}
} one can chop things out of the center of a variable, but what if
} you want to replace it with soething else?

In addition to ${var}(:s/foo/bar/) [which BTW in 3.0.5 requires the
trailing / to work correctly, a bug] there's always

	${var%foo*}bar${var#*foo}

Or even

	r=(${(BE)=var%foo*})
	l=(${(BE)=var#*foo})
	${var[$l[1],$r[1]-1]}bar${$var[$l[2],$r[2]-1]}

In which case the removed portion is

	${var[$r[1],$l[2]-1]}

} Actually, it would be even better if you could put in a regexp.

How often is a glob pattern not sufficient?  With extendedglob, you
can write almost any regexp as a glob.  The big thing you lose is the
ability to substitute the matches for sub-patterns of the regexp into
the replacement.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

