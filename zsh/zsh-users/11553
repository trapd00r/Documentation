From zsh-users-return-11553-mason-zsh=primenet.com.au@sunsite.dk Tue Jun 12 17:33:31 2007
Return-Path: <zsh-users-return-11553-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 12991 invoked from network); 12 Jun 2007 17:33:29 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.0 (2007-05-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=no
	version=3.2.0
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 12 Jun 2007 17:33:29 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 99145 invoked from network); 12 Jun 2007 17:33:22 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 12 Jun 2007 17:33:22 -0000
Received: (qmail 8903 invoked by alias); 12 Jun 2007 17:33:13 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 11553
Received: (qmail 8892 invoked from network); 12 Jun 2007 17:33:12 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 12 Jun 2007 17:33:12 -0000
Received: (qmail 97929 invoked from network); 12 Jun 2007 17:33:12 -0000
Received: from unknown (HELO father.lugmen.org.ar) (200.110.134.3)
  by a.mx.sunsite.dk with SMTP; 12 Jun 2007 17:33:07 -0000
Received: from refinery.twat.com.ar (unknown [190.48.38.60])
	(using TLSv1 with cipher ADH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	(Authenticated sender: redondos)
	by father.lugmen.org.ar (Postfix) with ESMTP id 3E213B7697
	for <zsh-users@sunsite.dk>; Tue, 12 Jun 2007 14:31:30 -0300 (ART)
Received: by refinery.twat.com.ar (Postfix, from userid 122)
	id 216D97F51B; Tue, 12 Jun 2007 14:32:50 -0300 (ART)
Received: from refinery.twat.com.ar (127.0.0.1 [127.0.0.1])
    by refinery.twat.com.ar with SMTP;
    for zsh-users@sunsite.dk;
    Tue, 12 Jun 2007 14:32:50 -0300 (ART)
    (envelope-from redondos@twat.com.ar)
Date: Tue, 12 Jun 2007 14:32:49 -0300
From: Angel Olivera <redondos@twat.com.ar>
To: zsh-users@sunsite.dk
Subject: Re: Calling a zle widget from a function
Message-ID: <20070612173249.GO14435@refinery.twat.com.ar>
Mail-Followup-To: zsh-users@sunsite.dk
References: <20070612144404.GN14435@refinery.twat.com.ar> <200706121514.l5CFEaH5029180@news01.csr.com>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha1;
	protocol="application/pgp-signature"; boundary="oyqLL/JqMvClXZi1"
Content-Disposition: inline
In-Reply-To: <200706121514.l5CFEaH5029180@news01.csr.com>
X-Accept-Language: en, es, es_AR
X-GPG-ID: 0xDB98F72
X-GPG-Fingerprint: A182 F6EC 302B 8491 A563 9B28 259F F209 CDB9 8F72
X-Homepage: http://www.redondos.biz
X-Blog: http://blog.twat.com.ar
X-Jabber-ID: redondos@lugmen.org.ar
X-MSN-ID: redondos@redondos.biz
X-AIM-ID: redondossh
X-UIN: 11943866
X-YIM-ID: redondossh
User-Agent: Mutt/1.5.14 (2007-02-12)


--oyqLL/JqMvClXZi1
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Tue 12.Jun.07 16:14, Peter Stephenson wrote:
>If you have version 4.3.4 the sched mechanism will call functions
>asynchronously within zle, if that's running.  So something like
>
>  clear-zle-screen() {
>    zle && zle clear-screen
>    sched +60 clear-zle-screen
>  }
>  sched +60 clear-zle-screen
>
>does the basics.  However, it will attempt to clear the screen *every*
>60 seconds, not just after 60 seconds of idleness.  One possible way
>around that is to look at the modification time for the terminal and compa=
re
>it with the current time:
>
>  clear-zle-screen() {
>    zmodload -i zsh/stat
>    zmodload -i zsh/datetime
>    local -a mtime
>    integer diff
>
>    stat -A mtime +mtime $TTY
>    (( diff =3D EPOCHSECONDS - ${mtime} ))
>    if (( diff > 60 )); then
>      zle && zle clear-screen
>      sched +60 clear-zle-screen
>    else
>      sched +$(( 60 - diff )) clear-zle-screen
>    fi
>  }

Amazing, thanks a lot, Peter!

Here's the (maybe) final setup:

## $fpath[1]/clear-zle-screen
zmodload -i zsh/stat
zmodload -i zsh/datetime

clear-zle-screen() {
    local -a mtime
    integer diff

    stat -A mtime +mtime $TTY
    (( diff =3D EPOCHSECONDS - ${mtime} ))
    if (( diff >=3D CLRTMOUT )); then
	zle && zle clear-screen
    # function called from precmd(), to avoid multiple clearouts
    #    sched +$CLRTMOUT clear-zle-screen
    else
	sched +$(( CLRTMOUT - diff )) clear-zle-screen
    fi
}

functions[precmd]+=3D"; sched +$CLRTMOUT clear-zle-screen"
clear-zle-screen

## zshrc
## Clear the screen after CLRTMOUT seconds of inactivity
if [[ $ZSH_VERSION =3D=3D 4.3.<4-> ]]; then
    CLRTMOUT=3D3600
    autoload clear-zle-screen
    clear-zle-screen
fi

Now, for every prompt that is printed I get a new sched job queued. This mi=
ght=20
get as big as 3600 or more. Do you think that is going to be a serious=20
performance penalty on my daily zsh routine?

Cheers; and, again, thank you.

--=20
redondos

--oyqLL/JqMvClXZi1
Content-Type: application/pgp-signature
Content-Disposition: inline

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.4 (GNU/Linux)

iD8DBQFGbtjBJZ/yCc25j3IRAnvxAKCL5woWB7fHZ87KHrKsJrvON2x90gCePbvf
HmDzqsZtnKovcY+t5EjW27o=
=np3X
-----END PGP SIGNATURE-----

--oyqLL/JqMvClXZi1--

