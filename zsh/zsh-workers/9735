From zsh-workers-return-9735-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Feb 15 09:44:05 2000
Return-Path: <zsh-workers-return-9735-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 17476 invoked from network); 15 Feb 2000 09:44:04 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 15 Feb 2000 09:44:04 -0000
Received: (qmail 14595 invoked by alias); 15 Feb 2000 09:43:57 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 9735
Received: (qmail 14586 invoked from network); 15 Feb 2000 09:43:57 -0000
Date: Tue, 15 Feb 2000 10:43:56 +0100 (MET)
Message-Id: <200002150943.KAA11806@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: Peter Stephenson's message of Mon, 14 Feb 2000 19:10:49 +0000
Subject: Re: 3.1.6-dev-18


Peter Stephenson wrote:

> ...
>
> It took me a while to work out what you were saying, but I think it's that
> while `blah1 blah2' used to be tried one after another when they were
> elements of $compmatchers, they get tried all at once if they are elements
> of the matcher style in the form I gave it.  If that's correct, I doubt if
> that's a major issue for most users --- I suspect that most people who used
> more than one element of $compmatchers just had different things in them,
> as I did.

Hopefully, giving the same string more than once wouldn't make sense.

> Still, how much do you gain by being able to put them in matcher-1 and
> matcher-2?  Is that more powerful than just using array elements of the
> style in order, rather than simply more cumbersome?  The only examples I
> can think of where you gain something are where _matcher is followed the
> second time by _prefix instead of _complete (or vice versa), or where some
> other element of the context is different between the matcher-1 and
> matcher-2 cases.  These seem to me to be to abstruse to be useful.  But I
> may well have missed something.

I can only repeat... I would have no problems with turning the matcher 
style as used by _matcher (or even renaming it for clarity) into one
that is used as an array. The first _matcher would then use the first
string in the value, the second one the second string and so on. I
just thought -- and I may very well be wrong here -- that it would
make users more aware of what they are doing if we use this more
explicit setting we have now. I.e., even with the suggested
array-interpretation of the matcher style one would have to add a new
call to _matcher in the completer list when adding a new string to the 
matcher style.

Hm. If anyone now says: change it, I will (renaming the style so that
it doesn't look like the matcher style used for tags -- which is
looked up as a string).

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

