From zsh-workers-return-20272-mason-zsh=primenet.com.au@sunsite.dk Wed Aug 18 22:48:05 2004
Return-Path: <zsh-workers-return-20272-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 13512 invoked from network); 18 Aug 2004 22:48:04 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 18 Aug 2004 22:48:04 -0000
Received: (qmail 31317 invoked from network); 18 Aug 2004 22:47:58 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 18 Aug 2004 22:47:58 -0000
Received: (qmail 11485 invoked by alias); 18 Aug 2004 22:47:46 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 20272
Received: (qmail 11474 invoked from network); 18 Aug 2004 22:47:46 -0000
Received: from unknown (HELO a.mx.sunsite.dk) (130.225.247.88)
  by 130.225.247.90 with SMTP; 18 Aug 2004 22:47:46 -0000
Received: (qmail 30829 invoked from network); 18 Aug 2004 22:45:47 -0000
Received: from dsl3-63-249-88-2.cruzio.com (HELO binome.blorf.net) (63.249.88.2)
  by a.mx.sunsite.dk with SMTP; 18 Aug 2004 22:45:45 -0000
Received: by binome.blorf.net (Postfix, from userid 1000)
	id E89F3254D; Wed, 18 Aug 2004 15:45:43 -0700 (PDT)
Date: Wed, 18 Aug 2004 15:45:43 -0700
From: Wayne Davison <wayned@users.sourceforge.net>
To: zsh-workers@sunsite.dk
Subject: [PATCH] handle variables in make targets
Message-ID: <20040818224543.GA12511@blorf.net>
Mime-Version: 1.0
Content-Type: multipart/mixed; boundary="3V7upXqbjpZ4EhLz"
Content-Disposition: inline
User-Agent: Mutt/1.5.6+20040722i
X-Spam-Checker-Version: SpamAssassin 2.63 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, hits=-1.4 required=6.0 tests=BAYES_20 autolearn=no 
	version=2.63
X-Spam-Hits: -1.4


--3V7upXqbjpZ4EhLz
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline

Here's a patch that adds simple variable handling to the useperl side of
the _make completer.  For instance, I have some targets that look like
this:

rsync$(EXEEXT): $(OBJS)

With the current script, this puts the literal string "rsync$(EXEEXT)"
into the edit buffer, which is not good because EXEEXT isn't defined in
the environment (just in the Makefile).  This patch tries to handle both
delayed expansion (=) and immediate expansion (:=) syntax, but does not
deal with variable references that don't use () or {}.

Comments?

..wayne..

--3V7upXqbjpZ4EhLz
Content-Type: text/plain; charset=us-ascii
Content-Disposition: attachment; filename="make-var.patch"

--- _make	18 Aug 2004 20:30:27 -0000	1.7
+++ _make	18 Aug 2004 22:43:50 -0000
@@ -34,12 +34,19 @@ else
        tmp=( $(_call_program targets "$words[1]" -nsp --no-print-directory -f "$file" .PHONY 2> /dev/null | $cmdargs) )
     elif [[ -n $useperl ]]; then
       tmp=(
-      $(perl -ne '@matches = /^(?:([a-zA-Z0-9]+[^\/\t=\s]+)\s*)+:(?:[^=]|$)/  and
-	print join(" ", @matches), "\n";
-if (/^\.include\s+\<bsd\.port\.(subdir\.|pre\.)?mk>/ ||
+      $(perl -ne '
+if (($var, $colon, $val) = /^([a-zA-Z0-9]+[^\/\t:=\s]+)\s*(:)?=\s*(.*?)\s*$/) {
+    1 while ($colon && $val =~ s/\$[({]([^})]+)[})]/$ENV{$1}/);
+    $ENV{$var} = $val;
+} elsif (@matches = /^(?:([a-zA-Z0-9]+[^\/\t=\s]+)\s*)+:(?:[^=]|$)/) {
+    foreach (@matches) {
+        1 while (s/\$[({]([^})]+)[})]/$ENV{$1}/);
+        print $_, "\n";
+    }
+} elsif (/^\.include\s+\<bsd\.port\.(subdir\.|pre\.)?mk>/ ||
     /^\.include\s+\".*mk\/bsd\.pkg\.(subdir\.)?mk\"/) {
     print "fetch fetch-list extract patch configure build install reinstall deinstall package describe checkpatch checksum makesum\n";
-    }
+}
 ' $file)
 	)
     else

--3V7upXqbjpZ4EhLz--

