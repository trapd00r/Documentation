From zsh-workers-return-22623-mason-zsh=primenet.com.au@sunsite.dk Fri Aug 18 18:04:11 2006
Return-Path: <zsh-workers-return-22623-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16739 invoked from network); 18 Aug 2006 18:04:08 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.4 (2006-07-25) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00,
	FORGED_RCVD_HELO,UNPARSEABLE_RELAY autolearn=ham version=3.1.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 18 Aug 2006 18:04:08 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 44113 invoked from network); 18 Aug 2006 18:04:02 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 18 Aug 2006 18:04:02 -0000
Received: (qmail 14052 invoked by alias); 18 Aug 2006 18:03:59 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 22623
Received: (qmail 14043 invoked from network); 18 Aug 2006 18:03:58 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 18 Aug 2006 18:03:58 -0000
Received: (qmail 43857 invoked from network); 18 Aug 2006 18:03:58 -0000
Received: from vms046pub.verizon.net (206.46.252.46)
  by a.mx.sunsite.dk with SMTP; 18 Aug 2006 18:03:56 -0000
Received: from torch.brasslantern.com ([71.121.0.226])
 by vms046.mailsrvcs.net (Sun Java System Messaging Server 6.2-4.02 (built Sep
 9 2005)) with ESMTPA id <0J4700INDGUGAZY0@vms046.mailsrvcs.net> for
 zsh-workers@sunsite.dk; Fri, 18 Aug 2006 13:03:53 -0500 (CDT)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id k7II3p3s024332	for
 <zsh-workers@sunsite.dk>; Fri, 18 Aug 2006 11:03:52 -0700
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id k7II3pom024331	for zsh-workers@sunsite.dk; Fri,
 18 Aug 2006 11:03:51 -0700
Date: Fri, 18 Aug 2006 11:03:51 -0700
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: prompt color pbg ,pfg,pbg_bold,pfg_bold in colors function?
In-reply-to: <20060818102602.GA24702@finlandia.home.infodrom.org>
In-reply-to: <20060818130849.GD15840@fsst.voodoo.lan>
To: Zsh-Workers <zsh-workers@sunsite.dk>
Message-id: <060818110351.ZM24330@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <20060818102602.GA24702@finlandia.home.infodrom.org>
	<20060818130849.GD15840@fsst.voodoo.lan>
Comments: In reply to Matthias Kopfermann <matthi@infodrom.north.de>
 "prompt color pbg ,pfg,pbg_bold,pfg_bold in colors function?" (Aug 18, 12:26pm)
Comments: In reply to Frank Terbeck <frank.terbeck@rwth-aachen.de>
 "Re: prompt color pbg ,pfg,pbg_bold,pfg_bold in colors function?" (Aug 18,
 3:08pm)

On Aug 18, 12:26pm, Matthias Kopfermann wrote:
}
} For _prompts_ i have to surround every variable with %{ %} which
} does not , aehem, look too nice.

The colors function is meant to be entirely separable from prompts, so
it avoids reference to any prompt formatting strings.

} what do you think? would it be fine to have that with
} wrapped around %{ %} , too so that not everybody has to put
} these around the keys or roll a prompt_colors_array on his
} own?

Another reason I resisted this is that it leads to PS1 values that
contain lots more %{ %} pairs than are often necessary.  E.g., for a
two-line prompt, you can often put the entire first line in a single
pair of %{ ... %}.

On Aug 18,  3:08pm, Frank Terbeck wrote:
}
} I just think that the colors function would load quite a lot of
} redundant information, if these are added as well.

That, too.

} [snip]
} for i in ${(k)fg} ; do pfg[$i]="%{$fg[$i]%}" ; done
} [snap]
} 
} to your .zshrc, but I guess a loadable function would be easier for
} new users.

Perhaps a candidate for adding to the zsh-newuser-install function?

} Maybe it would be helpful to add this to the colors function:
} 
} [snip]
} blink_color="$lc${color[blink]}$rc"
} [snap]

Hrm.  That would imply we ought to have $fg_blink and $fg_no_blink as
associative arrays as well, etc. ... this doesn't scale.  What's really
needed is a function that takes a set of attributes and turns them on
or off, but then you have to use $(...) which is ugly.  Of course even
then you have to maintain your own idea of the screen state, because
what you send to the terminal is "set the attributes to this" not
"change the attributes in this additive/subtractive way".

This seems like something to revisit when we have discipline functions
attached to parameter expansions.

