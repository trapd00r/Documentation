From zsh-workers-return-7019-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Jul 07 16:04:17 1999
Return-Path: <zsh-workers-return-7019-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 15917 invoked from network); 7 Jul 1999 16:04:16 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 7 Jul 1999 16:04:16 -0000
Received: (qmail 4042 invoked by alias); 7 Jul 1999 16:04:08 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 7019
Received: (qmail 4035 invoked from network); 7 Jul 1999 16:04:07 -0000
Message-Id: <199907071603.MAA23249@ursula.cortexmachina.com>
To: zsh-workers@sunsite.auc.dk
Subject: Floating point math wish
Date: Wed, 07 Jul 1999 12:03:59 -0400
From: Peter Whaite <peta@cortexmachina.com>


I havent been following the list too closely so my apologies in advance if
this topic has already been raised.

A nice feature of later versions of ksh (the version that comes with
UWIN for example), is the floating point arithmetic evaluation.  For example

	% echo $(( 1. / 2 ))    # float math 
	0.5
	% echo $(( 1/2 ))	# fixed math when no floats
	0
	% echo $(( log(2) ))	# math functions avaliable
	0.69314718056

Wish zsh would do this.


