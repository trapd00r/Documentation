From zsh-workers-request@euclid.skiles.gatech.edu Tue Dec 24 03:35:05 1996
Return-Path: <zsh-workers-request@euclid.skiles.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 4471 invoked from network); 24 Dec 1996 03:35:03 -0000
Received: from unknown (HELO euclid.skiles.gatech.edu) (list@130.207.146.50)
  by coral.primenet.com.au with SMTP; 24 Dec 1996 03:35:03 -0000
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id WAA28958; Mon, 23 Dec 1996 22:36:09 -0500 (EST)
Resent-Date: Mon, 23 Dec 1996 22:36:09 -0500 (EST)
From: Zoltan Hidvegi <hzoli@cs.elte.hu>
Message-Id: <199612240301.EAA02653@hzoli.ppp.cs.elte.hu>
Subject: Re: linked-in modules
To: zefram@dcs.warwick.ac.uk (Zefram)
Date: Tue, 24 Dec 1996 04:01:42 +0100 (MET)
Cc: zefram@dcs.warwick.ac.uk, zsh-workers@math.gatech.edu
In-Reply-To: <4422.199612232007@stone.dcs.warwick.ac.uk> from Zefram at "Dec 23, 96 08:07:23 pm"
X-Mailer: ELM [version 2.4ME+ PL17 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"gJG--1.0.P47.e-qlo"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/2625
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Zefram write:
> Zoltan Hidvegi wrote:
> >This Makefile will soon become the most complicated part of zsh.
> 
> You mean it's not already?  (I have another patch planned which will

Well there are still some trickery in exec.c which I'd like to understand
better.  Unfortunately with my previous patch in my attempt to get parallel
make work I did too much and make always wants to rebuild everything.  The
patch below backs up a bit so that parallel make will not work again (but
make -j3 proto && make -j3 still works).

> make it even worse.)

Oh!

> >! MODULE_DIRS = Modules Zle
> >--- 154,160 ----
> >! MODULE_DIRS = $(MODULE_DIR) Zle
> 
> Why is Src/Modules identified as $(MODULE_DIR)?  We already have two
> module directories, and you have suggested a Src/Builtins directory, so
> Src/Modules is really not unique.

Just for consistency.  But you are right that it would be more consistent
to use Modules everywhere and remove MODULE_DIR completely.

Zoltan


*** Src/Makefile.in	1996/12/24 01:31:03	3.1.1.2
--- Src/Makefile.in	1996/12/24 02:01:39
***************
*** 188,194 ****
  
  modules: $(ANSI@U@KNR) $(MO@D@ULE_DIRS)
  
! bin: zsh
  
  zsh: $(ANSI@U@KNR) $(@L@IBZSH) $(@L@OBJS) $(@L@STMP)
  	$(LINK) $(@L@OBJS) $(@L@LIST) $(LIBS)
--- 188,194 ----
  
  modules: $(ANSI@U@KNR) $(MO@D@ULE_DIRS)
  
! bin: proto zsh
  
  zsh: $(ANSI@U@KNR) $(@L@IBZSH) $(@L@OBJS) $(@L@STMP)
  	$(LINK) $(@L@OBJS) $(@L@LIST) $(LIBS)
***************
*** 211,217 ****
  	$(AWK) -f $(srcdir)/rlimits.awk $(RLIMITS_INC_H) > rlimits.h || \
  	    echo WARNING: unknown limits:  mail rlimits.h to developers
  
! $(OBJS): proto $(HDRS)
  
  init.o: bltinmods.list zshpaths.h
  
--- 211,217 ----
  	$(AWK) -f $(srcdir)/rlimits.awk $(RLIMITS_INC_H) > rlimits.h || \
  	    echo WARNING: unknown limits:  mail rlimits.h to developers
  
! $(OBJS): $(HDRS)
  
  init.o: bltinmods.list zshpaths.h
  
***************
*** 261,267 ****
  $(MODBINS):
  	echo $(@D@YNAMIC_XMODS) > $@
  
! proto: $(PROTO) proto-recursive FORCE
  
  $(PROTO): makepro.sed
  
--- 261,267 ----
  $(MODBINS):
  	echo $(@D@YNAMIC_XMODS) > $@
  
! proto: $(PROTO) proto-recursive
  
  $(PROTO): makepro.sed
  
*** Src/Zle/Makefile.in	1996/12/24 01:31:03	3.1.1.2
--- Src/Zle/Makefile.in	1996/12/24 02:00:05
***************
*** 105,116 ****
  # default target
  all: modules
  
! modules: $(MODULES)
  
  zle.so: $(ZLEOBJS)
  	$(LINK) $(ZLEOBJS)
  
! $(OBJS): proto $(HDRS)
  
  proto: $(PROTO)
  
--- 105,116 ----
  # default target
  all: modules
  
! modules: proto $(MODULES)
  
  zle.so: $(ZLEOBJS)
  	$(LINK) $(ZLEOBJS)
  
! $(OBJS): $(HDRS)
  
  proto: $(PROTO)
  
*** Src/Modules/Makefile.in	1996/12/24 01:31:03	3.1.1.2
--- Src/Modules/Makefile.in	1996/12/24 02:19:48
***************
*** 96,104 ****
  # default target
  all: modules
  
! modules: $(MODULES)
! 
! $(MODULES): proto
  
  proto: $(PROTO)
  
--- 96,102 ----
  # default target
  all: modules
  
! modules: proto $(MODULES)
  
  proto: $(PROTO)
  
PATCH END (without this some mailers chop the last line of the patch)

