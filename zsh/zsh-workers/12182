From zsh-workers-return-12182-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Jul 06 15:21:26 2000
Return-Path: <zsh-workers-return-12182-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 26912 invoked from network); 6 Jul 2000 15:21:25 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 6 Jul 2000 15:21:24 -0000
Received: (qmail 27836 invoked by alias); 6 Jul 2000 15:21:10 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 12182
Received: (qmail 27827 invoked from network); 6 Jul 2000 15:21:09 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer goliath.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: "ZSH workers mailing list" <zsh-workers@sunsite.auc.dk>
Subject: Cygwin, zpty and EOL 
Date: Thu, 6 Jul 2000 19:21:07 +0400
Message-ID: <000301bfe75d$ce7608c0$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="koi8-r"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6700

Trying to make nslookup work on Cygwin ...

Cygwin can work with tty in two different modes. In binary mode all
characters are transmitted "as is", that corresponds to normal Unix
behaviour. In text mode EOL is converted between NL (Unix) and CR-NL
(DOS). Important is, as I understand, it is done by cygwin.dll, and
applies only to Cygwin programs.

Unfortunately, nslookup on NT is external, NT program. When you start it
under zpty control, very funny thing happens:

- by default, terminal is set to "stty onlcr" mode (BTW the same is on
Unix and with Bash).

- nslookup, as DOS program, outputs CR-NL as EOL

- this is converted to CR-CR by pty (that interprets it as output, of
course)!

In other words, poor nslookup that waits for '*NL> ' never sees it ...
and what it gets is one large large line.

I was finally able to make it work by changing the pattern and replacing
CR-CR with single NL in input. Ough ...

This probably could be automated by examining full path to the command.
Now I wonder, if something similar happens with completion tests. So far
I noted very interesting thing - every ptyread() returns single line, at
the end of line I see read() that returns 0 (zero) bytes.

-andrej

Have a nice DOS!
B >>

