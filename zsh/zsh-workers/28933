From zsh-workers-return-28933-mason-zsh=primenet.com.au@zsh.org Sun Mar 20 15:34:57 2011
Return-Path: <zsh-workers-return-28933-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4110 invoked by alias); 20 Mar 2011 15:34:56 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28933
Received: (qmail 25174 invoked from network); 20 Mar 2011 15:34:53 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.3.1
Received-SPF: pass (ns1.primenet.com.au: SPF record at benizi.com designates 64.130.10.15 as permitted sender)
Date: Sun, 20 Mar 2011 11:34:22 -0400 (EDT)
From: "Benjamin R. Haskell" <zsh@benizi.com>
To: Frank Terbeck <ft@bewatermyfriend.org>
cc: =?UTF-8?Q?Johan_Sundstr=C3=B6m?= <oyasumi@gmail.com>, 
    Nikolai Weibull <now@bitwi.se>, Zsh Workers <zsh-workers@zsh.org>
Subject: Re: Submitting patches [was: Re: Updated _git completion (not
 attached)]
In-Reply-To: <8762rekyj1.fsf@ft.bewatermyfriend.org>
Message-ID: <alpine.LNX.2.01.1103201114390.22141@hp>
References: <AANLkTikuCtPdY1T_7vUBoHmeXWvth_V=V-Sbi-SJX4jj@mail.gmail.com> <AANLkTimxbgzGPx3i0rGmkU7QkeC2A9yj21w974MY+9H-@mail.gmail.com> <87ei6tex5r.fsf@ft.bewatermyfriend.org> <AANLkTikxHareFnnmsUy8Gu=HQY_2qGuY-owMBn+SEUrn@mail.gmail.com>
 <AANLkTim_nZMNsvpCzF1Ezg0O_6xcuC5gGHrJzB0+4_Mm@mail.gmail.com> <8739n3avrm.fsf@ft.bewatermyfriend.org> <AANLkTi=4T4tw7HkZfjexsPvRqejVF1tv0r_toA10ve+3@mail.gmail.com> <877hbwi2gt.fsf@ft.bewatermyfriend.org> <AANLkTikcR7JjF=xsusdq8xeioS=OaUsCCttPbshjGNXg@mail.gmail.com>
 <8739mki0uj.fsf@ft.bewatermyfriend.org> <AANLkTikORnKwpv7sysJk4Mo4uzEXhf4a939D9jBhJ1JH@mail.gmail.com> <8762rekyj1.fsf@ft.bewatermyfriend.org>
User-Agent: Alpine 2.01 (LNX 1266 2009-07-14)
MIME-Version: 1.0
Content-Type: MULTIPART/MIXED; BOUNDARY="-1463810530-411618332-1300635286=:22141"

---1463810530-411618332-1300635286=:22141
Content-Type: TEXT/PLAIN; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8BIT

On Sun, 20 Mar 2011, Frank Terbeck wrote:

> Johan SundstrÃ¶m wrote:
>> On Fri, Mar 18, 2011 at 14:18, Frank Terbeck <ft@bewatermyfriend.org> wrote:
>>> [Etc/zsh-development-guide]
>>
>>> That being said, the output of "git format-patch" is usable, too. 
>>> Exchanging git's default "[PATCH]" by "PATCH: " would be extra 
>>> sugar.
>>
>> Running perl -pi -e 's/^(Subject: ).(PATCH[^]]*)./$1$2:/' *.patch on 
>> format-patch files fixes that (it seems command line options to git 
>> can't).  Maybe a useful note for the dev guide?
>
> The archive reacts to anything that starts with "PATCH". You can see the
> results on <http://www.zsh.org/mla/patches.shtml>. So, your Perl snippet
> would work. Even for numbered patches.

Based on that list, it appears that no Perl script is necessary. 
Nikolai's patches labeled with the standard `git` way were picked up 
well enough:

Subject: [PATCH 3/4] Fix git-branch -[dD] -r completion
Subject: [PATCH 1/4] Fix typo
Subject: [PATCH 4/4] Fix typo in git-send-email completion
Subject: [PATCH 2/4] Only show modified files for git-checkout without tree

were grabbed as:

3/4] Fix git-branch -[dD] -r completion
1/4] Fix typo
4/4] Fix typo in git-send-email completion
2/4] Only show modified files for git-checkout without tree

Personally, I think it's better that the "series" info stays there.  The 
only ugliness is the '] ' instead of ': '.

And, with `git send-email --annotate` (which IMO is easier than `git 
format-patch` and then firing up an email client), there's no clear 
point at which to run the Perl script.  (Though, with --annotate, you 
can simply modify the Subject: line in your editor.)

I have the following in my .gitconfig:

[alias]
 	# ... 45 lines later ...
 	email-zsh = "!email () { email=\"$(git config --get user.email)\" ; user=\"$(git config --get user.name)\" ; git send-email --annotate --envelope-sender='<'$email'>' --from=\"$user <$email>\" --cc=\"$user <$email>\" --to='Zsh Workers <zsh-workers@zsh.org>' \"$@\" ; } ; email"

--annotate - allows editing the messages
--envelope-sender - helps with some mailing lists
--cc - so I get a copy of the message
--from - (not usually necessary, I don't think -- remnant from doing 
other email cartwheels in other aliases)

The "!fn-name () { function-body ; } ; fn-name" idiom might not be 
necessary for this case, but it comes in handy when you want to munge 
the arguments list inside function-body.

The other options should be obvious, and any other options you pass on 
the commandline (--dry-run, list of revisions, etc.) get passed up to 
send-email, which passes any options it doesn't use up to format-patch.

-- 
Best,
Ben
---1463810530-411618332-1300635286=:22141--

