From zsh-workers-return-7352-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Aug 04 04:42:19 1999
Return-Path: <zsh-workers-return-7352-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 25457 invoked from network); 4 Aug 1999 04:42:15 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 4 Aug 1999 04:42:15 -0000
Received: (qmail 23642 invoked by alias); 4 Aug 1999 04:42:03 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 7352
Received: (qmail 23634 invoked from network); 4 Aug 1999 04:42:01 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <990804044026.ZM12690@candle.brasslantern.com>
Date: Wed, 4 Aug 1999 04:40:26 +0000
In-Reply-To: <14247.14862.404409.655828@pdx.itasoftware.com>
Comments: In reply to greg@klanderman.net (Greg Klanderman)
        "TRAPEXIT question" (Aug  3,  2:50pm)
References: <14247.14862.404409.655828@pdx.itasoftware.com>
X-Mailer: Z-Mail (5.0.0 30July97)
To: greg@klanderman.net, zsh-workers@sunsite.auc.dk (Zsh list)
Subject: Re: TRAPEXIT question
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Aug 3,  2:50pm, Greg Klanderman wrote:
} Subject: TRAPEXIT question
}
} Unfortunately, it seems that if TRAPEXIT is defined from
} within a shell function or even from a "source"d file, the exit 
} hook gets called when the function exits or sourced file finishes

Yes, this is correct.  However, how that trap behaves depends upon how
you define it.  To quote the manual:

     Note that traps defined with the `trap' builtin are slightly
     different from those defined as ``TRAP'NAL () { ... }', as the
     latter have their own function environment (line numbers, local
     variables, etc.) while the former use the environment of the
     command in which they were called.  For example,

     `trap 'print $LINENO' DEBUG'

     will print the line number of command executed after it has run,
     while

     `TRAPDEBUG() { print $LINENO; }'

     will always print the number zero.

This has an interesting side-effect in the case of the EXIT trap.  If you
use the `TRAPEXIT() { ... }' function form, then other traps set within the
trap itself have the context of the TRAPEXIT function; but if you use the
`trap "..." EXIT' form, traps set within the trap have as their context a
function that has already exited -- and as a consequence they get set in
the next context up, which can even be the top-level shell.

(I don't know if any other shell behaves this way; I know bash does *not*.
The new LOCAL_TRAPS option in 3.1.6 doesn't appear to affect it.)

Anyway, this means that either of the following forms create a function
that will install an exit trap on the calling shell:

	trip() { trap 'trap "echo trip" EXIT' EXIT }
	trip() { trap 'TRAPEXIT() { echo trip }' EXIT }

Which one you use probably depends on how hairy you want the quoting to
get.  It might be easiest to define yet another function that is the real
body of the trap, and simply call it:

	troll() { print "Who's that trip-trapping over MY bridge?" }
	trip() { trap 'trap troll EXIT' EXIT }

Now that I've answered the question ... can you tell me what's wrong with
using a .zlogout file instead?

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

