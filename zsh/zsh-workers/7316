From zsh-workers-return-7316-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Jul 29 12:53:07 1999
Return-Path: <zsh-workers-return-7316-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 21033 invoked from network); 29 Jul 1999 12:53:05 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 29 Jul 1999 12:53:05 -0000
Received: (qmail 29392 invoked by alias); 29 Jul 1999 12:52:56 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 7316
Received: (qmail 29385 invoked from network); 29 Jul 1999 12:52:55 -0000
Message-Id: <9907291221.AA36429@ibmth.df.unipi.it>
To: zsh-workers@sunsite.auc.dk (Zsh hackers list)
Subject: PATCH: 3.1.6-test-3: mention matching control in zshcompsys.1
Date: Thu, 29 Jul 1999 14:21:55 +0200
From: Peter Stephenson <pws@ibmth.df.unipi.it>

It's not all that obvious from the documentation that compctl -M applies to
the new completion system (or that such a thing is available in the new
completion system at all).  So this mentions it, and fixes some other typos
in the file.

--- Doc/Zsh/compsys.yo~	Tue Jul 27 16:00:27 1999
+++ Doc/Zsh/compsys.yo	Thu Jul 29 14:09:11 1999
@@ -6,12 +6,22 @@
 sect(Description)
 
 This describes the shell code for the new completion system.  It consists
-of varsious shell functions; those beginning `tt(comp)' are to be called
+of various shell functions; those beginning `tt(comp)' are to be called
 directly by the user, while those beginning `tt(_)' are called by the
 completion code.  The shell functions of the second set which implement
 completion behaviour and which may be bound to keystrokes, are referred to
 as `widgets'.
 
+Note that with the function-based completions described here, it
+is also possible to use the `tt(compctl -M ...)' mechanism to specify
+global matching control, such as case-insensitivity (`tt(abc)' will complete
+to a string beginning `tt(ABC)'), or wildcard behaviour on
+certain anchors (`tt(a-d)' will complete to abc-def as if there were a
+`tt(*)' after the `a').  See
+ifzman(the section `Matching Control' in zmanref(zshcompctl))\
+ifnzman(noderef(Matching Control))
+for further details.
+
 startmenu()
 menu(Initialization)
 menu(Control Functions)
@@ -818,7 +828,7 @@
 give patterns for options which should not be completed. The patterns
 can be given as the name of an array parameter or as a literal list in 
 parentheses. E.g. `tt(-i "(--(en|dis)able-FEATURE*)")' will ignore the
-options `tt(--enable-FEATURE)' and `tt(--diable-FEATURE)'. Finally,
+options `tt(--enable-FEATURE)' and `tt(--disable-FEATURE)'. Finally,
 the option `tt(-s) var(pairs)' can be used to describe options
 aliases. Each var(pair) consists of a pattern and a
 replacement. E.g. some tt(configure)-scripts describe options only as
@@ -843,7 +853,7 @@
 startitem()
 item(tt(Core))(
 The core scripts and functions.  You will certainly need these, though will
-probably not need to alter them.  Many of these are docmented above.
+probably not need to alter them.  Many of these are documented above.
 )
 item(tt(Base))(
 Other functions you will almost certainly want if you are going to use
@@ -876,8 +886,8 @@
 item(tt(_correct_filename (^XC)))(
 Correct the filename path at the cursor position.  Allows up to six errors
 in the name.  Can also be called with an argument to correct
-a filepath, independently of zle; the correction is printed on standard
-output.
+a filename path, independently of zle; the correction is printed on
+standard output.
 )
 item(tt(_correct_word) (^Xc))(
 Performs correction of the current argument using the usual contextual

-- 
Peter Stephenson <pws@ibmth.df.unipi.it>       Tel: +39 050 844536
WWW:  http://www.ifh.de/~pws/
Dipartimento di Fisica, Via Buonarroti 2, 56127 Pisa, Italy

