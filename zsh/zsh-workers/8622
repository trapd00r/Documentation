From zsh-workers-return-8622-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Nov 11 11:34:31 1999
Return-Path: <zsh-workers-return-8622-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 10124 invoked from network); 11 Nov 1999 11:34:29 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 11 Nov 1999 11:34:29 -0000
Received: (qmail 3978 invoked by alias); 11 Nov 1999 11:33:33 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 8622
Received: (qmail 3971 invoked from network); 11 Nov 1999 11:33:33 -0000
Date: Thu, 11 Nov 1999 12:33:14 +0100 (MET)
Message-Id: <199911111133.MAA28902@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: "Bart Schaefer"'s message of Thu, 11 Nov 1999 10:57:10 +0000
Subject: Re: completion grouping (yes, again)


Bart Schaefer wrote:

> Completion/Base/_arg_compile:91:emulate -L zsh
> Completion/Builtins/_popd:8:emulate -L zsh
> Completion/Builtins/_zftp:7:emulate -L zsh
> Completion/Commands/_correct_filename:16:emulate -LR zsh
> Completion/Commands/_read_comp:25:emulate -L zsh
> Completion/Core/compdump:16:emulate -L zsh
> Completion/Core/compinit:58:emulate -L zsh
> Completion/Core/compinstall:28:emulate -L zsh
> Completion/User/_mailboxes:3:emulate -L zsh

Urgh. I thought I removed them, but of course...

> } Also, `emulate -L zsh' resets some other options which are tested or
> } used in the completion code, e.g.: extended_glob, magic_equal_subst,
> } and pushd_minus.
> 
> Hrm.  Obviously "emulate" shouldn't be used in functions that call other
> functions that might not want it.

... this is true (maybe I had even thought about that then). That
would leave only `_read_comp'.

>  Slightly icky thought:  Maybe we need
> a variant of "emulate" that gets undone on *entry* to a called function
> as well as on exit from the calling function?

That's something I've been wishing for for parameters, btw. I mean,
sometimes it's nice to be able to set parameters locally so that
called functions use them instead of the global ones. But in functions 
like `_arguments' it would be nice to be able to define the locals
syntactically local.

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

