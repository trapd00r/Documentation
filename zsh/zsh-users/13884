From zsh-users-return-13884-mason-zsh=primenet.com.au@sunsite.dk Thu Mar 05 16:57:58 2009
Return-Path: <zsh-users-return-13884-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20288 invoked from network); 5 Mar 2009 16:57:55 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.7 required=5.0 tests=AWL,BAYES_00,LONGWORDS
	autolearn=no version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 5 Mar 2009 16:57:55 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 65396 invoked from network); 5 Mar 2009 16:57:46 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 5 Mar 2009 16:57:46 -0000
Received: (qmail 18162 invoked by alias); 5 Mar 2009 16:57:32 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13884
Received: (qmail 18147 invoked from network); 5 Mar 2009 16:57:31 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 5 Mar 2009 16:57:31 -0000
Received: from smtp.benizi.com (unknown [71.240.125.205])
	by bifrost.dotsrc.org (Postfix) with ESMTP id BAFAB8030801
	for <zsh-users@sunsite.dk>; Thu,  5 Mar 2009 17:57:28 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by smtp.benizi.com (Postfix) with ESMTPSA id 3922717589;
	Thu,  5 Mar 2009 11:19:00 -0500 (EST)
Date: Thu, 5 Mar 2009 11:19:00 -0500 (EST)
From: "Benjamin R. Haskell" <zsh@benizi.com>
To: Zsh Users <zsh-users@sunsite.dk>
Subject: Re: expansion of environment variables
In-Reply-To: <d5baa8100903050235ofd66039jf2c29b58684bc8d8@mail.gmail.com>
Message-ID: <alpine.LNX.2.00.0903051057320.31975@averatec>
References: <d5baa8100903050235ofd66039jf2c29b58684bc8d8@mail.gmail.com>
User-Agent: Alpine 2.00 (LNX 1169 2008-08-27)
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed
X-Virus-Scanned: ClamAV 0.92.1/9074/Thu Mar  5 16:21:02 2009 on bifrost
X-Virus-Status: Clean

On Thu, 5 Mar 2009, ruud grosmann wrote:

> [...]
>
> The new version has a feature that is not in the 3.0 version. I would
> like to disable the feature, but I am not sure if an option exist for
> that one. Maybe you can help me.
>
>
> The feature is about expansion of variables during file completion.
> Assume my directory contains
>
> 1234.log   1234.xml  2345.xml
>
> when I set variable key to '2345' and I do
>
> $ /opt/archives/scripts/bin/convert $key.<TAB>
>
> the OLD version expands this to
>
> $ /opt/archives/scripts/bin/convert $key.xml
>
> whereas the new version expands it to
>
> $ /opt/archives/scripts/bin/convert 2345.xml
>
> I would like to have the old behaviour in my new zsh, so that I can
> reuse the command line for different values of key. Since it is a new
> feature, I suspect there must be a way to prevent the shell from
> substituting the variable with its value. Am I overlooking it in the
> docs?

I don't get the "new" behavior in zsh-4.3.6 for a similar example with the 
following options set:

$ setopt
autocd
noautomenu
nocheckjobs
extendedglob
extendedhistory
globdots
histignoredups
histignorespace
histnostore
histsubstpattern
nohup
incappendhistory
interactive
monitor
nonotify
promptsubst
pushdsilent
shinstdin
zle
# output of allopt at: http://benizi.com/zsh-opt-2009-03-05.txt

$ key=tmp
$ l $key/zzz.<TAB>
zzz.php  zzz.txt


But, I also get the following behaviors, which seem odd (though not 
inexplicable) to me:

$ key=tmp/zzz
$ l $key.<TAB>
# (doesn't offer any completions)
$ l ${key}.<TAB>
# no completions


$ key=tm
$ l ${key}p/z<TAB>
$ l ${key}p/zzz.

I'm sure this is an uncommon problem to have [wanting to tab-complete a 
variable that contains a partial *filename*, rather than just a partial 
path].  It just strikes me as weird that it's not consistently doing:

1. expand variable, but don't insert that expansion into the line
2. attempt completion


Another example:

$ mkdir -p aaa/bbb/ccc/ddd
$ touch aaa/bbb/ccc/ddd/eee.one
$ touch aaa/bbb/ccc/ddd/eee.two

$ key=aaa/bbb/ccc/ddd/eee
$ l ${key}.<TAB>
# nothing

$ key=aaa/bbb/ccc/d
$ l ${key}d<TAB>
# nothing

$ l ${key}dd<TAB>
# nothing

$ l ${key}dd/<TAB>
# completes to ambiguity point:
$ l ${key}dd/eee.<TAB>
eee.one  eee.two

Best,
Ben

