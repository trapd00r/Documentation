From zsh-workers-request@math.gatech.edu  Thu Aug 24 21:31:25 1995
Received: from gatech.edu (gatech.edu [130.207.244.244]) by werple.mira.net.au (8.6.12/8.6.9) with SMTP id VAA17590 for <mason@werple.mira.net.au>; Thu, 24 Aug 1995 21:30:49 +1000
Received: from math (math.skiles.gatech.edu) by gatech.edu with SMTP id AA04218
  (5.65c/Gatech-10.0-IDA for <mason@werple.mira.net.au>); Thu, 24 Aug 1995 07:27:35 -0400
Received: by math (5.x/SMI-SVR4)
	id AA04255; Thu, 24 Aug 1995 07:22:23 -0400
Resent-Date: Thu, 24 Aug 1995 13:23:09 +0200
Old-Return-Path: <friedric@fmi.uni-passau.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
From: Carsten Friedrich <friedric@fmi.uni-passau.de>
Date: Thu, 24 Aug 1995 13:23:09 +0200
Message-Id: <199508241123.NAA13537@bartok.fmi.uni-passau.de>
To: zsh-workers@math.gatech.edu
Subject: Bug Report
Resent-Message-Id: <"4MyQx1.0.L21.k36Fm"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/342
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu


Hi,

I'm using zsh-2.6-beta9 on sparcs running solaris 2.4. I found the
following Bug:

> *<tab>

produces:

> *-
zsh: do you wish to see all 1897 possibilities? y

Program received signal SIGSEGV, Segmentation fault.

As the resulting stack (compiled with -g) only consists of garbage I will
not include it. This behavior is not alterer if using no optimization
flags.

output of reporter at the end of the mail. I got many 
awk: syntax error near line x
awk: illegal statement near line x
errors while runnning reporter

I'm not on the zsh mailing list.

greetings
carsten

p.s> I deleted some lines reoprter generated, which I don't want to become
public, like information about user names/ids, hostsnames etc. If you
absolutly need this informatin, please contact me.



# START zsh saveset
# uname:  SunOS bartok 5.4 Generic_101945-13 sun4m sparc

# Aliases.

alias run-help='man'
alias which-command='whence'

# Key bindings.

bindkey -r "^@"
bindkey -r "^A"
bindkey -r "^B"
bindkey -r "^C"
bindkey -r "^D"
bindkey -r "^E"
bindkey -r "^F"
bindkey -r "^G"
bindkey -r "^H"
bindkey -r "^I"
bindkey -r "^J"
bindkey -r "^K"
bindkey -r "^L"
bindkey -r "^M"
bindkey -r "^N"
bindkey -r "^O"
bindkey -r "^P"
bindkey -r "^Q"
bindkey -r "^R"
bindkey -r "^S"
bindkey -r "^T"
bindkey -r "^U"
bindkey -r "^V"
bindkey -r "^W"
bindkey -r "^X"
bindkey -r "^Y"
bindkey -r "^Z"
bindkey -r "\e"
bindkey -r "^_"
bindkey -r "^?"
bindkey -r "^X^B"
bindkey -r "^X^F"
bindkey -r "^X^J"
bindkey -r "^X^K"
bindkey -r "^X^N"
bindkey -r "^X^O"
bindkey -r "^X^U"
bindkey -r "^X^V"
bindkey -r "^X^X"
bindkey -r "^X*"
bindkey -r "^XG"
bindkey -r "^Xg"
bindkey -r "^Xr"
bindkey -r "^Xs"
bindkey -r "^Xu"
bindkey -r "\e^D"
bindkey -r "\e^G"
bindkey -r "\e^H"
bindkey -r "\e^I"
bindkey -r "\e^J"
bindkey -r "\e^L"
bindkey -r "\e^M"
bindkey -r "\e^_"
bindkey -r "\e "
bindkey -r "\e!"
bindkey -r "\e\""
bindkey -r "\e$"
bindkey -r "\e'"
bindkey -r "\e-"
bindkey -r "\e."
bindkey -r "\e0"
bindkey -r "\e1"
bindkey -r "\e2"
bindkey -r "\e3"
bindkey -r "\e4"
bindkey -r "\e5"
bindkey -r "\e6"
bindkey -r "\e7"
bindkey -r "\e8"
bindkey -r "\e9"
bindkey -r "\e<"
bindkey -r "\e>"
bindkey -r "\e?"
bindkey -r "\eA"
bindkey -r "\eB"
bindkey -r "\eC"
bindkey -r "\eD"
bindkey -r "\eF"
bindkey -r "\eG"
bindkey -r "\eH"
bindkey -r "\eL"
bindkey -r "\eN"
bindkey -r "\eP"
bindkey -r "\eQ"
bindkey -r "\eR"
bindkey -r "\eS"
bindkey -r "\eT"
bindkey -r "\eU"
bindkey -r "\eW"
bindkey -r "\e[A"
bindkey -r "\e[B"
bindkey -r "\e[C"
bindkey -r "\e[D"
bindkey -r "\e_"
bindkey -r "\ea"
bindkey -r "\eb"
bindkey -r "\ec"
bindkey -r "\ed"
bindkey -r "\ef"
bindkey -r "\eg"
bindkey -r "\eh"
bindkey -r "\el"
bindkey -r "\en"
bindkey -r "\ep"
bindkey -r "\eq"
bindkey -r "\er"
bindkey -r "\es"
bindkey -r "\et"
bindkey -r "\eu"
bindkey -r "\ew"
bindkey -r "\ex"
bindkey -r "\ey"
bindkey -r "\ez"
bindkey -r "\e|"
bindkey -r "\e^?"

bindkey "^@"	set-mark-command
bindkey "^A"	beginning-of-line
bindkey "^B"	backward-char
bindkey "^C"	undefined-key
bindkey "^D"	delete-char-or-list
bindkey "^E"	end-of-line
bindkey "^F"	forward-char
bindkey "^G"	send-break
bindkey "^H"	backward-delete-char
bindkey "^I"	expand-or-complete
bindkey "^J"	accept-line
bindkey "^K"	kill-line
bindkey "^L"	clear-screen
bindkey "^M"	accept-line
bindkey "^N"	down-line-or-history
bindkey "^O"	accept-line-and-down-history
bindkey "^P"	up-line-or-history
bindkey "^Q"	push-line
bindkey "^R"	history-incremental-search-backward
bindkey "^S"	history-incremental-search-forward
bindkey "^T"	transpose-chars
bindkey "^U"	kill-whole-line
bindkey "^V"	quoted-insert
bindkey "^W"	backward-kill-word
bindkey "^X"	prefix
bindkey "^Y"	yank
bindkey "^Z"	undefined-key
bindkey "\e"	prefix
bindkey "^_"	undo
bindkey "^?"	backward-delete-char
bindkey "^X^B"	vi-match-bracket
bindkey "^X^F"	vi-find-next-char
bindkey "^X^J"	vi-join
bindkey "^X^K"	kill-buffer
bindkey "^X^N"	infer-next-history
bindkey "^X^O"	overwrite-mode
bindkey "^X^U"	undo
bindkey "^X^V"	vi-cmd-mode
bindkey "^X^X"	exchange-point-and-mark
bindkey "^X*"	expand-word
bindkey "^XG"	list-expand
bindkey "^Xg"	list-expand
bindkey "^Xr"	history-incremental-search-backward
bindkey "^Xs"	history-incremental-search-forward
bindkey "^Xu"	undo
bindkey "\e^D"	list-choices
bindkey "\e^G"	send-break
bindkey "\e^H"	backward-kill-word
bindkey "\e^I"	self-insert-unmeta
bindkey "\e^J"	self-insert-unmeta
bindkey "\e^L"	clear-screen
bindkey "\e^M"	self-insert-unmeta
bindkey "\e^_"	copy-prev-word
bindkey "\e "	expand-history
bindkey "\e!"	expand-history
bindkey "\e\""	quote-region
bindkey "\e$"	spell-word
bindkey "\e'"	quote-line
bindkey "\e-"	neg-argument
bindkey "\e."	insert-last-word
bindkey "\e0"	digit-argument
bindkey "\e1"	digit-argument
bindkey "\e2"	digit-argument
bindkey "\e3"	digit-argument
bindkey "\e4"	digit-argument
bindkey "\e5"	digit-argument
bindkey "\e6"	digit-argument
bindkey "\e7"	digit-argument
bindkey "\e8"	digit-argument
bindkey "\e9"	digit-argument
bindkey "\e<"	beginning-of-buffer-or-history
bindkey "\e>"	end-of-buffer-or-history
bindkey "\e?"	which-command
bindkey "\eA"	accept-and-hold
bindkey "\eB"	backward-word
bindkey "\eC"	capitalize-word
bindkey "\eD"	kill-word
bindkey "\eF"	forward-word
bindkey "\eG"	get-line
bindkey "\eH"	run-help
bindkey "\eL"	down-case-word
bindkey "\eN"	history-search-forward
bindkey "\eP"	history-search-backward
bindkey "\eQ"	push-line
bindkey "\eR"	toggle-literal-history
bindkey "\eS"	spell-word
bindkey "\eT"	transpose-words
bindkey "\eU"	up-case-word
bindkey "\eW"	copy-region-as-kill
bindkey "\e[A"	up-line-or-history
bindkey "\e[B"	down-line-or-history
bindkey "\e[C"	forward-char
bindkey "\e[D"	backward-char
bindkey "\e_"	insert-last-word
bindkey "\ea"	accept-and-hold
bindkey "\eb"	backward-word
bindkey "\ec"	capitalize-word
bindkey "\ed"	kill-word
bindkey "\ef"	forward-word
bindkey "\eg"	get-line
bindkey "\eh"	run-help
bindkey "\el"	down-case-word
bindkey "\en"	history-search-forward
bindkey "\ep"	history-search-backward
bindkey "\eq"	push-line
bindkey "\er"	toggle-literal-history
bindkey "\es"	spell-word
bindkey "\et"	transpose-words
bindkey "\eu"	up-case-word
bindkey "\ew"	copy-region-as-kill
bindkey "\ex"	execute-named-cmd
bindkey "\ey"	yank-pop
bindkey "\ez"	execute-last-named-cmd
bindkey "\e|"	vi-goto-column
bindkey "\e^?"	backward-kill-word

# Completions.


# Undefined functions.


# Defined functions.


# Limits.

limit datasize        2047MB
limit stacksize       8MB
limit descriptors     64
# START zsh saveset
# uname:  SunOS bartok 5.4 Generic_101945-13 sun4m sparc

# Aliases.

alias run-help='man'
alias which-command='whence'

# Key bindings.

bindkey -r "^@"
bindkey -r "^A"
bindkey -r "^B"
bindkey -r "^C"
bindkey -r "^D"
bindkey -r "^E"
bindkey -r "^F"
bindkey -r "^G"
bindkey -r "^H"
bindkey -r "^I"
bindkey -r "^J"
bindkey -r "^K"
bindkey -r "^L"
bindkey -r "^M"
bindkey -r "^N"
bindkey -r "^O"
bindkey -r "^P"
bindkey -r "^Q"
bindkey -r "^R"
bindkey -r "^S"
bindkey -r "^T"
bindkey -r "^U"
bindkey -r "^V"
bindkey -r "^W"
bindkey -r "^X"
bindkey -r "^Y"
bindkey -r "^Z"
bindkey -r "\e"
bindkey -r "^_"
bindkey -r "^?"
bindkey -r "^X^B"
bindkey -r "^X^F"
bindkey -r "^X^J"
bindkey -r "^X^K"
bindkey -r "^X^N"
bindkey -r "^X^O"
bindkey -r "^X^U"
bindkey -r "^X^V"
bindkey -r "^X^X"
bindkey -r "^X*"
bindkey -r "^XG"
bindkey -r "^Xg"
bindkey -r "^Xr"
bindkey -r "^Xs"
bindkey -r "^Xu"
bindkey -r "\e^D"
bindkey -r "\e^G"
bindkey -r "\e^H"
bindkey -r "\e^I"
bindkey -r "\e^J"
bindkey -r "\e^L"
bindkey -r "\e^M"
bindkey -r "\e^_"
bindkey -r "\e "
bindkey -r "\e!"
bindkey -r "\e\""
bindkey -r "\e$"
bindkey -r "\e'"
bindkey -r "\e-"
bindkey -r "\e."
bindkey -r "\e0"
bindkey -r "\e1"
bindkey -r "\e2"
bindkey -r "\e3"
bindkey -r "\e4"
bindkey -r "\e5"
bindkey -r "\e6"
bindkey -r "\e7"
bindkey -r "\e8"
bindkey -r "\e9"
bindkey -r "\e<"
bindkey -r "\e>"
bindkey -r "\e?"
bindkey -r "\eA"
bindkey -r "\eB"
bindkey -r "\eC"
bindkey -r "\eD"
bindkey -r "\eF"
bindkey -r "\eG"
bindkey -r "\eH"
bindkey -r "\eL"
bindkey -r "\eN"
bindkey -r "\eP"
bindkey -r "\eQ"
bindkey -r "\eR"
bindkey -r "\eS"
bindkey -r "\eT"
bindkey -r "\eU"
bindkey -r "\eW"
bindkey -r "\e[A"
bindkey -r "\e[B"
bindkey -r "\e[C"
bindkey -r "\e[D"
bindkey -r "\e_"
bindkey -r "\ea"
bindkey -r "\eb"
bindkey -r "\ec"
bindkey -r "\ed"
bindkey -r "\ef"
bindkey -r "\eg"
bindkey -r "\eh"
bindkey -r "\el"
bindkey -r "\en"
bindkey -r "\ep"
bindkey -r "\eq"
bindkey -r "\er"
bindkey -r "\es"
bindkey -r "\et"
bindkey -r "\eu"
bindkey -r "\ew"
bindkey -r "\ex"
bindkey -r "\ey"
bindkey -r "\ez"
bindkey -r "\e|"
bindkey -r "\e^?"

bindkey "^@"	set-mark-command
bindkey "^A"	beginning-of-line
bindkey "^B"	backward-char
bindkey "^C"	undefined-key
bindkey "^D"	delete-char-or-list
bindkey "^E"	end-of-line
bindkey "^F"	forward-char
bindkey "^G"	send-break
bindkey "^H"	backward-delete-char
bindkey "^I"	expand-or-complete
bindkey "^J"	accept-line
bindkey "^K"	kill-line
bindkey "^L"	clear-screen
bindkey "^M"	accept-line
bindkey "^N"	down-line-or-history
bindkey "^O"	accept-line-and-down-history
bindkey "^P"	up-line-or-history
bindkey "^Q"	push-line
bindkey "^R"	history-incremental-search-backward
bindkey "^S"	history-incremental-search-forward
bindkey "^T"	transpose-chars
bindkey "^U"	kill-whole-line
bindkey "^V"	quoted-insert
bindkey "^W"	backward-kill-word
bindkey "^X"	prefix
bindkey "^Y"	yank
bindkey "^Z"	undefined-key
bindkey "\e"	prefix
bindkey "^_"	undo
bindkey "^?"	backward-delete-char
bindkey "^X^B"	vi-match-bracket
bindkey "^X^F"	vi-find-next-char
bindkey "^X^J"	vi-join
bindkey "^X^K"	kill-buffer
bindkey "^X^N"	infer-next-history
bindkey "^X^O"	overwrite-mode
bindkey "^X^U"	undo
bindkey "^X^V"	vi-cmd-mode
bindkey "^X^X"	exchange-point-and-mark
bindkey "^X*"	expand-word
bindkey "^XG"	list-expand
bindkey "^Xg"	list-expand
bindkey "^Xr"	history-incremental-search-backward
bindkey "^Xs"	history-incremental-search-forward
bindkey "^Xu"	undo
bindkey "\e^D"	list-choices
bindkey "\e^G"	send-break
bindkey "\e^H"	backward-kill-word
bindkey "\e^I"	self-insert-unmeta
bindkey "\e^J"	self-insert-unmeta
bindkey "\e^L"	clear-screen
bindkey "\e^M"	self-insert-unmeta
bindkey "\e^_"	copy-prev-word
bindkey "\e "	expand-history
bindkey "\e!"	expand-history
bindkey "\e\""	quote-region
bindkey "\e$"	spell-word
bindkey "\e'"	quote-line
bindkey "\e-"	neg-argument
bindkey "\e."	insert-last-word
bindkey "\e0"	digit-argument
bindkey "\e1"	digit-argument
bindkey "\e2"	digit-argument
bindkey "\e3"	digit-argument
bindkey "\e4"	digit-argument
bindkey "\e5"	digit-argument
bindkey "\e6"	digit-argument
bindkey "\e7"	digit-argument
bindkey "\e8"	digit-argument
bindkey "\e9"	digit-argument
bindkey "\e<"	beginning-of-buffer-or-history
bindkey "\e>"	end-of-buffer-or-history
bindkey "\e?"	which-command
bindkey "\eA"	accept-and-hold
bindkey "\eB"	backward-word
bindkey "\eC"	capitalize-word
bindkey "\eD"	kill-word
bindkey "\eF"	forward-word
bindkey "\eG"	get-line
bindkey "\eH"	run-help
bindkey "\eL"	down-case-word
bindkey "\eN"	history-search-forward
bindkey "\eP"	history-search-backward
bindkey "\eQ"	push-line
bindkey "\eR"	toggle-literal-history
bindkey "\eS"	spell-word
bindkey "\eT"	transpose-words
bindkey "\eU"	up-case-word
bindkey "\eW"	copy-region-as-kill
bindkey "\e[A"	up-line-or-history
bindkey "\e[B"	down-line-or-history
bindkey "\e[C"	forward-char
bindkey "\e[D"	backward-char
bindkey "\e_"	insert-last-word
bindkey "\ea"	accept-and-hold
bindkey "\eb"	backward-word
bindkey "\ec"	capitalize-word
bindkey "\ed"	kill-word
bindkey "\ef"	forward-word
bindkey "\eg"	get-line
bindkey "\eh"	run-help
bindkey "\el"	down-case-word
bindkey "\en"	history-search-forward
bindkey "\ep"	history-search-backward
bindkey "\eq"	push-line
bindkey "\er"	toggle-literal-history
bindkey "\es"	spell-word
bindkey "\et"	transpose-words
bindkey "\eu"	up-case-word
bindkey "\ew"	copy-region-as-kill
bindkey "\ex"	execute-named-cmd
bindkey "\ey"	yank-pop
bindkey "\ez"	execute-last-named-cmd
bindkey "\e|"	vi-goto-column
bindkey "\e^?"	backward-kill-word

# Completions.


# Undefined functions.


# Defined functions.


# Limits.

limit datasize        2047MB
limit stacksize       8MB
limit descriptors     64

# Non-array variables.

TERMCAP=''
TERM='xterm'
ARGC="0"
BAUD="9600"
CDPATH=""
COLUMNS="80"
CVSROOT="/home/steffen/pp/CVS"
DIRSTACKSIZE="-1"
DISPLAY=":0"
EDITOR="/public/bin/emacs"
EGID="23"
ERRNO="9"
EXINIT="set sh=/bin/csh sw=4 ai report=2 redraw"
FCEDIT="vi"
FIGNORE=""
FPATH="/home/steffen/friedric/working/zsh-2.6-beta9/Functions"
GID="23"
GUIDEHOME="/public/opt/SUNWguide"
HISTSIZE="100"
HOME="/home/steffen/friedric"
HOST="bartok"
HOSTTYPE="solaris2.4"
HZ="100"
KEYTIMEOUT="40"
LANG=""
LD_LIBRARY_PATH="/public/lib:/usr/lib:/public/opt/SUNWguide/lib:/usr/openwin/lib"
LIBWWW_PERL="/home/steffen/friedric/source/libwww-perl-0.40"
LINENO="495"
LINES="24"
LISTMAX="100"
LITHISTSIZE="5"
LOGCHECK="60"
LOGNAME="friedric"
MACHTYPE="sparc"
MAIL="/var/mail/friedric"
MAILCHECK="3600"
MAILPATH=""
MANPATH="/public/man:/usr/man:/public/opt/dt/man:/usr/openwin/man:/home/steffen/friedric/man"
MOTIFHOME="/public/opt/dt"
NETHACKOPTIONS="restonspace,time"
NNTPSERVER="nntpserver"
NULLCMD="cat"
OBERON=".:/public/languages/oberon/lib"
OLDPWD="/home/steffen/friedric/working/zsh-2.6-beta9/Util"
OPENWINHOME="/usr/openwin"
OPTARG=""
OPTIND="1"
OS="Solaris2"
OSTYPE="solaris2.4"
PATH="/public/programming/sniff+-2.0.1/bin:/home/steffen/friedric/bin:/public/bin:/usr/bin:/usr/ccs/bin:/usr/ucb:/usr/sbin:/public/opt/SUNWguide/bin:/usr/openwin/bin:."
PERIOD="0"
PGP_SYSTEM_DIR="/public/network/pgp26/lib"
PLATFORM="sparc-sun-solaris2.3"
POOL="lssun"
POSTEDIT=""
PPID="12195"
PRINTER="lp"
PROMPT="\033[1m\h : \w\033[0m\n\!> "
PROMPT2="> "
PROMPT3="?# "
PROMPT4="+ "
PS1="\033[1m\h : \w\033[0m\n\!> "
PS2="> "
PS3="?# "
PS4="+ "
PSVAR=""
PWD="/home/steffen/friedric/working/zsh-2.6-beta9/Util"
RANDOM="12890"
READNULLCMD="more"
REPORTTIME="-1"
REPOSITORY="/home/steffen/pp/CVS"
RNINIT="-g4 -m -S -hMessage -hSender -hKeyword"
RPROMPT=""
RPS1=""
SAVEDDIR="/home/steffen/friedric/.secure"
SAVEHIST="0"
SECONDS="8"
SHELL="/bin/bash"
SHLVL="3"
SNIFF_DIR="/public/programming/sniff+-2.0.1"
SPROMPT="zsh: correct \`%R\' to \`%r\' [nyae]? "
TIMEFMT="%E real  %U user  %S system  %P %J"
TMOUT="0"
TMPPREFIX="/tmp/zsh"
TTY="/dev/pts/24"
TZ="MET"
UIDPATH="/public/opt/SUNWmfdm/lib/uid"
USERNAME="friedric"
VENDOR="sun"
VISUAL="/public/bin/emacs"
WATCH=""
WATCHFMT="%n has %a %l from %m."
WINDOWID="41943053"
WORDCHARS="*?_-.[]~=/&;!#$%^(){}<>"
WORKMANDB="/public/tools/workman/lib/workmandb"
WORKSPACE="/home/steffen/friedric/working"
WWW_HOME="file:///home/www/local.html"
XAPPLRESDIR="/public/opt/dt/lib/%T/%N%S:/public/app-defaults:/home/steffen/friedric/app-defaults"
XGLHOME="/public/opt/SUNWits/Graphics-sw/xgl"
XILHOME="/public/opt/SUNWits/Graphics-sw/xil"
XMBINDIR="/public/opt/dt/lib/bindings"
ZSH_VERSION="2.6-beta9"
bash_startup_prefer_public="TRUE"
bash_startup_prefer_x11="TRUE"
each="unix"
ftp_proxy="http://www.uni-passau.de:80/"
gopher_proxy="http://www.uni-passau.de:80/"
histchars="!^#"
http_proxy="http://www.uni-passau.de:80/"
no_proxy="uni-passau.de"
reporter_junkiequotes="no"
status="1"
str="SunOS bartok 5.4 Generic_101945-13 sun4m sparc"
wais_proxy="http://www.uni-passau.de:80/"
prompt='test%'

# Array variables.

argv=()
cdpath=()
fignore=()
fpath=(/home/steffen/friedric/working/zsh-2.6-beta9/Functions)
mailpath=()
manpath=(/public/man /usr/man /public/opt/dt/man /usr/openwin/man /home/steffen/friedric/man)
path=(/public/programming/sniff+-2.0.1/bin /home/steffen/friedric/bin /public/bin /usr/bin /usr/ccs/bin /usr/ucb /usr/sbin /public/opt/SUNWguide/bin /usr/openwin/bin .)
psvar=()
signals=(EXIT HUP INT QUIT ILL TRAP IOT EMT FPE KILL BUS SEGV SYS PIPE ALRM TERM USR1 USR2 CLD PWR WINCH URG POLL STOP TSTP CONT TTIN TTOU VTALRM PROF XCPU XFSZ WAITING LWP FREEZE THAW RTMIN 37 38 39 40 41 42 RTMAX ZERR DEBUG)
watch=()

# Exported variables.

export TERMCAP
export TERM
export BASH
export CF_HOSTS
export COLUMNS
export CVSROOT
export DISPLAY
export DOOMWADDIR
export EDITOR
export EXINIT
export FPATH
export GUIDEHOME
export HISTSIZE
export HOME
export HOSTTYPE
export HZ
export LD_LIBRARY_PATH
export LIBWWW_PERL
export LINES
export LOGNAME
export MAIL
export MAILCHECK
export MANPATH
export MOTIFHOME
export NETHACKOPTIONS
export NNTPSERVER
export OBERON
export OPENWINHOME
export OS
export OSTYPE
export PATH
export PGP_SYSTEM_DIR
export PLATFORM
export POOL
export PRINTER
export PROMPT
export PS1
export PWD
export REPOSITORY
export RNINIT
export SAVEDDIR
export SHELL
export SHLVL
export SNIFF_DIR
export TERM
export TZ
export UIDPATH
export VISUAL
export WINDOWID
export WORKMANDB
export WORKSPACE
export WWW_HOME
export XAPPLRESDIR
export XGLHOME
export XILHOME
export XMBINDIR
export bash_startup_prefer_public
export bash_startup_prefer_x11
export ftp_proxy
export gopher_proxy
export http_proxy
export no_proxy
export wais_proxy

# Setopt.

setopt bgnice
setopt hashcmds
setopt hashdirs
setopt hashlistall
setopt notify

# END zsh saveset

# END zsh saveset

-- 
###############################################################################
Carsten Friedrich			             friedric@fmi.uni-passau.de

"I have the impression that, to penguins, man is just another penguin -- 
different, less predictable, occasionally violent, but tolerable company
when he sits still and minds his own business." (B. Stonehouse)
###############################################################################

