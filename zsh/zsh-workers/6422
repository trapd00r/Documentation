From zsh-workers-return-6422-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Jun 01 12:12:19 1999
Return-Path: <zsh-workers-return-6422-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 25804 invoked from network); 1 Jun 1999 12:12:17 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 1 Jun 1999 12:12:17 -0000
Received: (qmail 25378 invoked by alias); 1 Jun 1999 12:12:08 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 6422
Received: (qmail 25371 invoked from network); 1 Jun 1999 12:12:08 -0000
From: "Andrej Borsenkow" <borsenkow.msk@sni.de>
To: "ZSH workers mailing list" <zsh-workers@sunsite.auc.dk>
Subject: Force globbing inside of parameter substitution
Date: Tue, 1 Jun 1999 16:11:08 +0400
Message-ID: <001701beac27$d4c820e0$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2314.1300
Importance: Normal

Suppose, I need a list of files sperated by comma. The straightforward way
would be something like

${(j/,/)${:-*}}

Unfortunately, it does not work - it simply results in single `*'.

Using ${(j/,/)$(print *)} does _almost_ wat I'd like ... with two caveats:

1. the file names with spaces are mangled
2. it is potentially less efficient.

Is the use of temporary array the only possibility? (I am mostly interested
in interactive usage, where it should go into one command line).

As a side note: it looks, like GLOB_SUBST does not apply in the above case.
I have globsubst off, but the result of ${:-*} is still globbed. Is it
intentional? I would deem it as a bug.

/andrej

