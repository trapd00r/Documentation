From zsh-users-return-3042-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Apr 27 11:07:28 2000
Return-Path: <zsh-users-return-3042-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 15730 invoked from network); 27 Apr 2000 11:07:27 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 27 Apr 2000 11:07:27 -0000
Received: (qmail 20232 invoked by alias); 27 Apr 2000 11:06:42 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 3042
Received: (qmail 20219 invoked from network); 27 Apr 2000 11:06:42 -0000
Date: Thu, 27 Apr 2000 13:05:44 +0200 (MET DST)
Message-Id: <200004271105.NAA14323@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-users@sunsite.auc.dk
In-reply-to: "Andrej Borsenkow"'s message of Thu, 27 Apr 2000 14:11:58 +0400
Subject: Re: Q about new completion (how to create several match sets)


Andrej Borsenkow wrote:

> This goes to zsh-users as it may be of common interest. Bear in mind,
> this refers to the current 3.1.6 version from CVS.

3.1.7-pre-1, more precisely.

> In current form _configure completes both --with-option
> and --without-option in one shot. It means, that I always get at least
> two matches and (in my settings) cursor is placed after --with so I have
> to use additional keystroke to jump to the end of line.

Hm, this is ugly, but should it be enough to keep from supplying match 
specs?

> Is it possible to _externally_ (without changing _configure and/or
> _arguments, but with styles) configure completion system so, that I get
> two set of matches - first all --with-* and then all --without-* and can
> select either of them? This includes of course different status lines
> etc.

Sure:

  zstyle ':completion:*:*:configure:*' tag-order \
      'options:-with:with\ options options:-other:other\ options' \
      'options:-without:without\ options'
  zstyle ':completion:*:options-with' ignored-patterns '^--with-*'
  zstyle ':completion:*:options-without' ignored-patterns '^--without-*'
  zstyle ':completion:*:options-other' ignored-patterns '--with(|out)-*'

(Hmmmmm, tag labels. ;-)

This says to first complete options two times, once using the tag
`options-with' and once using the tag `options-other'. The
ignored-patterns for these tags then make sure that you don't get the
`--without-*' options. The second value of the tag-order style says to 
complete options using the tag `options-without' and there the
ignored-patterns says that only the `--without-*' options are to be
completed.

Actually, this is why we invented tag labels.

I'm not completely sure that I know what you mean by `select either of 
them', but of course completing after `--without-' will take the
matches from the second set because in the first one nothing matches,
and then there is _next_tags, bound to ^Xn to go to the next set of
tags in the tag-order style.

And for all of this and more and just to rub it in: have a look at
Peter's Guide, really good reading.

> Is it possible to set different completers for one command only?

No. I once asked if we should take the code that sets up the command
field of the context from _normal and put it into _main_complete. I
even once wrote that, there was a problem which I can't remember now,
but finally it worked, so I guess it would still be possible.

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

