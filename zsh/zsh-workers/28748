From zsh-workers-return-28748-mason-zsh=primenet.com.au@zsh.org Fri Feb 11 18:36:34 2011
Return-Path: <zsh-workers-return-28748-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 15887 invoked by alias); 11 Feb 2011 18:36:34 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28748
Received: (qmail 1532 invoked from network); 11 Feb 2011 18:36:33 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <110211103618.ZM686@torch.brasslantern.com>
Date: Fri, 11 Feb 2011 10:36:18 -0800
In-reply-to: <110211092602.ZM485@torch.brasslantern.com>
Comments: In reply to Bart Schaefer <schaefer@brasslantern.com>
 "Re: loading user startup files for zsh scripts" (Feb 11,  9:26am)
References: <19792.22365.139876.599478@gargle.gargle.HOWL>
	<110207213357.ZM22407@torch.brasslantern.com>	<m3ipwue9m2.fsf@klanderman.net>
	<20110208172056.6a985c90@pwslap01u.europe.root.pri>
	<m362sudov6.fsf@klanderman.net>	<110208205856.ZM24066@torch.brasslantern.com>
	<m3tygdci4b.fsf@klanderman.net>	<110209085358.ZM29014@torch.brasslantern.com>
	<m3d3mzg8d6.fsf@klanderman.net>	<110210095253.ZM30860@torch.brasslantern.com>
	<m3ipwrcpo2.fsf@klanderman.net>	<110210192945.ZM31349@torch.brasslantern.com>
	<m339nucz7o.fsf@klanderman.net>	<110211092602.ZM485@torch.brasslantern.com>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-workers@zsh.org
Subject: Re: loading user startup files for zsh scripts
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Feb 11,  9:26am, Bart Schaefer wrote:
}
}     print -l -- $(</proc/$$/cmdline)
} 
} But it's true you would then have to skip over shell options to find
} the script name.  I don't suppose anyone out there has written a
} zparseopts spec that matches the zsh invocation-time option set?

Hmm, you really don't need to parse from the left, now that I think on it.

IFS=$'\0' cmdline=( $(</proc/$$/cmdline) )
(( scriptword = $#cmdline - ARGC - 1 ))
if [[ scriptword -gt 1 &&
      opt$cmdline[scriptword-1] != opt-c &&
      -r $cmdline[scriptword] ]]
then print This shell seems to be running script $cmdline[scriptword]
else print This shell does not seem to be running a script
fi

