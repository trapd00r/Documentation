From zsh-users-return-12277-mason-zsh=primenet.com.au@sunsite.dk Mon Dec 03 17:27:16 2007
Return-Path: <zsh-users-return-12277-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16441 invoked from network); 3 Dec 2007 17:27:05 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.3 (2007-08-08) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.3
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 3 Dec 2007 17:27:05 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 95115 invoked from network); 3 Dec 2007 17:26:58 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 3 Dec 2007 17:26:58 -0000
Received: (qmail 18410 invoked by alias); 3 Dec 2007 17:26:38 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12277
Received: (qmail 18391 invoked from network); 3 Dec 2007 17:26:37 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 3 Dec 2007 17:26:37 -0000
Received: (qmail 93723 invoked from network); 3 Dec 2007 17:26:37 -0000
Received: from vms048pub.verizon.net (206.46.252.48)
  by a.mx.sunsite.dk with SMTP; 3 Dec 2007 17:26:30 -0000
Received: from torch.brasslantern.com ([71.121.18.67])
 by vms048.mailsrvcs.net (Sun Java System Messaging Server 6.2-6.01 (built Apr
 3 2006)) with ESMTPA id <0JSH0070THS3HLDF@vms048.mailsrvcs.net> for
 zsh-users@sunsite.dk; Mon, 03 Dec 2007 11:26:29 -0600 (CST)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id lB3HQQQv004369	for
 <zsh-users@sunsite.dk>; Mon, 03 Dec 2007 09:26:27 -0800
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id lB3HQQ1n004368	for zsh-users@sunsite.dk; Mon,
 03 Dec 2007 09:26:26 -0800
Date: Mon, 03 Dec 2007 09:26:24 -0800
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: command substitution: zsh waits until command exits
In-reply-to: <20071203011131.GT5855@prunille.vinc17.org>
To: zsh-users@sunsite.dk
Message-id: <071203092626.ZM4367@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <20071130133943.GG5855@prunille.vinc17.org>
	<071130073719.ZM18090@torch.brasslantern.com>
	<20071130163155.GL5855@prunille.vinc17.org>
	<071130185827.ZM18402@torch.brasslantern.com>
	<20071202021652.GO5855@prunille.vinc17.org>
	<071201210744.ZM20044@torch.brasslantern.com>
	<20071202152254.GP5855@prunille.vinc17.org>
	<071202102717.ZM2757@torch.brasslantern.com>
	<20071203011131.GT5855@prunille.vinc17.org>
Comments: In reply to Vincent Lefevre <vincent@vinc17.org>
 "Re: command substitution: zsh waits until command exits" (Dec  3,  2:11am)

On Dec 3,  2:11am, Vincent Lefevre wrote:
}
} In which case, you should agree that a POSIX shell may do the
} substitution while the command has not terminated (if the standard
} output has been closed, of course).

OK, so I've now actually looked up the POSIX spec (whichever version
of it is online at opengroup.org).

I find that I don't agree, because 2.6.3 is not the only section that
deals with command substitution behavior.  A command substitution is
a subshell environment and you haven't created any asynchronous lists
so I think the shell must wait for the subshell to complete before
executing the next command.  E.g., in 2.9.1:

   If there is no command name, but the command contained a command
   substitution, the command shall complete with the exit status of
   the last command substitution performed.

If the shell were not obligated to wait, it wouldn't have the exit
status of the command substitution, and it would be unclear what is
meant by "the last performed."  It would be unreasonable to expect
that command substitutions behave asynchronously only in the absence
of a non-command-substitution in the command word position.

Also in 2.9.1, it says that

   2. The words that are not variable assignments or redirections shall
   be expanded ...

and then

   4. Each variable assignment shall be expanded ...

(If I previously knew that, I'd forgotten.)  Thus

  rm -f /tmp/first
  LAST=$(cat /tmp/first) printenv $(echo LAST & echo first > /tmp/first)

is IMO required to output "first", which again would not be determinable
if command substitution were not waited for.  Zsh gets this one right.

} Now, in both cases, zsh should document what it's doing.

I'm going to leave that decision up to someone else.  Documenting every
possible interpretation is a waste of bits and effort, but there'd be
something to be said for never repeating this discussion again.
 
} > echo $(coproc xterm -e 'zsh -fic "tty >&3 ; exec sleep 999999"' 3>&1 ;
} >        read -E <&p)
} > 
} > Or this, which doesn't rely on coproc:
} > 
} > echo $({ xterm -e 'zsh -fic "tty >&3 ; exec sleep 999999"' 3>&1 & } |
} >        read -E)
} 
} Both are working. Is there one of them that is better?

Not really.  The second one is more portable, except for the reference to
zsh.

-- 

