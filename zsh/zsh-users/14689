From zsh-users-return-14689-mason-zsh=primenet.com.au@zsh.org Tue Dec 22 22:32:44 2009
Return-Path: <zsh-users-return-14689-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 13527 invoked by alias); 22 Dec 2009 22:32:44 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14689
Received: (qmail 6801 invoked from network); 22 Dec 2009 22:32:43 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <091222143232.ZM5820@torch.brasslantern.com>
Date: Tue, 22 Dec 2009 14:32:30 -0800
In-reply-to: <alpine.LNX.2.01.0912221451530.17951@hp.internal>
Comments: In reply to "Benjamin R. Haskell" <zsh@benizi.com>
 "Re: Autocompletion doesn't work with kanji" (Dec 22,  3:09pm)
References: <4B30085F.2010505@christoph-d.de>
	<alpine.LNX.2.01.0912220049480.25312@hp.internal>
	<091222013609.ZM4589@torch.brasslantern.com>	<4B30D92C.6070502@christoph-d.de>
	<091222082525.ZM5379@torch.brasslantern.com>	<4B310188.6040506@christoph-d.de>
	<alpine.LNX.2.01.0912221236100.17951@hp.internal>
	<4B3107AB.1050003@christoph-d.de>
	<alpine.LNX.2.01.0912221451530.17951@hp.internal>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-users@zsh.org
Subject: Re: Autocompletion doesn't work with kanji
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Dec 22,  3:09pm, Benjamin R. Haskell wrote:
}
} For various SOMETHINGs:
} 
} CURSOR=$CURSOR        # doesn't break
} print -lr $CURSOR >&2 # does    break
} _throwaway=$CURSOR    # does    break

<style class="spock">Fascinating.</style>

$CURSOR is implemented by zle_params.c:get_cursor, which calls
stringaszleline(zlemetaline, ...) which in turn eventually calls
unmetafy() on its first argument.  This is probably messing up
something that depends on zlemetaline later.

Expanding a shell parameter should not be calling a function that has
a modify-in-place side-effect on the value of a C global variable.

(I have no idea why CURSOR=$CURSOR doesn't break unless it's just
silently failing because CURSOR is read-only during completion.)

This thread should move to zsh-workers for patch suggestions, etc.

-- 

