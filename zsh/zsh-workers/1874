From zsh-workers-request@euclid.skiles.gatech.edu  Fri Aug  2 00:20:55 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by coral.primenet.com.au (8.7.5/8.7.3) with ESMTP id AAA00436 for <mason@primenet.com.au>; Fri, 2 Aug 1996 00:20:51 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id KAA08342; Thu, 1 Aug 1996 10:08:33 -0400 (EDT)
Resent-Date: Thu, 1 Aug 1996 10:08:33 -0400 (EDT)
From: Zoltan Hidvegi <hzoli@cs.elte.hu>
Message-Id: <199608011407.QAA27343@bolyai.cs.elte.hu>
Subject: Re: Here docs
To: pws@ifh.de (Peter Stephenson)
Date: Thu, 1 Aug 1996 16:07:40 +0200 (MET DST)
Cc: zsh-workers@math.gatech.edu
In-Reply-To: <199608011349.PAA09906@hydra.ifh.de> from Peter Stephenson at "Aug 1, 96 03:49:39 pm"
Organization: Dept. of Comp. Sci., Eotvos University, Budapest, Hungary
Phone: (36 1)2669833 ext: 2667, home phone: (36 1) 2752368
X-Mailer: ELM [version 2.4ME+ PL16 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"Memfq3.0.D22.XfB0o"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/1874
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Peter wrote:
> I expect Zoltan's already fixed this, but anyway...

Yes :-).

> > In this case, the backslash in the input will behave as the
> > backslash inside double-quotes (see Section 2.2.3) However, the
> > double-quote character (") will not be treated specially within a
> > here-document, except when the double-quote appears within $(), ``, or
> > ${}.
> 
> That's clear enough for here documents... the question is what should
> happen at other times when zsh is parsing something in the same way.
> This is usually when tokenising a string that hadn't already been

Here is my patch, a bit different from yours.  It fixes some other
inconsistencies and it also handles " in ${...} as reuired above.  When I
read POSIX I was pleased to know that here ducuments should be parsed the
same way as double-quoted strings, and relaxed knowing that zsh does
exactly that.  And indeed the problem was not really in the here-document
code.  I did not notice this problem because configure coming with zsh
always ran fine.

Zoltan


*** Src/lex.c	1996/07/24 14:39:19	2.40
--- Src/lex.c	1996/08/01 13:47:44
***************
*** 996,1008 ****
      while (((c = hgetc()) != endchar || bct ||
  	    (math && ((pct > 0) || (brct > 0))) ||
  	    intick) && !lexstop) {
  	switch (c) {
  	case '\\':
  	    c = hgetc();
! 	    if (c != '\n')
! 		add(c == '$' || c == '\\' || (c == '}' && !intick && bct) ||
! 		    c == '\"' || c == '`' ? Bnull : '\\');
! 	    else if (sub || unset(CSHJUNKIEQUOTES) || endchar != '"')
  		continue;
  	    break;
  	case '\n':
--- 996,1015 ----
      while (((c = hgetc()) != endchar || bct ||
  	    (math && ((pct > 0) || (brct > 0))) ||
  	    intick) && !lexstop) {
+       cont:
  	switch (c) {
  	case '\\':
  	    c = hgetc();
! 	    if (c != '\n') {
! 		if (c == '$' || c == '\\' || (c == '}' && !intick && bct) ||
! 		    c == endchar || c == '`')
! 		    add(Bnull);
! 		else {
! 		    /* lexstop is implicitely handled here */
! 		    add('\\');
! 		    goto cont;
! 		}
! 	    } else if (sub || unset(CSHJUNKIEQUOTES) || endchar != '"')
  		continue;
  	    break;
  	case '\n':
***************
*** 1092,1098 ****
  	    err = (!brct-- && math);
  	    break;
  	case '"':
! 	    if (intick || !endchar)
  		break;
  	    if (bct) {
  		add(Dnull);
--- 1099,1105 ----
  	    err = (!brct-- && math);
  	    break;
  	case '"':
! 	    if (intick || (!endchar && !bct))
  		break;
  	    if (bct) {
  		add(Dnull);

