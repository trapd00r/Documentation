From zsh-workers-request@math.gatech.edu  Mon Oct  9 05:40:42 1995
Received: from gatech.edu (gatech.edu [130.207.244.244]) by werple.net.au (8.7/8.7) with SMTP id FAA28204 for <mason@werple.mira.net.au>; Mon, 9 Oct 1995 05:40:38 +1000 (EST)
Received: from math (math.skiles.gatech.edu) by gatech.edu with SMTP id AA29420
  (5.65c/Gatech-10.0-IDA for <mason@werple.mira.net.au>); Sun, 8 Oct 1995 15:39:55 -0400
Received: by math (5.x/SMI-SVR4)
	id AA14976; Sun, 8 Oct 1995 15:36:13 -0400
Resent-Date: Sun, 8 Oct 1995 20:38:54 +0100 (BST)
Old-Return-Path: <zefram@dcs.warwick.ac.uk>
From: Zefram <A.Main@dcs.warwick.ac.uk>
Message-Id: <9843.199510081938@stone.dcs.warwick.ac.uk>
Subject: Re: ZSH 2.5.03 BUS ERROR
To: cbatson@unicron.dam.com
Date: Sun, 8 Oct 1995 20:38:54 +0100 (BST)
Cc: zsh-workers@math.gatech.edu
In-Reply-To: <199510080744.CAA12676@unicron.dam.com> from "cbatson@unicron.dam.com" at Oct 8, 95 02:44:11 am
X-Loop: zefram@dcs.warwick.ac.uk
X-Stardate: [-31]6409.09
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-Id: <"0n6oz3.0.wf3.iW2Um"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/431
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

>2) cd /tmp
>3) mkdir xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
>4) cd  xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
>5) go to step 3 and repeat until crash
>
>You may know about this already. The problem is in the file zle_misc.c,
>the function putprompt. buf0, buf1, and buf2, which apparently store
>the prompt string, are hardcoded to a length of 256. If your prompt
>happens to contain more than 256 characters, it will attempt to write
>into strange areas of memory. Ideally, the buffers should be
>dynamically allocated, or at least stradd and tstradd should check to
>make sure they're not going too far.
>
>The quick fix is to up the maximum prompt length, say to MAXPATHLEN*2,
>which should be more than sufficient. However, if you perform the same
>steps outlined above, it still crashes, apparently due to the path
>string having a length greater than MAXPATHLEN.

The prompt problem has been fixed.  Patches are available (and should
be in the next release) which make the prompt buffers be dynamically
allocated.  The general problem of pathnames exceeding MAXPATHLEN is
still a problem -- I plan to fix it, but there are a *lot* of
fixed-size buffers for pathnames.

-zefram

