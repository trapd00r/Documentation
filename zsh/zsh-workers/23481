From zsh-workers-return-23481-mason-zsh=primenet.com.au@sunsite.dk Tue May 29 09:38:17 2007
Return-Path: <zsh-workers-return-23481-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 27851 invoked from network); 29 May 2007 09:38:15 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.0 (2007-05-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=no
	version=3.2.0
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 29 May 2007 09:38:15 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 47347 invoked from network); 29 May 2007 09:38:09 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 29 May 2007 09:38:09 -0000
Received: (qmail 25006 invoked by alias); 29 May 2007 09:38:05 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 23481
Received: (qmail 24996 invoked from network); 29 May 2007 09:38:05 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 29 May 2007 09:38:05 -0000
Received: (qmail 47004 invoked from network); 29 May 2007 09:38:05 -0000
Received: from smtp02.lnh.mail.rcn.net (207.172.157.102)
  by a.mx.sunsite.dk with SMTP; 29 May 2007 09:38:01 -0000
Received: from mr08.lnh.mail.rcn.net ([207.172.157.28])
  by smtp02.lnh.mail.rcn.net with ESMTP; 29 May 2007 05:38:00 -0400
Received: from smtp01.lnh.mail.rcn.net (smtp01.lnh.mail.rcn.net [207.172.4.11])
	by mr08.lnh.mail.rcn.net (MOS 3.8.3-GA)
	with ESMTP id ISA77629;
	Tue, 29 May 2007 05:37:59 -0400 (EDT)
Received: from 209-6-218-101.c3-0.nwt-ubr2.sbo-nwt.ma.cable.rcn.com (HELO samwise.rcn.com) ([209.6.218.101])
  by smtp01.lnh.mail.rcn.net with ESMTP; 29 May 2007 05:37:56 -0400
Received: by samwise.rcn.com (Postfix, from userid 1000)
	id D72152407B0; Tue, 29 May 2007 05:37:58 -0400 (EDT)
To: zsh-workers@sunsite.dk
Subject: Test failure in test V01zmodload.tst
From: Vin Shelton <acs@alumni.princeton.edu>
Organization: EtherSoft, Inc
Date: Tue, 29 May 2007 05:37:58 -0400
Message-ID: <878xb8ezrd.fsf@alumni.princeton.edu>
Lines: 13
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="=-=-="
X-Junkmail-Status: score=10/50, host=mr08.lnh.mail.rcn.net
X-Junkmail-SD-Raw: score=unknown,
	refid=str=0001.0A090202.465BF477.00B8,ss=1,fgs=0,
	ip=207.172.4.11,
	so=2006-12-09 10:45:40,
	dmn=5.1.5/2006-01-31

--=-=-=
Content-Disposition: attachment; filename=V01.out
Content-Description: Output from V01zmodload

if test -n "gcc"; then \
	  cd .. && DESTDIR= \
	  make MODDIR=`pwd`/Test/Modules install.modules > /dev/null; \
	fi
mkdir /opt/build/zsh-2007-05-28-2139/Test/Modules
mkdir /opt/build/zsh-2007-05-28-2139/Test/Modules/zsh
mkdir /opt/build/zsh-2007-05-28-2139/Test/Modules/zsh/net
for f in /opt/src/zsh-2007-05-28-2139/Test/V01*.ztst; do \
	  ZTST_exe=../Src/zsh \
	    ../Src/zsh +Z -f /opt/src/zsh-2007-05-28-2139/Test/ztst.zsh $f; \
	done
/opt/src/zsh-2007-05-28-2139/Test/V01zmodload.ztst: starting.
ZTST_getsect: read section name: prep
ZTST_getchunk: read code chunk:
 mods=()
 deps="$(zmodload -Ld)"
 while read name modfile link auto load funcs
 do
   [[ $name == \#* ]] && continue
   eval "$name $modfile $link $auto $load"
   [[ $link == no ]] && continue
   mods=($mods $name)
   moddeps=
   modfile=$ZTST_srcdir/../$modfile
   eval ${${${(f)"$(<$modfile)"}[(r)moddeps=*]}:-:}
   [[ -n $moddeps ]] && zmodload -d $name $=moddeps
 done < $ZTST_testdir/../config.modules
ZTST_execchunk: status 0
ZTST_getchunk: read code chunk:
 zmodunload() {
   local m n=$#
   (( n == 0 )) && return 0
   for m
   do
     if [[ -z ${(M)${(f)"$(zmodload -d)"}:#*:* $m( *|)} ]]
     then
       zmodload -u $m && zmodload -ud $m || return 1
       shift
     else
       set $@[2,-1] $m
     fi
   done
   if (( $# < n ))
   then
     zmodunload $*
   else
     zmodload -u $*
   fi
 }
ZTST_execchunk: status 0
ZTST_getchunk: read code chunk:

ZTST_getsect: read section name: test
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:

ZTST_test: examining line:
 zmodload -L
ZTST_getchunk: read code chunk:
 zmodload -L
ZTST_test: examining line:
>zmodload zsh/main
ZTST_getredir: read redir for '>':
zmodload zsh/main
zmodload zsh/parameter
ZTST_test: examining line:

Running test: List the loaded modules
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.24249, output: /tmp/zsh.ztst.out.24249, error: /tmp/zsh.ztst.terr.24249
ZTST_execchunk: status 0
ZTST_test: test produced standard output:
zmodload zsh/main
zmodload zsh/parameter
ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:
 zmodload zsh/main
ZTST_getchunk: read code chunk:
 zmodload zsh/main
ZTST_test: examining line:

Running test: Test reloading an already-loaded module
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.24249, output: /tmp/zsh.ztst.out.24249, error: /tmp/zsh.ztst.terr.24249
ZTST_execchunk: status 0
ZTST_test: test produced standard output:

ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:

ZTST_test: examining line:
 for m in $mods
ZTST_getchunk: read code chunk:
 for m in $mods
 do
   zmodload -i $m || mods[(r)$m]=()
 done
ZTST_test: examining line:

Running test: Test loading of all compiled modules
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.24249, output: /tmp/zsh.ztst.out.24249, error: /tmp/zsh.ztst.terr.24249
ZTST_execchunk: status 0
ZTST_test: test produced standard output:
The example module has now been set up.
ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:
 zmodload -e $mods
ZTST_getchunk: read code chunk:
 zmodload -e $mods
ZTST_test: examining line:

Running test: Check that zsh believes the modules did load
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.24249, output: /tmp/zsh.ztst.out.24249, error: /tmp/zsh.ztst.terr.24249
ZTST_execchunk: status 0
ZTST_test: test produced standard output:

ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:

ZTST_test: examining line:
 zmodload -i bogus/notamodule
ZTST_getchunk: read code chunk:
 zmodload -i bogus/notamodule
ZTST_test: examining line:

Running test: Check that loading a nonexistent module fails
ZTST_test: expecting status: 1
Input: /tmp/zsh.ztst.in.24249, output: /tmp/zsh.ztst.out.24249, error: /tmp/zsh.ztst.terr.24249
ZTST_execchunk: status 1
ZTST_test: test produced standard output:

ZTST_test: and standard error:
(eval):1: failed to load module: bogus/notamodule
Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:
 zmodload -u bogus/notamodule
ZTST_getchunk: read code chunk:
 zmodload -u bogus/notamodule
ZTST_test: examining line:

Running test: Check that unloading a nonexistent module fails
ZTST_test: expecting status: 1
Input: /tmp/zsh.ztst.in.24249, output: /tmp/zsh.ztst.out.24249, error: /tmp/zsh.ztst.terr.24249
ZTST_execchunk: status 1
ZTST_test: test produced standard output:

ZTST_test: and standard error:
(eval):zmodload:1: no such module bogus/notamodule
Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:

ZTST_test: examining line:
 zmodload -ab bogus
ZTST_getchunk: read code chunk:
 zmodload -ab bogus
 zmodload -ub bogus
ZTST_test: examining line:

Running test: Add/remove autoloaded builtin
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.24249, output: /tmp/zsh.ztst.out.24249, error: /tmp/zsh.ztst.terr.24249
ZTST_execchunk: status 0
ZTST_test: test produced standard output:

ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:
 zmodload -ac bogus
ZTST_getchunk: read code chunk:
 zmodload -ac bogus
 zmodload -uc bogus
ZTST_test: examining line:

Running test: Add/remove autoloaded condition
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.24249, output: /tmp/zsh.ztst.out.24249, error: /tmp/zsh.ztst.terr.24249
ZTST_execchunk: status 0
ZTST_test: test produced standard output:

ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:
 zmodload -ap bogus
ZTST_getchunk: read code chunk:
 zmodload -ap bogus
 zmodload -up bogus
ZTST_test: examining line:

Running test: Add/remove autoloaded parameter
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.24249, output: /tmp/zsh.ztst.out.24249, error: /tmp/zsh.ztst.terr.24249
ZTST_execchunk: status 0
ZTST_test: test produced standard output:

ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:
 zmodload -af bogus
ZTST_getchunk: read code chunk:
 zmodload -af bogus
 zmodload -uf bogus
ZTST_test: examining line:

Running test: Add/remove autoloaded math function
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.24249, output: /tmp/zsh.ztst.out.24249, error: /tmp/zsh.ztst.terr.24249
ZTST_execchunk: status 0
ZTST_test: test produced standard output:

ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:

ZTST_test: examining line:
 if [[ $mods[(r)zsh/example] == zsh/example ]]; then
ZTST_getchunk: read code chunk:
 if [[ $mods[(r)zsh/example] == zsh/example ]]; then
   zmodload -u zsh/example
   zmodload -ab zsh/example example
   builtin example
   zmodload -e zsh/example
 else print -u8 Warning: zsh/example not linked: not checking autoloading
 fi
ZTST_test: examining line:

Running test: Autoload a module via a builtin
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.24249, output: /tmp/zsh.ztst.out.24249, error: /tmp/zsh.ztst.terr.24249
ZTST_execchunk: status 0
ZTST_test: test produced standard output:
Thank you for using the example module.  Have a nice day.
The example module has now been set up.
Options: 
Arguments:
Name: example

Integer Parameter: 42
String Parameter: example
Array Parameter: example array
ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:
 if [[ $mods[(r)zsh/example] == zsh/example ]]; then
ZTST_getchunk: read code chunk:
 if [[ $mods[(r)zsh/example] == zsh/example ]]; then
   zmodload -u zsh/example
   zmodload -ac -I zsh/example ex
   [[ exam -ex ple ]]
   zmodload -e zsh/example
 else :
 fi
ZTST_test: examining line:

Running test: Autoload a module via a condition
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.24249, output: /tmp/zsh.ztst.out.24249, error: /tmp/zsh.ztst.terr.24249
ZTST_execchunk: status 0
ZTST_test: test produced standard output:
Thank you for using the example module.  Have a nice day.
The example module has now been set up.
ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:
 if [[ $mods[(r)zsh/example] == zsh/example ]]; then
ZTST_getchunk: read code chunk:
 if [[ $mods[(r)zsh/example] == zsh/example ]]; then
   zmodload -u zsh/example
   zmodload -ap zsh/example exint
   : $exint
   zmodload -e zsh/example
 else :
 fi
ZTST_test: examining line:

Running test: Autoload a module via a parameter
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.24249, output: /tmp/zsh.ztst.out.24249, error: /tmp/zsh.ztst.terr.24249
ZTST_execchunk: status 0
ZTST_test: test produced standard output:
Thank you for using the example module.  Have a nice day.
The example module has now been set up.
ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:
 if [[ $mods[(r)zsh/example] == zsh/example ]]; then
ZTST_getchunk: read code chunk:
 if [[ $mods[(r)zsh/example] == zsh/example ]]; then
   zmodload -u zsh/example
   zmodload -af zsh/example sum
   (( sum(1) ))
   zmodload -e zsh/example
 else :
 fi
ZTST_test: examining line:

Running test: Autoload a module via a math function
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.24249, output: /tmp/zsh.ztst.out.24249, error: /tmp/zsh.ztst.terr.24249
ZTST_execchunk: status 0
ZTST_test: test produced standard output:
Thank you for using the example module.  Have a nice day.
The example module has now been set up.
ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:

ZTST_test: examining line:
 zmodload -A example=zsh/example
ZTST_getchunk: read code chunk:
 zmodload -A example=zsh/example
 zmodload -A
ZTST_test: examining line:
>example -> zsh/example
ZTST_getredir: read redir for '>':
example -> zsh/example
ZTST_test: examining line:

Running test: Test creating a module alias
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.24249, output: /tmp/zsh.ztst.out.24249, error: /tmp/zsh.ztst.terr.24249
ZTST_execchunk: status 0
ZTST_test: test produced standard output:
example -> zsh/example
ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:
 if [[ $mods[(r)zsh/example] == zsh/example ]]; then
ZTST_getchunk: read code chunk:
 if [[ $mods[(r)zsh/example] == zsh/example ]]; then
   zmodload -u example
   zmodload -ab example
   builtin example
   zmodload -e example
 else :
 fi
ZTST_test: examining line:

Running test: Unload/autoload the module via its alias
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.24249, output: /tmp/zsh.ztst.out.24249, error: /tmp/zsh.ztst.terr.24249
ZTST_execchunk: status 0
ZTST_test: test produced standard output:
Thank you for using the example module.  Have a nice day.
The example module has now been set up.
Options: 
Arguments:
Name: example

Integer Parameter: 42
String Parameter: example
Array Parameter: example array
ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:
 zmodload -R example
ZTST_getchunk: read code chunk:
 zmodload -R example
 zmodload -e example
ZTST_test: examining line:

Running test: Delete the module alias again
ZTST_test: expecting status: 1
Input: /tmp/zsh.ztst.in.24249, output: /tmp/zsh.ztst.out.24249, error: /tmp/zsh.ztst.terr.24249
ZTST_execchunk: status 1
ZTST_test: test produced standard output:

ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:

ZTST_test: examining line:
 mods[(r)zsh/main]=()
ZTST_getchunk: read code chunk:
 mods[(r)zsh/main]=()
 zmodunload $mods
 zmodload zsh/parameter
ZTST_test: examining line:

Running test: Unload the modules loaded by this test suite
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.24249, output: /tmp/zsh.ztst.out.24249, error: /tmp/zsh.ztst.terr.24249
make: [check] Error 127 (ignored)
rm -rf Modules .zcompdump

--=-=-=


Peter,

Since your feature test checkin, V01zmodload is failing for me.  I've
attched the output generated with ZTST_verbose set to 2.  Please let
me know if there's more I can do.

HTH,
  Vin

PS. Thanks for all the terrific work you do!

--=-=-=--

