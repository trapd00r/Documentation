From zsh-workers-return-19812-mason-zsh=primenet.com.au@sunsite.dk Wed Apr 21 17:50:58 2004
Return-Path: <zsh-workers-return-19812-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 14566 invoked from network); 21 Apr 2004 17:50:57 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 21 Apr 2004 17:50:57 -0000
Received: (qmail 25381 invoked by alias); 21 Apr 2004 17:50:23 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 19812
Received: (qmail 25358 invoked from network); 21 Apr 2004 17:50:22 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 21 Apr 2004 17:50:22 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [130.225.247.86] by sunsite.dk (MessageWall 1.0.8) with SMTP; 21 Apr 2004 17:50:22 -0000
Received: (qmail 16103 invoked from network); 21 Apr 2004 17:50:22 -0000
Received: from lhuumrelay3.lnd.ops.eu.uu.net (62.189.58.19)
  by a.mx.sunsite.dk with SMTP; 21 Apr 2004 17:50:19 -0000
Received: from MAILSWEEPER01.csr.com (mailhost1.csr.com [62.189.183.235])
	by lhuumrelay3.lnd.ops.eu.uu.net (8.11.0/8.11.0) with ESMTP id i3LHnqv20474
	for <zsh-workers@sunsite.dk>; Wed, 21 Apr 2004 17:49:52 GMT
Received: from EXCHANGE02.csr.com (unverified [192.168.137.45]) by MAILSWEEPER01.csr.com
 (Content Technologies SMTPRS 4.3.12) with ESMTP id <T691acf65e6c0a88d01568@MAILSWEEPER01.csr.com> for <zsh-workers@sunsite.dk>;
 Wed, 21 Apr 2004 18:49:25 +0100
Received: from csr.com ([192.168.144.127]) by EXCHANGE02.csr.com with Microsoft SMTPSVC(5.0.2195.6713);
	 Wed, 21 Apr 2004 18:50:35 +0100
To: zsh-workers@sunsite.dk
Subject: Re: Bug/misfeature with autoloaded TRAPxxx functions 
In-reply-to: "Bart Schaefer"'s message of "Wed, 21 Apr 2004 16:06:33 -0000."
             <1040421160633.ZM13944@candle.brasslantern.com> 
Date: Wed, 21 Apr 2004 18:49:52 +0100
Message-ID: <15396.1082569792@csr.com>
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 21 Apr 2004 17:50:35.0561 (UTC) FILETIME=[262D0190:01C427C9]
X-Spam-Checker-Version: SpamAssassin 2.63 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, hits=0.2 required=6.0 tests=EXCUSE_16 autolearn=no 
	version=2.63
X-Spam-Hits: 0.2

Bart Schaefer wrote:
> I worry that there's a race condition between setting sigtrapped[signum]
> and actually adding the function node.

Well, I would guess there are various possible races, many of which were
already in the TRAP function handling.

I suppose this fixes the one you are worried about.

> And what happens if the fucntion
> fails to load?  Does sigtrapped[signum] get cleared somewhere else?

No, but it's consistent with other failed functions.

% autoload spooble
% spooble
zsh: spooble: function definition file not found
% spooble
zsh: spooble: function definition file not found
% autoload TRAPZERR
% false
zsh: TRAPZERR: function definition file not found
% false
zsh: TRAPZERR: function definition file not found

With the current behaviour of retrying, clearing the trap doesn't look
like the right thing to do.

However, there seems to be a bug somewhere anyway.

% autoload TRAPZERR
% echo <TAB>
...
% false
zsh: segmentation fault (core dumped)  ./zsh

Happens whether or not the autoload was successful, interestingly.
Doesn't happen if you successfully autoload the trap before completion
(or define TRAPZERR inline).  Symptom is an empty state->prog->shf in
execautofn.

Also, $functions don't show TRAP functions.

Index: builtin.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/builtin.c,v
retrieving revision 1.117
diff -u -r1.117 builtin.c
--- builtin.c	20 Apr 2004 12:57:35 -0000	1.117
+++ builtin.c	21 Apr 2004 17:23:27 -0000
@@ -2515,12 +2515,13 @@
 	    shf = (Shfunc) zshcalloc(sizeof *shf);
 	    shf->flags = on;
 	    shf->funcdef = mkautofn(shf);
+	    shfunctab->addnode(shfunctab, ztrdup(*argv), shf);
 
 	    if (!strncmp(*argv, "TRAP", 4) &&
 		(signum = getsignum(*argv + 4)) != -1) {
 		if (settrap(signum, shf->funcdef)) {
-		    freeeprog(shf->funcdef);
-		    zfree(shf, sizeof(*shf));
+		    shfunctab->removenode(shfunctab, *argv);
+		    shfunctab->freenode((HashNode)shf);
 		    returnval = 1;
 		    ok = 0;
 		}
@@ -2528,12 +2529,9 @@
 		    sigtrapped[signum] |= ZSIG_FUNC;
 	    }
 
-	    if (ok) {
-		shfunctab->addnode(shfunctab, ztrdup(*argv), shf);
-		if (OPT_ISSET(ops,'X') &&
-		    eval_autoload(shf, shf->nam, ops, func))
-		    returnval = 1;
-	    }
+	    if (ok && OPT_ISSET(ops,'X') &&
+		eval_autoload(shf, shf->nam, ops, func))
+		returnval = 1;
 	} else
 	    returnval = 1;
     }
-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR Ltd., Science Park, Milton Road,
Cambridge, CB4 0WH, UK                          Tel: +44 (0)1223 692070


**********************************************************************
This email and any files transmitted with it are confidential and
intended solely for the use of the individual or entity to whom they
are addressed. If you have received this email in error please notify
the system manager.

This footnote also confirms that this email message has been swept by
MIMEsweeper for the presence of computer viruses.

www.mimesweeper.com
**********************************************************************

