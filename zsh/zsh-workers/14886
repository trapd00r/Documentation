From zsh-workers-return-14886-mason-zsh=primenet.com.au@sunsite.dk Wed Jun 13 08:01:41 2001
Return-Path: <zsh-workers-return-14886-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 637 invoked from network); 13 Jun 2001 08:01:39 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 13 Jun 2001 08:01:39 -0000
Received: (qmail 12843 invoked by alias); 13 Jun 2001 08:01:13 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 14886
Received: (qmail 12826 invoked from network); 13 Jun 2001 08:01:12 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer goliath.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: "ZSH Workers Mailing List" <zsh-workers@sunsite.dk>
Subject: PATCH: "unimplemented" for test suite
Date: Wed, 13 Jun 2001 12:01:30 +0400
Message-ID: <000b01c0f3df$0df301e0$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary="----=_NextPart_000_000C_01C0F400.9504A1E0"
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4522.1200
Importance: Normal

This is a multi-part message in MIME format.

------=_NextPart_000_000C_01C0F400.9504A1E0
Content-Type: text/plain;
	charset="koi8-r"
Content-Transfer-Encoding: 7bit

This is attempt to skip test suite if some prerequisites are missing. I am
not sure how useful it actually is - when test fails with an error it at
least draws some attention.

Any suggestion?

-andrej

------=_NextPart_000_000C_01C0F400.9504A1E0
Content-Type: application/octet-stream;
	name="zsh-test.diff"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="zsh-test.diff"

Index: Test/D03procsubst.ztst=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
RCS file: /cvsroot/zsh/zsh/Test/D03procsubst.ztst,v=0A=
retrieving revision 1.1=0A=
diff -u -r1.1 D03procsubst.ztst=0A=
--- Test/D03procsubst.ztst	2001/04/02 12:33:49	1.1=0A=
+++ Test/D03procsubst.ztst	2001/06/13 07:57:44=0A=
@@ -1,10 +1,16 @@=0A=
 # Tests for process substitution: <(...), >(...) and =3D(...).=0A=
 =0A=
 %prep=0A=
-  mkdir procsubst.tmp=0A=
-  cd procsubst.tmp=0A=
-  print 'First\tSecond\tThird\tFourth' >FILE1=0A=
-  print 'Erste\tZweite\tDritte\tVierte' >FILE2=0A=
+  if grep '#define PATH_DEV_FD' $ZTST_testdir/../config.h > /dev/null =
2>&1 ||=0A=
+     grep '#define HAVE_FIFOS' $ZTST_testdir/../config.h > /dev/null =
2>&1; then=0A=
+    mkdir procsubst.tmp=0A=
+    cd procsubst.tmp=0A=
+    print 'First\tSecond\tThird\tFourth' >FILE1=0A=
+    print 'Erste\tZweite\tDritte\tVierte' >FILE2=0A=
+  else=0A=
+    ZTST_unimplemented=3D"process substitution is not supported"=0A=
+    true=0A=
+  fi=0A=
 =0A=
 %test=0A=
   paste <(cut -f1 FILE1) <(cut -f3 FILE2)=0A=
Index: Test/Y01completion.ztst=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
RCS file: /cvsroot/zsh/zsh/Test/Y01completion.ztst,v=0A=
retrieving revision 1.1=0A=
diff -u -r1.1 Y01completion.ztst=0A=
--- Test/Y01completion.ztst	2001/04/02 12:35:14	1.1=0A=
+++ Test/Y01completion.ztst	2001/06/13 07:57:44=0A=
@@ -7,11 +7,15 @@=0A=
   cd comp.tmp=0A=
 =0A=
   comptestinit -z $ZTST_testdir/../Src/zsh=0A=
-=0A=
-  mkdir dir1=0A=
-  mkdir dir2=0A=
-  touch file1=0A=
-  touch file2=0A=
+  if zmodload -e zsh/zpty ; then=0A=
+    mkdir dir1=0A=
+    mkdir dir2=0A=
+    touch file1=0A=
+    touch file2=0A=
+  else=0A=
+    ZTST_unimplemented=3D"could not load zsh/zpty"=0A=
+    true=0A=
+  fi=0A=
 =0A=
 %test=0A=
 =0A=
Index: Test/Y02compmatch.ztst=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
RCS file: /cvsroot/zsh/zsh/Test/Y02compmatch.ztst,v=0A=
retrieving revision 1.1=0A=
diff -u -r1.1 Y02compmatch.ztst=0A=
--- Test/Y02compmatch.ztst	2001/04/02 12:35:31	1.1=0A=
+++ Test/Y02compmatch.ztst	2001/06/13 07:57:45=0A=
@@ -17,21 +17,25 @@=0A=
   cd match.tmp=0A=
 =0A=
   comptestinit -z $ZTST_testdir/../Src/zsh=0A=
-=0A=
-  list1=3D(IndianRed IndianRed2 IndianRed3 IndianRed4)=0A=
-  test_code () {=0A=
-	matcher=3D$1;=0A=
-	list=3D$2;=0A=
-	code=3D"compdef _tst tst ; _tst () { echo -n '<COMPADD>';compadd -M '"=0A=
-	code=3D"$code$matcher"=0A=
-	code=3D"$code'  - ${(P)list} ; echo  -n '</COMPADD>'"=0A=
-        code=3D"$code; $extra_cmd"=0A=
-        code=3D"$code; echo -n '<INSERT_POSITIONS>'"=0A=
-        code=3D"$code; echo \$compstate[insert_positions]"=0A=
-        code=3D"$code; echo -n '</INSERT_POSITIONS>'"=0A=
-        code=3D"$code}"=0A=
-	comptesteval "$code"=0A=
-  }=0A=
+  if zmodload -e zsh/zpty ; then=0A=
+    list1=3D(IndianRed IndianRed2 IndianRed3 IndianRed4)=0A=
+    test_code () {=0A=
+  	matcher=3D$1;=0A=
+  	list=3D$2;=0A=
+  	code=3D"compdef _tst tst ; _tst () { echo -n '<COMPADD>';compadd -M =
'"=0A=
+  	code=3D"$code$matcher"=0A=
+  	code=3D"$code'  - ${(P)list} ; echo  -n '</COMPADD>'"=0A=
+          code=3D"$code; $extra_cmd"=0A=
+          code=3D"$code; echo -n '<INSERT_POSITIONS>'"=0A=
+          code=3D"$code; echo \$compstate[insert_positions]"=0A=
+          code=3D"$code; echo -n '</INSERT_POSITIONS>'"=0A=
+          code=3D"$code}"=0A=
+  	comptesteval "$code"=0A=
+    }=0A=
+  else=0A=
+    ZTST_unimplemented=3D"could not load zsh/zpty"=0A=
+    true=0A=
+  fi=0A=
 =0A=
 =0A=
 =0A=
Index: Test/Y03arguments.ztst=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
RCS file: /cvsroot/zsh/zsh/Test/Y03arguments.ztst,v=0A=
retrieving revision 1.1=0A=
diff -u -r1.1 Y03arguments.ztst=0A=
--- Test/Y03arguments.ztst	2001/04/02 12:35:48	1.1=0A=
+++ Test/Y03arguments.ztst	2001/06/13 07:57:45=0A=
@@ -7,9 +7,13 @@=0A=
   cd comp.tmp=0A=
 =0A=
   comptestinit -z $ZTST_testdir/../Src/zsh=0A=
-  comptesteval 'compdef _tst tst'=0A=
-  tst_arguments () { comptesteval "_tst () { _arguments ${${(@qq)*}} }" =
}=0A=
-=0A=
+  if zmodload -e zsh/zpty ; then=0A=
+    comptesteval 'compdef _tst tst'=0A=
+    tst_arguments () { comptesteval "_tst () { _arguments ${${(@qq)*}} =
}" }=0A=
+  else=0A=
+    ZTST_unimplemented=3D"could not load zsh/zpty"=0A=
+    true=0A=
+  fi=0A=
 %test=0A=
  tst_arguments ':desc1:(arg1)'=0A=
  comptest $'tst \t\C-wa\t\C-war\t\C-warg\t\C-warg1\t\C-wr\t\C-wx\t \ty =
\t'=0A=
Index: Test/ztst.zsh=0A=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
RCS file: /cvsroot/zsh/zsh/Test/ztst.zsh,v=0A=
retrieving revision 1.15=0A=
diff -u -r1.15 ztst.zsh=0A=
--- Test/ztst.zsh	2001/05/22 09:27:25	1.15=0A=
+++ Test/ztst.zsh	2001/06/13 07:57:45=0A=
@@ -363,8 +363,11 @@=0A=
 print "$ZTST_testname: starting."=0A=
 =0A=
 # Now go through all the different sections until the end.=0A=
+# prep section may set ZTST_unimplemented, in this case the actual=0A=
+# tests will be skipped=0A=
 ZTST_skipok=3D=0A=
-while ZTST_getsect $ZTST_skipok; do=0A=
+ZTST_unimplemented=3D=0A=
+while [[ -z "$ZTST_unimplemented" ]] && ZTST_getsect $ZTST_skipok; do=0A=
   case $ZTST_cursect in=0A=
     prep) if (( ${ZTST_sects[prep]} + ${ZTST_sects[test]} + \=0A=
 	        ${ZTST_sects[clean]} )); then=0A=
@@ -399,6 +402,10 @@=0A=
   esac=0A=
 done=0A=
 =0A=
-(( $ZTST_testfailed )) || print "$ZTST_testname: all tests successful."=0A=
+if [[ -n "$ZTST_unimplemented" ]]; then=0A=
+  print "$ZTST_testname: skipped ($ZTST_unimplemented)"=0A=
+elif (( ! $ZTST_testfailed )); then=0A=
+  print "$ZTST_testname: all tests successful."=0A=
+fi=0A=
 ZTST_cleanup=0A=
 exit $(( ZTST_testfailed ))=0A=

------=_NextPart_000_000C_01C0F400.9504A1E0--

