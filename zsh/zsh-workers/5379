From zsh-workers-return-5379-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Feb 15 09:27:12 1999
Return-Path: <zsh-workers-return-5379-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16579 invoked from network); 15 Feb 1999 09:27:11 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 15 Feb 1999 09:27:11 -0000
Received: (qmail 27744 invoked by alias); 15 Feb 1999 09:26:30 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 5379
Received: (qmail 27737 invoked from network); 15 Feb 1999 09:26:27 -0000
Date: Mon, 15 Feb 1999 10:25:44 +0100 (MET)
Message-Id: <199902150925.KAA22834@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: Peter Stephenson's message of Sat, 13 Feb 1999 14:06:53 +0100
Subject: Re:  PATCH: 3.1.5-pws-7++: #key-* style completions


Peter Stephenson wrote:

> I've just noticed a slight problem with rebinding all completion-type key
> bindings to use the new functions, when combined with #key-* bindings: if
> you do (say) ^D, it will always generate the context-dependent list,
> replacing the list you just made with the #key-* function, whereas if ^D
> was bound as originally, it will use an existing completion list.  However,
> that was imperfect because if there was no existing completion list it
> would generate the one according to the old-style compctl's.  So the
> present arrangement is probably better, but not perfect.  Is there some way
> in shell code of making listing functions use an existing completion
> list where there is one (maybe as an option)?

Of course that's because list-choices and d-c-o-l generate the list
themselves, one might argue that the things from a key-bound special
completion aren't really choices.
Anyway, I was already talking about my wish to add some support for
the surroundings of the completion stuff (control the listing
etc.). This sounds like one of the things we might want to add
there. I'm currently too busy with the existing parts of the code to
think about what would be nice to have acces to, though.

But, maybe, some of you want to make suggestions, so that we can
collect a list?

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

