From zsh-users-return-14585-mason-zsh=primenet.com.au@zsh.org Fri Nov 20 16:02:39 2009
Return-Path: <zsh-users-return-14585-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 7541 invoked by alias); 20 Nov 2009 16:02:38 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14585
Received: (qmail 11921 invoked from network); 20 Nov 2009 16:02:36 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received-SPF: none (ns2.melb.primenet.com.au: domain at benizi.com does not designate permitted sender hosts)
Date: Fri, 20 Nov 2009 11:03:04 -0500 (EST)
From: "Benjamin R. Haskell" <zsh@benizi.com>
To: Zsh Users <zsh-users@zsh.org>
Subject: Zsh functionality similar to Perl 'map'?
Message-ID: <alpine.LNX.2.01.0911201034070.24555@hp.internal>
User-Agent: Alpine 2.01 (LNX 1266 2009-07-14)
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

I frequently find myself diff'ing files that have minor differences I'd 
like to filter out.  E.g. this gem from my historyfile:

diff -ur =(LD_LIBRARY_PATH=/opt/chromium.org/lib ldd /opt/chromium.org/chrome-linux/chrome | perl -lpwe 's/\(.*\)//' | sort | uniq) =(ldd /opt/chromium.org/chrome-linux/chrome | perl -lpwe 's/\(.*\)//' | sort | uniq)

(That is: find the differences in the loaded libraries for the Linux 
version of Chromium, depending on whether LD_LIBRARY_PATH contains 
/opt/chromium.org/lib)

These diffs follow the general pattern:

diff -ur =(do-something-1 | filter) =(do-something-2 | filter)

My question is: is there a nice way to 'map' this, so I don't have to 
type/edit the '| filter' portion twice?  The filter portion often changes, 
and is usually incrementally developed.

(E.g. in the Chromium case, I have the consecutive commands:
diff -ur =(LD_LIBRARY_PATH=/opt/chromium.org/lib ldd /opt/chromium.org/chrome-linux/chrome) =(ldd /opt/chromium.org/chrome-linux/chrome)
diff -ur =(LD_LIBRARY_PATH=/opt/chromium.org/lib ldd /opt/chromium.org/chrome-linux/chrome | perl -lpwe 's/\(.*\)//') =(ldd /opt/chromium.org/chrome-linux/chrome | perl -lpwe 's/\(.*\)//')
diff -ur =(LD_LIBRARY_PATH=/opt/chromium.org/lib ldd /opt/chromium.org/chrome-linux/chrome | perl -lpwe 's/\(.*\)//' | sort | uniq) =(ldd /opt/chromium.org/chrome-linux/chrome | perl -lpwe 's/\(.*\)//' | sort | uniq)
)

I suspect most people's preferred solutions will involve functions... 
something along the lines of:

function filter () { perl -lpwe 's/\(.*\)//' | sort | uniq } ; diff -ur =(blah-1 | filter) =(blah-2 | filter)

But I was wondering if there was another way that didn't disrupt the flow 
as much.  (I dislike that the filter function ends up getting 'fronted', 
to use the linguistic term.  It's kind of like saying, "A butter knife, he 
spread the jam with it and the jelly with it," when I'd rather say, "He 
spread the jam and the jelly with a butter knife," or even "He spread 
with a butter knife the jam and the jelly.")

Plus, this isn't the best or most-general example.  Often the '| filter' 
part is actually run on two different files, rather than piped-in.  (So:
diff -ur =(filter file1) =(filter file2)
)

Ideally, it'd end up as something like:

diff -ur =({do-something1,do-something2} | filter)
or
diff -ur =(filter {file1,file2})

...and, yes, I know that's a *huge* stretch.  And, maybe my Perl bias for 
map'ping everything is showing, but still, figured I'd ask.

Thanks,
Ben

