From zsh-workers-return-18868-mason-zsh=primenet.com.au@sunsite.dk Fri Jul 18 23:21:05 2003
Return-Path: <zsh-workers-return-18868-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 13461 invoked from network); 18 Jul 2003 23:21:04 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 18 Jul 2003 23:21:04 -0000
Received: (qmail 7022 invoked by alias); 18 Jul 2003 23:20:59 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 18868
Received: (qmail 7011 invoked from network); 18 Jul 2003 23:20:59 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 18 Jul 2003 23:20:59 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [216.27.190.146] by sunsite.dk (MessageWall 1.0.8) with SMTP; 18 Jul 2003 23:20:58 -0000
Received: from ceramic.fifi.org (mail@ceramic.fifi.org [216.27.190.147])
	by tantale.fifi.org (8.9.3p2/8.9.3/Debian 8.9.3-21) with ESMTP id QAA24938;
	Fri, 18 Jul 2003 16:20:50 -0700
Received: from phil by ceramic.fifi.org with local (Exim 3.35 #1 (Debian))
	id 19deWv-0003zQ-00; Fri, 18 Jul 2003 16:20:49 -0700
To: Dan Nelson <dnelson@allantgroup.com>
Cc: zsh-workers@sunsite.dk
Subject: Re: local variable assignment and pipelines?
References: <20030718215801.GB37697@dan.emsphone.com>
Mail-Copies-To: nobody
From: Philippe Troin <phil@fifi.org>
Date: 18 Jul 2003 16:20:49 -0700
In-Reply-To: <20030718215801.GB37697@dan.emsphone.com>
Message-ID: <87vftz1kxa.fsf@ceramic.fifi.org>
Lines: 15
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.2
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: Philippe Troin <phil@fifi.org>

Dan Nelson <dnelson@allantgroup.com> writes:

> a=1 | echo $a      -> prints "1" on zsh, prints nothing on ash,pdksh,bash

Even more fascinating:

% a=0; b=0; cat < /dev/null | a=1 | b=1 | cat; echo $a $b      
1 1                                         

Reassuring:

% a=0; b=0; cat < /dev/null | {a=1; while read i; do echo $i; done} | b=1 | cat; echo $a $b 
0 1

Phil.

