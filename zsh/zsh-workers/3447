From zsh-workers-request@euclid.skiles.gatech.edu Mon Aug 18 16:39:33 1997
Return-Path: <zsh-workers-request@euclid.skiles.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 13660 invoked from network); 18 Aug 1997 16:39:31 -0000
Received: from euclid.skiles.gatech.edu (list@130.207.146.50)
  by coral.primenet.com.au with SMTP; 18 Aug 1997 16:39:31 -0000
Received: (from list@localhost)
	by euclid.skiles.gatech.edu (8.8.5/8.8.5) id MAA05666;
	Mon, 18 Aug 1997 12:33:46 -0400 (EDT)
Resent-Date: Mon, 18 Aug 1997 12:33:46 -0400 (EDT)
X-URL: http://ghidora.uwyo.edu/~harres
Date: Mon, 18 Aug 1997 10:28:37 -0600
From: "John M. Harres" <harres@UWYO.EDU>
Subject: Re: zgetcwd patch?
In-reply-to: "Your message of Sun, 17 Aug 1997 22:05:53 PDT."
 <970817220553.ZM23929@candle.brasslantern.com>
To: Bart Schaefer <schaefer@brasslantern.com>
Cc: zsh-workers@math.gatech.edu
Message-id: <199708181628.KAA25863@ghidora.uwyo.edu>
MIME-version: 1.0
X-Mailer: exmh version 2.0zeta 7/24/97
Content-type: text/plain; charset=us-ascii
Resent-Message-ID: <"Xitr-3.0.TO1.fb7-p"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/3447
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

On Sun 17 Aug 1997, Bart Schaefer wrote:

> It doesn't look wrong to me, but I'm not sure why it wasn't used in the
> first place, so I can't say for certain.  My guess is that there was an
> assumption of at most one mount of the same device in any given directory,
> so the second loop is (before your patch) finding any mount point matching
> the device and assuming that must be the one.
> 
> Why is it, again, that de->d_ino != sbuf.st_ino for the dir in question?

I'm not sure.  I originally made the test de->d_ino == ino instead of 
sbuf.st_ino == ino, and this made both loops the same, thus either both failed
or both succeeded.  I decided to try the second, since the info was there as
well, and it worked.

> 
> } I'm also curious under what circumstances these two operations differ (asid
> e
> } from the obvious chdir side effect):
> } 
> } 1. opendir( ".." );
> } 
> } 2. chdir( ".." );
> } 	opendir( "." );
> 
> It could have something to do with crossing NFS mount points.  I can't
> figure out precisely what, though, as I don't have any NFS-mounted
> filesystems to try it on.
> 
> More likely, though, it's just expediency.  The chdir("..") is done so
> that lstat() can be called directly on de->d_name.  There's probably no
> reason that
> 	closedir(dir);
> 	dir = opendir(".");
> could not be replaced by
> 	rewinddir(dir);
> unless maybe there's some implementation of the directory library out
> there that doesn't have rewinddir().

I'm almost convinced that the second loop could be avoided with some careful
if'ing.  On the other hand, the first loop may be to handle the most common
case, and the second to handle that rare case that was biting me.  This might
save performance-wise, as it skips the lstat in most cases, only resorting to
it if it fails to find the current directory without it.

At this point, I'm satisfied leaving it alone, since it works.

Thanks!
John

