From zsh-workers-return-10298-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Mar 28 14:10:46 2000
Return-Path: <zsh-workers-return-10298-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 29650 invoked from network); 28 Mar 2000 14:10:44 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 28 Mar 2000 14:10:44 -0000
Received: (qmail 20953 invoked by alias); 28 Mar 2000 14:10:29 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 10298
Received: (qmail 20938 invoked from network); 28 Mar 2000 14:10:28 -0000
Date: Tue, 28 Mar 2000 16:10:23 +0200 (MET DST)
Message-Id: <200003281410.QAA20885@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: Sven Wischnowsky's message of Tue, 28 Mar 2000 13:52:38 +0200
	(MET DST)
Subject: Re: autoload +X[zk]


I wrote:

> > Note also the handling of the positional parameters. For the first
> > call (i.e.: when the init code from the file is executed) they are not 
> > set. Only for the appended function call are they set up. This is the
> > behaviour the ksh I have here shows.

Of course, it is already different for `normal' ksh-autoloading:

  % cat foo
  foo() { echo foo "$@"; }
  echo init "$@"
  set a b
  % set x y; setopt kshautoload; fpath=(.); autoload foo; foo 1 2
  init 1 2
  foo a b

And with ksh:

  $ set x y; FPATH=.; autoload foo; foo 1 2
  init x y
  foo 1 2

Oh well...

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

