From zsh-workers-return-27492-mason-zsh=primenet.com.au@zsh.org Thu Dec 10 09:51:01 2009
Return-Path: <zsh-workers-return-27492-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 17661 invoked by alias); 10 Dec 2009 09:51:01 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 27492
Received: (qmail 8306 invoked from network); 10 Dec 2009 09:50:48 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-3.0 required=5.0 tests=AWL,BAYES_00,
	RCVD_IN_DNSWL_LOW autolearn=ham version=3.2.5
Received-SPF: none (ns1.primenet.com.au: domain at csr.com does not designate permitted sender hosts)
Date: Thu, 10 Dec 2009 09:49:20 +0000
From: Peter Stephenson <pws@csr.com>
To: zsh-workers@zsh.org
Cc: =?UTF-8?B?SsO2cmc=?= Sommer <joerg@alea.gnuu.de>
Subject: Re: [PATCH] run-help: ugly workaround for run-help-$X with alias
 for $X
Message-ID: <20091210094920.19aca3ce@news01>
In-Reply-To: <a355a85f3bdb0aac910702825eeb0b302ba155a9.1260147415.git.joerg@alea.gnuu.de>
References: <a355a85f3bdb0aac910702825eeb0b302ba155a9.1260147415.git.joerg@alea.gnuu.de>
Organization: CSR
X-Mailer: Claws Mail 3.5.0 (GTK+ 2.12.8; i386-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-OriginalArrivalTime: 10 Dec 2009 09:49:21.0341 (UTC) FILETIME=[0C57EED0:01CA797E]
X-Scanned-By: MailControl A-09-22-10 (www.mailcontrol.com) on 10.68.1.129

On Mon,  7 Dec 2009 01:57:10 +0100
J=C3=B6rg Sommer <joerg@alea.gnuu.de> wrote:
> If you're very lazy and define an alias for git, e.g. g, and have the
> function run-help-git defined, run-help will fail to strip everything up
> to the expanded command from the commandline. In the first call of
> run-help, the alias g gets expanded to git and run-help is called for
> git. But the test of the while loop will never succed, because the
> commandline fetched with getln doesn't contain the expanded command git.
> Hence everything gets shifted from the array cmd_args until shift cries
> forever
>=20
> run-help:shift:101: shift count must be <=3D $#
>=20
> I know, this solution is a dirty hack, but it's quick. The better way is
> to fix zsh to call run-help with the whole commandline where the alias
> gets expanded and this commandline gets passed to the second run-help
> call.

I meant to post this slightly tidied up version (it's basically the
same logic) but forgot.

Index: Functions/Misc/run-help
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
RCS file: /cvsroot/zsh/zsh/Functions/Misc/run-help,v
retrieving revision 1.16
diff -u -r1.16 run-help
--- Functions/Misc/run-help	5 Jun 2009 11:18:01 -0000	1.16
+++ Functions/Misc/run-help	10 Dec 2009 09:48:44 -0000
@@ -49,6 +49,7 @@
   noalias=3D1
 fi
=20
+{
 while ((i++ < $#places))
 do
     what=3D$places[$i]
@@ -56,7 +57,8 @@
     builtin print -r $what
     case $what in
     (*( is an alias)*)
-	[[ ${what[(w)6]:t} !=3D ${what[(w)1]} ]] && run-help ${what[(w)6]:t}
+	[[ ${what[(w)6]:t} !=3D ${what[(w)1]} ]] &&
+	  run_help_orig_cmd=3D${what[(w)1]} run-help ${what[(w)6]:t}
 	;;
     (*( is a * function))
 	case ${what[(w)1]} in
@@ -96,9 +98,9 @@
 		builtin print -z "$cmd_args"
 		cmd_args=3D( ${(z)cmd_args} )
 		# Discard environment assignments, etc.
-		while [[ $cmd_args[1] !=3D $1 ]]
+		while [[ $cmd_args[1] !=3D ${run_help_orig_cmd:-$1} ]]
 		do
-		    shift cmd_args
+		    shift cmd_args || return 1
 		done
 		eval "run-help-$1:t ${(q@)cmd_args[2,-1]}"
 	    else
@@ -115,3 +117,6 @@
 	[[ $what =3D=3D [qQ] ]] && break
     fi
 done
+} always {
+  unset run_help_orig_cmd
+}


--=20
Peter Stephenson <pws@csr.com>            Software Engineer
Tel: +44 (0)1223 692070                   Cambridge Silicon Radio Limited
Churchill House, Cambridge Business Park, Cowley Road, Cambridge, CB4 0WZ, =
UK


Member of the CSR plc group of companies. CSR plc registered in England and=
 Wales, registered number 4187346, registered office Churchill House, Cambr=
idge Business Park, Cowley Road, Cambridge, CB4 0WZ, United Kingdom

