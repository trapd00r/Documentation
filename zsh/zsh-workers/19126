From zsh-workers-return-19126-mason-zsh=primenet.com.au@sunsite.dk Tue Sep 23 08:12:22 2003
Return-Path: <zsh-workers-return-19126-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 6138 invoked from network); 23 Sep 2003 08:12:21 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 23 Sep 2003 08:12:21 -0000
Received: (qmail 2626 invoked by alias); 23 Sep 2003 08:12:16 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 19126
Received: (qmail 2616 invoked from network); 23 Sep 2003 08:12:16 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 23 Sep 2003 08:12:16 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [217.174.194.138] by sunsite.dk (MessageWall 1.0.8) with SMTP; 23 Sep 2003 8:12:16 -0000
Received: from DervishD.pleyades.net (212.Red-80-35-44.pooles.rima-tde.net [80.35.44.212])
	by madrid10.amenworld.com (8.10.2/8.10.2) with ESMTP id h8N8CAg02858;
	Tue, 23 Sep 2003 10:12:10 +0200
Received: from raul@pleyades.net by DervishD.pleyades.net with local (Exim MTA 2.05)
	  id <1A1hyE-00001I-00>; Tue, 23 Sep 2003 09:52:26 +0200
Date: Tue, 23 Sep 2003 09:52:26 +0200
From: DervishD <raul@pleyades.net>
To: Bart Schaefer <schaefer@brasslantern.com>
Cc: Zsh <zsh-workers@sunsite.dk>
Subject: Re: Problem with an exported array
Message-ID: <20030923075226.GC54@DervishD>
Mail-Followup-To: Bart Schaefer <schaefer@brasslantern.com>,
	Zsh <zsh-workers@sunsite.dk>
References: <1030922142208.ZM19975@candle.brasslantern.com> <7352.1064245936@csr.com> <20030922174410.GB12493@DervishD> <1030922180359.ZM20397@candle.brasslantern.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <1030922180359.ZM20397@candle.brasslantern.com>
User-Agent: Mutt/1.4i
Organization: Pleyades
User-Agent: Mutt/1.4i <http://www.mutt.org>

    Hi Bart :)

 * Bart Schaefer <schaefer@brasslantern.com> dixit:
> } > As I said before, there's nowhere in struct param to store the
> } > character; else it's not that hard.  Maybe you can see a trick.
> }     Surely I'm clueless, but other options in other builtins have
> } characters or numbers following an option: where are they stored?
> By "stored" PWS here means "preserved for the entire life of the
> variable, so that every time $pager is assigned we remember what to
> use to transform it to $PAGER."

    OK, gotcha. I didn't think about it, although it's obvious: every
assignment must be 'synced' with the other variable, so the joining
character must be permanent stored, not only during the execution of
typeset. Thanks for the explanation :)

    Raúl Núñez de Arenas Coronado

-- 
Linux Registered User 88736
http://www.pleyades.net & http://raul.pleyades.net/

