From zsh-users-return-2526-mason-zsh=primenet.com.au@sunsite.auc.dk Fri Aug 27 21:51:46 1999
Return-Path: <zsh-users-return-2526-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 9136 invoked from network); 27 Aug 1999 21:51:44 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 27 Aug 1999 21:51:44 -0000
Received: (qmail 15757 invoked by alias); 27 Aug 1999 21:51:25 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 2526
Received: (qmail 15750 invoked from network); 27 Aug 1999 21:51:24 -0000
Message-ID: <19990827175122.A2818@vmunix.com>
Date: Fri, 27 Aug 1999 17:51:22 -0400
From: Gabor <gabor@vmunix.com>
To: zsh-users@sunsite.auc.dk
Subject: Re: Files modified after a given date
References: <199908230809.KAA02317@beta.informatik.hu-berlin.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 0.93.1i
In-Reply-To: <199908230809.KAA02317@beta.informatik.hu-berlin.de>; from Sven Wischnowsky on Mon, Aug 23, 1999 at 10:09:33AM +0200
X-Operating-System: FreeBSD 2.2.7-STABLE i386

On Mon, Aug 23, 1999 at 10:09:33AM +0200, Sven Wischnowsky wrote:
# 
# Bruce Stephens wrote:
# 
# > Vincent Lefevre <vincent@vinc17.org> writes:
# > 
# > > On Sun, Aug 22, 1999 at 17:44:45 +0100, Bruce Stephens wrote:
# > > > Assuming I'm understanding the question correctly, no.  You can (in
# > > > 3.1.6, anyway), get files modified since some time relative to the
# > > > current time:
# > > > 
# > > >         *.c(ms-30)
# > > > 
# > > > expands to C files modified in the last 30 seconds, for example.
# > > 
# > > But I don't want it to be relative to the current time.
# > 
# > In which case, I don't think there's a builtin glob way of doing it.
# > You could write a function using the stat module, but I don't think we
# > have user-defined glob patterns yet?
# > 
# >         zmodload stat; builtin stat -H foo .zshrc; echo $foo[mtime]
# > 
# > prints 934038501, for me.

This is what I get

=== gabor $ builtin stat -H foo .zshrc
zsh: attempt to set slice of associative array
zsh: exit 1
=== gabor $ where stat
stat: shell built-in command


# I've been wishing for this since I added the granularity modifiers for 
# the a/m/c glob qualifiers. The problem is that we would need to be
# able to parse date/time strings, of course, which isn't trivial...
# 
# Bye
#  Sven
# 
# 
# --
# Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

