From zsh-users-return-3508-mason-zsh=primenet.com.au@sunsite.auc.dk Sun Nov 05 00:52:39 2000
Return-Path: <zsh-users-return-3508-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4253 invoked from network); 5 Nov 2000 00:52:38 -0000
Received: from sunsite.dk (HELO sunsite.auc.dk) (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 5 Nov 2000 00:52:38 -0000
Received: (qmail 12805 invoked by alias); 5 Nov 2000 00:52:24 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 3508
Received: (qmail 12798 invoked from network); 5 Nov 2000 00:52:24 -0000
From: Jerry Peek <jpeek@jpeek.com>
X-Mailer: nmh-1.0
To: zsh-users@sunsite.auc.dk
Subject: ()# vs. ()## question
Date: Sat, 04 Nov 2000 17:51:27 -0700
Message-ID: <4816.973385487@jpeek.com>
Sender: jpeek@jpeek.com

I've scratched my head about this one for quite a while now.  Maybe
someone can explain, please?  I've been playing with **/ and ***/;
these are pretty straightforward.  Then I started playing with
(x/)# and (x/)##, where x is an arbitrary pattern.  I'm confused.

For testing, I've made a directory with three subdirectories named
server1, server2 and server3.  Each of those subdirectories has
subdirectories named 97, 98 and 99.  Each of those subdirectories has
subdirectories named 01 through 12:

    zsh$ mkdir -p server{1..3}/{97..99}/{01..12}

So there are lots of relative pathnames like serverN/YY/MM, where YY
is a two-digit year and MM is a two-digit month.  I want to match YY
and MM with repeated ??/ patterns.

The first one example below works the way I expect it to.  But I
don't see why the second example is matching "server1/".

    zsh$ echo server?/(??/)#
    server1/ server1/00/ server1/00/01/ server1/00/02/ ...many more...

    zsh$ echo server?/(??/)##
    server1/ server1/00/ server1/00/01/ server1/00/02/ ...many more...

The first one makes sense because, I think, "(??/)#" matches zero or
more occurrences of "??/" -- so it doesn't have to match any of the
subdirectories, so just plain "server1/" matches.  But, in the second
example, shouldn't "(??/)##" force the pattern to match one or more
occurrences of "??/" -- and, so, not allow plain "server1/" to match?

I tried this first with version 3.0.7 (Linux), then read the bug list
and decided to try the fix in 3.1.3.  Now I have 3.1.9, but it didn't
help.  Can anyone straighten me out on this?  Thanks a lot.

Jerry
-- 
Jerry Peek, jpeek@jpeek.com, http://www.jpeek.com/

