From zsh-users-return-14635-mason-zsh=primenet.com.au@zsh.org Fri Dec 04 04:08:40 2009
Return-Path: <zsh-users-return-14635-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16400 invoked by alias); 4 Dec 2009 04:08:40 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14635
Received: (qmail 12142 invoked from network); 4 Dec 2009 04:08:37 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.2.5
Received-SPF: pass (ns1.primenet.com.au: SPF record at sergio.spb.ru designates 194.58.105.39 as permitted sender)
Message-ID: <4B188B34.5060202@sergio.spb.ru>
Date: Fri, 04 Dec 2009 07:08:20 +0300
From: sergio <mailbox@sergio.spb.ru>
User-Agent: Mozilla-Thunderbird 2.0.0.22 (X11/20091109)
MIME-Version: 1.0
To: Zsh list <zsh-users@zsh.org>
Subject: Re: killall completion
References: <4B14AAA3.3090609@sergio.spb.ru> 	<20091201194117.3dc2993b@pws-pc>	<4B15BE9F.7020808@sergio.spb.ru>	<091201202341.ZM9955@torch.brasslantern.com>	<4B173208.5060602@sergio.spb.ru> <091203081540.ZM12147@torch.brasslantern.com>
In-Reply-To: <091203081540.ZM12147@torch.brasslantern.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

Bart Schaefer wrote:

> It offers both signals and process names when completing after "killall"
> with nothing else on the line yet.
But it's unnecessary. -SIGNAL ( and also -SIGSIGNAL and -number ) should 
be processed as -s SIGNAL.

And this code doesn't offers both signals and process...

#compdef killall

local curcontext="$curcontext" line state ret=1
local all
all=$( (( ${funcstack[(eI)$_comps[sudo]]} || ${(%):-%(!.1.0)} )) && echo 
-n a )

_processes_names()
{
     compadd "$expl[@]" ${${(f)"$(_call_program processes-names ps 
${all}xho comm 2> /dev/null)"}:#ps}
}
_sig_or_proc()
{
     _alternative -C set1 \
         "signals:signals:_signals -p -s" \
         "processes-names:processes-names:_processes_names"
}
_arguments -C\
     - set1 \
         ': :_sig_or_proc' \
         '*:processes-names:_processes_names' \
         ':signals:_signals -p -s' && ret=0

return ret

-- 
sergio.

