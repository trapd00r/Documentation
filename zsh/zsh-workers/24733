From zsh-workers-return-24733-mason-zsh=primenet.com.au@sunsite.dk Tue Mar 25 18:13:40 2008
Return-Path: <zsh-workers-return-24733-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 9193 invoked from network); 25 Mar 2008 18:13:38 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 25 Mar 2008 18:13:38 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 28190 invoked from network); 25 Mar 2008 18:13:33 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 25 Mar 2008 18:13:33 -0000
Received: (qmail 10913 invoked by alias); 25 Mar 2008 18:13:30 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 24733
Received: (qmail 10896 invoked from network); 25 Mar 2008 18:13:30 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 25 Mar 2008 18:13:30 -0000
Received: from mtaout02-winn.ispmail.ntl.com (mtaout02-winn.ispmail.ntl.com [81.103.221.48])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 13FBB8097826
	for <zsh-workers@sunsite.dk>; Tue, 25 Mar 2008 19:13:25 +0100 (CET)
Received: from aamtaout02-winn.ispmail.ntl.com ([81.103.221.35])
          by mtaout02-winn.ispmail.ntl.com with ESMTP
          id <20080325181610.KBJL27871.mtaout02-winn.ispmail.ntl.com@aamtaout02-winn.ispmail.ntl.com>
          for <zsh-workers@sunsite.dk>; Tue, 25 Mar 2008 18:16:10 +0000
Received: from pws-pc ([81.107.40.67]) by aamtaout02-winn.ispmail.ntl.com
          with ESMTP
          id <20080325181520.TBXH17393.aamtaout02-winn.ispmail.ntl.com@pws-pc>
          for <zsh-workers@sunsite.dk>; Tue, 25 Mar 2008 18:15:20 +0000
Date: Tue, 25 Mar 2008 18:12:46 +0000
From: Peter Stephenson <p.w.stephenson@ntlworld.com>
To: zsh-workers <zsh-workers@sunsite.dk>
Subject: Re: sigwinch interrupts builtin 'wait'
Message-ID: <20080325181246.5d34c12e@pws-pc>
In-Reply-To: <237967ef0803201821u1987f55et596614a56e11100e@mail.gmail.com>
References: <237967ef0803201821u1987f55et596614a56e11100e@mail.gmail.com>
X-Mailer: Claws Mail 3.3.1 (GTK+ 2.12.5; x86_64-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Virus-Scanned: ClamAV 0.91.2/6392/Tue Mar 25 13:44:02 2008 on bifrost
X-Virus-Status: Clean

On Fri, 21 Mar 2008 02:21:30 +0100
"Mikael Magnusson" <mikachu@gmail.com> wrote:
> Seems to not happen in 4.2.5, but on my own computer which has cvs
> from very recently, and a friend's computer that has 4.3.5. To
> reproduce:
> % sleep 50 &
> % wait %1 && echo $?
> <resize terminal>
> 156

This came in with 22281.  The intention was to make "wait" return
immediately for signals that had traps.  Rather embarrassingly, however,
I forgot to add a test that the signal had a trap.  The (last_signal >=
0) is paranoia.  The expensive shells you get in Harrods' system
utilities department probably don't have that.

(Doesn't anyone else run into system-level bugs in the shell, by the
way???)

Index: Src/jobs.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/jobs.c,v
retrieving revision 1.61
diff -u -r1.61 jobs.c
--- Src/jobs.c	18 Dec 2007 10:42:36 -0000	1.61
+++ Src/jobs.c	25 Mar 2008 18:05:52 -0000
@@ -1170,7 +1170,8 @@
 
 	last_signal = -1;
 	signal_suspend(SIGCHLD);
-	if (last_signal != SIGCHLD && wait_cmd) {
+	if (last_signal != SIGCHLD && wait_cmd && last_signal >= 0 &&
+	    (sigtrapped[last_signal] & ZSIG_TRAPPED)) {
 	    /* wait command interrupted, but no error: return */
 	    restore_queue_signals(q);
 	    return 128 + last_signal;
@@ -1208,7 +1209,8 @@
 	       !(jn->stat & STAT_DONE) &&
 	       !(interact && (jn->stat & STAT_STOPPED))) {
 	    signal_suspend(SIGCHLD);
-	    if (last_signal != SIGCHLD && wait_cmd)
+	    if (last_signal != SIGCHLD && wait_cmd && last_signal >= 0 &&
+		(sigtrapped[last_signal] & ZSIG_TRAPPED))
 	    {
 		/* builtin wait interrupted by trapped signal */
 		restore_queue_signals(q);


-- 
Peter Stephenson <p.w.stephenson@ntlworld.com>
Web page now at http://homepage.ntlworld.com/p.w.stephenson/

