From zsh-workers-request@math.gatech.edu Mon Oct 05 08:09:07 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2935 invoked from network); 5 Oct 1998 08:09:06 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 5 Oct 1998 08:09:06 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.9.1/8.9.1) id DAA14109;
	Mon, 5 Oct 1998 03:57:02 -0400 (EDT)
Resent-Date: Mon, 5 Oct 1998 03:57:02 -0400 (EDT)
Message-Id: <9810050747.AA12241@ibmth.df.unipi.it>
To: Phil Pennock <phil@athenaeum.demon.co.uk>
Cc: zsh-workers@math.gatech.edu
Subject: Re: Bug? in 'integer' behaviour 
In-Reply-To: "Phil Pennock"'s message of "Mon, 05 Oct 1998 00:18:03 DFT."
             <199810042318.AAA05187@athenaeum.demon.co.uk> 
Date: Mon, 05 Oct 1998 09:47:44 +0200
From: Peter Stephenson <pws@ibmth.df.unipi.it>
Resent-Message-ID: <"6VaZ93.0.OS3.El76s"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4407
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Phil Pennock wrote:
> In the distribution is Functions/randline which purports to show a
> random line from a file.  The problem seems to be caused by a variable
> declared integer not stripping off leading whitespace when assigned to.
> 
> randline:
>  # get a random line from a file
>  integer z=$(wc -l <"$1")
>  sed -n $[RANDOM%z+1]p "$1"
> 
> This produces a divide by zero error, as 'z' is always zero.  Removing
> the 'integer' keyword solves this, as does wrapping the RHS of the
> assignment in $[...].

I think it's the trailing characters after the number which are causing
the problem.  From wc you get something like
    128 .zshrc
and if you do

integer z="    128 .zshrc"

you get

zsh: bad math expression: illegal character: .

But I get that from the $[...] expression too.  I get the same
behaviour in ksh, except that there is an error message from the
$(...), so it looks standard.  As a workaround you could do:

integer z=${$(wc -l <"$1")%"$1"}

or in a more standard way

y=$(wc -l <"$1")
integer z=${y%"$1"}

-- 
Peter Stephenson <pws@ibmth.df.unipi.it>       Tel: +39 050 844536
WWW:  http://www.ifh.de/~pws/
Gruppo Teorico, Dipartimento di Fisica
Piazza Torricelli 2, 56100 Pisa, Italy

