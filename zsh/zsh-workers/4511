From zsh-workers-request@math.gatech.edu Tue Nov 03 12:35:44 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 21522 invoked from network); 3 Nov 1998 12:35:42 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 3 Nov 1998 12:35:42 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.9.1/8.9.1) id HAA16098;
	Tue, 3 Nov 1998 07:25:17 -0500 (EST)
Resent-Date: Tue, 3 Nov 1998 07:25:17 -0500 (EST)
Sender: B.Stephens@isode.com
To: zsh-workers@math.gatech.edu
Subject: Re: PATCH: 3.1.5 - (Sven) Case-insensitive globbing
References: <199811030812.JAA23176@beta.informatik.hu-berlin.de>
Mime-Version: 1.0 (generated by tm-edit 7.108)
Content-Type: text/plain; charset=US-ASCII
From: Bruce Stephens <b.stephens@isode.com>
Date: 03 Nov 1998 12:22:47 +0000
In-Reply-To: Sven Wischnowsky's message of "Tue, 3 Nov 1998 09:12:29 +0100 (MET)"
Message-ID: <vbn269dkyw.fsf@snake.isode.com>
Lines: 29
X-Mailer: Gnus v5.6.27/XEmacs 20.4 - "Emerald"
Resent-Message-ID: <"Vy4iO3.0.Tx3.jOlFs"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4511
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Sven Wischnowsky <wischnow@informatik.hu-berlin.de> writes:

> Bruce Stephens wrote:

> > I can only think of one candidate at present: ignore dots.  #d, say.
> > Then, a single pattern could match README, READ.ME, Read.Me and so on:
> > (#di)readme.
> > 
> > But my example is strained, I don't really suggest that it would be a
> > good idea.
> 
> I completely agree, there is a whole new set of globbing options
> on the horizon ;-)
> 
> About the `options for the whole path' thing (which I would like to
> have, too): why not use a generic approach, like the `^' and `-' glob
> modifiers, i.e. `(#i)' works on the current path component, probably
> only up to the next `(#...)' and `(#/i)' works on this and all
> following components (until switched off again).

Yes, maybe.  I thought of another example: approximate matching.

Approximate matching could either use the auto-correct code, or could
use something like whatever agrep uses.  In the latter case, it would
have an optional integer parameter too, so "(#a1)readme" would match
"Readme" and "read.me", but to match "read", you'd need "(#a2)readme".

Hmm, maybe this could provide a way to configure the autocorrection
feature too?

