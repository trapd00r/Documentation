From zsh-users-return-12741-mason-zsh=primenet.com.au@sunsite.dk Fri Mar 28 15:05:32 2008
Return-Path: <zsh-users-return-12741-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 23027 invoked from network); 28 Mar 2008 15:05:30 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 28 Mar 2008 15:05:30 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 72032 invoked from network); 28 Mar 2008 15:05:10 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 28 Mar 2008 15:05:10 -0000
Received: (qmail 24146 invoked by alias); 28 Mar 2008 15:04:56 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12741
Received: (qmail 24131 invoked from network); 28 Mar 2008 15:04:55 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 28 Mar 2008 15:04:55 -0000
Received: from vms040pub.verizon.net (vms040pub.verizon.net [206.46.252.40])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 0D1D982CD273
	for <zsh-users@sunsite.dk>; Fri, 28 Mar 2008 16:04:51 +0100 (CET)
Received: from torch.brasslantern.com ([71.116.79.77])
 by vms040.mailsrvcs.net (Sun Java System Messaging Server 6.2-6.01 (built Apr
 3 2006)) with ESMTPA id <0JYG00CT34PCX862@vms040.mailsrvcs.net> for
 zsh-users@sunsite.dk; Fri, 28 Mar 2008 10:08:03 -0500 (CDT)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id m2SF4XJq019694	for
 <zsh-users@sunsite.dk>; Fri, 28 Mar 2008 08:04:34 -0700
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id m2SF4XX1019693	for zsh-users@sunsite.dk; Fri,
 28 Mar 2008 08:04:33 -0700
Date: Fri, 28 Mar 2008 08:04:33 -0700
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: which command failed?
In-reply-to: <20080328105545.81550.qmail@smasher.org>
To: zsh-users@sunsite.dk
Message-id: <080328080433.ZM19692@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <20080328105545.81550.qmail@smasher.org>
Comments: In reply to Atom Smasher <atom@smasher.org>
 "which command failed?" (Mar 28, 11:55pm)
X-Virus-Scanned: ClamAV 0.91.2/6440/Fri Mar 28 14:37:20 2008 on bifrost
X-Virus-Status: Clean

On Mar 28, 11:55pm, Atom Smasher wrote:
} Subject: which command failed?
}
} obviously the shell can already parse something like this:
} 
}  	foo || bar && baz | grep abc\|xyz
} 
} so, without reinventing the wheel, what's a good way to determine which of 
} those commands returned a non-zero exit status to the shell?

pipestatus <S> <Z>
     An array containing the exit statuses returned by all commands in
     the last pipeline.

You can't easily tell which of foo or bar may have returned a non-zero
status, but you can tell (in that particular example) when *both* of them
did, because $pipestatus will have only one element.  If $pipestatus has
two elements, then one of baz or grep returned nonzero.  Of course in
that case the entire pipeline has nonzero status if and only if grep was
the command that returned nonzero.

Beyond that, you'd have to rewrite the expression so that you can capture
$? in a shell variable before executing the next command.

  if if ! foo
     then
       foo_status=$?
       true
     fi ||
     if ! bar
     then
       bar_status=$?
       false
     else true
     fi
  then
     echo | false
     echo_status=$pipestatus[1]
     grep_status=$pipestatus[2]
  fi

That can be collapsed back down to and || && again by using { }.

