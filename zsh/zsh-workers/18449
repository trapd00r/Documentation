From zsh-workers-return-18449-mason-zsh=primenet.com.au@sunsite.dk Fri Apr 18 08:29:39 2003
Return-Path: <zsh-workers-return-18449-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 21142 invoked from network); 18 Apr 2003 08:29:38 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 18 Apr 2003 08:29:38 -0000
Received: (qmail 26150 invoked by alias); 18 Apr 2003 08:29:32 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 18449
Received: (qmail 26142 invoked from network); 18 Apr 2003 08:29:32 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 18 Apr 2003 08:29:32 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [212.125.75.4] by sunsite.dk (MessageWall 1.0.8) with SMTP; 18 Apr 2003 8:29:32 -0000
Received: (qmail 28179 invoked from network); 18 Apr 2003 08:29:31 -0000
Received: from iris.logica.co.uk (158.234.9.163)
  by server-6.tower-1.messagelabs.com with SMTP; 18 Apr 2003 08:29:31 -0000
Received: from gmcs3.logica.co.uk ([158.234.142.61])
	by iris.logica.co.uk (8.9.3/8.9.3/Debian 8.9.3-21) with ESMTP id JAA17336
	for <zsh-workers@sunsite.dk>; Fri, 18 Apr 2003 09:29:31 +0100
X-Authentication-Warning: iris.logica.co.uk: Host [158.234.142.61] claimed to be gmcs3.logica.co.uk
Received: from gmcs3.logica.co.uk (localhost [127.0.0.1])
	by gmcs3.logica.co.uk (8.11.6/8.11.6/SuSE Linux 0.5) with ESMTP id h3I8TKu02108
	for <zsh-workers@sunsite.dk>; Fri, 18 Apr 2003 10:29:20 +0200
X-VirusChecked: Checked
From: Oliver Kiddle <okiddle@yahoo.co.uk>
To: Zsh workers <zsh-workers@sunsite.dk>
Subject: PATCH: dict completion
Date: Fri, 18 Apr 2003 10:29:20 +0200
Message-ID: <2106.1050654560@gmcs3.logica.co.uk>

This patch updates _dict and includes a near complete rewrite of
_dict_words. Suffixes are now handled better and it accepts the
separate-sections style (with the words tag) to separate words from
different databases.

Oliver

Index: Completion/Unix/Command/_dict
===================================================================
RCS file: /cvsroot/zsh/zsh/Completion/Unix/Command/_dict,v
retrieving revision 1.3
diff -u -r1.3 _dict
--- Completion/Unix/Command/_dict	6 Aug 2001 14:42:04 -0000	1.3
+++ Completion/Unix/Command/_dict	18 Apr 2003 08:26:40 -0000
@@ -1,28 +1,42 @@
 #compdef dict
 
-_arguments \
-  '(--host -h)'{--host,-h}'[host]:dict server:_hosts' \
-  '(--port -p)'{--port,-p}'[port]:service:' \
-  '(--database -d)'{--database,-d}'[database]:db name:' \
-  '(--match -m)'{--match,-m}'[match]' \
-  '(--strategy -s)'{--strategy,-s}'[strategy]:strategy:' \
-  '(--nocorrect -C)'{--nocorrect,-C}'[nocorrect]' \
-  '(--config -c)'{--config,-c}'[config]:config file:_files' \
-  '(--dbs -D)'{--dbs,-D}'[list dbs]' \
-  '(--strats -S)'{--strats,-S}'[strats]' \
-  '(--serverhelp -H)'{--serverhelp,-H}'[server help]' \
-  '(--info -i)'{--info,-i}'[db info]:db name:' \
+local strategy database state line curcontext="$curcontext"
+typeset -A opt_args
+
+_arguments -C -S \
+  '(--host -h)'{--host=,-h+}'[specify hostname of dict server]:dict server:_hosts' \
+  '(--port -p)'{--port=,-p+}'[specify port for dict server]:service:_ports' \
+  '(--database -d)'{--database=,-d+}'[database]:db name:->database' \
+  '(--match -m)'{--match,-m}'[perform matching]' \
+  '(--strategy -s)'{--strategy=,-s+}'[specify matching strategy]:strategy:->strategy' \
+  '(--nocorrect -C)'{--nocorrect,-C}'[disable spelling correction]' \
+  '(--config -c)'{--config=,-c+}'[specify config file]:config file:_files' \
+  '(--dbs -D)'{--dbs,-D}'[list available databases]' \
+  '(--strats -S)'{--strats,-S}'[list available search strategies]' \
+  '(--serverhelp -H)'{--serverhelp,-H}'[query server for help info it provides]' \
+  '(--info -i)'{--info=,-i+}'[get info on specified database]:db name:->database' \
+  '(--serverinfo -I)'{--serverinfo,-I}'[display info about server]' \
   '(--noauth -a)'{--noauth,-a}'[disable authentication]' \
-  '(--user -u)'{--user,-u}'[user]:user name:' \
-  '(--key -k)'{--key,-k}'[key]:shared secret:' \
-  '(--version -V)'{--version,-V}'[display version]' \
-  '(--license -L)'{--license,-L}'[display license]' \
-  '--help' \
-  '(--verbose -v)'{--verbose,-v}'[be verbose]' \
+  '(--user -u)'{--user=,-u+}'[specify username for authentication]:user name:' \
+  '(--key -k)'{--key=,-k+}'[specify key for authentication]:shared secret:' \
+  '(-)'{--version,-V}'[display program version]' \
+  '(-)'{--license,-L}'[display program license]' \
+  '(-)--help[display usage info]' \
+  '(--verbose -v)'{--verbose,-v}'[verbose output]' \
   '(--raw -r)'{--raw,-r}'[be very verbose]' \
-  '(--pager -P)'{--pager,-P}'[pager]:program:_command_names -e' \
-  '--html' \
-  '--pipesize:buffer size:' \
-  '--client:client text:' \
-  '--debug:debug flag:(verbose raw scan parse pipe serial time)' \
-  ':word:_dict_words'
+  '(--pager -P)'{--pager=,-P+}'[specify pager]:program:_command_names -e' \
+  '--pipesize=[specify buffer size for pipelining commands]:buffer size:' \
+  '--client=[specify additional text to send to server]:client text' \
+  '--debug=[set a debug flag]:debug flag:(verbose raw scan parse pipe serial time)' \
+  ':word:_dict_words' && return
+
+case "$state" in
+  strategy)
+    strategy=( ${${${(f)"$(_call_program strategy dict -S 2>/dev/null)"}[2,-1]#?}/ ##/:} )
+    _describe -t strategy strategy strategy && return
+  ;;
+  database)
+    database=( ${${${(f)"$(_call_program database dict --dbs 2>/dev/null)"}[2,-1]#?}/ ##/:} )
+    _describe -t database database database && return
+  ;;
+esac
Index: Completion/Unix/Type/_dict_words
===================================================================
RCS file: /cvsroot/zsh/zsh/Completion/Unix/Type/_dict_words,v
retrieving revision 1.2
diff -u -r1.2 _dict_words
--- Completion/Unix/Type/_dict_words	8 Feb 2002 08:30:11 -0000	1.2
+++ Completion/Unix/Type/_dict_words	18 Apr 2003 08:26:41 -0000
@@ -1,17 +1,43 @@
 #autoload
 
-local dict dictresult dictwords j expl
+local begin end ret=1
+local -a args dict dicts dictwords expl
 
-[[ -z $words[CURRENT] ]] && return 1
+if [[ $service = dict ]]; then
+  args=( ${(kv)opt_args[(I)-([hpdauk]|-(host|port|database|noauth|user|key))]} )
+fi
 
-dictresults=(${${(f)${"$(dict -m -s prefix $words[CURRENT])":gs/    
-  / /}}:#[0-9]*matches found})
+if [[ -z $words[CURRENT] ]]; then
+  _message -e dict 'dictionary word'
+  return 1
+elif [[ -z $SUFFIX ]]; then
+  dictwords=( ${(z)${(f)"$(_call_program words dict $args -m -s prefix $PREFIX 2>/dev/null)"}} )
+elif [[ -z $PREFIX ]]; then
+  dictwords=( ${(z)${(f)"$(_call_program words dict $args -m -s suffix $SUFFIX 2>/dev/null)"}} )
+else
+  dictwords=( ${(z)${(f)"$(_call_program words dict $args -m -s regexp $PREFIX.\*$SUFFIX 2>/dev/null)"}} )
+fi
 
-for j in ${dictresults}
-do
-  dict=${j%%:*}
-  dictwords=(${(z)j#*:})
+dictwords=( ${${dictwords#\"}%\"} )
+dicts=( ${${(M)dictwords:#*:}%:} )
 
-  _wanted $dict expl "words from $dict" \
-       compadd -M 'm:{a-zA-Z}={A-Za-z} r:|=*' -a "$@" - dictwords
-done
+if zstyle -t ":completion:${curcontext}:words" separate-sections; then
+  _tags words.$^dicts
+  while _tags; do
+    for dict in $dicts; do
+      if _requested words.$dict expl "word from $dict"; then
+	(( begin=${dictwords[(i)$dict:]} + 1 ))
+	end=${dictwords[(ib.begin.)*:]}
+	[[ $end = 1 ]] && end=$#dictwords
+	compadd "$expl[@]" "$@" -M 'm:{a-zA-Z}={A-Za-z} r:|=*' -a - \
+            'dictwords[begin,end]' && ret=0
+      fi
+    done
+    (( ret )) || break
+  done
+  
+  return 1
+else
+  _wanted words expl word compadd -M 'm:{a-zA-Z}={A-Za-z} r:|=*' "$@" - \
+      ${dictwords:#*:}
+fi

