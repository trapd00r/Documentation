From zsh-users-return-11113-mason-zsh=primenet.com.au@sunsite.dk Tue Jan 16 10:41:15 2007
Return-Path: <zsh-users-return-11113-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 22993 invoked from network); 16 Jan 2007 10:41:10 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.4 required=5.0 tests=AWL,BAYES_00,
	FORGED_RCVD_HELO autolearn=ham version=3.1.7
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 16 Jan 2007 10:41:10 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 56249 invoked from network); 16 Jan 2007 10:40:59 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 16 Jan 2007 10:40:59 -0000
Received: (qmail 5698 invoked by alias); 16 Jan 2007 10:40:50 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 11113
Received: (qmail 5689 invoked from network); 16 Jan 2007 10:40:50 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 16 Jan 2007 10:40:50 -0000
Received: (qmail 54994 invoked from network); 16 Jan 2007 10:40:50 -0000
Received: from cluster-c.mailcontrol.com (168.143.177.190)
  by a.mx.sunsite.dk with SMTP; 16 Jan 2007 10:40:43 -0000
Received: from cameurexb01.EUROPE.ROOT.PRI ([62.189.241.200])
	by rly21c.srv.mailcontrol.com (MailControl) with ESMTP id l0GAbkem023388
	for <zsh-users@sunsite.dk>; Tue, 16 Jan 2007 10:40:38 GMT
Received: from news01.csr.com ([10.103.143.38]) by cameurexb01.EUROPE.ROOT.PRI with Microsoft SMTPSVC(6.0.3790.1830);
	 Tue, 16 Jan 2007 10:38:56 +0000
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.13.8/8.13.4) with ESMTP id l0GActPp019509
	for <zsh-users@sunsite.dk>; Tue, 16 Jan 2007 10:38:55 GMT
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.13.8/8.13.8/Submit) with ESMTP id l0GAcsZ8019506
	for <zsh-users@sunsite.dk>; Tue, 16 Jan 2007 10:38:54 GMT
Message-Id: <200701161038.l0GAcsZ8019506@news01.csr.com>
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-users@sunsite.dk
Subject: Re: zsh completion for todo.* 
In-reply-to: <E1H6c5v-0002YQ-8l@e4ward.com> 
References: <E1H6c5v-0002YQ-8l@e4ward.com>
Comments: In-reply-to Lydgate <zsh@lydgate.e4ward.com>
   message dated "Tue, 16 Jan 2007 00:22:23 +0000."
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="----- =_aaaaaaaaaa0"
Content-ID: <19419.1168943666.0@csr.com>
Date: Tue, 16 Jan 2007 10:38:54 +0000
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 16 Jan 2007 10:38:57.0045 (UTC) FILETIME=[868B1450:01C7395A]
X-Scanned-By: MailControl A-06-00-00 (www.mailcontrol.com) on 10.67.0.131

------- =_aaaaaaaaaa0
Content-Type: text/plain; charset="us-ascii"
Content-ID: <19419.1168943666.1@csr.com>

Lydgate wrote:
> With Peter's todo.sh, I get the initial command completed correctly.  If 
> I want to list something, it gives an error, but this is simply because 
> there are quotes missing from "search term..."  I want it to be able to 
> complete contexts and projects, as todo_completer.sh does in bash.  

I'm not sure I've followed what you're doing.

If you get as far as "todo.sh list p:" it will complete projects, and after
you type "todo.sh list @" it will complete contexts; the same for any
word after a "list" subcommand.

I note I don't complete projects or contexts in normal text, which is
potentially useful and easy to add.  In that case handling words in
quotes is a good idea since you've got a string of words in the same
argument before the bit you want to complete.  Possibly that covers what
you want.

I've attached the modified function so you don't need to get the
original out of the CVS archive (it has lines longer than 80 characters).



To access the latest news from CSR copy this link into a web browser:  http://www.csr.com/email_sig.php

To get further information regarding CSR, please visit our Investor Relations page at http://ir.csr.com/csr/about/overview

------- =_aaaaaaaaaa0
Content-Type: text/plain; name="_todo.sh"; charset="us-ascii"
Content-ID: <19419.1168943666.2@csr.com>
Content-Description: _todo.sh

#compdef todo.sh

# See http://todotxt.com for todo.sh.
#
# Featurettes:
#  - "replace" will complete the original text for editing
#  - completing priorities will cycle through A to Z (even without
#    menu completion)
#  - list and listall will complete p:<project> and @<where> from
#    values in existing entries
#  - will complete after p: and @ if typed in message text

setopt localoptions braceccl

local expl curcontext="$curcontext" state line pri nextstate
local -a cmdlist itemlist match mbegin mend
integer NORMARG

_arguments -s -n : \
  '-d[alternate config file]:config file:_files' \
  '-f[force, no confirmation]' \
  '-h[display help]' \
  '-p[plain mode, no colours]' \
  '-v[verbose mode, confirmation messages]' \
  '-V[display version etc.]' \
  '1:command:->commands' \
  '*:arguments:->arguments' && return 0

local projmsg="context or project"
local txtmsg="text with contexts or projects"

case $state in
  (commands)
  cmdlist=(
    "add:Add TODO ITEM to todo.txt."
    "append:Adds to item on line NUMBER the text TEXT."
    "archive:Moves done items from todo.txt to done.txt."
    "del:Deletes the item on line NUMBER in todo.txt."
    "do:Marks item on line NUMBER as done in todo.txt."
    "list:Displays all todo items containing TERM(s), sorted by priority."
    "listall:Displays items including done ones containing TERM(s)"
    "listpri:Displays all items prioritized at PRIORITY."
    "prepend:Adds to the beginning of the item on line NUMBER text TEXT."
    "pri:Adds or replace in NUMBER the priority PRIORITY (upper case letter)."
    "replace:Replace in NUMBER the TEXT."
    "remdup:Remove exact duplicates from todo.txt."
    "report:Adds the number of open and done items to report.txt."
  )
  _describe -t todo-commands 'todo.sh command' cmdlist
  ;;

  (arguments)
  case $words[NORMARG] in
    (append|del|do|prepend|pri|replace)
    if (( NORMARG == CURRENT - 1 )); then
      itemlist=(${${(M)${(f)"$(todo.sh -p list)"}##<-> *}/(#b)(<->) (*)/${match[1]}:${match[2]}})
      _describe -t todo-items 'todo item' itemlist
    else
      case $words[NORMARG] in
	(pri)
	nextstate=pri
	;;
	(append|prepend)
	nextstate=proj
	;;
	(replace)
	compadd -Q -- "${(qq)$(todo.sh -p list "^0*${words[CURRENT-1]} ")##<-> }"
	;;
      esac
    fi
    ;;

    (add|list|listall)
    nextstate=proj
    ;;

    (listpri)
    nextstate=pri
    ;;

    (*)
    return 1
    ;;
  esac
  ;;
esac

case $nextstate in
  (pri)
  if [[ $words[CURRENT] = (|[A-Z]) ]]; then
    if [[ $words[CURRENT] = (|Z) ]]; then
      pri=A
    else
      # cycle priority
      pri=$words[CURRENT]
      pri=${(#)$(( #pri + 1 ))}
    fi
    _wanted priority expl 'priority' compadd -U -S '' -- $pri
  else
    _wanted priority expl 'priority' compadd {A-Z}
  fi
  ;;

  (proj)
  # This completes stuff beginning with p: (projects) or @ (contexts);
  # these are todo.sh conventions.
  if [[ ! -prefix p: && ! -prefix @ ]]; then
    projmsg=$txtmsg
  fi
  # In case there are quotes, ignore anything up to whitespace before
  # the p: or @ (which may not even be there yet).
  compset -P '*[[:space:]]'
  _wanted search expl $projmsg \
    compadd ${${=${${(M)${(f)"$(todo.sh -p list)"}##<-> *}##<-> }}:#^(p:*|@*)}
  ;;
esac

------- =_aaaaaaaaaa0
Content-Type: text/plain; charset="us-ascii"
Content-ID: <19419.1168943666.3@csr.com>

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070

------- =_aaaaaaaaaa0--

