From zsh-workers-return-8186-mason-zsh=primenet.com.au@sunsite.auc.dk Sun Oct 10 14:02:42 1999
Return-Path: <zsh-workers-return-8186-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4619 invoked from network); 10 Oct 1999 14:02:41 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 10 Oct 1999 14:02:41 -0000
Received: (qmail 8559 invoked by alias); 10 Oct 1999 14:02:33 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 8186
Received: (qmail 8552 invoked from network); 10 Oct 1999 14:02:33 -0000
Subject: PATCH: >& documentation
To: zsh-workers@sunsite.auc.dk
Date: Sun, 10 Oct 1999 15:02:28 +0100 (BST)
X-Mailer: ELM [version 2.4ME+ PL48 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Message-Id: <E11aJYS-00051y-00@crucigera.fysh.org>
From: Zefram <zefram@fysh.org>

This patch corrects the documentation of >& to match the actual
behaviour, and adds entries to the documentation for all the related
append/clobber variants.  (Anything matching /(\&\>\>?|\>\>?\&)(\||\!|)/
is a valid stderr redirection operator.)  This should be applied on top
of Bart's 8184.

-zefram

diff -cr ../zsh-/Doc/Zsh/redirect.yo ./Doc/Zsh/redirect.yo
*** ../zsh-/Doc/Zsh/redirect.yo	Sun Oct 10 14:38:23 1999
--- ./Doc/Zsh/redirect.yo	Sun Oct 10 14:54:41 1999
***************
*** 92,102 ****
  )
  xitem(tt(>&) var(word))
  item(tt(&>) var(word))(
! Same as `tt(>) var(word) tt(2>&1)'.  Note that with tt(&>), var(word) is
! never interpreted as a file descriptor, even if it is a number.
  )
! item(tt(>>&) var(word))(
! Same as `tt(>>) var(word) tt(2>&1)'.
  )
  enditem()
  
--- 92,122 ----
  )
  xitem(tt(>&) var(word))
  item(tt(&>) var(word))(
! (Except where `tt(>&) var(word)' matches one of the above syntaxes;
! `tt(&>)' can always be used to avoid this ambiguity.)
! Redirects both standard output and standard error (file descriptor 2)
! in the manner of `tt(>) var(word)'.
! Note that this does em(not) have the same effect as `tt(>) var(word) tt(2>&1)'
! in the presence of multios (see the section below).
  )
! xitem(tt(>&|) var(word))
! xitem(tt(>&!) var(word))
! xitem(tt(&>|) var(word))
! item(tt(&>!) var(word))(
! Redirects both standard output and standard error (file descriptor 2)
! in the manner of `tt(>|) var(word)'.
! )
! xitem(tt(>>&) var(word))
! item(tt(&>>) var(word))(
! Redirects both standard output and standard error (file descriptor 2)
! in the manner of `tt(>>) var(word)'.
! )
! xitem(tt(>>&|) var(word))
! xitem(tt(>>&!) var(word))
! xitem(tt(&>>|) var(word))
! item(tt(&>>!) var(word))(
! Redirects both standard output and standard error (file descriptor 2)
! in the manner of `tt(>>|) var(word)'.
  )
  enditem()
  
END

