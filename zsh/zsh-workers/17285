From zsh-workers-return-17285-mason-zsh=primenet.com.au@sunsite.dk Tue Jun 04 21:06:37 2002
Return-Path: <zsh-workers-return-17285-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 27516 invoked from network); 4 Jun 2002 21:06:36 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 4 Jun 2002 21:06:36 -0000
Received: (qmail 18065 invoked by alias); 4 Jun 2002 21:06:27 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 17285
Received: (qmail 18054 invoked from network); 4 Jun 2002 21:06:26 -0000
Message-ID: <000501c20c0b$7f4fb960$229c9840@SHADOWFAX>
From: "David Wolfe" <dwolfe@gforcetech.com>
To: <zsh-workers@sunsite.dk>
Subject: Re: Problems building zsh on QNX 6.1
Date: Tue, 4 Jun 2002 17:00:49 -0400
Organization: gForce Technologies, Inc.
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2600.0000
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000

>  ... RLIMIT_RSS and RLIMIT_VMEM are both expanding to '6'.

Hmm.  I was curious about this, so I checked <sys/resource.h> on QNX 6.1:

#define RLIMIT_AS       6       /* Limit on address space size. */
#define RLIMIT_VMEM     RLIMIT_AS
#define RLIMIT_RSS      RLIMIT_AS


RLIMIT_VMEM, RLIMIT_RSS and RLIMIT_AS are all identical.  I'm guessing
this is because QNX is a realtime OS and doesn't limit how much memory
one process is allowed to use?

Anyway, I decided to roll up my sleeves and take a crack at fixing this.
It turns out that someone else had already done all the work!  I merely
copied a few lines down to where they needed to go.

I humbly submit the following patch.  (Please reply directly with
any comments, as I'm not subscribed to the list...)

- Dave


*** rlimits.c   Tue Jun  4 16:23:08 2002
--- rlimits.c.new   Tue Jun  4 16:27:52 2002
*************** bin_ulimit(char *name, char **argv, char
*** 565,571 ****
  # ifdef RLIMIT_MEMLOCK
        case RLIMIT_MEMLOCK:
  # endif /* RLIMIT_MEMLOCK */
! # ifdef RLIMIT_VMEM
        case RLIMIT_VMEM:
  # endif /* RLIMIT_VMEM */
  # ifdef RLIMIT_AIO_MEM
--- 565,573 ----
  # ifdef RLIMIT_MEMLOCK
        case RLIMIT_MEMLOCK:
  # endif /* RLIMIT_MEMLOCK */
! /* If RLIMIT_VMEM and RLIMIT_RSS are defined and equal, avoid *
!  * duplicate case statement.  Observed on QNX Neutrino 6.1.0. */
! # if defined(RLIMIT_VMEM) && (!defined(RLIMIT_RSS) || RLIMIT_RSS !=
RLIMIT_VMEM)
        case RLIMIT_VMEM:
  # endif /* RLIMIT_VMEM */
  # ifdef RLIMIT_AIO_MEM


