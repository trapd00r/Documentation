From zsh-users-return-2627-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Sep 28 00:47:46 1999
Return-Path: <zsh-users-return-2627-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 24559 invoked from network); 28 Sep 1999 00:47:45 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 28 Sep 1999 00:47:45 -0000
Received: (qmail 6964 invoked by alias); 28 Sep 1999 00:47:33 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 2627
Received: (qmail 6957 invoked from network); 28 Sep 1999 00:47:33 -0000
To: zsh-users@sunsite.auc.dk
Sender: monnier@tequila.cs.yale.edu
From: "Stefan Monnier" <monnier+lists/zsh/users/news/@tequila.cs.yale.edu>
Newsgroups: lists.zsh.users
Subject: Re: cd, pwd and symlinks
References: <19990927105103.A21392@youkaidi.irisa.fr> <19990927140204.A10336@thelonious.new.ox.ac.uk> <5lemfkez1d.fsf@tequila.cs.yale.edu> <990928001116.ZM17774@candle.brasslantern.com>
Date: 27 Sep 1999 20:47:26 -0400
Message-ID: <5l7llbg8v5.fsf@tequila.cs.yale.edu>
Lines: 19
X-Newsreader: Gnus v5.7/Emacs 20.4
Path: tequila.cs.yale.edu
NNTP-Posting-Host: tequila.cs.yale.edu
X-Trace: 27 Sep 1999 20:47:26 -0500, tequila.cs.yale.edu

>> I must say I don't like the names and defaults.  The names give the
>> impression that chasing links is a very unusual feature while it's the
>> normal unix behavior.
> It's not, however, the normal zsh behavior, and has not been for a very long
> time.  It may even date back to a specific personal preference of Falstad's;
> I don't recall for certain now.

That's indeed what I'm complaining about.  The default behavior is very
non-unixish which is surprising for a unix-only tool.

> "pwd" is nothing more than a slightly fancified alias for "echo $PWD", and
> PWD does not get reset every time zsh prints a prompt (unless you do it in
> your precmd function).  Rather, it gets reset every time you "cd".

But how hard would it be to have `pwd' do a stat("$PWD") and stat(".")
and compare the inode to make sure the current $PWD is still valid ?


	Stefan

