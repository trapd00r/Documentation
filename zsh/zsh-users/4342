From zsh-users-return-4342-mason-zsh=primenet.com.au@sunsite.dk Fri Oct 05 16:24:04 2001
Return-Path: <zsh-users-return-4342-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 9154 invoked from network); 5 Oct 2001 16:24:03 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 5 Oct 2001 16:24:03 -0000
Received: (qmail 15959 invoked by alias); 5 Oct 2001 16:23:47 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 4342
Received: (qmail 15941 invoked from network); 5 Oct 2001 16:23:46 -0000
Date: Fri, 5 Oct 2001 17:23:43 +0100
To: Bart Schaefer <schaefer@brasslantern.com>
Cc: zsh-users@sunsite.dk
Subject: Re: compctl -g not working
Message-ID: <20011005172343.A2872@fysh.org>
References: <20011002231841.B14325@astaroth.sweth.net> <1011003040449.ZM25370@candle.brasslantern.com> <20011003001256.B14675@astaroth.sweth.net> <1011003060441.ZM25764@candle.brasslantern.com> <20011003021524.A15356@astaroth.sweth.net> <1011003162422.ZM29481@candle.brasslantern.com> <20011003142330.A16765@astaroth.sweth.net> <1011004042305.ZM30162@candle.brasslantern.com> <20011004004307.C18930@astaroth.sweth.net> <1011005161336.ZM32521@candle.brasslantern.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1011005161336.ZM32521@candle.brasslantern.com>
User-Agent: Mutt/1.3.22i
From: Zefram <zefram@fysh.org>

Bart Schaefer wrote:
>Should we make BARE_GLOB_QUAL a bit smarter so that it knows about
>KSH_GLOB and looks back one more character to see if what precedes the
>open-paren token is one of the ksh-glob-chars?

Is "*(.)" a pattern "*" followed by glob qualifiers, or a ksh-style
pattern?  With the current system it's easy to predict when part
of a pattern will be interpreted as glob qualifiers, so you know to
disambiguate it if you didn't intend it to be taken as qualifiers.
With your proposed change, you'd have to think about the opposite
ambiguity too -- a set of glob qualifiers might be interpreted as part of
a pattern, and you'd sometimes need extra effort to force interpretation
as glob qualifiers.  I recommend sticking with the current, simpler, rule.

This is why we made the BARE_GLOB_QUAL option -- we wanted an unambiguous
syntax for glob qualifiers, that wouldn't get in the way of globbing
syntax at all.  Unfortunately no one's yet come up with a really good
suggestion.

-zefram

