From zsh-workers-return-14842-mason-zsh=primenet.com.au@sunsite.dk Mon Jun 11 13:59:29 2001
Return-Path: <zsh-workers-return-14842-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 26579 invoked from network); 11 Jun 2001 13:59:27 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 11 Jun 2001 13:59:27 -0000
Received: (qmail 17050 invoked by alias); 11 Jun 2001 13:59:02 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 14842
Received: (qmail 17032 invoked from network); 11 Jun 2001 13:59:01 -0000
Date: Mon, 11 Jun 2001 09:59:14 -0400
From: Clint Adams <clint@zsh.org>
To: Bart Schaefer <schaefer@candle.brasslantern.com>
Cc: zsh-workers@sunsite.dk
Subject: Re: hppa problems
Message-ID: <20010611095914.A28267@dman.com>
References: <20010610070719.A4521@dman.com> <20010610081031.C4640@dman.com> <1010610163423.ZM21625@candle.brasslantern.com> <20010610191043.A17968@dman.com> <20010610201920.A18831@dman.com> <1010611030425.ZM21914@candle.brasslantern.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <1010611030425.ZM21914@candle.brasslantern.com>; from schaefer@candle.brasslantern.com on Mon, Jun 11, 2001 at 03:04:25AM +0000


> That's almost certainly not supposed to happen.  Can you track it down
> any further?  It looks like it's happening when the handler() function
> is called.  What's the prototype for `sa_handler' in struct sigaction
> supposed to be?

struct sigaction
  {
    /* Signal handler.  */
#ifdef __USE_POSIX199309
    union
      {
        /* Used if SA_SIGINFO is not set.  */
        __sighandler_t sa_handler;
        /* Used if SA_SIGINFO is set.  */
        void (*sa_sigaction) (int, siginfo_t *, void *);
      }
    __sigaction_handler;
# define sa_handler     __sigaction_handler.sa_handler
# define sa_sigaction   __sigaction_handler.sa_sigaction
#else
    __sighandler_t sa_handler;
#endif

    /* Special flags.  */
    unsigned long int sa_flags;

    /* Additional set of signals to be blocked.  */
    __sigset_t sa_mask;
  };

#define SA_SIGINFO    0x00000010  /* Invoke signal-catching function with
                                     three arguments instead of one.  */

and

typedef void (*__sighandler_t) (int);

