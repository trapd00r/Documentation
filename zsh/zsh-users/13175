From zsh-users-return-13175-mason-zsh=primenet.com.au@sunsite.dk Sun Aug 31 10:18:48 2008
Return-Path: <zsh-users-return-13175-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 10744 invoked from network); 31 Aug 2008 10:18:36 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 31 Aug 2008 10:18:36 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 10013 invoked from network); 31 Aug 2008 10:18:24 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 31 Aug 2008 10:18:24 -0000
Received: (qmail 13788 invoked by alias); 31 Aug 2008 10:17:44 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13175
Received: (qmail 13768 invoked from network); 31 Aug 2008 10:17:41 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 31 Aug 2008 10:17:41 -0000
Received: from ixian.com (ixian.com [66.160.193.106])
	by bifrost.dotsrc.org (Postfix) with SMTP id D0358801E2B4
	for <zsh-users@sunsite.dk>; Sun, 31 Aug 2008 12:17:36 +0200 (CEST)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <18618.28600.361413.125434@bear.he.net>
Date: Sun, 31 Aug 2008 03:17:28 -0700
To: zsh-users@sunsite.dk
Subject: Re: can I control brace expansion's "sort"/"display" order?
In-Reply-To: <237967ef0808310241w3b71cf1el9d1c140379660b8@mail.gmail.com>
References: <18618.26046.529685.352779@bear.he.net>
	<237967ef0808310241w3b71cf1el9d1c140379660b8@mail.gmail.com>
X-Mailer: VM 7.19 under Emacs 21.4.1
Disposition-Notification-To: ead@ixian.com
From: Eric De Mund <ead@ixian.com>
Reply-To: Eric De Mund <ead@ixian.com>
X-Virus-Scanned: ClamAV 0.92.1/8122/Sun Aug 31 03:04:56 2008 on bifrost
X-Virus-Status: Clean

Mikael,

Eric De Mund <ead@ixian.com>:
> Can I control brace expansion's "sort" or "display" order?
>
> For instance this zsh echo results in this output:
>
>    % echo {white,black}{bird,fish}{21..24} | tr ' ' '\n'
>    # current output order
>    whitebird21
>    whitebird22
>    whitebird23
>    whitebird24
>    whitefish21
>    whitefish22
>    whitefish23
>    whitefish24
>    blackbird21
>    blackbird22
>    blackbird23
>    blackbird24
>    blackfish21
>    blackfish22
>    blackfish23
>    blackfish24
>    %
>
> But what if instead of this order I wanted the last brace to cycle
> most slowly, followed by the first, followed by the second, like so:
>
>    % echo {white,black}{bird,fish}{21..24} | tr ' ' '\n'
>    # desired output order
>    whitebird21
>    whitefish21
>    blackbird21
>    blackfish21
>    whitebird22
>    whitefish22    # oops: I had these two swapped in my original email
>    blackbird22    # oops: I had these two swapped in my original email
>    blackfish22
>    whitebird23
>    whitefish23
>    blackbird23
>    blackfish23
>    whitebird24
>    whitefish24
>    blackbird24
>    blackfish24
>    %
>
> Is there any way to accomplish this?
>
> My problem is that I'm trying to get files added to a zip archive in
> a particular order, and this order is neither brace expansion sort/
> display order nor lexicographical order.

Mikael Magnusson <mikachu@gmail.com>:
] You can probably do it with some for-looping, like
] setopt shortloops
] % for a in white black; for b in fish bird; for c in {21..24}; echo $a$b$c
] whitefish21
] whitefish22
] whitefish23
] whitefish24
] whitebird21
] whitebird22
] whitebird23
] whitebird24
] blackfish21
] blackfish22
] blackfish23
] blackfish24
] blackbird21
] blackbird22
] blackbird23
] blackbird24
]
] Now you can just swap the order of the loops
] % for b in fish bird; for a in white black; for c in {21..24}; echo $a$b$c
] whitefish21
] whitefish22
] whitefish23
] whitefish24
] blackfish21
] blackfish22
] blackfish23
] blackfish24
] whitebird21
] whitebird22
] whitebird23
] whitebird24
] blackbird21
] blackbird22
] blackbird23
] blackbird24

Thank you very much! This is great. This works for me. I'd use the
following solution, having:

o   the first variable represent the slowest cycling field (in my case
    the third field),
o   the second variable represent the next slowest cycling field (in my
    case the first field), and
o   the third variable represent the next slowest cycling field (in my
    case the second field).

Like so:

    % for a in {21..24}; for b in {white,black}; for c in {bird,fish}; \
    echo $b$c$a
    whitebird21
    whitefish21
    blackbird21
    blackfish21
    whitebird22
    whitefish22
    blackbird22
    blackfish22
    whitebird23
    whitefish23
    blackbird23
    blackfish23
    whitebird24
    whitefish24
    blackbird24
    blackfish24
    % 

Regards,
Eric
--
Eric De Mund   | Ixian Systems           | Jab: eadixian@jabber.org/main
ead@ixian.com  | 650 Castro St, #120-210 | Y!M: ead0002
ixian.com/ead/ | Mountain View, CA 94041 | ICQ: 811788

