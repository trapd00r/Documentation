From zsh-workers-return-25364-mason-zsh=primenet.com.au@sunsite.dk Thu Jul 31 13:47:24 2008
Return-Path: <zsh-workers-return-25364-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 13367 invoked from network); 31 Jul 2008 13:47:22 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 31 Jul 2008 13:47:22 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 39787 invoked from network); 31 Jul 2008 13:47:18 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 31 Jul 2008 13:47:18 -0000
Received: (qmail 7228 invoked by alias); 31 Jul 2008 13:47:15 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 25364
Received: (qmail 7216 invoked from network); 31 Jul 2008 13:47:15 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 31 Jul 2008 13:47:15 -0000
Received: from cluster-g.mailcontrol.com (cluster-g.mailcontrol.com [208.87.233.190])
	by bifrost.dotsrc.org (Postfix) with ESMTPS id D19AA805A42E
	for <zsh-workers@sunsite.dk>; Thu, 31 Jul 2008 15:47:09 +0200 (CEST)
Received: from cameurexb01.EUROPE.ROOT.PRI ([193.128.72.68])
	by rly15g.srv.mailcontrol.com (MailControl) with ESMTP id m6VDl5hp011722
	for <zsh-workers@sunsite.dk>; Thu, 31 Jul 2008 14:47:05 +0100
Received: from news01 ([10.103.143.38]) by cameurexb01.EUROPE.ROOT.PRI with Microsoft SMTPSVC(6.0.3790.3959);
	 Thu, 31 Jul 2008 14:47:04 +0100
Date: Thu, 31 Jul 2008 14:47:04 +0100
From: Peter Stephenson <pws@csr.com>
To: zsh-workers@sunsite.dk
Subject: Re: associative arrays: k flag in subscripts
Message-ID: <20080731144704.35456187@news01>
In-Reply-To: <20080731132452.GF1113@plenz.com>
References: <20080731132452.GF1113@plenz.com>
Organization: CSR
X-Mailer: Claws Mail 3.5.0 (GTK+ 2.12.8; i386-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 31 Jul 2008 13:47:04.0719 (UTC) FILETIME=[EAACF1F0:01C8F313]
X-Scanned-By: MailControl A-08-50-03 (www.mailcontrol.com) on 10.71.0.125
X-Virus-Scanned: ClamAV 0.92.1/7898/Thu Jul 31 08:42:41 2008 on bifrost
X-Virus-Status: Clean

On Thu, 31 Jul 2008 15:24:52 +0200
Julius Plenz <julius@plenz.com> wrote:
> Consider this example (executed in a zsh without any configuration
> done):
> 
>     zsh> local -A a
>     zsh> a=('[0-9]' digit '[0-9a-z]' alnum)
>     zsh> print $a[(k)3]
>     digit alnum
>     zsh> print $a[(K)3]
>     digit alnum
> 
> Actually, I expected the output "digit alnum" when I specified the K
> flag. But the k flag should behave differently, according to the
> manual: ``... and returns the value for the first key found where
> exp is matched by the key.''
> 
> So the expression $a[(k)3] should expand to either "digit" or "alnum",
> not to both -- right?

Right, though the ordering isn't specified (which the manual should
probably say in this specific case).  Because of the indeterminacy this
form isn't used very often.  I think it's simply a boolean the wrong way
round; this doesn't seem to break anything.  I've added a test.

Index: Doc/Zsh/params.yo
===================================================================
RCS file: /cvsroot/zsh/zsh/Doc/Zsh/params.yo,v
retrieving revision 1.47
diff -u -r1.47 params.yo
--- Doc/Zsh/params.yo	9 Apr 2008 13:06:55 -0000	1.47
+++ Doc/Zsh/params.yo	31 Jul 2008 13:42:11 -0000
@@ -263,9 +263,10 @@
 item(tt(k))(
 If used in a subscript on an associative array, this flag causes the keys
 to be interpreted as patterns, and returns the value for the first key
-found where var(exp) is matched by the key.  This flag does not work on
-the left side of an assignment to an associative array element.  If used
-on another type of parameter, this behaves like `tt(r)'.
+found where var(exp) is matched by the key.  Note this could be any
+such key as no ordering of associative arrays is defined.
+This flag does not work on the left side of an assignment to an associative
+array element.  If used on another type of parameter, this behaves like `tt(r)'.
 )
 item(tt(K))(
 On an associative array this is like `tt(k)' but returns all values where
Index: Src/params.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/params.c,v
retrieving revision 1.143
diff -u -r1.143 params.c
--- Src/params.c	25 Mar 2008 17:47:11 -0000	1.143
+++ Src/params.c	31 Jul 2008 13:42:12 -0000
@@ -1127,7 +1127,11 @@
 		v->isarr &= ~SCANPM_WANTVALS;
 	    } else if (rev)
 		v->isarr |= SCANPM_WANTVALS;
-	    if (!down && !keymatch && ishash)
+	    /*
+	     * This catches the case where we are using "k" (rather
+	     * than "K") on a hash.
+	     */
+	    if (!down && keymatch && ishash)
 		v->isarr &= ~SCANPM_MATCHMANY;
 	}
 	*inv = ind;
Index: Test/D06subscript.ztst
===================================================================
RCS file: /cvsroot/zsh/zsh/Test/D06subscript.ztst,v
retrieving revision 1.12
diff -u -r1.12 D06subscript.ztst
--- Test/D06subscript.ztst	18 Mar 2008 15:14:23 -0000	1.12
+++ Test/D06subscript.ztst	31 Jul 2008 13:42:12 -0000
@@ -145,6 +145,16 @@
 >\2 backcbrack cbrack star
 >\\\4 \\\? star zounds
 
+# It doesn't matter which element we get, since we never guarantee
+# ordering of an associative array.  So just test the number of matches.
+  array=(${(o)A[(k)\]]})
+  print ${#array}
+  array=(${(o)A[(k)\\\]]})
+  print ${#array}
+0:Associative array keys interpreted as patterns, single match
+>1
+>1
+
   typeset -g "A[one\"two\"three\"quotes]"=QQQ
   typeset -g 'A[one\"two\"three\"quotes]'=qqq
   print -R "$A[one\"two\"three\"quotes]"



-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070

