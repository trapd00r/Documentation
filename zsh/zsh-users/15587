From zsh-users-return-15587-mason-zsh=primenet.com.au@zsh.org Wed Dec 01 21:16:35 2010
Return-Path: <zsh-users-return-15587-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 8899 invoked by alias); 1 Dec 2010 21:16:35 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15587
Received: (qmail 10537 invoked from network); 1 Dec 2010 21:16:25 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at cwurm.de does not designate permitted sender hosts)
Message-ID: <4CF6BB27.5020507@cwurm.de>
Date: Wed, 01 Dec 2010 22:16:23 +0100
From: Christoph Wurm <christoph@cwurm.de>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.2.12) Gecko/20101027 Thunderbird/3.1.6
MIME-Version: 1.0
To: zsh-users@zsh.org
CC: "Benjamin R. Haskell" <zsh@benizi.com>
Subject: Re: Conditional newline in prompt
References: <4CF6B323.9000607@cwurm.de> <alpine.LNX.2.01.1012011600540.2792@hp>
In-Reply-To: <alpine.LNX.2.01.1012011600540.2792@hp>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

On 12/01/2010 10:08 PM, Benjamin R. Haskell wrote:
> On Wed, 1 Dec 2010, Christoph Wurm wrote:
>
>> Hello,
>>
>> I would like to display the exit code of a command if it is not 0 on a
>> line of its own, followed by the prompt on the next line.
>>
>> Is this possible?
>>
>> I was able to come up with the following:
>>
>> PROMPT="%0(?..%?)
>> %{$fg[green]%}%n@%m%{$reset_color%}:%~ %{$fg[red]%}%#%{$reset_color%} "
>>
>> However, this prints a newline after every command. Is there some
>> equivalent of '\n' that can be used inside the conditional substring?
>> Or some other way to do this?
>
> Just put the portion that you want to be conditional inside the parens:
>
> You had:
> PROMPT="%0(?..%?)
> %{$fg[green]%}%n@%m%{$reset_color%}:%~ %{$fg[red]%}%#%{$reset_color%} "
>
> Instead use:
> PROMPT="%0(?..%?
> )%{$fg[green]%}%n@%m%{$reset_color%}:%~ %{$fg[red]%}%#%{$reset_color%} "
>
> You also don't need the '0' in '%0', since it's the default, so:
> PROMPT="%(?..%?
> )%{$fg[green]%}%n@%m%{$reset_color%}:%~ %{$fg[red]%}%#%{$reset_color%} "
>
> Adding in my personal preferences, and the following facts:
> 1. I prefer $''-style quoting when newlines are involved.
> 2. Parameter expansion is handled as part of prompt expansion.
> 3. The lone number sitting on a line by itself seems weird.
>
> I might use:
> PROMPT=$'%(?..%{$fg[red]%}error=%?%{$reset_color%}\n)%{$fg[green]%}%n@%m%{$reset_color%}:%~
> %{$fg[red]%}%#%{$reset_color%} '
>

The color sequences ("%{$fg[red]%}" and the like) don't seem to work 
with $'', at least here on my machine.

Christoph

