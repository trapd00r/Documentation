From zsh-workers-return-19915-mason-zsh=primenet.com.au@sunsite.dk Tue May 11 13:10:46 2004
Return-Path: <zsh-workers-return-19915-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16442 invoked from network); 11 May 2004 13:10:45 -0000
Received: from thor.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.86)
  by ns1.primenet.com.au with SMTP; 11 May 2004 13:10:45 -0000
Received: (qmail 6433 invoked from network); 11 May 2004 13:10:30 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 11 May 2004 13:10:30 -0000
Received: (qmail 29610 invoked by alias); 11 May 2004 13:10:28 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 19915
Received: (qmail 29601 invoked from network); 11 May 2004 13:10:27 -0000
Received: from thor.dotsrc.org (HELO a.mx.sunsite.dk) (qmailr@130.225.247.86)
  by sunsite.dk with SMTP; 11 May 2004 13:10:24 -0000
Received: (qmail 6307 invoked from network); 11 May 2004 13:10:23 -0000
Received: from finlandia.infodrom.north.de (postfix@217.89.86.34)
  by a.mx.sunsite.dk with SMTP; 11 May 2004 13:09:20 -0000
Received: by finlandia.infodrom.north.de (Postfix, from userid 2006)
	id 3DEE31008B; Tue, 11 May 2004 15:08:57 +0200 (CEST)
Date: Tue, 11 May 2004 15:08:57 +0200
From: Matthias Kopfermann <matthi@infodrom.north.de>
To: Peter Stephenson <pws@csr.com>
Cc: zsh-workers@sunsite.dk
Subject: Re: print and floating point output
Message-ID: <20040511130857.GA24416@finlandia.infodrom.north.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
X-Operating-System: Debian GNU/Linux
User-Agent: Mutt/1.5.6i
X-Spam-Checker-Version: SpamAssassin 2.63 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, hits=0.0 required=6.0 tests=none autolearn=no version=2.63
X-Spam-Hits: 0.0


On Tue, May 11, 2004 at 01:01:06PM +0100, Peter Stephenson wrote:

> Well, the alternative is silently censoring decimal places, many of
> which may be valid.  If you want something smart to guess how many
> places are valid, you need to write it.

So you think that ruby, perl and python censor output?
I think that's just useful and uses the principle of least
surprise.

>   typeset -E 8 var
> 
> then
> 
>   (( var = 2.8 * 16.0 ))
>   print $var
> 
> for a given number of decimal places.  Or use printf, which does it's
> own conversion:

I know about printf and typeset already. I just thought that
perl, ruby and python have good points in their decision,
too. :)

And what's the way of using typeset with something like
print $((2.8*16.0)) ?


plus, bc does it that way, too.
and i don't think that bc does censor my output at all.
Well, to a point there always is censoring with floating
point, ack!

> 
> % printf "%f\n" $((2.8*16.0))
> 44.800000

Why is that no censoring then?

> 
> If you are doing serious floating point work, unfortunately you need to
> understand something about rounding errors, which are a tricky and
> ever-present feature.

I learned that here.

        Matthias

