From zsh-workers-return-12403-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Jul 27 09:51:52 2000
Return-Path: <zsh-workers-return-12403-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 11081 invoked from network); 27 Jul 2000 09:51:51 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 27 Jul 2000 09:51:51 -0000
Received: (qmail 20572 invoked by alias); 27 Jul 2000 09:51:38 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 12403
Received: (qmail 20565 invoked from network); 27 Jul 2000 09:51:36 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1000727095119.ZM32543@candle.brasslantern.com>
Date: Thu, 27 Jul 2000 09:51:18 +0000
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-workers@sunsite.auc.dk
Subject: zstyle question: enter menu selection on lots of ambiguity
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

So even after all Sven's hard work, I'm still not satisfied with the way
the menu style and long-list work together.

What I want is:

- automenu (first tab lists, second tab menu completes), except
- when the list won't fit on the screen, the first tab should
  enter menu selection immediately, but
- simply asking for a listing with C-d should never do menu-selection,
  no matter how long the list is

If I use 'select=long-list' I get menu-selection on the second tab.

If I use 'yes=long-list' I get menu completion started when I type C-d
(and some other pretty odd behavior besides, I might add).

If I use both, I get menu-selection on the second tab and on C-d, and
sometimes more of the strange behavior (the same match inserted on the
line multiple times and stuff like that -- I think it happens if you hit
C-d repeatedly after completion or selection has started when the match
on the line (highlighted, in selection) is NOT a directory).

So I hit upon this scheme:

zstyle -e ':completion:*' menu \
  '[[ $compstate[list] == ambiguous ]] && \
     compstate[list]="$compstate[list] list" reply=(select=long-list)'

This *almost* works -- if the list doesn't fill the screen, then I get a
list on the first tab and menu completion on the second, and if the list
does fill the screen then I get menu-selection on the first tab.  Yay!
BUT:  As soon as menu selection has started once this way, it starts for
ALL menu completions -- on the second tab for short lists, on the first
tab for long ones.  I don't want it to start on the second tab for short
lists.  (Actually, I want it to start on the second tab for lists longer
than 12 items, but I thought I'd work on that separately.)

I also worry about appending "list" to the value of compstate[list]; it
produces values like "ambiguous list" which doesn't *appear* to break any
other code, but ...

So what's the right way to accomplish all of this?

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

