From zsh-workers-return-8339-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Oct 20 08:02:22 1999
Return-Path: <zsh-workers-return-8339-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 22315 invoked from network); 20 Oct 1999 08:02:04 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 20 Oct 1999 08:02:04 -0000
Received: (qmail 5447 invoked by alias); 20 Oct 1999 07:59:15 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 8339
Received: (qmail 5440 invoked from network); 20 Oct 1999 07:59:15 -0000
Date: Wed, 20 Oct 1999 08:33:06 +0200 (MET DST)
Message-Id: <199910200633.IAA01216@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: "Bart Schaefer"'s message of Tue, 19 Oct 1999 16:06:17 +0000
Subject: Re: PATCH: completion in braces


Bart Schaefer wrote:

> On Oct 19,  3:50pm, Sven Wischnowsky wrote:
> } Subject: PATCH: completion in braces
> }
> } Horrors.
> } 
> } This allows completion inside nested braces.
> } [...] the next thing on my list if the nested-quotation problem and 
> } that may become at least as hard as this one...
> 
> Is there any point at which one of these glorious hacks of yours is
> likely to make the code *simpler*? :-)

We already had two of those. Some time ago.

> I always get nervous when I see a uuencoded block, but this doesn't
> look too horrific at all.

Yeah, since I have the same feelings when I see such blocks, I was
hesitating to uuencode it, but then wanted to save some bandwidth.

> ...
> 
> } I stumbled of some code in `do_single()' (that's where a single, full
> } match is inserted -- either because there is only one match or during
> } menucompletion) which makes sure that the otherwise automatically
> } inserted comma when completing in braces is *not* inserted during a
> } menucompletion. Does anyone rememeber why we did that?
> 
> When one of the possible menucompletions is a directory, the directory
> name gets a slash auto-appended to it, which then is autoremoved when
> you type the comma.  If the brace-completion code also auto-appended a
> comma, the slash wouldn't get autoremoved when you typed another comma.
> I think.

Ah, yes. I think this was the reason.

> } The second question: `zle_tricky.c' has now more than 10000
> } lines. Ouch. Maybe we should cut it in two/three/four/etc. parts. But
> } 1) if we ever offer all the things `comp{ctl,gen}' can do via
> } `compadd' plus something, then there is a lot of code that can be
> } removed from the file (or maybe if we have these mechanisms, we can at 
> } least put that stuff, which will eventually be removed, into a
> } separate file)
> 
> If you were up for a major code-factoring project -- refer to my remark
> above about glorious hacks -- I think it would be a great idea to make
> old-completion and new-completion into separate modules that both call
> a set of common functions wherever possible.

The idea we had at the beginning, yes. Since the C-code in tricky.c
(or, at least, most of it, including the way the functions call each
other) should be stable enough now, we really could start to think
about this. There is only the problem with `compgen'. As long as we
still have it, there is a lot of code needed by both old and new
completion. And exactly that type of code I'd like to move out of the
way.

Maybe I'll find time at the weekend to see what we need to remove
`compgen', implement that and then split the completion code. (Now
*that* would be fun writing, I think).

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

