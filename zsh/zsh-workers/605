From zsh-workers-request@math.gatech.edu  Tue Nov 14 07:55:32 1995
Received: from math.gatech.edu (euclid.skiles.gatech.edu [130.207.146.50]) by werple.net.au (8.7/8.7.1) with SMTP id HAA16564 for <mason@werple.mira.net.au>; Tue, 14 Nov 1995 07:55:29 +1100 (EST)
Received: by math.gatech.edu (5.x/SMI-SVR4)
	id AA06316; Mon, 13 Nov 1995 15:42:30 -0500
Resent-Date: Mon, 13 Nov 1995 12:44:18 -0800 (PST)
Old-Return-Path: <chuckb@Alice.Wonderland.Caltech.EDU>
From: chuckb@Alice.Wonderland.Caltech.EDU (Chuck L. Blake)
Message-Id: <9511132044.AA05284@Alice.Wonderland.Caltech.EDU>
Subject: Job control commands accepting PID
To: zsh-workers@math.gatech.edu
Date: Mon, 13 Nov 1995 12:44:18 -0800 (PST)
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
Resent-Message-Id: <"czVY32.0.cY1.rswfm"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/605
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

In the man page it states that any job control command can address a job via
PID as well as the % constructs.  In the source, only 'wait' has the support
for this.  The following patch remedies this deficiency.  Any proper integer
argument with no leading '%' is interpreted as a PID.  The selected job is the
one which contains that PID.  No other % semantics are changed. I haven't
tested it a whole lot, but it seems to work. The benefit is that you can do
things like "foo & disown $!". [ Just "disown" fails if for some reason "foo"
is not the "current" job. ]  I just joined the list so forgive me if this is
already done or redundant in some other way.

Chuck


diff -r zsh-2.6-beta11/Src/builtin.c zsh-2.6-beta11-cb/Src/builtin.c
753c753,754
<     int jobnum;
---
>     int jobnum, pid_num;
>     char *last_valid;
754a756,766
>     /* search for PID */
>     pid_num = strtol(s, &last_valid, 10);
>     if (*last_valid == '\0') {
> 	struct process* p;
> 	for (jobnum = MAXJOB - 1; jobnum >= 0; jobnum--)
> 	    if (jobtab[jobnum].stat && jobnum != thisjob)
> 		for(p = jobtab[jobnum].procs; p; p = p->next)
> 		    if (p->pid == pid_num)
> 			return jobnum;
>     }
>     /* search for job name */

