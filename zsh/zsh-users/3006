From zsh-users-return-3006-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Apr 03 14:44:48 2000
Return-Path: <zsh-users-return-3006-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 25493 invoked from network); 3 Apr 2000 14:44:46 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 3 Apr 2000 14:44:46 -0000
Received: (qmail 29878 invoked by alias); 3 Apr 2000 14:44:14 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 3006
Received: (qmail 29868 invoked from network); 3 Apr 2000 14:44:14 -0000
Message-ID: <38E8ADDC.E5879B19@u.genie.co.uk>
Date: Mon, 03 Apr 2000 15:42:36 +0100
From: Oliver Kiddle <opk@u.genie.co.uk>
X-Mailer: Mozilla 4.72 [en] (Win95; I)
X-Accept-Language: en
MIME-Version: 1.0
To: Allen Belk <allen.belk@usm.edu>
CC: zsh-users@sunsite.auc.dk
Subject: Re: Splitting $foo on delimiter value
References: <000501bf9d78$ec3313f0$3e525f83@otr.usm.edu>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

Allen Belk wrote:

>     I am looking for the appropriate method of splitting a string at a set
> delimiter.
> 
> foo=red:white:blue
> 
> I want to seperate these into 3 fields much the way the unix cut command
> would as in:

Try using ${(s.:.)foo}. That should split it on colons.

If you want to write it in a way that is compatible with sh or ksh, you
can stick : in $IFS.

Oliver Kiddle

