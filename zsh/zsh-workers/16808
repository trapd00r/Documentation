From zsh-workers-return-16808-mason-zsh=primenet.com.au@sunsite.dk Mon Mar 11 19:03:47 2002
Return-Path: <zsh-workers-return-16808-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20220 invoked from network); 11 Mar 2002 19:03:46 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 11 Mar 2002 19:03:46 -0000
Received: (qmail 13118 invoked by alias); 11 Mar 2002 19:03:40 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16808
Received: (qmail 13105 invoked from network); 11 Mar 2002 19:03:39 -0000
Date: Mon, 11 Mar 2002 14:02:31 -0500
From: Clint Adams <clint@zsh.org>
To: Bart Schaefer <schaefer@brasslantern.com>
Cc: zsh-workers@sunsite.dk
Subject: Re: Y test failures (zpty)
Message-ID: <20020311190231.GA21327@dman.com>
References: <20020311053241.GA9027@dman.com> <1020311182942.ZM27214@candle.brasslantern.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1020311182942.ZM27214@candle.brasslantern.com>
User-Agent: Mutt/1.3.27i

> It would appear that the get_pty() function is failing.  Why that's
> happening, I couldn't say.  There are two different versions of that
> function in zpty.c -- is the wrong one getting used for some reason?

The one defined is one with /dev/ptyxx.

I'm not entirely certain that this is the wrong one; I have
Unix98 ptys in /dev/pts (this is what nearly everything uses),
and I have /dev/pty?? as compatibility symlinks to /dev/pty/m[0-9]+.
The nodes in /dev/pty are char devices (major 2), which are the
traditional BSD-style pty's.

> Has the naming convention for pty devices changed?

Unix98 ptys showed up as an option quite some time ago, but
you used to be able to still get BSD-style pty's if you asked
for one.

I imagine that something could be broken with the kernel or devfsd.
Irrespective of that, I'd think that zsh should do the /dev/ptmx
decision at runtime.  Would this hurt anything?

