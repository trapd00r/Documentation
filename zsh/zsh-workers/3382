From zsh-workers-request@euclid.skiles.gatech.edu Tue Jul 29 07:14:59 1997
Return-Path: <zsh-workers-request@euclid.skiles.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 20302 invoked from network); 29 Jul 1997 07:14:57 -0000
Received: from euclid.skiles.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 29 Jul 1997 07:14:57 -0000
Received: (from list@localhost)
	by euclid.skiles.gatech.edu (8.8.5/8.8.5) id DAA14334;
	Tue, 29 Jul 1997 03:09:17 -0400 (EDT)
Resent-Date: Tue, 29 Jul 1997 03:09:17 -0400 (EDT)
From: "Bart Schaefer" <schaefer@brasslantern.com>
Message-Id: <970729000902.ZM15018@candle.brasslantern.com>
Date: Tue, 29 Jul 1997 00:09:02 -0700
In-Reply-To: <199707290604.CAA02191@hzoli.home>
Comments: In reply to Zoltan Hidvegi <hzoli@frontiernet.net>
        "Re: RC_EXPAND_PARAM bug" (Jul 29,  2:04am)
References: <199707290604.CAA02191@hzoli.home>
Reply-To: schaefer@nbn.com
X-Mailer: Z-Mail (4.0b.820 20aug96)
To: Zoltan Hidvegi <hzoli@frontiernet.net>,
        schaefer@brasslantern.com (Bart Schaefer), zsh-workers@math.gatech.edu
Subject: Re: RC_EXPAND_PARAM bug
Cc: zefram@tao.co.uk
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-Message-ID: <"nHWpW3.0.sV3.SSPtp"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/3382
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

On Jul 29,  2:04am, Zoltan Hidvegi wrote:
> 
> % echo 1${^a}1${^^x}
> 1a1x 1ay 1b1x 1by
> 
> The logic is that the string after the rc-param, 1${^^x}, is expanded,
> producing two strings, 1x y, which is combined with 1a 1b.  It is true
> that this is incompatible with 2.6-beta16 and older, which first expanded
> it to 1a1${^^x} 1b1${^^x} and later this was expanded to 1a1x y 1b1x y.
> Similarily, let i=0; echo ${^a}$[i++] expanded to a$[i++] b$[i++] and
> later to a0 b1, while in zsh-3.0.4 it expands to a0 b0.

Can you generalize this rule for us?  E.g.

% echo ${^a}$[i++]$[++j]${^x}....

where .... is some arbitary number of other substitutions?  Is it just that
it now does everything from right to left instead of left to right?  Why?

