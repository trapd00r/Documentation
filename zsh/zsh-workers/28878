From zsh-workers-return-28878-mason-zsh=primenet.com.au@zsh.org Thu Mar 10 14:57:20 2011
Return-Path: <zsh-workers-return-28878-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 7475 invoked by alias); 10 Mar 2011 14:57:20 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28878
Received: (qmail 8649 invoked from network); 10 Mar 2011 14:57:18 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <110310065653.ZM15150@torch.brasslantern.com>
Date: Thu, 10 Mar 2011 06:56:53 -0800
In-reply-to: <AANLkTi=VUkvqOxo+OANG2AVYko-Zbq7LwLQoF68fbLev@mail.gmail.com>
Comments: In reply to Mikael Magnusson <mikachu@gmail.com>
 "funny subshell effect" (Mar 10, 12:18am)
References: <AANLkTi=VUkvqOxo+OANG2AVYko-Zbq7LwLQoF68fbLev@mail.gmail.com>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh workers <zsh-workers@zsh.org>
Subject: Re: funny subshell effect
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Mar 10, 12:18am, Mikael Magnusson wrote:
} Subject: funny subshell effect
}
} % repeat 3; do command echo .(e:REPLY=\$RANDOM:); done
} 5801
} 5801
} 5801
} 
} Is this something that must be so?

Yep, it's intentional.  Read the manual:

     The values of RANDOM form an intentionally-repeatable pseudo-random
     sequence; subshells that reference RANDOM will result in identical
     pseudo-random values unless the value of RANDOM is referenced or
     seeded in the parent shell in between subshell invocations.

Above that, "The random number generator can be seeded by assigning a
numeric value to RANDOM."

% for i in {1..3}; do command echo .(e:RANDOM=$i\;REPLY=\$RANDOM:); done
17767
6138
20026

If you're not generating more than one number per second, a good way
to see the generator is with $SECONDS.  Or if your system supports a
higher granularity clock, something like

    typeset -F SECONDS
    repeat 3; do
      command echo .(e:'RANDOM=$((SECONDS*1000));REPLY=$RANDOM':);
    done

Consequently, Phil ... your approach may be reasonable, but we don't
want to apply it. :-)

