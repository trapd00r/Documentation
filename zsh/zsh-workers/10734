From zsh-workers-return-10734-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Apr 13 11:38:26 2000
Return-Path: <zsh-workers-return-10734-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 6491 invoked from network); 13 Apr 2000 11:38:24 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 13 Apr 2000 11:38:24 -0000
Received: (qmail 8717 invoked by alias); 13 Apr 2000 11:38:05 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 10734
Received: (qmail 8687 invoked from network); 13 Apr 2000 11:38:01 -0000
Date: Thu, 13 Apr 2000 13:37:56 +0200 (MET DST)
Message-Id: <200004131137.NAA14795@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: Peter Stephenson's message of Wed, 12 Apr 2000 21:54:51 +0100
Subject: matching flags (was: Re: Should we backup this change? RE: Modifier substitutions.)


Peter Stephenson wrote:

> You should now be able to do ${foo/(#s)$bar(#e)/...}.

Before I forget it... from the code in pattern.c it doesn't look too
hard to support flags for the other special `gaps between characters'
supported by some regexp systems (beginning/end of line/word). Would
it be interesting enough to have them, too? Might be useful with
parsing command outputs as in ${$(...)...} sometimes. (The definition
of `word' might be a problem, of course...)

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

