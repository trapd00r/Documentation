From zsh-users-return-13576-mason-zsh=primenet.com.au@sunsite.dk Wed Dec 10 16:57:58 2008
Return-Path: <zsh-users-return-13576-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 3790 invoked from network); 10 Dec 2008 16:57:55 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 10 Dec 2008 16:57:55 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 67089 invoked from network); 10 Dec 2008 16:57:41 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 10 Dec 2008 16:57:41 -0000
Received: (qmail 29656 invoked by alias); 10 Dec 2008 16:57:24 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13576
Received: (qmail 29641 invoked from network); 10 Dec 2008 16:57:24 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 10 Dec 2008 16:57:24 -0000
Received: from mail.o2.co.uk (vader.london.02.net [82.132.130.150])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 93D8A80524C3
	for <zsh-users@sunsite.dk>; Wed, 10 Dec 2008 17:57:21 +0100 (CET)
Received: from sc.homeunix.net (78.105.235.196) by mail.o2.co.uk (8.0.013.3) (authenticated as stephane.chazelas)
        id 493F9E400010538A; Wed, 10 Dec 2008 16:57:20 +0000
Received: from chazelas by sc.homeunix.net with local (Exim 4.69)
	(envelope-from <stephane_chazelas@yahoo.fr>)
	id 1LASND-0002uO-Ry; Wed, 10 Dec 2008 16:57:19 +0000
Date: Wed, 10 Dec 2008 16:57:19 +0000
From: Stephane Chazelas <Stephane_Chazelas@yahoo.fr>
To: Webb Sprague <webb.sprague@gmail.com>
Cc: zsh-users@sunsite.dk
Subject: Re: Array assignment? Funny prompt magic?
Message-ID: <20081210165719.GD4843@sc.homeunix.net>
Mail-Followup-To: Webb Sprague <webb.sprague@gmail.com>,
	zsh-users@sunsite.dk
References: <b11ea23c0812100812u374b5c21lfb899d422994f455@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-15
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <b11ea23c0812100812u374b5c21lfb899d422994f455@mail.gmail.com>
User-Agent: Mutt/1.5.16 (2007-09-19)
X-Virus-Scanned: ClamAV 0.92.1/8743/Wed Dec 10 16:08:45 2008 on bifrost
X-Virus-Status: Clean

On Wed, Dec 10, 2008 at 08:12:32AM -0800, Webb Sprague wrote:
> HI all,
> 
> (II know I should be digging through the docs, but this is so easy and
> I get such great answers!)
> 
> (1) Is x=($y) the correct way to assign an array to x?  I worry that
> first $y gets converted to text, then mangled with ().

If $y is an array, then

x=($y)

will copy the non empty elements of $y into a new $x array, you
want:

x=("${y[@]}")
to also copy the empty elements. the above creates an exact copy
of the array.

If $y is a scalar,

x=($y)

creates an array of 0 or 1 elements depending on whether $y is
empty or not. You want:

x=("$y")
if you want $x to contain only one element which is the content
of $y (regardless of whether it's empty or not).

If $y is an associative array:

x=($y)
will make an array of the non-empty values (not the keys) of the
associative array.

If $y is a scalar and you want it split (word splitting using
$IFS as in other shells), you should do:

x=($=y)

if you also want filename generation to be performed on each of
the resulting words from the splitting (that is for instance if
you want "*" to be replaced by the list of files in the current
directory), you should do:

x=($=~y)

which would then be the equivalent of bash's
z=($y)

> (2) Is there a way to set the names of the background processes for
> the prompt?  I use %j to count the number of them, but a list that
> goes like "%vim, %vim, %man" (or some such) would be great.  My
> analogy is to completing backrounded jobs with "fg <TAB>"
[...]

See the $jobtexts special associative array:

$ sleep 1000 &
[1] 11165
$ printf '%s => %s\n' "${(@kv)jobstates}"
1 => running:+:11165=running
$ printf '%s => %s\n' "${(@kv)jobtexts}"
1 => sleep 1000
$ echo ${(t)jobtexts}
association-readonly-hide-hideval-special

-- 
Stéphane

