From zsh-users-return-6537-mason-zsh=primenet.com.au@sunsite.dk Mon Sep 08 17:56:12 2003
Return-Path: <zsh-users-return-6537-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 25390 invoked from network); 8 Sep 2003 17:56:11 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 8 Sep 2003 17:56:11 -0000
Received: (qmail 10134 invoked by alias); 8 Sep 2003 17:55:58 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 6537
Received: (qmail 10120 invoked from network); 8 Sep 2003 17:55:58 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 8 Sep 2003 17:55:58 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [192.54.253.222] by sunsite.dk (MessageWall 1.0.8) with SMTP; 8 Sep 2003 17:55:57 -0000
Received: by binome.blorf.net (Postfix, from userid 1000)
	id 01A738FD91; Mon,  8 Sep 2003 10:55:56 -0700 (PDT)
Date: Mon, 8 Sep 2003 10:55:56 -0700
From: Wayne Davison <wayned@users.sourceforge.net>
To: zsh-users@sunsite.dk
Subject: Re: ~/.zshenv or ~/.zprofile
Message-ID: <20030908175556.GE28613@binome.blorf.net>
References: <20030803221858.GA2720@puritan.pcp.ath.cx> <20030803223949.GA18476@binome.blorf.net> <1030804060015.ZM15706@candle.brasslantern.com> <20030907175710.GA28613@binome.blorf.net> <20030907212433.GA233@DervishD> <20030908032728.GH48339@dan.emsphone.com> <20030908094729.GA13136@globnix.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20030908094729.GA13136@globnix.org>
User-Agent: Mutt/1.5.4i

On Mon, Sep 08, 2003 at 09:47:29AM +0000, Phil Pennock wrote:
> Similarly, I want to be able to do:
> % ssh some-host command-in-company-bin-dir -oPts |less
> and not have to worry about paths.

Another solution for that is to use ~/.ssh/environment (as long as the
"PermitUserEnvironment yes" option is set in the sshd_config file).  It
also has the benefit of working regardless of what login shell you might
have on a particular machine.

In any case, I consider this "knowing what you're doing", since it is
necessary to protect the setting of such variables via something like
the checking of $SHLVL.

..wayne..

