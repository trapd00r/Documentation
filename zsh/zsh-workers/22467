From zsh-workers-return-22467-mason-zsh=primenet.com.au@sunsite.dk Sun May 28 18:33:04 2006
Return-Path: <zsh-workers-return-22467-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 15088 invoked from network); 28 May 2006 18:33:02 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.2 (2006-05-25) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00,
	FORGED_RCVD_HELO autolearn=ham version=3.1.2
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 28 May 2006 18:33:02 -0000
Received: (qmail 24843 invoked from network); 28 May 2006 18:32:57 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 28 May 2006 18:32:57 -0000
Received: (qmail 24873 invoked by alias); 28 May 2006 18:32:54 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 22467
Received: (qmail 24864 invoked from network); 28 May 2006 18:32:54 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 28 May 2006 18:32:54 -0000
Received: (qmail 24530 invoked from network); 28 May 2006 18:32:54 -0000
Received: from acolyte.scowler.net (216.254.112.45)
  by a.mx.sunsite.dk with SMTP; 28 May 2006 18:32:52 -0000
Received: by acolyte.scowler.net (Postfix, from userid 1000)
	id 17AB270059; Sun, 28 May 2006 14:32:50 -0400 (EDT)
Date: Sun, 28 May 2006 14:32:49 -0400
From: Clint Adams <clint@zsh.org>
To: zsh-workers@sunsite.dk
Subject: PATCH: _canonical_paths
Message-ID: <20060528183249.GA19119@scowler.net>
Mail-Followup-To: zsh-workers@sunsite.dk
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.11+cvs20060403

Utility function meant to be used in _mount, from R. Ramkumar.

Index: Completion/Unix/Type/_canonical_paths
===================================================================
RCS file: Completion/Unix/Type/_canonical_paths
diff -N Completion/Unix/Type/_canonical_paths
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ Completion/Unix/Type/_canonical_paths	28 May 2006 18:31:25 -0000
@@ -0,0 +1,94 @@
+#autoload
+
+# This completion function completes all paths given to it, and also tries to
+# offer completions which point to the same file as one of the paths given
+# (relative path when an absolute path is given, and vice versa; when ..'s are
+# present in the word to be completed, and some paths got from symlinks.
+
+# Usage: _canonical_paths [-A var] [-N] [-MJV12nfX] tag desc paths...
+
+# -A, if specified, takes the paths from the array variable specified. Paths can
+# also be specified on the command line as shown above. -N, if specified,
+# prevents canonicalizing the paths given before using them for completion, in
+# case they are already so. `tag' and `desc' arguments are well, obvious :) In
+# addition, the options -M, -J, -V, -1, -2, -n, -F, -X are passed to compadd.
+
+local __index
+typeset -a __gopts __opts
+
+zparseopts -D -a __gopts M: J: V: 1 2 n F: X: A:=__opts N=__opts
+
+: ${1:=canonical-paths} ${2:=path}
+
+__index=$__opts[(I)-A]
+(( $__index )) && set -- $@ ${(P)__opts[__index+1]}
+
+local expl ret=1 tag=$1 desc=$2
+
+shift 2
+
+if (( ! $+commands[readlink] )); then
+  _wanted "$tag" expl "$desc" compadd $__gopts $@ && ret=0
+  return ret
+fi
+
+typeset -a matches files
+
+if (( $__opts[(I)-N] )); then
+  files=($@)
+else
+  for __index in $@; do
+    files+=$(readlink -qf $__index)
+  done
+fi
+
+_canonical_paths_add_paths () {
+  local origpref=$1 expref rltrim curpref canpref subdir
+  [[ $2 != add ]] && matches=()
+  expref=${~origpref}
+  [[ $origpref == (|*/). ]] && rltrim=.
+  curpref=${${expref%$rltrim}:-./}
+  canpref=$(readlink -qf $curpref)
+  if [[ $? -eq 0 ]]; then
+    [[ $curpref == */ && $canpref == *[^/] ]] && canpref+=/
+    canpref+=$rltrim
+    [[ $expref == *[^/] && $canpref == */ ]] && origpref+=/
+    matches+=(${${(M)files:#$canpref*}/$canpref/$origpref})
+  fi
+  for subdir in $expref?*(@); do
+    _canonical_paths_add_paths ${subdir/$expref/$origpref} add
+  done
+}
+
+local base=$PREFIX
+typeset -i blimit
+
+_canonical_paths_add_paths $base
+
+if [[ -z $base ]]; then
+  _canonical_paths_add_paths / add
+elif [[ $base == ..(/.(|.))#(|/) ]]; then
+
+  # This style controls how many parent directory links (..) to chase searching
+  # for possible completions. The default is 8. Note that this chasing is
+  # triggered only when the user enters atleast a .. and the path completed
+  # contains only . or .. components. A value of 0 turns off .. link chasing
+  # altogether.
+
+  zstyle -s ":completion:${curcontext}:$tag" \
+    canonical-paths-back-limit blimit || blimit=8
+
+  if [[ $base != */ ]]; then
+    [[ $base != *.. ]] && base+=.
+    base+=/
+  fi
+  until [[ $base.. -ef $base || blimit -le 0 ]]; do
+    base+=../
+    _canonical_paths_add_paths $base add
+    blimit+=-1
+  done
+fi
+
+_wanted "$tag" expl "$desc" compadd $__gopts -Q -U -a matches && ret=0
+
+return ret

