From zsh-workers-return-18456-mason-zsh=primenet.com.au@sunsite.dk Tue Apr 22 12:00:21 2003
Return-Path: <zsh-workers-return-18456-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 14520 invoked from network); 22 Apr 2003 12:00:20 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 22 Apr 2003 12:00:20 -0000
Received: (qmail 17687 invoked by alias); 22 Apr 2003 09:27:03 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 18456
Received: (qmail 16048 invoked from network); 21 Apr 2003 09:03:59 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 21 Apr 2003 09:03:59 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [212.125.75.4] by sunsite.dk (MessageWall 1.0.8) with SMTP; 21 Apr 2003 9:3:58 -0000
Received: (qmail 21928 invoked from network); 21 Apr 2003 09:03:53 -0000
Received: from iris.logica.co.uk (158.234.9.163)
  by server-19.tower-1.messagelabs.com with SMTP; 21 Apr 2003 09:03:53 -0000
Received: from gmcs3.logica.co.uk ([158.234.142.61])
	by iris.logica.co.uk (8.9.3/8.9.3/Debian 8.9.3-21) with ESMTP id KAA22606;
	Mon, 21 Apr 2003 10:03:52 +0100
X-Authentication-Warning: iris.logica.co.uk: Host [158.234.142.61] claimed to be gmcs3.logica.co.uk
Received: from gmcs3.logica.co.uk (localhost [127.0.0.1])
	by gmcs3.logica.co.uk (8.11.6/8.11.6/SuSE Linux 0.5) with ESMTP id h3L93kF02508;
	Mon, 21 Apr 2003 11:03:46 +0200
cc: zsh-workers@sunsite.dk
X-VirusChecked: Checked
In-reply-to: <20030419163956.GA25361@chains.ch> 
From: Oliver Kiddle <okiddle@yahoo.co.uk>
References: <20030419163956.GA25361@chains.ch>
To: Istvan Sebestyen <istvan@chains.ch>
Subject: Re: Completion for `sub-options' 
Date: Mon, 21 Apr 2003 11:03:46 +0200
Message-ID: <2506.1050915826@gmcs3.logica.co.uk>

Istvan Sebestyen wrote:
> 
> I began to write a zsh completion for a little httpd. I saw then, that
> it isn't as easy as i thought, because the program hasn't regular
> options, it has `sub-options', too. The example would be:
> 
> zsh%  program --errordoc 404=/var/www/foobar.html
> 
> First it should make the completion for the error code, what is
> trivial to make (401, 404, etc...). The second thing, it should put a
> `=' after the error-code completion and then look for  _files -g
> '*.(html|htm|php|etc...)'.

You need to use compset -P and compset -S to divide the word at the
equals sign:

  local suf expl

  if compset -P '*='; then
    _wanted documents expl 'document' _files -g '*.(html|htm|php)'
  else
    compset -S '=*' || suf=( -S = )
    _wanted values expl 'error number' compadd $suf 401 404 405
  fi

compset -P and compset -S chop off a prefix or a suffix respectively
from being considered by the completion system. So if it successfully
removes an error number from the beginning of the current word it
completes documents. Otherwise it completes error numbers after being
sure to ignore anything after an equals sign.

You could actually use _values for this if you find this simpler:
  _values 'error document' {401,404,405}':document:_files -g "*.(html|htm|php)"'

Though _values is meant for slightly different cases really.

If you're using _arguments to complete the --errordoc option, you may
need to utilise a separate function or a state
('--errordoc:error document:->errordoc') to do this (though you could
use the _values stuff after doubly quoting it).

Oliver

