From zsh-workers-request@math.gatech.edu Tue Aug 18 13:42:51 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 885 invoked from network); 18 Aug 1998 13:42:50 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 18 Aug 1998 13:42:50 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.9.1/8.9.1) id JAA09182;
	Tue, 18 Aug 1998 09:35:51 -0400 (EDT)
Resent-Date: Tue, 18 Aug 1998 09:35:51 -0400 (EDT)
Message-Id: <13785.33690.402241.982212@pochacco.alphatech.com>
Date: Tue, 18 Aug 1998 09:37:30 -0400 (EDT)
From: greg@alphatech.com (Greg Klanderman)
To: zsh-workers@math.gatech.edu
Subject: zsh bug with local variables?
Reply-To: greg@alphatech.com
Mime-Version: 1.0 (generated by tm-edit 7.108)
Content-Type: text/plain; charset=US-ASCII
Resent-Message-ID: <"bNfg73.0.PF2.sCOsr"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4316
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu


I'm running zsh-3.1.4 (zsh -f) on solaris 2.5.1, and type:

pochacco% function foo () { local foobar ; foobar=( "$@" ) ; bar ; echo "foobar= ${foobar[*]}" ; }
pochacco% function bar () { local foobar ; foobar=( foo bar ) ; }
pochacco% foo hello there
foobar= foo bar

Is this a bug?  Notice the outer local variable has been set when 
only the inner one should have been.  Bash 2.02 does handle this
as expected.

Another random question, is there a clean way to test whether there
is a function defined with a given name?

thanks,
Greg

ps- zsh is excellent, thanks!

