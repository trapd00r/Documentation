From zsh-users-return-14518-mason-zsh=primenet.com.au@zsh.org Fri Oct 23 16:34:57 2009
Return-Path: <zsh-users-return-14518-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 29779 invoked by alias); 23 Oct 2009 16:34:57 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users@zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14518
Received: (qmail 16890 invoked from network); 23 Oct 2009 16:34:44 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.2.5
Received-SPF: none (ns1.primenet.com.au: domain at math.fu-berlin.de does not designate permitted sender hosts)
Date: Fri, 23 Oct 2009 18:34:29 +0200
From: "Chr. von Stuckrad" <stucki@mi.fu-berlin.de>
To: zsh-users@zsh.org
Subject: Re: proper UTF-8 support under OSX
Message-ID: <20091023163429.GA15640@localhost.mi.fu-berlin.de>
Mail-Followup-To: zsh-users@zsh.org
References: <20091023141905.GF14613@prunille.vinc17.org> <399438958-BeMail@laptop>
X-Envelope-Sender: stucki@math.fu-berlin.de
X-Virus-Scanned: by AMaViS 0.3.12pre7-L41+ClamAV[23753](NAI-uvscan@mi.fu-berlin.de)
X-Remote-IP: 160.45.113.41
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <399438958-BeMail@laptop>
User-Agent: Mutt/1.5.18 (2008-05-17)
Sender: "Chr. von Stuckrad" <stucki@math.fu-berlin.de>

To make it as complicated, as it seemingly is:

On Fri, 23 Oct 2009, François Revol wrote:

> Charset = character set = the list of available glyphs, no matter how
> they are coded.

Yes, kind of abstract definition what you 'want to use/show',
or what you have available (like 'ASCII' being 'smaller' than
'ISO-8859-*' smaller than 'UTF-8').

> Encoding = how they are represented.
> 
> Like, UTF-8 one of the many encodings or the Unicode charset.

Yes, how they are encoded in 'strings the computer works with'.

If you type something on a typical UNIX-Keyboard into a terminal-Program
on an X11-Display and ssh to some other machine, your 'Keystrokes' cross
lots of 'Tables of Codes'.

- Keyboard (scancodes I believe and loadable Tables in the Kernels)
  encodes 'your kind of hardware' to some 'Standard keyboard, e.g.
  German in my case.
- Maps into X11-Display Symbolic Keys given to the Program (e.g xterm)
  so now X11 INPUT knows about german 'ß' as a Key pressed
- the x11-program then 'types' them again through the 'pts' devices
  (pseudo keyboard on pseudo tty), where it must know, which ENCODING
  will be used to map my 'ß'-Key to 'bytes on the (pseudo)wire.
  Here we have the first 'Latin1(iso8859-1)' versus UTF-8 Case.
- now those (hopefully UTF-8) bytes are grabbed by ssh and transferred
  to the remote, and there into another 'pts' so far we send 'just bytes'
  bit must make sure, 'everything gets through'(!)
  If one of the 'pseudo-ttys' accepts 7bit chars only, or eats up some
  bytes ... trouble ...
- on the remote host now sits your zsh and MUST know, which ENCODING
  the sent string has to understand my 'ß' (now two bytes in UTF-8).
  Same with 'mutt' or all the other programs on the remote 'pseudo-tty'.
- BUT now that remote shell/program/whatever sends an Answer ... ... ...
  back again, hopefully unicode, send in multibytes-per-character up
  to the local pseudo-tty, where the local program (e.g. xterm) grabs
  then and needs to send them to the Display.
- And HERE is the next Mapping - Fonts and Font-Encoding.
  The DISPLAY now must know, how to *show* the Character on-screen.
  Takes another Table and looks up the little rectangle of Bits.
  BUT there too 'UTF-8' versus whatever else can fail.

So to make a long story short:

keyboard--X11_input--pts--ssh-sshd--pts--remote_prog--(and back)
(back)--remote_prog--pts--sshd-ssh--pts--font--Display

And on nearly every "--" you can mess up your 'multibyte' versus
'8bit' versus '7bit' per Character(glyph) Situation by assuming
the wrong 'Table of Codes'.

I hope I got this right, as I have to explain it all the time and time
again to our students messing up their connections from Home to 'here'
but in german normally :-))

Stucki


-- 
Christoph von Stuckrad      * * |nickname |Mail <stucki@mi.fu-berlin.de> \
Freie Universitaet Berlin   |/_*|'stucki' |Tel(Mo.,Mi.):+49 30 838-75 459|
Mathematik & Informatik EDV |\ *|if online|  (Di,Do,Fr):+49 30 77 39 6600|
Takustr. 9 / 14195 Berlin   * * |on IRCnet|Fax(home):   +49 30 77 39 6601/

