From zsh-users-return-6749-mason-zsh=primenet.com.au@sunsite.dk Sun Nov 09 10:45:24 2003
Return-Path: <zsh-users-return-6749-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20675 invoked from network); 9 Nov 2003 10:45:23 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 9 Nov 2003 10:45:23 -0000
Received: (qmail 19623 invoked by alias); 9 Nov 2003 10:45:11 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 6749
Received: (qmail 19609 invoked from network); 9 Nov 2003 10:45:10 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 9 Nov 2003 10:45:10 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [213.6.171.43] by sunsite.dk (MessageWall 1.0.8) with SMTP; 9 Nov 2003 10:45:10 -0000
Received: from opk by athlon with esmtp (masqmail 0.2.20) id
 1AIC77-0Kg-00; Fri, 07 Nov 2003 20:17:45 +0100
In-reply-to: <20031106153225.GA491@lorien.emufarm.org> 
From: Oliver Kiddle <okiddle@yahoo.co.uk>
References: <20030523160020.GA9026@borho.org> <20030523160155.GA14388@lorien.emufarm.org> <20031106153225.GA491@lorien.emufarm.org>
To: Danek Duvall <duvall@emufarm.org>
cc: Jonas Juselius <jonas@iki.fi>, zsh-users@sunsite.dk
Subject: Re: Completion function for bitkeeper? 
Date: Fri, 07 Nov 2003 20:17:45 +0100
Message-ID: <1281.1068232665@athlon>

Danek Duvall wrote:
> 
> If someone can explain me out of my confusion in the first big comment,
> that'd be really nice, but what I have appears to work.

> 	# If _sccsfiles is called from one of the _sccs_* functions, then
> 	# it'll have some compadd options added after the first word, so
> 	# the positional parameters are not all "ours".
> 	#
> 	# One option is to precede the call to _sccsfiles in the optspec's
> 	# action with a space, which prevents these extra parameters from
> 	# being passed in.  Ugh.  See the documentation for _arguments in
> 	# zshcompsys(1), where it talks about action starting with a space.
> 	#
> 	# Instead, remove the first few arguments if they match $expl.  Why
> 	# they're passed in both places I don't know (and this may be a
> 	# bug).
> 
> 	while [[ -n "$1" && "$1" == "$expl[i]" ]]; do
> 		shift
> 		((++i))
> 	done
>
> 	[[ "$1" == "-e" ]] && sfile="SCCS/p."

Try using zparseopts to find and remove that -e option instead:
  zparseopts -D -E e=eopt
  [[ -n $eopt ]] && sfile="SCCS/p."

Looking inside expl is not a good idea as the array name expl is purely
a convention.

The other thing you can do is use a `-' in the _sccs_* functions from
which you call _sccsfiles. e.g:
  _wanted files expl 'sccs file' _sccsfiles -e -

It will then put compadd options after the `-e'. The main use of that
however is when you have "$@" among the arguments and want any
description in it to take precedence over the new one.

Oliver

