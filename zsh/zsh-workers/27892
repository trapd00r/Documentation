From zsh-workers-return-27892-mason-zsh=primenet.com.au@zsh.org Tue Apr 20 06:13:33 2010
Return-Path: <zsh-workers-return-27892-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 3757 invoked by alias); 20 Apr 2010 06:13:33 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 27892
Received: (qmail 10394 invoked from network); 20 Apr 2010 06:13:30 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-0.9 required=5.0 tests=BAYES_00,RCVD_IN_SORBS_DUL,
	RDNS_DYNAMIC,TO_NO_BRKTS_DYNIP autolearn=no version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at iDaemons.org does not designate permitted sender hosts)
Date: Tue, 20 Apr 2010 15:04:18 +0900
Message-ID: <86d3xuhd7h.knu@iDaemons.org>
From: "Akinori MUSHA" <knu@iDaemons.org>
To: zsh-workers@zsh.org
Subject: [PATCH] Adding support for FreeBSD to service script compdefs
Organization: Associated I. Daemons
X-PGP-Public-Key: finger knu@FreeBSD.org
X-PGP-Fingerprint: 081D 099C 1705 861D 4B70  B04A 920B EFC7 9FD9 E1EE
MIME-Version: 1.0 (generated by EMIKO 1.14.1 - "Choanoflagellata")
Content-Type: multipart/signed;
 boundary="pgp-sign-Multipart_Tue_Apr_20_15:04:18_2010-1"; micalg=pgp-sha1;
 protocol="application/pgp-signature"
Content-Transfer-Encoding: 7bit

--pgp-sign-Multipart_Tue_Apr_20_15:04:18_2010-1
Content-Type: text/plain; charset=US-ASCII

Hi,

The attached patch adds support for FreeBSD's rc.d system (derived
from NetBSD) and service(8) command to service script completion
definitions.

In addition to this, it'd be nice to see
Completion/Redhat/Command/_service moved to Completion/Unix/Command.

I think it'd be easy to also take care of NetBSD, but would just leave
it to its users since I'm just an oocasional user of the OS.

Regards,

--
Akinori MUSHA / http://akinori.org/

M Completion/Redhat/Command/_service
M Completion/Unix/Command/_init_d
M Completion/Unix/Type/_services

Index: Completion/Redhat/Command/_service
===================================================================
RCS file: /cvsroot/zsh/zsh/Completion/Redhat/Command/_service,v
retrieving revision 1.3
diff -u -r1.3 _service
--- Completion/Redhat/Command/_service	23 May 2002 14:48:58 -0000	1.3
+++ Completion/Redhat/Command/_service	20 Apr 2010 05:53:34 -0000
@@ -10,13 +10,22 @@
   zstyle ":completion:${ctx}" tag-order init


-_arguments -s \
-  '(-d --debug)'{-d,--debug}'[turn debugging on]' \
-  '(- :)'{-h,--help}'[print usage]' \
-  '(- :)'{-v,--version}'[print version]' \
-  '(-)'{-f,--full-restart}'[restart service]' \
-  '(- :)'{-R,--full-restart-all}'[restart all services]' \
-  '(- :)'{-s,--status-all}'[print status of all services]' \
-  ':service name:_services' \
-  '*::service argument: _init_d'
-
+if [[ $OSTYPE = freebsd* ]]; then
+  _arguments -s \
+    '(-)-e[show services that are enabled]' \
+    '(-)-l[list all scripts in /etc/rc.d and the local startup directory]' \
+    '(-)-r[show the results of boot time rcorder]' \
+    '(-)-v[verbose]' \
+    ':service name:_services' \
+    '*::service argument:_init_d'
+else
+  _arguments -s \
+    '(-d --debug)'{-d,--debug}'[turn debugging on]' \
+    '(- :)'{-h,--help}'[print usage]' \
+    '(- :)'{-v,--version}'[print version]' \
+    '(-)'{-f,--full-restart}'[restart service]' \
+    '(- :)'{-R,--full-restart-all}'[restart all services]' \
+    '(- :)'{-s,--status-all}'[print status of all services]' \
+    ':service name:_services' \
+    '*::service argument: _init_d'
+fi
Index: Completion/Unix/Command/_init_d
===================================================================
RCS file: /cvsroot/zsh/zsh/Completion/Unix/Command/_init_d,v
retrieving revision 1.9
diff -u -r1.9 _init_d
--- Completion/Unix/Command/_init_d	4 Oct 2009 18:20:00 -0000	1.9
+++ Completion/Unix/Command/_init_d	20 Apr 2010 05:53:34 -0000
@@ -1,39 +1,90 @@
 #compdef -p */(init|rc[0-9S]#).d/*

-local magic cmds what script
+local cmds script

 _compskip=all

-# This should probably be system specific...
+if [[ $OSTYPE = freebsd* ]]; then
+  (( $+functions[_init_d_fullpath] )) ||
+  _init_d_fullpath() {
+    local -a scriptpath
+    local name=$1 dir
+    # Known locations of init scripts
+    # C.f. Unix/Type/_services
+    scriptpath=(/etc/rc.d $(/bin/sh -c '. /etc/rc.subr; load_rc_config XXX; echo $local_startup' 2>/dev/null))
+
+    for dir in $scriptpath; do
+      if [[ -f $dir/$name ]]; then
+        echo $dir/$name
+        return 0
+      fi
+    done
+    return 1
+  }
+
+  (( $+functions[_init_d_get_cmds] )) ||
+  _init_d_get_cmds() {
+    local magic cmds cmd_prefix
+
+    [[ -x $script ]] || return 1
+    [[ $(read -u0 -k2 magic < $script && echo $magic) = '#!' ]] || return 0
+    [[ -f /etc/rc.subr ]] && [[ -x /sbin/rcorder ]] || return 0
+    grep -q '^ *\.  */etc/rc\.subr *$' $script || return 0
+    cmds=(
+      start stop restart rcvar status poll
+      $(/bin/sh -c "set -- rcvar; . $script >/dev/null; echo \$extra_commands" 2>/dev/null)
+    )
+
+    for cmd_prefix in {,one,fast,force,quiet}; do
+      echo ${cmds/#/$cmd_prefix}
+    done
+
+    return 0
+  }
+else
+  (( $+functions[_init_d_fullpath] )) ||
+  _init_d_fullpath() {
+    local -a scriptpath
+    local name=$1 dir
+    # Known locations of init scripts
+    # C.f. Unix/Type/_services
+    scriptpath=(/etc/init.d /etc/rc.d /etc/rc.d/init.d)
+
+    for dir in $scriptpath; do
+      if [[ -f $dir/$name ]]; then
+        echo $dir/$name
+        return 0
+      fi
+    done
+    return 1
+  }
+
+  (( $+functions[_init_d_get_cmds] )) ||
+  _init_d_get_cmds() {
+    local what magic cmds

-script=$words[1]
-if [[ $script != */* ]]; then
-  local -a scriptpath
-  local dir
-  # Known locations of init scripts
-  # C.f. Unix/Type/_services
-  scriptpath=(/etc/init.d /etc/rc.d /etc/rc.d/init.d)
-
-  for dir in $scriptpath; do
-    if [[ -f $dir/$script ]]; then
-      script=$dir/$script
-      break
-    fi
-  done
-fi
+    # If the file starts with `#!' we hope that this is a shell script
+    # and get lines looking like <space>foo|bar) with the words in $what.

-# If the file starts with `#!' we hope that this is a shell script
-# and get lines looking like <space>foo|bar) with the words in $what.
+    what='(st(art|op|atus)|(force-|)re(start|load)|debug_(up|down)|dump(|_stats)|add|delete|clean|list)'

-what='(st(art|op|atus)|(force-|)re(start|load)|debug_(up|down)|dump(|_stats)|add|delete|clean|list)'
-
-read -u0 -k2 magic < $script && [[ $magic = '#!' ]] &&
+    read -u0 -k2 magic < $script && [[ $magic = '#!' ]] &&
     cmds=( ${${(j:|:s:|:)${(M)${(f)"$(< $script)"}:#[[:blank:]]#(\'|)${~what}([[:blank:]]#\|[[:blank:]]#${~what})#(\'|)\)}}//[^-a-z_]} )

-# This would be the pattern to use every line of the form <space>foo).
-# Some people say this might match too many lines...
-#
-#    cmds=( ${${(j:|:s:|:)${(M)${(f)"$(< $script)"}:#[[:blank:]]#(\'|)[a-z_|]##\'|)\)}}//[^a-z_]} )
+    # This would be the pattern to use every line of the form <space>foo).
+    # Some people say this might match too many lines...
+    #
+    #    cmds=( ${${(j:|:s:|:)${(M)${(f)"$(< $script)"}:#[[:blank:]]#(\'|)[a-z_|]##\'|)\)}}//[^a-z_]} )
+
+    echo $cmds
+    return 0
+  }
+fi
+
+script=$words[1]
+[[ $script = */* ]] || script="$(_init_d_fullpath "$script")"
+
+cmds=( $(_init_d_get_cmds) ) || return

 (( $#cmds )) || zstyle -a ":completion:${curcontext}:commands" commands cmds ||
     cmds=(start stop)
Index: Completion/Unix/Type/_services
===================================================================
RCS file: /cvsroot/zsh/zsh/Completion/Unix/Type/_services,v
retrieving revision 1.5
diff -u -r1.5 _services
--- Completion/Unix/Type/_services	4 Oct 2009 18:20:00 -0000	1.5
+++ Completion/Unix/Type/_services	20 Apr 2010 05:53:34 -0000
@@ -3,7 +3,13 @@
 local -a inits xinetds alls
 local expl ret=1

-if chkconfig --list > /dev/null 2>&1; then
+if [[ $OSTYPE = freebsd* ]]; then
+  if [[ -x /usr/sbin/service ]]; then
+    alls=( $(service -l) ) && ret=0
+
+    _wanted services expl service compadd "$@" - $alls[@] && ret=0
+  fi
+elif chkconfig --list > /dev/null 2>&1; then
   alls=( ${(f)"$(LANGUAGE=C LANG=C LC_ALL=C chkconfig --list)"} )
   inits=( ${${${alls[1,(r)xinetd based*]}[1,-2]}/%[[:space:]]*/} )
   xinetds=( ${${${${alls[(r)xinetd based*,-1]}[2,-1]}/#[[:space:]]#}/%:*} )

--pgp-sign-Multipart_Tue_Apr_20_15:04:18_2010-1
Content-Type: application/pgp-signature
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.10 (FreeBSD)

iEYEABECAAYFAkvNQ+IACgkQkgvvx5/Z4e5LDwCfeWD1kXRDLuy9yGwfnaN/E4Er
3P0AoJ1oUfqwNwhlIx5nhWT722kK6Jxc
=mJje
-----END PGP SIGNATURE-----

--pgp-sign-Multipart_Tue_Apr_20_15:04:18_2010-1--

