From schaefer@z-code.ncd.com Tue Jun 25 07:33:26 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by melb.werple.net.au (8.7.5/8.7.3/2) with ESMTP id HAA11096 for <mason@werple.mira.net.au>; Tue, 25 Jun 1996 07:33:20 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id RAA11528; Mon, 24 Jun 1996 17:20:50 -0400 (EDT)
Resent-Date: Mon, 24 Jun 1996 17:20:50 -0400 (EDT)
From: "Barton E. Schaefer" <schaefer@z-code.ncd.com>
Message-Id: <960624142056.ZM2050@zyrcon.z-code.com>
Date: Mon, 24 Jun 1996 14:20:54 -0700
In-Reply-To: Zoltan Hidvegi <hzoli@cs.elte.hu>
        "Re: BUG: useheap in doexpandhist()" (Jun 24,  9:11pm)
References: <199606241911.VAA05764@bolyai.cs.elte.hu>
Reply-To: schaefer@z-code.ncd.com
X-Face: #Fj,SD!uGM$mK+=c."{GSa.kjFfFet4[=3Bwr{5@oO*TuJEP3=}'%qRL$bP#~s|yS9JO1v+
 &XeZy#u7!sml79&(,L$Q:/2(2?b<kN{IEJ!uA3g(oAAc&nD/PgT,E_'Tzl_GzS*XWD&tB4=W4AJ+}R
 Eth{8}^lHA}tmE7]d%<sO#dQ)Om{bQ;6jFkNPf?;l:~+cn'%9h@(=Qrn]h9]zV(8
X-Mailer: Z-Mail (3.3dev.506 06may96)
To: Zoltan Hidvegi <hzoli@cs.elte.hu>
Subject: Re: BUG: useheap in doexpandhist()
Cc: zsh-workers@math.gatech.edu
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-Message-ID: <"D2gdo.0.2q2.nQmpn"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/1440
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu
Content-Length: 2844
Status: O

On Jun 24,  9:11pm, Zoltan Hidvegi wrote:
} Subject: Re: BUG: useheap in doexpandhist()
}
} > } 	BUG: useheap in doexpandhist()
} > 
} > I've gotten it several more times now, always in completion but not always
} > in the name of a function.  I can't yet isolate any preceding usages that
} > trigger it.  It may have something to do with that TMOUT=10 TRAPALRM that
} > I posted a few days ago.

Of course I was thinking 10 *minutes* -- that should say TMOUT=600.

} Unfortunately there are some zsh functions which are not reentrant which
} cause problems when a signal comes.

In the case I suspect, though, all zsh should have been doing when the
signal arrived was sitting idle at the PS1 prompt.  The signal is not
arriving during the completion, as far as I can tell; rather, the heap
allocation has already been left in a confused state, and trying the
completion just happens to be what makes zsh notice the bad state.

Is that what your patch was intended to fix?

} About the patch below: Peter suggested a stack for permalloc()/lastalloc().
} This is not a bad idea but maybe it's not the best.  In most places of the
} code either only permanent or only heap allocation is valid.  Also almost
} always ncalloc, alloc, dupstrig are used to get space from the heap.  The
} most important exeptions are the various dup*** routines and the routines
} for creating new structures.  Perhaps a better solution is to use
} halloc()/hcalloc() where the heap should be used and define a new function
} as a replacement for dupstring() which always uses the heap.  An other
} solution is using heapalloc()/permalloc() in all cases where the state of
} the allocation is unknown or know to be wrong.

Yes, the right thing to do is to eliminate the global pointers to alloc
functions, and call the desired ones directly.  The pointers were used
in the first place so some utility routines (like dupstring) could be
written once and then be used regardless of whether heap or permanent
allocation was desired.  The zsh heap, in turn, is just a crude garbage
collection mechanism, as I'm sure you're aware.

Unfortunately, at this point there are probably so many routines that
depend on having this memory management magically handled for them, that
it'd be as big a change to fix that as to make everything reentrant.

} And does anyone know the historical reason why ncalloc refers to
} halloc/zalloc and alloc refers to hcalloc/zcalloc?  This is exactly the
} opposite of the logical behaviour.

It's been that way since before I started fooling with zsh, so I'm
willing to bet the only person who knows is Paul F.

-- 
Bart Schaefer                     Vice President, Technology, Z-Code Software
schaefer@z-code.com                   Division of NetManage Corporation
http://www.well.com/www/barts           http://www.ncdsoft.com/ZMail/


