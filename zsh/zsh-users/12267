From zsh-users-return-12267-mason-zsh=primenet.com.au@sunsite.dk Fri Nov 30 15:38:26 2007
Return-Path: <zsh-users-return-12267-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 5769 invoked from network); 30 Nov 2007 15:38:17 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.3 (2007-08-08) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.3
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 30 Nov 2007 15:38:17 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 1546 invoked from network); 30 Nov 2007 15:38:08 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 30 Nov 2007 15:38:08 -0000
Received: (qmail 23913 invoked by alias); 30 Nov 2007 15:37:46 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12267
Received: (qmail 23892 invoked from network); 30 Nov 2007 15:37:45 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 30 Nov 2007 15:37:45 -0000
Received: (qmail 99936 invoked from network); 30 Nov 2007 15:37:45 -0000
Received: from vms046pub.verizon.net (206.46.252.46)
  by a.mx.sunsite.dk with SMTP; 30 Nov 2007 15:37:38 -0000
Received: from torch.brasslantern.com ([71.121.18.67])
 by vms046.mailsrvcs.net (Sun Java System Messaging Server 6.2-6.01 (built Apr
 3 2006)) with ESMTPA id <0JSB002JVSQ9ASC0@vms046.mailsrvcs.net> for
 zsh-users@sunsite.dk; Fri, 30 Nov 2007 09:37:22 -0600 (CST)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id lAUFbJUK018092	for
 <zsh-users@sunsite.dk>; Fri, 30 Nov 2007 07:37:20 -0800
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id lAUFbJPv018091	for zsh-users@sunsite.dk; Fri,
 30 Nov 2007 07:37:19 -0800
Date: Fri, 30 Nov 2007 07:37:19 -0800
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: command substitution: zsh waits until command exits
In-reply-to: <20071130133943.GG5855@prunille.vinc17.org>
To: zsh-users@sunsite.dk
Message-id: <071130073719.ZM18090@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <20071130133943.GG5855@prunille.vinc17.org>
Comments: In reply to Vincent Lefevre <vincent@vinc17.org>
 "command substitution: zsh waits until command exits" (Nov 30,  2:39pm)

On Nov 30,  2:39pm, Vincent Lefevre wrote:
}
} but doesn't say when zsh does the substitution and runs the main
} command (it should be clarified).

Look earlier in that man page.  Almost the first thing it says is:

   The following types of expansions are performed in the indicated
   order in five steps:

with "Command Substitution" listed as happening at the third step,

   ... in left-to-right fashion.

(i.e., in the order it is found when scanning the command line).

} For instance, with the following
} command
} 
}   echo $(echo foo; exec >&-; sleep 2)
} 
} zsh waits for 2 seconds before outputting 'foo'. However, since the
} standard output fd of the substituted command has been closed, I assume
} that zsh should be able to replace $(echo foo; exec >&-; sleep 2) by
} 'foo' and run the main command before the command inside $(...) exits.
} Is this a bug?

That really has nothing to do with "when zsh does the substitution" and
everything to do with job control.  It's not a bug.

} Otherwise, is there a way to do what I wish (without temporary files)?

Sure -- background the command yourself, e.g.:

  echo $({ echo foo ; exec >&- ; sleep 2; echo bar >/dev/tty } &)

} More precisely, I want to do something like:
} 
}   some_command $(xterm -e 'tty >&3; exec 3>&-; sleep 999999' 3>&1)
} 
} so that some_command can write data to the xterm (in addition to the
} normal output).

That one is a bit tricky and the problem is that xterm doesn't close
the descriptors that it passes through to the command it's running, so
even when "exec 3>&-" runs *inside* the xterm, the descriptor is still
open.  So you have to run xterm in a way that it's descriptors don't
matter.  Something like:

  echo $(coproc xterm -e 'tty >&3; sleep 999999' 3>&1 ; read -E <&p)

