From zsh-workers-return-10834-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Apr 19 14:41:03 2000
Return-Path: <zsh-workers-return-10834-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 5873 invoked from network); 19 Apr 2000 14:40:59 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 19 Apr 2000 14:40:59 -0000
Received: (qmail 26202 invoked by alias); 19 Apr 2000 14:40:54 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 10834
Received: (qmail 26189 invoked from network); 19 Apr 2000 14:40:52 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer goliath.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: "ZSH workers mailing list" <zsh-workers@sunsite.auc.dk>
Subject: Something weird with static linking and alias modules (somewhat large)
Date: Wed, 19 Apr 2000 18:40:39 +0400
Message-ID: <000401bfaa0d$3b61b8a0$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="koi8-r"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6700
Importance: Normal

Because dynamic loading loading under Cygwin currently does not work, I
tried to build it by default (hoping, it will default to static).
configure was run as

./configure --prefix=/usr --enable-function-subdirs

it then choked on "leading underscore" test and I did run make.

It fails on mkbltnmlst.sh. Running with -x gives me:

........
+ done_mods= zsh/main zsh/rlimits zsh/zle zsh/complete zsh/compctl
zsh/sched zsh/complist zsh/zutil zsh/computil zsh/parameter
zsh/zleparameter
+ echo compctl
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_bin_mod=compctl
+ echo /* linked-in module `compctl' */
+ eval modfile=$modfile_compctl
+ modfile=
+ unset moddeps
+ . ./../
.: Can't open ./../

This come from the following lines in mkbltnmlst.sh:

.....
for bin_mod in $bin_mods; do
    q_bin_mod=`echo $bin_mod | sed 's,Q,Qq,g;s,_,Qu,g;s,/,Qs,g'`
    echo "/* linked-in module \`$bin_mod' */"
    eval "modfile=\$modfile_$q_bin_mod"
    unset moddeps
    . $srcdir/../$modfile
......

Now, compctl is alias for zsh/compctl. So far so good. But
modfile_compctl is never set (the full trace output follows). For that
matter, modfile_$module is never set for any of the alias modules at
all. Compctl simply happens to be the first in the list.

All this with more or less current CVS.

I follow this with modules-index, modules-bltn and trace output.

-andrej

Have a nice DOS!
B >>


=== trace of mkbltnmlst.sh

+ srcdir=.
+ test x. = x./mkbltnmlst.sh
+ test x. = x
+ MODBINS=modules-bltin
+ XMODCF=./xmods.conf
+ sed s/^/ /;s/$/ / modules-bltin
+ bin_mods= zsh/main  zsh/rlimits
 zsh/zle
 zsh/complete
 zsh/compctl
 zsh/sched
 zsh/complist
 zsh/zutil
 zsh/computil
 zsh/parameter
 zsh/zleparameter
 compctl
 complete
 complist
 computil
 parameter
 rlimits
 sched
 zle
 zleparameter
 zutil
+ sed s/^.* // ./xmods.conf
+ x_mods=zsh/rlimits
zsh/zle
zsh/complete
zsh/compctl
zsh/sched
zsh/complist
zsh/zutil
zsh/computil
zsh/parameter
zsh/zleparameter
cap
clone
compctl
complete
complist
computil
deltochar
example
files
mapfile
mathfunc
parameter
rlimits
sched
stat
zftp
zle
zleparameter
zutil
+ . ./modules.index
+ modfile_zshQsmain=Src/zsh.mdd
+ modfile_zshQsrlimits=Src/Builtins/rlimits.mdd
+ modfile_zshQssched=Src/Builtins/sched.mdd
+ modfile_zshQscap=Src/Modules/cap.mdd
+ modfile_zshQsclone=Src/Modules/clone.mdd
+ modfile_zshQsexample=Src/Modules/example.mdd
+ modfile_zshQsfiles=Src/Modules/files.mdd
+ modfile_zshQsmapfile=Src/Modules/mapfile.mdd
+ modfile_zshQsmathfunc=Src/Modules/mathfunc.mdd
+ modfile_zshQsparameter=Src/Modules/parameter.mdd
+ modfile_zshQsstat=Src/Modules/stat.mdd
+ modfile_zshQszftp=Src/Modules/zftp.mdd
+ modfile_zshQszprof=Src/Modules/zprof.mdd
+ modfile_zshQszpty=Src/Modules/zpty.mdd
+ modfile_zshQszutil=Src/Modules/zutil.mdd
+ modfile_zshQscompctl=Src/Zle/compctl.mdd
+ modfile_zshQscomplete=Src/Zle/complete.mdd
+ modfile_zshQscomplist=Src/Zle/complist.mdd
+ modfile_zshQscomputil=Src/Zle/computil.mdd
+ modfile_zshQsdeltochar=Src/Zle/deltochar.mdd
+ modfile_zshQszle=Src/Zle/zle.mdd
+ modfile_zshQszleparameter=Src/Zle/zleparameter.mdd
+ module_list=zsh/main zsh/rlimits zsh/sched zsh/cap zsh/clone
zsh/example zsh/files zsh/mapfile zsh/mathfunc zsh/parameter zsh/stat
zsh/zftp zsh/zprof zsh/zpty zsh/zutil zsh/compctl zsh/complete
zsh/complist zsh/computil zsh/deltochar zsh/zle zsh/zleparameter
+ trap rm -f bltinmods.list; exit 1 1 2 15
+ exec
+ echo zsh/rlimits
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=zshQsrlimits
+ eval modfile=$modfile_zshQsrlimits
+ modfile=Src/Builtins/rlimits.mdd
+ test xSrc/Builtins/rlimits.mdd = x
+ echo /* linked-in known module `zsh/rlimits' */
+ linked=yes
+ unset moddeps autobins autoinfixconds autoprefixconds autoparams
+ unset automathfuncs
+ . ./../Src/Builtins/rlimits.mdd
+ name=zsh/rlimits
+ autobins=limit ulimit unlimit
+ objects=rlimits.o
+ :
+ echo     add_autobin("limit", "zsh/rlimits");
+ echo     add_autobin("ulimit", "zsh/rlimits");
+ echo     add_autobin("unlimit", "zsh/rlimits");
+ test xyes = xno
+ echo zsh/zle
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=zshQszle
+ eval modfile=$modfile_zshQszle
+ modfile=Src/Zle/zle.mdd
+ test xSrc/Zle/zle.mdd = x
+ echo /* linked-in known module `zsh/zle' */
+ linked=yes
+ unset moddeps autobins autoinfixconds autoprefixconds autoparams
+ unset automathfuncs
+ . ./../Src/Zle/zle.mdd
+ name=zsh/zle
+ autobins=bindkey vared zle
+ objects=zle_bindings.o zle_hist.o zle_keymap.o zle_main.o zle_misc.o
zle_move.o zle_params.o zle_refresh.o zle_thingy.o zle_tricky.o
zle_utils.o zle_vi.o zle_word.o
+ headers=zle.h zle_things.h
+ :
+ echo     add_autobin("bindkey", "zsh/zle");
+ echo     add_autobin("vared", "zsh/zle");
+ echo     add_autobin("zle", "zsh/zle");
+ test xyes = xno
+ echo zsh/complete
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=zshQscomplete
+ eval modfile=$modfile_zshQscomplete
+ modfile=Src/Zle/complete.mdd
+ test xSrc/Zle/complete.mdd = x
+ echo /* linked-in known module `zsh/complete' */
+ linked=yes
+ unset moddeps autobins autoinfixconds autoprefixconds autoparams
+ unset automathfuncs
+ . ./../Src/Zle/complete.mdd
+ name=zsh/complete
+ moddeps=zsh/zle
+ autobins=compadd compset
+ autoprefixconds=prefix suffix between after
+ autoparams=compmatchers
+ headers=comp.h
+ objects=complete.o compcore.o compmatch.o compresult.o
+ echo     add_autobin("compadd", "zsh/complete");
+ echo     add_autobin("compset", "zsh/complete");
+ echo     add_autocond("prefix", 0, "zsh/complete");
+ echo     add_autocond("suffix", 0, "zsh/complete");
+ echo     add_autocond("between", 0, "zsh/complete");
+ echo     add_autocond("after", 0, "zsh/complete");
+ echo     add_autoparam("compmatchers", "zsh/complete");
+ echo     add_dep("zsh/complete", "zsh/zle");
+ test xyes = xno
+ echo zsh/compctl
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=zshQscompctl
+ eval modfile=$modfile_zshQscompctl
+ modfile=Src/Zle/compctl.mdd
+ test xSrc/Zle/compctl.mdd = x
+ echo /* linked-in known module `zsh/compctl' */
+ linked=yes
+ unset moddeps autobins autoinfixconds autoprefixconds autoparams
+ unset automathfuncs
+ . ./../Src/Zle/compctl.mdd
+ name=zsh/compctl
+ moddeps=zsh/complete zsh/zle
+ autobins=compctl
+ headers=compctl.h
+ objects=compctl.o
+ echo     add_autobin("compctl", "zsh/compctl");
+ echo     add_dep("zsh/compctl", "zsh/complete");
+ echo     add_dep("zsh/compctl", "zsh/zle");
+ test xyes = xno
+ echo zsh/sched
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=zshQssched
+ eval modfile=$modfile_zshQssched
+ modfile=Src/Builtins/sched.mdd
+ test xSrc/Builtins/sched.mdd = x
+ echo /* linked-in known module `zsh/sched' */
+ linked=yes
+ unset moddeps autobins autoinfixconds autoprefixconds autoparams
+ unset automathfuncs
+ . ./../Src/Builtins/sched.mdd
+ name=zsh/sched
+ autobins=sched
+ objects=sched.o
+ echo     add_autobin("sched", "zsh/sched");
+ test xyes = xno
+ echo zsh/complist
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=zshQscomplist
+ eval modfile=$modfile_zshQscomplist
+ modfile=Src/Zle/complist.mdd
+ test xSrc/Zle/complist.mdd = x
+ echo /* linked-in known module `zsh/complist' */
+ linked=yes
+ unset moddeps autobins autoinfixconds autoprefixconds autoparams
+ unset automathfuncs
+ . ./../Src/Zle/complist.mdd
+ name=zsh/complist
+ moddeps=zsh/complete zsh/zle
+ objects=complist.o
+ echo     add_dep("zsh/complist", "zsh/complete");
+ echo     add_dep("zsh/complist", "zsh/zle");
+ test xyes = xno
+ echo zsh/zutil
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=zshQszutil
+ eval modfile=$modfile_zshQszutil
+ modfile=Src/Modules/zutil.mdd
+ test xSrc/Modules/zutil.mdd = x
+ echo /* linked-in known module `zsh/zutil' */
+ linked=yes
+ unset moddeps autobins autoinfixconds autoprefixconds autoparams
+ unset automathfuncs
+ . ./../Src/Modules/zutil.mdd
+ name=zsh/zutil
+ moddeps=zsh/complete
+ objects=zutil.o
+ autobins=zformat zstyle zregexparse zparseopts
+ echo     add_autobin("zformat", "zsh/zutil");
+ echo     add_autobin("zstyle", "zsh/zutil");
+ echo     add_autobin("zregexparse", "zsh/zutil");
+ echo     add_autobin("zparseopts", "zsh/zutil");
+ echo     add_dep("zsh/zutil", "zsh/complete");
+ test xyes = xno
+ echo zsh/computil
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=zshQscomputil
+ eval modfile=$modfile_zshQscomputil
+ modfile=Src/Zle/computil.mdd
+ test xSrc/Zle/computil.mdd = x
+ echo /* linked-in known module `zsh/computil' */
+ linked=yes
+ unset moddeps autobins autoinfixconds autoprefixconds autoparams
+ unset automathfuncs
+ . ./../Src/Zle/computil.mdd
+ name=zsh/computil
+ moddeps=zsh/complete zsh/zle
+ objects=computil.o
+ autobins=compdescribe comparguments compvalues compquote comptags
comptry
+ echo     add_autobin("compdescribe", "zsh/computil");
+ echo     add_autobin("comparguments", "zsh/computil");
+ echo     add_autobin("compvalues", "zsh/computil");
+ echo     add_autobin("compquote", "zsh/computil");
+ echo     add_autobin("comptags", "zsh/computil");
+ echo     add_autobin("comptry", "zsh/computil");
+ echo     add_dep("zsh/computil", "zsh/complete");
+ echo     add_dep("zsh/computil", "zsh/zle");
+ test xyes = xno
+ echo zsh/parameter
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=zshQsparameter
+ eval modfile=$modfile_zshQsparameter
+ modfile=Src/Modules/parameter.mdd
+ test xSrc/Modules/parameter.mdd = x
+ echo /* linked-in known module `zsh/parameter' */
+ linked=yes
+ unset moddeps autobins autoinfixconds autoprefixconds autoparams
+ unset automathfuncs
+ . ./../Src/Modules/parameter.mdd
+ name=zsh/parameter
+ autoparams=parameters commands functions dis_functions funcstack
builtins dis_builtins reswords dis_reswords options modules dirstack
history historywords jobtexts jobdirs jobstates nameddirs userdirs
aliases dis_aliases galiases dis_galiases
+ objects=parameter.o
+ echo     add_autoparam("parameters", "zsh/parameter");
+ echo     add_autoparam("commands", "zsh/parameter");
+ echo     add_autoparam("functions", "zsh/parameter");
+ echo     add_autoparam("dis_functions", "zsh/parameter");
+ echo     add_autoparam("funcstack", "zsh/parameter");
+ echo     add_autoparam("builtins", "zsh/parameter");
+ echo     add_autoparam("dis_builtins", "zsh/parameter");
+ echo     add_autoparam("reswords", "zsh/parameter");
+ echo     add_autoparam("dis_reswords", "zsh/parameter");
+ echo     add_autoparam("options", "zsh/parameter");
+ echo     add_autoparam("modules", "zsh/parameter");
+ echo     add_autoparam("dirstack", "zsh/parameter");
+ echo     add_autoparam("history", "zsh/parameter");
+ echo     add_autoparam("historywords", "zsh/parameter");
+ echo     add_autoparam("jobtexts", "zsh/parameter");
+ echo     add_autoparam("jobdirs", "zsh/parameter");
+ echo     add_autoparam("jobstates", "zsh/parameter");
+ echo     add_autoparam("nameddirs", "zsh/parameter");
+ echo     add_autoparam("userdirs", "zsh/parameter");
+ echo     add_autoparam("aliases", "zsh/parameter");
+ echo     add_autoparam("dis_aliases", "zsh/parameter");
+ echo     add_autoparam("galiases", "zsh/parameter");
+ echo     add_autoparam("dis_galiases", "zsh/parameter");
+ test xyes = xno
+ echo zsh/zleparameter
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=zshQszleparameter
+ eval modfile=$modfile_zshQszleparameter
+ modfile=Src/Zle/zleparameter.mdd
+ test xSrc/Zle/zleparameter.mdd = x
+ echo /* linked-in known module `zsh/zleparameter' */
+ linked=yes
+ unset moddeps autobins autoinfixconds autoprefixconds autoparams
+ unset automathfuncs
+ . ./../Src/Zle/zleparameter.mdd
+ name=zsh/zleparameter
+ moddeps=zsh/zle
+ autoparams=widgets keymaps
+ objects=zleparameter.o
+ echo     add_autoparam("widgets", "zsh/zleparameter");
+ echo     add_autoparam("keymaps", "zsh/zleparameter");
+ echo     add_dep("zsh/zleparameter", "zsh/zle");
+ test xyes = xno
+ echo cap
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=cap
+ eval modfile=$modfile_cap
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `cap' (ignored)
WARNING: ./xmods.conf lists non-existent module `cap' (ignored)
+ continue
+ echo clone
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=clone
+ eval modfile=$modfile_clone
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `clone' (ignored)
WARNING: ./xmods.conf lists non-existent module `clone' (ignored)
+ continue
+ echo compctl
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=compctl
+ eval modfile=$modfile_compctl
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `compctl'
(ignored)
WARNING: ./xmods.conf lists non-existent module `compctl' (ignored)
+ continue
+ echo complete
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=complete
+ eval modfile=$modfile_complete
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `complete'
(ignored)
WARNING: ./xmods.conf lists non-existent module `complete' (ignored)
+ continue
+ echo complist
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=complist
+ eval modfile=$modfile_complist
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `complist'
(ignored)
WARNING: ./xmods.conf lists non-existent module `complist' (ignored)
+ continue
+ echo computil
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=computil
+ eval modfile=$modfile_computil
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `computil'
(ignored)
WARNING: ./xmods.conf lists non-existent module `computil' (ignored)
+ continue
+ echo deltochar
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=deltochar
+ eval modfile=$modfile_deltochar
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `deltochar'
(ignored)
WARNING: ./xmods.conf lists non-existent module `deltochar' (ignored)
+ continue
+ echo example
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=example
+ eval modfile=$modfile_example
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `example'
(ignored)
WARNING: ./xmods.conf lists non-existent module `example' (ignored)
+ continue
+ echo files
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=files
+ eval modfile=$modfile_files
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `files' (ignored)
WARNING: ./xmods.conf lists non-existent module `files' (ignored)
+ continue
+ echo mapfile
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=mapfile
+ eval modfile=$modfile_mapfile
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `mapfile'
(ignored)
WARNING: ./xmods.conf lists non-existent module `mapfile' (ignored)
+ continue
+ echo mathfunc
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=mathfunc
+ eval modfile=$modfile_mathfunc
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `mathfunc'
(ignored)
WARNING: ./xmods.conf lists non-existent module `mathfunc' (ignored)
+ continue
+ echo parameter
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=parameter
+ eval modfile=$modfile_parameter
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `parameter'
(ignored)
WARNING: ./xmods.conf lists non-existent module `parameter' (ignored)
+ continue
+ echo rlimits
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=rlimits
+ eval modfile=$modfile_rlimits
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `rlimits'
(ignored)
WARNING: ./xmods.conf lists non-existent module `rlimits' (ignored)
+ continue
+ echo sched
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=sched
+ eval modfile=$modfile_sched
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `sched' (ignored)
WARNING: ./xmods.conf lists non-existent module `sched' (ignored)
+ continue
+ echo stat
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=stat
+ eval modfile=$modfile_stat
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `stat' (ignored)
WARNING: ./xmods.conf lists non-existent module `stat' (ignored)
+ continue
+ echo zftp
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=zftp
+ eval modfile=$modfile_zftp
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `zftp' (ignored)
WARNING: ./xmods.conf lists non-existent module `zftp' (ignored)
+ continue
+ echo zle
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=zle
+ eval modfile=$modfile_zle
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `zle' (ignored)
WARNING: ./xmods.conf lists non-existent module `zle' (ignored)
+ continue
+ echo zleparameter
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=zleparameter
+ eval modfile=$modfile_zleparameter
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `zleparameter'
(ignored)
WARNING: ./xmods.conf lists non-existent module `zleparameter' (ignored)
+ continue
+ echo zutil
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_x_mod=zutil
+ eval modfile=$modfile_zutil
+ modfile=
+ test x = x
+ echo WARNING: ./xmods.conf lists non-existent module `zutil' (ignored)
WARNING: ./xmods.conf lists non-existent module `zutil' (ignored)
+ continue
+ echo
+ done_mods=
+ echo zsh/main
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_bin_mod=zshQsmain
+ echo /* linked-in module `zsh/main' */
+ eval modfile=$modfile_zshQsmain
+ modfile=Src/zsh.mdd
+ unset moddeps
+ . ./../Src/zsh.mdd
+ name=zsh/main
+ nozshdep=1
+ alwayslink=1
+ objects=builtin.o compat.o cond.o exec.o glob.o hashtable.o hist.o
init.o input.o jobs.o lex.o linklist.o loop.o math.o mem.o module.o
options.o params.o parse.o pattern.o prompt.o signals.o signames.o
subst.o text.o utils.o watch.o
+ headers=../config.h system.h zsh.h sigcount.h signals.h prototypes.h
hashtable.h ztype.h
+ :
+ echo     {
+ echo         extern int setup_zshQsmain _((Module));
+ echo         extern int boot_zshQsmain _((Module));
+ echo         extern int cleanup_zshQsmain _((Module));
+ echo         extern int finish_zshQsmain _((Module));
+ echo
+ echo         register_module("zsh/main",
+ echo                         setup_zshQsmain, boot_zshQsmain,
+ echo                         cleanup_zshQsmain, finish_zshQsmain);
+ echo     }
+ done_mods= zsh/main
+ echo zsh/rlimits
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_bin_mod=zshQsrlimits
+ echo /* linked-in module `zsh/rlimits' */
+ eval modfile=$modfile_zshQsrlimits
+ modfile=Src/Builtins/rlimits.mdd
+ unset moddeps
+ . ./../Src/Builtins/rlimits.mdd
+ name=zsh/rlimits
+ autobins=limit ulimit unlimit
+ objects=rlimits.o
+ :
+ echo     {
+ echo         extern int setup_zshQsrlimits _((Module));
+ echo         extern int boot_zshQsrlimits _((Module));
+ echo         extern int cleanup_zshQsrlimits _((Module));
+ echo         extern int finish_zshQsrlimits _((Module));
+ echo
+ echo         register_module("zsh/rlimits",
+ echo                         setup_zshQsrlimits, boot_zshQsrlimits,
+ echo                         cleanup_zshQsrlimits,
finish_zshQsrlimits);
+ echo     }
+ done_mods= zsh/main zsh/rlimits
+ echo zsh/zle
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_bin_mod=zshQszle
+ echo /* linked-in module `zsh/zle' */
+ eval modfile=$modfile_zshQszle
+ modfile=Src/Zle/zle.mdd
+ unset moddeps
+ . ./../Src/Zle/zle.mdd
+ name=zsh/zle
+ autobins=bindkey vared zle
+ objects=zle_bindings.o zle_hist.o zle_keymap.o zle_main.o zle_misc.o
zle_move.o zle_params.o zle_refresh.o zle_thingy.o zle_tricky.o
zle_utils.o zle_vi.o zle_word.o
+ headers=zle.h zle_things.h
+ :
+ echo     {
+ echo         extern int setup_zshQszle _((Module));
+ echo         extern int boot_zshQszle _((Module));
+ echo         extern int cleanup_zshQszle _((Module));
+ echo         extern int finish_zshQszle _((Module));
+ echo
+ echo         register_module("zsh/zle",
+ echo                         setup_zshQszle, boot_zshQszle,
+ echo                         cleanup_zshQszle, finish_zshQszle);
+ echo     }
+ done_mods= zsh/main zsh/rlimits zsh/zle
+ echo zsh/complete
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_bin_mod=zshQscomplete
+ echo /* linked-in module `zsh/complete' */
+ eval modfile=$modfile_zshQscomplete
+ modfile=Src/Zle/complete.mdd
+ unset moddeps
+ . ./../Src/Zle/complete.mdd
+ name=zsh/complete
+ moddeps=zsh/zle
+ autobins=compadd compset
+ autoprefixconds=prefix suffix between after
+ autoparams=compmatchers
+ headers=comp.h
+ objects=complete.o compcore.o compmatch.o compresult.o
+ echo     /* depends on `zsh/zle' */
+ echo     {
+ echo         extern int setup_zshQscomplete _((Module));
+ echo         extern int boot_zshQscomplete _((Module));
+ echo         extern int cleanup_zshQscomplete _((Module));
+ echo         extern int finish_zshQscomplete _((Module));
+ echo
+ echo         register_module("zsh/complete",
+ echo                         setup_zshQscomplete, boot_zshQscomplete,
+ echo                         cleanup_zshQscomplete,
finish_zshQscomplete);
+ echo     }
+ done_mods= zsh/main zsh/rlimits zsh/zle zsh/complete
+ echo zsh/compctl
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_bin_mod=zshQscompctl
+ echo /* linked-in module `zsh/compctl' */
+ eval modfile=$modfile_zshQscompctl
+ modfile=Src/Zle/compctl.mdd
+ unset moddeps
+ . ./../Src/Zle/compctl.mdd
+ name=zsh/compctl
+ moddeps=zsh/complete zsh/zle
+ autobins=compctl
+ headers=compctl.h
+ objects=compctl.o
+ echo     /* depends on `zsh/complete' */
+ echo     /* depends on `zsh/zle' */
+ echo     {
+ echo         extern int setup_zshQscompctl _((Module));
+ echo         extern int boot_zshQscompctl _((Module));
+ echo         extern int cleanup_zshQscompctl _((Module));
+ echo         extern int finish_zshQscompctl _((Module));
+ echo
+ echo         register_module("zsh/compctl",
+ echo                         setup_zshQscompctl, boot_zshQscompctl,
+ echo                         cleanup_zshQscompctl,
finish_zshQscompctl);
+ echo     }
+ done_mods= zsh/main zsh/rlimits zsh/zle zsh/complete zsh/compctl
+ echo zsh/sched
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_bin_mod=zshQssched
+ echo /* linked-in module `zsh/sched' */
+ eval modfile=$modfile_zshQssched
+ modfile=Src/Builtins/sched.mdd
+ unset moddeps
+ . ./../Src/Builtins/sched.mdd
+ name=zsh/sched
+ autobins=sched
+ objects=sched.o
+ echo     {
+ echo         extern int setup_zshQssched _((Module));
+ echo         extern int boot_zshQssched _((Module));
+ echo         extern int cleanup_zshQssched _((Module));
+ echo         extern int finish_zshQssched _((Module));
+ echo
+ echo         register_module("zsh/sched",
+ echo                         setup_zshQssched, boot_zshQssched,
+ echo                         cleanup_zshQssched, finish_zshQssched);
+ echo     }
+ done_mods= zsh/main zsh/rlimits zsh/zle zsh/complete zsh/compctl
zsh/sched
+ echo zsh/complist
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_bin_mod=zshQscomplist
+ echo /* linked-in module `zsh/complist' */
+ eval modfile=$modfile_zshQscomplist
+ modfile=Src/Zle/complist.mdd
+ unset moddeps
+ . ./../Src/Zle/complist.mdd
+ name=zsh/complist
+ moddeps=zsh/complete zsh/zle
+ objects=complist.o
+ echo     /* depends on `zsh/complete' */
+ echo     /* depends on `zsh/zle' */
+ echo     {
+ echo         extern int setup_zshQscomplist _((Module));
+ echo         extern int boot_zshQscomplist _((Module));
+ echo         extern int cleanup_zshQscomplist _((Module));
+ echo         extern int finish_zshQscomplist _((Module));
+ echo
+ echo         register_module("zsh/complist",
+ echo                         setup_zshQscomplist, boot_zshQscomplist,
+ echo                         cleanup_zshQscomplist,
finish_zshQscomplist);
+ echo     }
+ done_mods= zsh/main zsh/rlimits zsh/zle zsh/complete zsh/compctl
zsh/sched zsh/complist
+ echo zsh/zutil
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_bin_mod=zshQszutil
+ echo /* linked-in module `zsh/zutil' */
+ eval modfile=$modfile_zshQszutil
+ modfile=Src/Modules/zutil.mdd
+ unset moddeps
+ . ./../Src/Modules/zutil.mdd
+ name=zsh/zutil
+ moddeps=zsh/complete
+ objects=zutil.o
+ autobins=zformat zstyle zregexparse zparseopts
+ echo     /* depends on `zsh/complete' */
+ echo     {
+ echo         extern int setup_zshQszutil _((Module));
+ echo         extern int boot_zshQszutil _((Module));
+ echo         extern int cleanup_zshQszutil _((Module));
+ echo         extern int finish_zshQszutil _((Module));
+ echo
+ echo         register_module("zsh/zutil",
+ echo                         setup_zshQszutil, boot_zshQszutil,
+ echo                         cleanup_zshQszutil, finish_zshQszutil);
+ echo     }
+ done_mods= zsh/main zsh/rlimits zsh/zle zsh/complete zsh/compctl
zsh/sched zsh/complist zsh/zutil
+ echo zsh/computil
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_bin_mod=zshQscomputil
+ echo /* linked-in module `zsh/computil' */
+ eval modfile=$modfile_zshQscomputil
+ modfile=Src/Zle/computil.mdd
+ unset moddeps
+ . ./../Src/Zle/computil.mdd
+ name=zsh/computil
+ moddeps=zsh/complete zsh/zle
+ objects=computil.o
+ autobins=compdescribe comparguments compvalues compquote comptags
comptry
+ echo     /* depends on `zsh/complete' */
+ echo     /* depends on `zsh/zle' */
+ echo     {
+ echo         extern int setup_zshQscomputil _((Module));
+ echo         extern int boot_zshQscomputil _((Module));
+ echo         extern int cleanup_zshQscomputil _((Module));
+ echo         extern int finish_zshQscomputil _((Module));
+ echo
+ echo         register_module("zsh/computil",
+ echo                         setup_zshQscomputil, boot_zshQscomputil,
+ echo                         cleanup_zshQscomputil,
finish_zshQscomputil);
+ echo     }
+ done_mods= zsh/main zsh/rlimits zsh/zle zsh/complete zsh/compctl
zsh/sched zsh/complist zsh/zutil zsh/computil
+ echo zsh/parameter
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_bin_mod=zshQsparameter
+ echo /* linked-in module `zsh/parameter' */
+ eval modfile=$modfile_zshQsparameter
+ modfile=Src/Modules/parameter.mdd
+ unset moddeps
+ . ./../Src/Modules/parameter.mdd
+ name=zsh/parameter
+ autoparams=parameters commands functions dis_functions funcstack
builtins dis_builtins reswords dis_reswords options modules dirstack
history historywords jobtexts jobdirs jobstates nameddirs userdirs
aliases dis_aliases galiases dis_galiases
+ objects=parameter.o
+ echo     {
+ echo         extern int setup_zshQsparameter _((Module));
+ echo         extern int boot_zshQsparameter _((Module));
+ echo         extern int cleanup_zshQsparameter _((Module));
+ echo         extern int finish_zshQsparameter _((Module));
+ echo
+ echo         register_module("zsh/parameter",
+ echo                         setup_zshQsparameter,
boot_zshQsparameter,
+ echo                         cleanup_zshQsparameter,
finish_zshQsparameter);
+ echo     }
+ done_mods= zsh/main zsh/rlimits zsh/zle zsh/complete zsh/compctl
zsh/sched zsh/complist zsh/zutil zsh/computil zsh/parameter
+ echo zsh/zleparameter
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_bin_mod=zshQszleparameter
+ echo /* linked-in module `zsh/zleparameter' */
+ eval modfile=$modfile_zshQszleparameter
+ modfile=Src/Zle/zleparameter.mdd
+ unset moddeps
+ . ./../Src/Zle/zleparameter.mdd
+ name=zsh/zleparameter
+ moddeps=zsh/zle
+ autoparams=widgets keymaps
+ objects=zleparameter.o
+ echo     /* depends on `zsh/zle' */
+ echo     {
+ echo         extern int setup_zshQszleparameter _((Module));
+ echo         extern int boot_zshQszleparameter _((Module));
+ echo         extern int cleanup_zshQszleparameter _((Module));
+ echo         extern int finish_zshQszleparameter _((Module));
+ echo
+ echo         register_module("zsh/zleparameter",
+ echo                         setup_zshQszleparameter,
boot_zshQszleparameter,
+ echo                         cleanup_zshQszleparameter,
finish_zshQszleparameter);
+ echo     }
+ done_mods= zsh/main zsh/rlimits zsh/zle zsh/complete zsh/compctl
zsh/sched zsh/complist zsh/zutil zsh/computil zsh/parameter
zsh/zleparameter
+ echo compctl
+ sed s,Q,Qq,g;s,_,Qu,g;s,/,Qs,g
+ q_bin_mod=compctl
+ echo /* linked-in module `compctl' */
+ eval modfile=$modfile_compctl
+ modfile=
+ unset moddeps
+ . ./../
.: Can't open ./../

=== modules-bltn

zsh/rlimits
zsh/zle
zsh/complete
zsh/compctl
zsh/sched
zsh/complist
zsh/zutil
zsh/computil
zsh/parameter
zsh/zleparameter
compctl
complete
complist
computil
parameter
rlimits
sched
zle
zleparameter
zutil

=== modules.index

# module index generated by mkmodindex.sh

modfile_zshQsmain=Src/zsh.mdd
modfile_zshQsrlimits=Src/Builtins/rlimits.mdd
modfile_zshQssched=Src/Builtins/sched.mdd
modfile_zshQscap=Src/Modules/cap.mdd
modfile_zshQsclone=Src/Modules/clone.mdd
modfile_zshQsexample=Src/Modules/example.mdd
modfile_zshQsfiles=Src/Modules/files.mdd
modfile_zshQsmapfile=Src/Modules/mapfile.mdd
modfile_zshQsmathfunc=Src/Modules/mathfunc.mdd
modfile_zshQsparameter=Src/Modules/parameter.mdd
modfile_zshQsstat=Src/Modules/stat.mdd
modfile_zshQszftp=Src/Modules/zftp.mdd
modfile_zshQszprof=Src/Modules/zprof.mdd
modfile_zshQszpty=Src/Modules/zpty.mdd
modfile_zshQszutil=Src/Modules/zutil.mdd
modfile_zshQscompctl=Src/Zle/compctl.mdd
modfile_zshQscomplete=Src/Zle/complete.mdd
modfile_zshQscomplist=Src/Zle/complist.mdd
modfile_zshQscomputil=Src/Zle/computil.mdd
modfile_zshQsdeltochar=Src/Zle/deltochar.mdd
modfile_zshQszle=Src/Zle/zle.mdd
modfile_zshQszleparameter=Src/Zle/zleparameter.mdd

module_list="zsh/main zsh/rlimits zsh/sched zsh/cap zsh/clone
zsh/example zsh/files zsh/mapfile zsh/mathfunc zsh/parameter zsh/stat
zsh/zftp zsh/zprof zsh/zpty zsh/zutil zsh/compctl zsh/complete
zsh/complist zsh/computil zsh/deltochar zsh/zle zsh/zleparameter"


