From zsh-workers-return-14447-mason-zsh=primenet.com.au@sunsite.dk Wed May 23 04:42:43 2001
Return-Path: <zsh-workers-return-14447-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 19100 invoked from network); 23 May 2001 04:42:39 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 23 May 2001 04:42:39 -0000
Received: (qmail 10116 invoked by alias); 23 May 2001 04:42:22 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 14447
Received: (qmail 10093 invoked from network); 23 May 2001 04:42:20 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1010523044128.ZM23100@candle.brasslantern.com>
Date: Wed, 23 May 2001 04:41:28 +0000
In-Reply-To: <20010522200425.A9730@flora01.SLAC.Stanford.EDU>
Comments: In reply to Paul Ackersviller <paulda@alumni.uwo.ca>
        "Re: vi editting troubles" (May 22,  8:04pm)
References: <20010522200425.A9730@flora01.SLAC.Stanford.EDU>
X-Mailer: Z-Mail (5.0.0 30July97)
To: Paul Ackersviller <paulda@alumni.uwo.ca>
Subject: 64-bit sparc instructions
Cc: zsh-workers@sunsite.dk
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On May 22,  8:04pm, Paul Ackersviller wrote:
} 
} [...] What does make a difference is simply generating default 32-bit
} sparc instructions.  I'd negelected to mention that I was using Sun's
} compiler and 64-bit code.  I suppose it's fair to blame this one on Sun.

Is that problem solved by the following?

On May 22,  2:32pm, Clint Adams wrote:
} Subject: Re: 4.0.1-pre-5 (solaris issues)
}
} > the 64-bit Forte compiler.  Can you figure out what we need to be passing
} > as a compiler argument that we aren't, or whatever?
}
} LFS64_CFLAGS:                   -D_LARGEFILE64_SOURCE
} LFS_CFLAGS:                     -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64
}
} By replacing the latter with the former, the test [succeeds].

If so, can you identify a configure test we can use to decide when to
use LFS64_CFLAGS instead of LFS_CFLAGS ?  (The existing test is in the
definition of zsh_LARGE_FILE_SUPPORT in aczsh.m4.)

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

