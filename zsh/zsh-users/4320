From zsh-users-return-4320-mason-zsh=primenet.com.au@sunsite.dk Wed Oct 03 05:44:14 2001
Return-Path: <zsh-users-return-4320-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 456 invoked from network); 3 Oct 2001 05:44:13 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 3 Oct 2001 05:44:13 -0000
Received: (qmail 3973 invoked by alias); 3 Oct 2001 05:43:59 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 4320
Received: (qmail 3953 invoked from network); 3 Oct 2001 05:43:58 -0000
From: Bart Schaefer <schaefer@brasslantern.com>
Message-Id: <1011003054350.ZM25561@candle.brasslantern.com>
Date: Wed, 3 Oct 2001 05:43:50 +0000
In-Reply-To: <4ac3633923vincent@vinc17.org>
Comments: In reply to Vincent Lefevre <vincent@vinc17.org>
        "Re: get the number of active jobs to show in the prompt?" (Oct  3,  2:06am)
References: <20011002181324.A29201@greux.loria.fr> 
	<200110022325.JAA07306@bruce.csse.monash.edu.au> 
	<4ac3633923vincent@vinc17.org>
X-Mailer: Z-Mail (5.0.0 30July97)
To: Vincent Lefevre <vincent@vinc17.org>, zsh-users@sunsite.dk
Subject: Re: get the number of active jobs to show in the prompt?
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Oct 3,  2:06am, Vincent Lefevre wrote:
}
} The current command should be saved in a safe place. Then, the necessary
} functions (e.g., precmd()) should be called. Finally, the current command
} should be restored and displayed with the new prompt(s).

This is the sort of thing that sounds good in theory, but will drive you
insane in practice.  For some sort of inkling of how it would feel, try
using this:

 function push-line-at-random {
   local nested=${(%):-%_}
   zle self-insert
   print '\n[0]  + done       pretend a job finished'
   bindkey $KEYS self-insert
   bindkey -M $KEYMAP \\$(([##8](RANDOM % 26 + ##a))) push-line-at-random
   if [[ -n $nested ]]
   then
     zle push-line-or-edit
     zle beep
   else
     zle push-input
     zle send-break
   fi
 }
 zle -N push-line-at-random
 bindkey \\$(([##8](RANDOM % 26 + ##a))) push-line-at-random

Aside from the stuff that Deborah mentioned, most of which is correct,
there's the question of what to do when you're at the "bck-i-search:"
prompt (or other "minibuffer" prompts), or when you're in menu-select,
or when you're in the middle of some long-running user-defined widget
such as incremental-complete-word.

While someone (not me, this time) is deciding whether they want to
attempt to come up with a clean way to deal with all of this, you might
look at what you can do with "zle -I" and "zle -M".  For example:

    TRAPCLD() { zle -I && zle -M "jobs: $#jobstates running" }

It's too bad that this does two redraws (one for the notify output and
again because of `zle -I') but at least it shows the info you want.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

