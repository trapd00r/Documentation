From zsh-users-return-12279-mason-zsh=primenet.com.au@sunsite.dk Tue Dec 04 01:43:05 2007
Return-Path: <zsh-users-return-12279-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 28589 invoked from network); 4 Dec 2007 01:42:56 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.3 (2007-08-08) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.3
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 4 Dec 2007 01:42:56 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 40891 invoked from network); 4 Dec 2007 01:42:52 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 4 Dec 2007 01:42:52 -0000
Received: (qmail 4482 invoked by alias); 4 Dec 2007 01:42:35 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12279
Received: (qmail 4460 invoked from network); 4 Dec 2007 01:42:35 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 4 Dec 2007 01:42:35 -0000
Received: (qmail 39510 invoked from network); 4 Dec 2007 01:42:35 -0000
Received: from vinc17.pck.nerim.net (HELO prunille.vinc17.org) (213.41.242.187)
  by a.mx.sunsite.dk with SMTP; 4 Dec 2007 01:42:29 -0000
Received: by prunille.vinc17.org (Postfix, from userid 501)
	id 43DD21C37A09; Tue,  4 Dec 2007 02:42:28 +0100 (CET)
Date: Tue, 4 Dec 2007 02:42:27 +0100
From: Vincent Lefevre <vincent@vinc17.org>
To: zsh-users@sunsite.dk
Subject: Re: command substitution: zsh waits until command exits
Message-ID: <20071204014227.GE5855@prunille.vinc17.org>
Mail-Followup-To: zsh-users@sunsite.dk
References: <20071130133943.GG5855@prunille.vinc17.org> <071130073719.ZM18090@torch.brasslantern.com> <20071130163155.GL5855@prunille.vinc17.org> <071130185827.ZM18402@torch.brasslantern.com> <20071202021652.GO5855@prunille.vinc17.org> <071201210744.ZM20044@torch.brasslantern.com> <20071202152254.GP5855@prunille.vinc17.org> <071202102717.ZM2757@torch.brasslantern.com> <20071203011131.GT5855@prunille.vinc17.org> <071203092626.ZM4367@torch.brasslantern.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <071203092626.ZM4367@torch.brasslantern.com>
X-Mailer-Info: http://www.vinc17.org/mutt/
User-Agent: Mutt/1.5.17-vl-r19795 (2007-11-30)

On 2007-12-03 09:26:24 -0800, Bart Schaefer wrote:
> If the shell were not obligated to wait, it wouldn't have the exit
> status of the command substitution, and it would be unclear what is
> meant by "the last performed."  It would be unreasonable to expect
> that command substitutions behave asynchronously only in the absence
> of a non-command-substitution in the command word position.

OK (though POSIX -- and the zsh manual -- should probably make this
more clear).

Now, if I understand correctly,

  $(false) && echo true

shouldn't output anything because before the &&, there's no command
and the command substitution has a non-zero exit status. On this
example, bash, dash and ksh93 behave correctly, but not zsh (with
the version provided by Debian/unstable).

> Also in 2.9.1, it says that
> 
>    2. The words that are not variable assignments or redirections shall
>    be expanded ...
> 
> and then
> 
>    4. Each variable assignment shall be expanded ...
> 
> (If I previously knew that, I'd forgotten.)  Thus
> 
>   rm -f /tmp/first
>   LAST=$(cat /tmp/first) printenv $(echo LAST & echo first > /tmp/first)
> 
> is IMO required to output "first", which again would not be determinable
> if command substitution were not waited for.  Zsh gets this one right.

Well, for this particular point, POSIX doesn't explicitly require the
above to be determinable, IMHO.

> } > echo $(coproc xterm -e 'zsh -fic "tty >&3 ; exec sleep 999999"' 3>&1 ;
> } >        read -E <&p)
> } > 
> } > Or this, which doesn't rely on coproc:
> } > 
> } > echo $({ xterm -e 'zsh -fic "tty >&3 ; exec sleep 999999"' 3>&1 & } |
> } >        read -E)
> } 
> } Both are working. Is there one of them that is better?
> 
> Not really. The second one is more portable, except for the
> reference to zsh.

This is what I thought and why I tried with sh, but this didn't work
with sh.

-- 
Vincent Lefèvre <vincent@vinc17.org> - Web: <http://www.vinc17.org/>
100% accessible validated (X)HTML - Blog: <http://www.vinc17.org/blog/>
Work: CR INRIA - computer arithmetic / Arenaire project (LIP, ENS-Lyon)

