From zsh-workers-request@euclid.skiles.gatech.edu Wed Jul 02 06:38:58 1997
Return-Path: <zsh-workers-request@euclid.skiles.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 11563 invoked from network); 2 Jul 1997 06:38:56 -0000
Received: from euclid.skiles.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 2 Jul 1997 06:38:56 -0000
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id CAA05139; Wed, 2 Jul 1997 02:00:37 -0400 (EDT)
Resent-Date: Wed, 2 Jul 1997 02:00:37 -0400 (EDT)
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <970701231018.ZM8001@candle.brasslantern.com>
Date: Tue, 1 Jul 1997 23:10:18 -0700
In-Reply-To: <199707020451.AAA10907@hzoli.home>
Comments: In reply to Zoltan Hidvegi <hzoli@frontiernet.net>
        "Re: Completion bug introduced in 3.0.3" (Jul  2, 12:51am)
References: <199707020451.AAA10907@hzoli.home>
X-Mailer: Z-Mail (4.0b.820 20aug96)
To: Zoltan Hidvegi <hzoli@frontiernet.net>,
        Ingo.Wilken@Informatik.Uni-Oldenburg.DE (Ingo Wilken),
        zsh-workers@math.gatech.edu
Subject: Re: Completion bug introduced in 3.0.3
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-Message-ID: <"F0vpO2.0.EG1.4wUkp"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/3335
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

On Jul 2, 12:51am, Zoltan Hidvegi wrote:
} Subject: Re: Completion bug introduced in 3.0.3
}
} > Another thing:  I use a TCL script that sets its stdout stream to
} > non-blocking.  This somehow affects zsh, as all interactive commands
} > started after the TCL script (like "ftp" or "more") immediately terminate

I meant to mention this before ...

It's an extremely bad idea for any program to set a tty device for non-
blocking I/O.  This doesn't "somehow affect zsh," it affects the modes
of the file descriptor associated with the tty; which happens to be a
dup of the one zsh continues using for future processes, and therefore
it affects those processes as well.

I don't know why bash and tcsh don't show the problem -- either they are
explicitly resetting the blocking state, or they are using a different
scheme for setting up the stdin/out/err descriptors when they create
children.  (It's possible that they're using /dev/fd/ or /proc/$$/fd/
rather than dup().)

I don't think ttyctl -f is going to have any effect on this, because the
non-blocking I/O ioctl isn't one that's done through the tty driver
structures; a quick grep through the zsh sources doesn't reveal any
likely-looking calls.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

