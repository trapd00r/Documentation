From zsh-workers-request@math.gatech.edu  Sat Nov  4 04:14:47 1995
Received: from math.gatech.edu (euclid.skiles.gatech.edu [130.207.146.50]) by werple.net.au (8.7/8.7.1) with SMTP id EAA07724 for <mason@werple.mira.net.au>; Sat, 4 Nov 1995 04:14:43 +1100 (EST)
Received: by math.gatech.edu (SMI-8.6/SMI-SVR4)
	id LAA05084; Fri, 3 Nov 1995 11:49:19 -0500
Resent-Date: Fri, 3 Nov 1995 11:49:19 -0500
Old-Return-Path: <hzoli@cs.elte.hu>
From: Zoltan Hidvegi <hzoli@cs.elte.hu>
Message-Id: <199511031654.RAA08852@bolyai.cs.elte.hu>
Subject: Re: Octal interpretation
To: zsh-workers@math.gatech.edu (zsh-workers)
Date: Fri, 3 Nov 1995 17:54:53 +0100 (MET)
In-Reply-To: <199511031058.FAA01596@redwood.skiles.gatech.edu> from "Richard Coleman" at Nov 3, 95 05:58:19 am
X-Mailer: ELM [version 2.4 PL24]
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"cy-UO1.0.MF1.EWacm"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/526
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

> I've been planning on getting back to this.  My first thoughts are to
> just reverted back to decimail as the default.

I think 0xff hexadecimal notation can be kept but the octal notation should be
removed.  My releases do this.  It would not be difficult to implement it in
the baseline.  My patch only works together with the other bugfixes and
cleanups I made in math.c.  Richard, is there any reason you do not add my
fixes to the baseline?  I try to keep them uptodate.  I provide RCS file which
contains all of the patches separately.  I have tools which makes merging the
patches easier.  Several people complaind recently about bugs which I fixed
long ago.  I completely cleaned up the lexer and the substitution code.
Without the substitution fixes zsh cannot be installed as /bin/sh (e.g. the
common ${1+"$@"} sh idiom does not work with more than one arguments).  Some
developers also expressed interest in rewriting the lexer to achieve 8bit
compilance.  I think the baseline lexer is a wrong starting point.  The
modified lexer supports completion which makes get_comp_string() in
zle_tricky.c much simpler (that was the most horrible zle function in
zle_tricky).  I do not really care about the new features I added.  All of
them are very minor (but they are well tested by now, since many people used
my releases for more than a half year now).  I do not like this state.  Now a
significant amount of my time is spent on kepeng the patches up-to-date.  And
by now there are many patches from other people which did not find their way
to the baseline but are very essential.

Cheers,

  Zoltan

