From zsh-users-return-14744-mason-zsh=primenet.com.au@zsh.org Mon Jan 25 06:13:29 2010
Return-Path: <zsh-users-return-14744-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 12098 invoked by alias); 25 Jan 2010 06:13:29 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14744
Received: (qmail 15933 invoked from network); 25 Jan 2010 06:13:11 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.2.5
Received-SPF: none (ns1.primenet.com.au: domain at benizi.com does not designate permitted sender hosts)
Date: Mon, 25 Jan 2010 01:13:09 -0500 (EST)
From: "Benjamin R. Haskell" <benizi@benizi.com>
To: Zsh Users <zsh-users@zsh.org>
Subject: Re: Test for features?
In-Reply-To: <alpine.LNX.2.01.1001250001570.20648@hp.internal>
Message-ID: <alpine.LNX.2.01.1001250054440.20648@hp.internal>
References: <alpine.LNX.2.01.1001250001570.20648@hp.internal>
User-Agent: Alpine 2.01 (LNX 1266 2009-07-14)
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

On Mon, 25 Jan 2010, Benjamin R. Haskell wrote:

> I see this came up before [1], and since it was relatively recent, I 
> assume the answer is the same, but:
> 
> Is there a good way to test for features in Zsh?
> 
> Specifically, I didn't realize that the ':a' and ':A' modifiers(sp?) 
> were recent additions, while dropping my .zshrc onto an OpenSolaris 
> box w/ SUNWzsh 4.3.9.  (Though it does make me feel less crazy for not 
> having used them the whole time.)

Hmm... interesting side note: only one kind of ':A' modifier* doesn't 
work.

This works (1): p=( ~(:A) )

This doesn't (2): p=~ ; p=${p:A}

  zsh: unrecognized modifier `A'


The upside is that further testing also revealed a far-simpler 'feature' 
test:

has_A=$(eval 'p=~ ; p=${p:A} ; echo true' 2>/dev/null || echo false)

$has_A && echo yay

-- 
Best,
Ben


[*] I still always mix up my terminology for:

glob modifiers
history modifiers
expansion modifiers

Is the correct terminology: (1) glob modifier and (2) history modifier?

