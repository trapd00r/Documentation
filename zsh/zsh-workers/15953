From zsh-workers-return-15953-mason-zsh=primenet.com.au@sunsite.dk Fri Oct 05 17:21:59 2001
Return-Path: <zsh-workers-return-15953-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 9599 invoked from network); 5 Oct 2001 17:21:59 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 5 Oct 2001 17:21:59 -0000
Received: (qmail 29415 invoked by alias); 5 Oct 2001 17:21:50 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 15953
Received: (qmail 29397 invoked from network); 5 Oct 2001 17:21:47 -0000
From: Bart Schaefer <schaefer@brasslantern.com>
Message-Id: <1011005172020.ZM32750@candle.brasslantern.com>
Date: Fri, 5 Oct 2001 17:20:20 +0000
In-Reply-To: <20011005175629.J19300@fysh.org>
Comments: In reply to Zefram <zefram@fysh.org>
        "Re: BARE_GLOB_QUAL" (Oct  5,  5:56pm)
References: <20011003001256.B14675@astaroth.sweth.net> 
	<1011003060441.ZM25764@candle.brasslantern.com> 
	<20011003021524.A15356@astaroth.sweth.net> 
	<1011003162422.ZM29481@candle.brasslantern.com> 
	<20011003142330.A16765@astaroth.sweth.net> 
	<1011004042305.ZM30162@candle.brasslantern.com> 
	<20011004004307.C18930@astaroth.sweth.net> 
	<1011005161336.ZM32521@candle.brasslantern.com> 
	<20011005172343.A2872@fysh.org> 
	<1011005164534.ZM32624@candle.brasslantern.com> 
	<20011005175629.J19300@fysh.org>
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-workers@sunsite.dk
Subject: Re: BARE_GLOB_QUAL
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Oct 5,  5:56pm, Zefram wrote:
}
} >                               Also (#Q-) could turn off BARE_GLOB_QUAL,
} >and (#Q+) could turn it on.  (I can't decide which of those just (#Q)
} >should do.)
} 
} That's silly.  "(#Q+)" is a lot more characters than just adding "#q"
} at the beginning of the qualifiers group.  Similarly, "(#Q-)" is more
} typing than adding an extra pair of parens around the non-qualifier group.

I wasn't thinking of typing them.  I was thinking of e.g. the completion
function system, where it wants to (in shell code) build complex patterns
from user input plus things it adds on its own.  It might be useful for
it to be able to turn on qualfiers for some sections of the pattern, and
then turn them off in a section where it wanted to append other stuff.
This might reduce the need to parse the user input and try to figure out 
how to merge it with other qualifiers.

} >For now, all (#q...) should simply be gathered up and applied at the end
} >as if they appeared in a single list.
} 
} No.  To retain upward compatibility with the hairy idea, qualifiers
} embedded within a pattern should be an error.  We should require
} qualifiers to appear at the end, where they'll still mean the same thing
} when we do implement embedded qualifiers.

That would be OK, but it'd have to work to use (#qG)(#q.) etc. at the
end -- and, again thinking of the completion system, in an expression
such as `*(.)(#qG)' there's the issue of whether (.) is a qualifier.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

