From zsh-workers-request@math.gatech.edu Mon Nov 10 18:55:54 1997
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 20494 invoked from network); 10 Nov 1997 18:55:52 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 10 Nov 1997 18:55:52 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.8.5/8.8.5) id NAA02541;
	Mon, 10 Nov 1997 13:51:22 -0500 (EST)
Resent-Date: Mon, 10 Nov 1997 13:50:36 -0500 (EST)
Message-Id: <199711101850.NAA09117@luomat.peak.org>
Content-Type: text/plain
MIME-Version: 1.0 (NeXT Mail 4.2mach v148)
X-Image-URL: http://www.peak.org/~luomat/next/luomat@peak.org.tiff
In-Reply-To: <199707281000.MAA15334@sgi.ifh.de>
X-Nextstep-Mailer: Mail 4.2mach (Enhance 2.0b6.3)
From: Timothy J Luoma <luomat+zsh+users@luomat.peak.org>
Date: Mon, 10 Nov 97 13:50:42 -0500
To: zhouyhong <sve6!zhouyh%ichp7@inethp1.bidc.cn.net>
Subject: Re: Why 'man' not work?
cc: zsh-users@math.gatech.edu
References: <199707281000.MAA15334@sgi.ifh.de>
X-Image-URL-Disclaimer: hey, it's off my student ID, gimme a break ;-)
Resent-Message-ID: <"fakti3.0.Xc.yTrPq"@math>
Resent-From: zsh-users@math.gatech.edu
X-Mailing-List: <zsh-users@math.gatech.edu> archive/latest/1140
X-Loop: zsh-users@math.gatech.edu
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

	Author:        zhouyhong <sve6!zhouyh%ichp7@inethp1.bidc.cn.net>
	Original-Date: Mon, 10 Nov 97 10:44:11 EAT
	Message-ID:    <199711100244.VAA18728@math.gatech.edu>

> It told me: "zsh: job table full or recursion limit exceeded"

what does 'where man' say??

It sounds like you might have made an alias or function for `man':

>From the FAQ:

3.14: How do I execute command `foo' within function `foo'?

  The command `command foo' does just that.  You don't need this with
  aliases, but you do with functions.  Note that error messages like

    zsh: job table full or recursion limit exceeded

  are a good sign that you tried calling `foo' in function `foo' without
  using `command'.  If `foo' is a builtin rather than an external
  command, use `builtin foo' instead.

TjL, bitten by this just the other day

