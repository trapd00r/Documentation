From zsh-workers-return-6809-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Jun 23 09:53:27 1999
Return-Path: <zsh-workers-return-6809-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 13022 invoked from network); 23 Jun 1999 09:53:25 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 23 Jun 1999 09:53:25 -0000
Received: (qmail 3193 invoked by alias); 23 Jun 1999 09:53:05 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 6809
Received: (qmail 3186 invoked from network); 23 Jun 1999 09:53:04 -0000
Date: Wed, 23 Jun 1999 11:53:02 +0200 (MET DST)
Message-Id: <199906230953.LAA06757@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: "Andrej Borsenkow"'s message of Wed, 23 Jun 1999 11:59:31 +0400
Subject: RE: PATCH: local keymaps


Andrej Borsenkow wrote:

> Local keymaps imply the ability to switch between keymaps (well, it was
> internally always there). That returns us to the old question - is it possible
> to siwtch keymap on-the-fly? Curently, it seems, that
> 
> bindkey -A viins main
> 
> will change your keymap from emacs to vi. Is it the correct way? Unforunately,
> after
> 
> bindkey -A vicmd main
> 
> no more input is possible. I would expect, that at least `a' would bring me back
> to viins.

For the builtin ones there are -e, -v, and -a (the last one uses
vicmd, but does not link it to main -- as the others do). For
user-defined keymaps this is the intended way, I think.

About switching keymaps using local maps: this is probably a bit of a
misnomer if we think about emacs. They are really override-maps, with
the main keymap still shining through the holes (the holes are where
undefined-key is bound).
But there is one place where I would like local keymaps to be usable:
an option to vared to select such a override-map during editing (and
remove it afterwards).

> May be, it's time to allow for binding of generic keys instead of just escape
> sequences. E.g. in vim (or elvis) you can map charaters Right, Left, Home, F1
> etc. Let's be more user friendly :-) Zsh already has access to termcap/terminfo,
> so it is little overhead - but it at least will make startup files much much
> simpler (assuming, that you work under more than one terminal type)

Yes, I was wishing we had this when adding the keymap to complist (we
would need an option for this to bindkey, though, because `bindkey Up' 
currently binds the two-character sequence `U' `p').

Now, where are our termcap/info experts?

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

