From zsh-users-return-14609-mason-zsh=primenet.com.au@zsh.org Wed Nov 25 17:00:51 2009
Return-Path: <zsh-users-return-14609-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 13004 invoked by alias); 25 Nov 2009 17:00:51 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14609
Received: (qmail 1811 invoked from network); 25 Nov 2009 17:00:48 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received-SPF: none (proxy.melb.primenet.com.au: domain at csr.com does not designate permitted sender hosts)
Message-Id: <200911251700.nAPH0WQJ009499@news01.csr.com>
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-users@zsh.org
Subject: Re: Best way to test for zsh features?
In-reply-to: <4B0D5E30.7010505@wordbank.com>
References: <4B0D5E30.7010505@wordbank.com>
Comments: In-reply-to john_oshea@wordbank.com
   message dated "Wed, 25 Nov 2009 16:41:20 +0000."
Date: Wed, 25 Nov 2009 17:00:32 +0000
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 25 Nov 2009 17:00:33.0288 (UTC) FILETIME=[CD078080:01CA6DF0]
Content-Type: text/plain
MIME-Version: 1.0
X-Scanned-By: MailControl A-09-22-03 (www.mailcontrol.com) on 10.68.0.112

john_oshea@wordbank.com wrote:
> What's the best/cleanest/most "correct" way of checking for zsh features
> in an .zshrc? I've started to use vcs_info as part of my prompt, which
> works wonderfully in zsh's new enough to have that available, but gives
> me "function definition file not found" on machines with older zsh
> installations (that I'm unable to upgrade).

If the feature you're testing for is a function, it's quite easy to
define a function to look for the corresponding file.

  function_exists () {
    local -a files
    # This expands occurrences of $1 anywhere in $fpath,
    # removing files that don't exist.
    files=(${^fpath}/$1(N))
    # Success if any files exist.
    (( ${#files} ))
  }

You can now use this in tests:

  if function_exists vcs_info; then
    ...
  fi

-- 
Peter Stephenson <pws@csr.com>            Software Engineer
Tel: +44 (0)1223 692070                   Cambridge Silicon Radio Limited
Churchill House, Cambridge Business Park, Cowley Road, Cambridge, CB4 0WZ, UK


Member of the CSR plc group of companies. CSR plc registered in England and Wales, registered number 4187346, registered office Churchill House, Cambridge Business Park, Cowley Road, Cambridge, CB4 0WZ, United Kingdom

