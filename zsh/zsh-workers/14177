From zsh-workers-return-14177-mason-zsh=primenet.com.au@sunsite.dk Tue May 01 05:58:48 2001
Return-Path: <zsh-workers-return-14177-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20434 invoked from network); 1 May 2001 05:58:47 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 1 May 2001 05:58:47 -0000
Received: (qmail 9019 invoked by alias); 1 May 2001 05:58:41 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 14177
Received: (qmail 9006 invoked from network); 1 May 2001 05:58:40 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1010501055713.ZM75@candle.brasslantern.com>
Date: Tue, 1 May 2001 05:57:13 +0000
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-workers@sunsite.dk
Subject: PATCH: configure --with-curses-terminfo
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

This patch adds a configure option --with-curses-terminfo that controls two
details: (1) the termcap_curses_order parameter that determines where to
look first for tgetent, and (2) whether to search for tigetstr as well.
Thus one can attempt to compile --without-curses-terminfo even on one of
the platforms (hpux, solaris) where it is normally the default, or with it
on a platform where it's normally skipped (most others).  The default when
the option is not given is the old platform-specific code.

I've also taken the liberty of cleaning up some of the help strings (for
example, they now use upper/lower case more consistently) and reordering
them a little (the four --disable-* are grouped together) and in some cases
rewording them.

Finally I'll note in passing that nobody has used --enable-ansi2knr in a
long while, or else they'd have noticed that it mangles the IPDEF1 and
IPDEF2 macro usages in params.c, thereby breaking the build.  We should
either fix it or do away with it.


Index: configure.in
===================================================================
--- configure.in	2001/05/01 03:21:55	1.5
+++ configure.in	2001/05/01 05:24:28
@@ -54,7 +54,7 @@
 dnl Do you want to debug zsh?
 undefine([zsh-debug])dnl
 AC_ARG_ENABLE(zsh-debug,
-[  --enable-zsh-debug         use it if you want to debug zsh],
+[  --enable-zsh-debug         compile with debug code and debugger symbols],
 [if test x$enableval = xyes; then
   AC_DEFINE(DEBUG)
 fi])
@@ -62,7 +62,7 @@
 dnl Do you want zsh memory allocation routines.
 undefine([zsh-mem])dnl
 AC_ARG_ENABLE(zsh-mem,
-[  --enable-zsh-mem           use zsh memory allocation routines],
+[  --enable-zsh-mem           compile with zsh memory allocation routines],
 [if test x$enableval = xyes; then
   AC_DEFINE(ZSH_MEM)
 fi])
@@ -78,7 +78,7 @@
 dnl Do you want to print warnings when errors in memory allocation.
 undefine([zsh-mem-warning])dnl
 AC_ARG_ENABLE(zsh-mem-warning,
-[  --enable-zsh-mem-warning   print warnings when error in memory allocation],
+[  --enable-zsh-mem-warning   print warnings for errors in memory allocation],
 [if test x$enableval = xyes; then
   AC_DEFINE(ZSH_MEM_WARNING)
 fi])
@@ -100,21 +100,15 @@
   AC_DEFINE(ZSH_HASH_DEBUG)
 fi])
 
-dnl Do you want large file support, if available?
-undefine([lfs])dnl
-AC_ARG_ENABLE(lfs,
-[  --disable-lfs              turn off support for large files],
-[lfs="$enableval"], [lfs=yes])
-
 dnl Pathnames for global zsh scripts
 undefine([etcdir])dnl
 AC_ARG_ENABLE(etcdir,
-[  --enable-etcdir=directory  default directory for global zsh scripts],
+[  --enable-etcdir=DIR        the default directory for global zsh scripts],
 [etcdir="$enableval"], [etcdir=/etc])
 
 undefine([zshenv])dnl
 AC_ARG_ENABLE(zshenv,
-[  --enable-zshenv=pathname   the full pathname of the global zshenv script],
+[  --enable-zshenv=FILE       the full pathname of the global zshenv script],
 [zshenv="$enableval"],
 [if test "x$etcdir" = xno; then
   zshenv=no
@@ -127,7 +121,7 @@
 
 undefine([zshrc])dnl
 AC_ARG_ENABLE(zshrc,
-[  --enable-zshrc=pathname    the full pathname of the global zshrc script],
+[  --enable-zshrc=FILE        the full pathname of the global zshrc script],
 [zshrc="$enableval"],
 [if test "x$etcdir" = xno; then
   zshrc=no
@@ -140,7 +134,7 @@
 
 undefine([zprofile])dnl
 AC_ARG_ENABLE(zprofile,
-[  --enable-zprofile=pathname the full pathname of the global zprofile script],
+[  --enable-zprofile=FILE     the full pathname of the global zprofile script],
 [zprofile="$enableval"],
 [if test "x$etcdir" = xno; then
   zprofile=no
@@ -153,7 +147,7 @@
 
 undefine([zlogin])dnl
 AC_ARG_ENABLE(zlogin,
-[  --enable-zlogin=pathname   the full pathname of the global zlogin script],
+[  --enable-zlogin=FILE       the full pathname of the global zlogin script],
 [zlogin="$enableval"],
 [if test "x$etcdir" = xno; then
   zlogin=no
@@ -166,7 +160,7 @@
 
 undefine([zlogout])dnl
 AC_ARG_ENABLE(zlogout,
-[  --enable-zlogout=pathname  the full pathname of the global zlogout script],
+[  --enable-zlogout=FILE      the full pathname of the global zlogout script],
 [zlogout="$enableval"],
 [if test "x$etcdir" = xno; then
   zlogout=no
@@ -183,21 +177,22 @@
 AC_SUBST(zlogin)dnl
 AC_SUBST(zlogout)dnl
 
+dnl Do you want large file support, if available?
+undefine([lfs])dnl
+AC_ARG_ENABLE(lfs,
+[  --disable-lfs              turn off support for large files],
+[lfs="$enableval"], [lfs=yes])
+
 dnl Do you want dynamically loaded binary modules.
 undefine([dynamic])dnl
 AC_ARG_ENABLE(dynamic,
 [  --disable-dynamic          turn off dynamically loaded binary modules],
 [dynamic="$enableval"], [dynamic=yes])
 
-dnl Do you want to compile as K&R C.
-AC_ARG_ENABLE(ansi2knr,
-[  --enable-ansi2knr          translate source to K&R C before compiling],
-[ansi2knr="$enableval"], [ansi2knr=default])
-
 dnl Do you want to disable restricted on r* commands
 undefine([restricted-r])dnl
 AC_ARG_ENABLE(restricted-r,
-[  --disable-restricted-r     turn off restricted shell if the invoked command is r*],
+[  --disable-restricted-r     turn off r* invocation for restricted shell],
 [if test x$enableval = xyes; then
   AC_DEFINE(RESTRICTED_R)
 fi],
@@ -213,9 +208,14 @@
 AC_DEFINE(CONFIG_LOCALE)
 )
 
+dnl Do you want to compile as K&R C.
+AC_ARG_ENABLE(ansi2knr,
+[  --enable-ansi2knr          translate source to K&R C before compiling],
+[ansi2knr="$enableval"], [ansi2knr=default])
+
 undefine([fndir])dnl
 AC_ARG_ENABLE(fndir,
-[  --enable-fndir=DIR         where functions go],
+[  --enable-fndir=DIR         the directory in which to install functions],
 dnl ${VERSION} to be determined at compile time.
 [if test $enableval = yes; then
   fndir=${datadir}/${tzsh_name}/'${VERSION}'/functions
@@ -225,7 +225,7 @@
 
 undefine([sitefndir])dnl
 AC_ARG_ENABLE(sitefndir,
-[  --enable-site-fndir=DIR    where site functions (not version specific) go],
+[  --enable-site-fndir=DIR    same for site functions (not version specific)],
 [if test $enableval = yes; then
   sitefndir=${datadir}/${tzsh_name}/site-functions
 else
@@ -250,7 +250,7 @@
 dnl Do you want maildir support?
 undefine([maildir_support])dnl
 AC_ARG_ENABLE(maildir-support,
-[  --enable-maildir-support   Enable maildir support in MAIL and MAILPATH],
+[  --enable-maildir-support   enable maildir support in MAIL and MAILPATH],
 [if test x$enableval = xyes; then
   AC_DEFINE(MAILDIR_SUPPORT)
 fi])
@@ -258,7 +258,7 @@
 dnl Do you want to set a maximum function depth?
 undefine([max_function_depth])dnl
 AC_ARG_ENABLE(max-function-depth,
-[  --enable-max-function-depth=MAX   Limit function depth to MAX],
+[  --enable-max-function-depth=MAX   limit function depth to MAX],
 [if test x$enableval = xyes; then
   AC_DEFINE(MAX_FUNCTION_DEPTH, 4096)
 else
@@ -417,6 +417,45 @@
   AC_DEFINE(HAVE_VARIABLE_LENGTH_ARRAYS)
 fi
 
+AC_MSG_CHECKING(what to set MAXJOB to)
+dnl Do you want to alter the maximum job table size?
+undefine([max_jobtable_size])dnl
+AC_ARG_ENABLE(max-jobtable-size,
+[  --enable-max-jobtable-size=MAX    limit job table size to MAX],
+
+[if test x$enableval = xyes; then
+
+  if test $ac_cv_header_linux_tasks_h = yes; then
+   AC_EGREP_CPP(yes,
+   [#include <linux/tasks.h>
+    #ifdef MAX_TASKS_PER_USER
+    yes
+    #endif
+   ],
+   maxj=max)
+  fi
+
+   if test x$maxj = xmax; then
+    AC_DEFINE(MAXJOB, MAX_TASKS_PER_USER)
+    AC_DEFINE(NEED_LINUX_TASKS_H)
+    AC_MSG_RESULT(${msg}MAX_TASKS_PER_USER)
+   else
+    AC_DEFINE(MAXJOB, 256)
+    AC_MSG_RESULT(${msg}256)
+   fi
+
+ elif test x$enableval = xno; then
+ AC_DEFINE(MAXJOB,512)
+ AC_MSG_RESULT(${msg}512)
+ else
+ AC_DEFINE_UNQUOTED(MAXJOB,$enableval)
+ AC_MSG_RESULT(${msg}${enableval}) 
+fi],
+[
+AC_DEFINE(MAXJOB, 50)
+ AC_MSG_RESULT(${msg}50) 
+])
+
 dnl ------------------
 dnl CHECK FOR PROGRAMS
 dnl ------------------
@@ -508,11 +547,19 @@
 
 dnl Prefer BSD termcap library to SysV curses library, except on certain
 dnl SYSV-derived systems.
-case "$host_os" in
+AC_ARG_WITH(curses-terminfo,
+[  --with-curses-terminfo     use terminfo support from curses library],
+[if test x$withval = xyes; then
+  termcap_curses_order="curses ncurses termcap"
+  AC_SEARCH_LIBS(tigetstr, [$termcap_curses_order])
+else
+  termcap_curses_order="termcap curses ncurses"
+fi],
+[case "$host_os" in
   aix*|hpux10.*|hpux11.*|solaris*)
       termcap_curses_order="curses ncurses termcap" ;;
   *)             termcap_curses_order="termcap curses ncurses" ;;
-esac
+esac])dnl
 
 AC_SEARCH_LIBS(tgetent, [$termcap_curses_order])
 AC_MSG_CHECKING(if term.h needs curses.h)
@@ -1424,45 +1471,6 @@
       AC_DEFINE(GETPWNAM_FAKED)
     fi
 fi
-
-AC_MSG_CHECKING(what to set MAXJOB to)
-dnl Do you want to alter the maximum job table size?
-undefine([max_jobtable_size])dnl
-AC_ARG_ENABLE(max-jobtable-size,
-[  --enable-max-jobtable-size=MAX   Limit job table size to MAX],
-
-[if test x$enableval = xyes; then
-
-  if test $ac_cv_header_linux_tasks_h = yes; then
-   AC_EGREP_CPP(yes,
-   [#include <linux/tasks.h>
-    #ifdef MAX_TASKS_PER_USER
-    yes
-    #endif
-   ],
-   maxj=max)
-  fi
-
-   if test x$maxj = xmax; then
-    AC_DEFINE(MAXJOB, MAX_TASKS_PER_USER)
-    AC_DEFINE(NEED_LINUX_TASKS_H)
-    AC_MSG_RESULT(${msg}MAX_TASKS_PER_USER)
-   else
-    AC_DEFINE(MAXJOB, 256)
-    AC_MSG_RESULT(${msg}256)
-   fi
-
- elif test x$enableval = xno; then
- AC_DEFINE(MAXJOB,512)
- AC_MSG_RESULT(${msg}512)
- else
- AC_DEFINE_UNQUOTED(MAXJOB,$enableval)
- AC_MSG_RESULT(${msg}${enableval}) 
-fi],
-[
-AC_DEFINE(MAXJOB, 50)
- AC_MSG_RESULT(${msg}50) 
-])
 
 
 dnl ---------------

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

