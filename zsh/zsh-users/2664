From zsh-users-return-2664-mason-zsh=primenet.com.au@sunsite.auc.dk Fri Oct 08 18:18:44 1999
Return-Path: <zsh-users-return-2664-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16920 invoked from network); 8 Oct 1999 18:18:43 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 8 Oct 1999 18:18:43 -0000
Received: (qmail 24085 invoked by alias); 8 Oct 1999 18:18:09 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 2664
Received: (qmail 24077 invoked from network); 8 Oct 1999 18:18:07 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <991008181759.ZM29064@candle.brasslantern.com>
Date: Fri, 8 Oct 1999 18:17:59 +0000
In-Reply-To: <001001bf1154$953cfb70$21c9ca95@mow.siemens.ru>
Comments: In reply to "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
        "RE: Reasons for not wanting EXTENDED_GLOB interactively (was Re: PATCH:...)" (Oct  8, 10:15am)
References: <001001bf1154$953cfb70$21c9ca95@mow.siemens.ru>
X-Mailer: Z-Mail Lite (5.0.0 30July97)
To: <zsh-users@sunsite.auc.dk>
Subject: Re: Reasons for not wanting EXTENDED_GLOB interactively
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Oct 8, 10:15am, Andrej Borsenkow wrote:
> Subject: RE: Reasons for not wanting EXTENDED_GLOB interactively
> >
> >         rm .#*
> 
> Wow! I often use some patterns with exclusion and like so I have
> extended_glob on ... Peter, how hard is to implement globbing modifier
> to turn extended_glob on (and, may be, off)? Something like (#e)... ??

We discussed this once before ... globbing modifiers only work when you
already have extended-glob turned on in the first place, so you can't
make a modifier to turn it on.  And making a modifier to turn it off
doesn't help very much, because if you remember that you need to turn it
off then you can usually remember to use \# or whatever.

One approach to turning it on would be a precmmand modifier, sort of the
reverse of "noglob":

    extglob rm (#i)makefile*~*.am

You can actually write this yourself as a combination shell function and
alias, like this:

function ext_glob {
    setopt localoptions extendedglob
    local command="$1"
    shift
    $==command $==~*			# redo globbing on arguments
}
alias extglob='noglob ext_glob '	# delay globbing until inside

(Note trailing space in the alias, which applies alias expansion to the
word that comes after it so $command will be correct.)

Then just leave extendedglob unset and use extglob when you need it.  (I
should have thought of this years ago; I've been using a little function
named "show" to pre-generate an array named $show that's the result of an
extended glob, and then run e.g. "rm $show".)

