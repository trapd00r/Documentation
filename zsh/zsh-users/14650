From zsh-users-return-14650-mason-zsh=primenet.com.au@zsh.org Mon Dec 14 20:56:06 2009
Return-Path: <zsh-users-return-14650-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 5511 invoked by alias); 14 Dec 2009 20:56:06 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14650
Received: (qmail 19227 invoked from network); 14 Dec 2009 20:55:53 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received-SPF: pass (ns1.primenet.com.au: SPF record at ntlworld.com designates 81.103.221.47 as permitted sender)
Message-Id: <200912142055.nBEKtinh003212@pws-pc.ntlworld.com>
From: Peter Stephenson <p.w.stephenson@ntlworld.com>
To: "Peter A. Castro" <doctor@fruitbat.org>, zsh-users@zsh.org
Subject: Re: Unable to read history on latest Cygwin
In-Reply-To: Message from "Peter A. Castro" <doctor@fruitbat.org>
   of "Mon, 14 Dec 2009 12:29:08 PST." <Pine.LNX.4.64.0912141223140.19572@gremlin.fruitbat.org>
Date: Mon, 14 Dec 2009 20:55:44 +0000
X-Cloudmark-Analysis: v=1.1 cv=1ggfb5FlKZQUfF3vzm9UBYZ2uTfLsbs/8dSljwg5+mE= c=1 sm=0 a=ab91JrFIUiMA:10 a=NLZqzBF-AAAA:8 a=HmqdOyLkINyPviD1lO4A:9 a=DocxpaWXcjxi0rDxGHX7xdjpkToA:4 a=9RerR9Cxla0A:10 a=_dQi-Dcv4p4A:10 a=HpAAvcLHHh0Zw7uRqdWCyQ==:117

"Peter A. Castro" wrote:
>On Mon, 14 Dec 2009, Peter Stephenson wrote:
>> On Mon, 14 Dec 2009 15:19:29 +0100
>> "Thorsten Kampe" <thorsten@thorstenkampe.de> wrote:
>>> "Hardlinks on FAT [...] have been faked in
>>> 1.5 by copying the file. The decision was made a couple of weeks back to
>>> drop this fake since the application should know that the underlying
>>> filesystem is not capable of creating hardlinks."
>>
>> I presume that means symlink() works OK?  We should probably be able to do
>> something relatively straightforward like the following---using exactly the
>> same code for symbolic links as hard links, most of the change is indenting
>> code---though I've only checked it to the extent that it doesn't screw up
>> somewhere that does support hard links.
> 
> There is another option to consider here: not using link().
> 
> The hist code has an alternative code path if link() is not available
> (#ifdef HAVE_LINK), and it appears this is the only place in zsh code
> which uses link().  I'm hacking configure to disable this usage on Cygwin
> to see what, exactly, the difference in behaviour will be.

I think that's rather more brittle: the code I've suggested (assuming it
does the trick) doesn't require anything more than that link() and
symlink() exist in the system library and covers any similar problem on
other systems.  Hacking something specific for any system isn't usually
desirable, plus all we've been told is that link() doesn't work on
FAT32, not that it doesn't work under Cygwin.

-- 
Peter Stephenson <p.w.stephenson@ntlworld.com>
Web page now at http://homepage.ntlworld.com/p.w.stephenson/

