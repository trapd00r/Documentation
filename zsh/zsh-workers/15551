From zsh-workers-return-15551-mason-zsh=primenet.com.au@sunsite.dk Tue Jul 31 13:52:17 2001
Return-Path: <zsh-workers-return-15551-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 18752 invoked from network); 31 Jul 2001 13:52:15 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 31 Jul 2001 13:52:15 -0000
Received: (qmail 24645 invoked by alias); 31 Jul 2001 13:52:04 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 15551
Received: (qmail 24629 invoked from network); 31 Jul 2001 13:52:02 -0000
Date: Tue, 31 Jul 2001 09:51:59 -0400
From: Clint Adams <clint@zsh.org>
To: zsh-workers@sunsite.dk
Subject: PATCH: _gzip -t and -l
Message-ID: <20010731095159.A10818@dman.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i


Matt Zimmerman points out that gzip -t and -l should
behave as -d, only completing files presumed compressed.
This makes `decompress' somewhat of a misnomer, though.
I'll patch both trees.

Index: Completion/Unix/Command/_gzip
===================================================================
RCS file: /cvsroot/zsh/zsh/Completion/Unix/Command/_gzip,v
retrieving revision 1.1
diff -u -r1.1 _gzip
--- Completion/Unix/Command/_gzip	2001/04/02 11:52:51	1.1
+++ Completion/Unix/Command/_gzip	2001/07/31 13:46:28
@@ -57,7 +57,9 @@
 
 case "$state" in
 files)
-  (( $+opt_args[-d] || $+opt_args[--decompress] || $+opt_args[--uncompress] )) &&
+  (( $+opt_args[-d] || $+opt_args[--decompress] || $+opt_args[--uncompress] ||
+     $+opt_args[-l] || $+opt_args[--list] ||
+     $+opt_args[-t] || $+opt_args[--test] )) &&
     decompress=yes
   if (( $+opt_args[-r] || $+opt_args[--recursive] )); then
     if [[ -z "$decompress" ]]; then

