From zsh-workers-return-13629-mason-zsh=primenet.com.au@sunsite.dk Wed Mar 14 10:45:11 2001
Return-Path: <zsh-workers-return-13629-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 25567 invoked from network); 14 Mar 2001 10:45:07 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 14 Mar 2001 10:45:07 -0000
Received: (qmail 22621 invoked by alias); 14 Mar 2001 10:44:51 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 13629
Received: (qmail 22610 invoked from network); 14 Mar 2001 10:44:50 -0000
Message-ID: <Tc0a88d0152492c5ed7@mailsweeper01.cambridgesiliconradio.com>
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: Re: Troublesome Key Bindings 
In-Reply-To: Your message of "Wed, 14 Mar 2001 11:05:51 +0200."
             <Pine.GSO.4.21.0103141104110.2774-100000@leeor.math.technion.ac.il> 
Date: Wed, 14 Mar 2001 10:44:05 +0000
From: Peter Stephenson <pws@csr.com>

"Zvi Har'El" <rl@math.technion.ac.il> wrote:
> I am using zsh in vi insert mode (being an fanatic ViM user). After doing
> compinit, which introduced many new key binding, I started having troubles in
> history searches: Although most of the new bindings have the prefix ^X, there
> are three with a prefix ^[, i.e., the escape character. These are
> 
> 	"^[," _history-complete-newer
> 	"^[/" _history-complete-older
> 	"^[~" _bash_complete-word
> 
> The second of this trio is ***very troublesome***, to say the least!!! To
> search the history in vi mode, I have to hit the escape character - to switch
> to vi command mode, and then the slash character.

It's only the _bash* functions that depend on the particular binding ---
and that's only to make it easy to set things up like bash; they actually
do basic completion things which can be managed other ways (they weren't
intended to be anything more than a simple trick for compatibility).

So for the first two, you can simply use bindkey to map them to something
else straight away:
  bindkey '^X/' _history-complete-older
If you need any of the non-contextual bash-style completions, you can look
in the function _bash_completions and pick out the ones you want.  This
could be as simple as

_complete_users() {
  setopt localoptions ${_comp_options[@]}

  _main_complete _users
}
zle -C _complete_users .complete-word _complete_users
bindkey '<your-binding>' _complete_users

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR Ltd., Unit 300, Science Park, Milton Road,
Cambridge, CB4 0XL, UK                          Tel: +44 (0)1223 392070

