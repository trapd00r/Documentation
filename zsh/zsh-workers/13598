From zsh-workers-return-13598-mason-zsh=primenet.com.au@sunsite.dk Sun Mar 11 18:01:07 2001
Return-Path: <zsh-workers-return-13598-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 14907 invoked from network); 11 Mar 2001 18:01:05 -0000
Received: from unknown (HELO sunsite.dk) (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 11 Mar 2001 18:01:05 -0000
Received: (qmail 15871 invoked by alias); 11 Mar 2001 18:00:59 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 13598
Received: (qmail 15858 invoked from network); 11 Mar 2001 18:00:58 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1010311180037.ZM27580@candle.brasslantern.com>
Date: Sun, 11 Mar 2001 18:00:36 +0000
In-Reply-To: <Pine.LNX.4.30.0103101930460.30357-100000@phong.blorf.net>
Comments: In reply to Wayne Davison <wayned@users.sourceforge.net>
        "Expanding "foo\ *"" (Mar 10,  7:48pm)
References: <Pine.LNX.4.30.0103101930460.30357-100000@phong.blorf.net>
X-Mailer: Z-Mail (5.0.0 30July97)
To: Zsh Workers <zsh-workers@sunsite.auc.dk>
Subject: Re: Expanding "foo\ *"
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Mar 10,  7:48pm, Wayne Davison wrote:
} Subject: Expanding "foo\ *"
}
} Here's a bug with the new completion system (I'm using 4.0.1-pre2,
} but the bug predates this version):
} 
} % ls -l foo\ *<TAB>
}    (Error beep)

Try this.  There should be a space and a tab at the end of the first `+'
line in the replacement part of the hunk, in case the mail system eats it.

Index: Completion/Core/_expand
===================================================================
diff -c -r1.48 _expand
--- Completion/Core/_expand	2001/02/08 03:49:32	1.48
+++ Completion/Core/_expand	2001/03/11 17:57:34
@@ -68,7 +68,8 @@
 # Now try globbing.
 
 [[ "$force" = *g* ]] || zstyle -T ":completion:${curcontext}:" glob &&
-    eval 'exp=( ${~exp} ); exp=( ${(q)exp} )' 2>/dev/null
+    eval 'exp=( ${~exp//(#b)\\[ 	
+]/$match[1]} ); exp=( ${(q)exp} )' 2>/dev/null
 
 ### Don't remember why we once used this instead of the (q) above.
 #    eval 'exp=( ${~exp} ); exp=( ${exp//(#b)([][()|*?^#~<>\\=])/\\${match[1]}} )' 2>/dev/null

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

