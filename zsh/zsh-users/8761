From zsh-users-return-8761-mason-zsh=primenet.com.au@sunsite.dk Wed Apr 27 05:37:05 2005
Return-Path: <zsh-users-return-8761-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 9139 invoked from network); 27 Apr 2005 05:37:04 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 27 Apr 2005 05:37:04 -0000
Received: (qmail 34172 invoked from network); 27 Apr 2005 05:36:57 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 27 Apr 2005 05:36:57 -0000
Received: (qmail 21580 invoked by alias); 27 Apr 2005 05:36:48 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 8761
Received: (qmail 21567 invoked from network); 27 Apr 2005 05:36:47 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 27 Apr 2005 05:36:47 -0000
Received: (qmail 32743 invoked from network); 27 Apr 2005 05:36:47 -0000
Received: from vms040pub.verizon.net (206.46.252.40)
  by a.mx.sunsite.dk with SMTP; 27 Apr 2005 05:36:42 -0000
Received: from candle.brasslantern.com ([4.11.1.68])
 by vms040.mailsrvcs.net (Sun Java System Messaging Server 6.2 HotFix 0.04
 (built Dec 24 2004)) with ESMTPA id <0IFL00AD0BL4ZBXD@vms040.mailsrvcs.net> for
 zsh-users@sunsite.dk; Wed, 27 Apr 2005 00:36:41 -0500 (CDT)
Received: from candle.brasslantern.com (IDENT:schaefer@localhost [127.0.0.1])
	by candle.brasslantern.com (8.12.11/8.12.11) with ESMTP id j3R5adFG028745	for
 <zsh-users@sunsite.dk>; Tue, 26 Apr 2005 22:36:39 -0700
Received: (from schaefer@localhost)	by candle.brasslantern.com
 (8.12.11/8.12.11/Submit) id j3R5adFf028744	for zsh-users@sunsite.dk; Tue,
 26 Apr 2005 22:36:39 -0700
Date: Wed, 27 Apr 2005 05:36:38 +0000
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: localtraps
In-reply-to: <200504261834.j3QIYHSa018951@news01.csr.com>
To: zsh-users@sunsite.dk
Message-id: <1050427053638.ZM28743@candle.brasslantern.com>
MIME-version: 1.0
X-Mailer: Z-Mail (5.0.0 30July97)
Content-type: text/plain; charset=us-ascii
References: <20050425063521.GA17598@quark.hightek.org>
	<1050425163202.ZM25027@candle.brasslantern.com>
	<20050426030308.GA21501@quark.hightek.org>
	<200504261834.j3QIYHSa018951@news01.csr.com>
Comments: In reply to Peter Stephenson <pws@csr.com>        "Re: localtraps"
 (Apr 26,  7:34pm)
X-Spam-Checker-Version: SpamAssassin 3.0.2 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=6.0 tests=AWL,BAYES_00 autolearn=ham 
	version=3.0.2
X-Spam-Hits: -2.6

On Apr 26,  7:34pm, Peter Stephenson wrote:
} Subject: Re: localtraps
}
} The problem may be related to the fact that [zsh] executes traps
} from within the signal handler.  Other shells presumably wait for the
} handler to exit and execute the trap at the next obvious point

Normally it's the case that executing the trap from within the signal
handler means that you can't handle the same signal again before the
trap function has exited.  However, I think the only way to get the
behavior I'm seeing is that the "trap" command unblocks the signal
again, allowing it to be re-delivered before the handler finishes (at
least, on linux it looks that way).

Also, it's not universally true that zsh executes traps from inside
the handler; there *is* a queue of unfinished handlers maintained, for
circumstances where it's dangerous to run shell code, e.g., while some
other shell code is executing and possibly calling malloc().  It's only
when the shell is idle that zsh runs the trap in the handler.

} However, I've tried this in some recent versions of zsh (4.2.0 and
} 4.3.0-dev-1, which is a moving target) and it seems to do what I think
} you want... abort the programme when you hit ^C twice quickly, otherwise
} continue.  So I'm not sure what you're doing wrong.

There's definitely something odd about the behavior of zsh here.  For
example, given:

    setopt localtraps
    TRAPINT() { echo OUTER; trap "echo INNER" INT; sleep 2 }

On the first ^C at the PS1 prompt, OUTER is printed, and no new prompt
is drawn.  If I press ^C again within 2 seconds, then a blank line (no
idea why) and INNER is printed, but still no new prompt.  Note that no
shell loop is involved, this with the shell merely waiting for input.

Every subsequent ^C, no matter how long I wait, prints INNER, up until
a newline is pressed, at which point a new prompt is drawn.  Once the
prompt is redrawn, subsequent interrupts do nothing at all (neither
OUTER nor INNER is printed).  However, "trap" with no argument still
shows the original TRAPINT function.

So localtraps eventually worked in the sense that the inner trap was
removed, but the outer trap was never reset in the signal handler.

