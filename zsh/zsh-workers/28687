From zsh-workers-return-28687-mason-zsh=primenet.com.au@zsh.org Mon Jan 31 00:02:30 2011
Return-Path: <zsh-workers-return-28687-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1864 invoked by alias); 31 Jan 2011 00:02:30 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28687
Received: (qmail 2538 invoked from network); 31 Jan 2011 00:02:27 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <110130160220.ZM15815@torch.brasslantern.com>
Date: Sun, 30 Jan 2011 16:02:20 -0800
In-reply-to: <AANLkTi=PxzNVGxac5v64UZ4Sa_JwFXAdhxnxrpx_3gtw@mail.gmail.com>
Comments: In reply to Julien Nicoulaud <julien.nicoulaud@gmail.com>
 "Re: Slow completion when using aptitude" (Jan 30, 11:51am)
References: <AANLkTimtzJnpA=_QQgz4bSYZEjHydCSh6PLMKzFtwueS@mail.gmail.com>
	<AANLkTimYBY7nA_FCXTA8n-ukYwBxnobmoUNowJ6kxaGz@mail.gmail.com>
	<AANLkTikAKmnTt+9o5ibUGevk+m=rZJg9WrxV1WP+hX6w@mail.gmail.com>
	<AANLkTinYiKLp11GTOKaMb_8BTPKvjP+U6won9V4BFHxk@mail.gmail.com>
	<87oc74dpuy.fsf@ft.bewatermyfriend.org>
	<AANLkTimKPLUHcHj_aZciwNLDt_+noEW0G=PEdYSVEL9b@mail.gmail.com>
	<87d3njemu9.fsf@ft.bewatermyfriend.org>
	<110126090508.ZM2111@torch.brasslantern.com>
	<110126092944.ZM2205@torch.brasslantern.com>
	<AANLkTinQW1fYGBhX4u8NFniFYN6y6FPr-wgaDHbF8U1j@mail.gmail.com>
	<110129211610.ZM21714@torch.brasslantern.com>
	<AANLkTimKbEbEjzW07wwqmFzV67EZQx5ngdY0vhZjzks2@mail.gmail.com>
	<110129231514.ZM21967@torch.brasslantern.com>
	<AANLkTimEpSx5H5WUWN1RtmJYG1C0wqNKUFM=vTV5N_7U@mail.gmail.com>
	<AANLkTi=PxzNVGxac5v64UZ4Sa_JwFXAdhxnxrpx_3gtw@mail.gmail.com>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: Julien Nicoulaud <julien.nicoulaud@gmail.com>
Subject: Re: Slow completion when using aptitude
Cc: cheer_xiao <xiaqqaix@gmail.com>, zsh-workers@zsh.org
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Jan 30, 11:51am, Julien Nicoulaud wrote:
} 
} By the way, this issue was already known:
} http://www.zsh.org/mla/workers/2008/msg00930.html

So ...

_deb_packages_update_avail uses the cache to populate an array variable
of the same name.

As does _deb_packages_update_installed.

Then _deb_packages_update_uninstalled constructs a massive glob pattern
from the results of the latter, and applies it as a filter against the
former, to set a variable _deb_packages_update_uninstalled.

Thereafter the value of _deb_packages_update_uninstalled is used rather
than go through that filter again, so it *is* caching.  The disk cache
isn't used by _deb*_uninstalled because the files are all on the disk
already from the other two functions. 

All the time is being spent building that glob pattern, and filtering.

So try using this instead:

_deb_packages_update_uninstalled () {
  _deb_packages_update_avail
  _deb_packages_update_installed
  if (( ! $+_deb_packages_cache_uninstalled )); then
    local avail
    for avail in $_deb_packages_cache_avail
    do
	(( ${+_deb_packages_cache_installed[(r)$avail]} )) && continue
	_deb_packages_cache_uninstalledr+=( $avail )
    done
  fi
  cachevar=_deb_packages_cache_uninstalled
}

Sometimes the most zsh-ish way to do something isn't the most efficient
way to do it.  It may even be still faster to replace the "for" loop
with:

    _dep_packages_cache_uninstalled=(
	$( print -l $_deb_packages_cache_avail | 
	   fgrep -vf =(print -l $_deb_packages_cache_installed) )
    )

