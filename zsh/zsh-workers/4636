From zsh-workers-request@math.gatech.edu Sun Nov 15 01:14:33 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1270 invoked from network); 15 Nov 1998 01:14:32 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 15 Nov 1998 01:14:32 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.9.1/8.9.1) id TAA20182;
	Sat, 14 Nov 1998 19:57:48 -0500 (EST)
Resent-Date: Sat, 14 Nov 1998 19:57:48 -0500 (EST)
Message-ID: <19981115115624.A1128@primenet.com.au>
Date: Sun, 15 Nov 1998 11:56:24 +1100
From: Geoff Wing <gcw@pobox.com>
To: Bart Schaefer <schaefer@brasslantern.com>,
        Zsh Hackers <zsh-workers@math.gatech.edu>
Subject: Re: Symbols in executable available to dynamic stuff
References: <19981114181808.A6571@primenet.com.au> <981114110036.ZM22986@candle.brasslantern.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 0.93.2i
In-Reply-To: <981114110036.ZM22986@candle.brasslantern.com>; from Bart Schaefer on Sat, Nov 14, 1998 at 11:00:36AM -0800
Organization: PrimeNet Computer Consultancy
Resent-Message-ID: <"rx9qK3.0.Hx4.CSYJs"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4636
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Bart Schaefer wrote about Re: Symbols in executable available to dynamic stuff:
:On Nov 14,  6:18pm, Geoff Wing wrote:
:} Subject: Symbols in executable available to dynamic stuff
:} Way, way back in Zefram's patch 3038 came aczsh.m4 and this gem:
:} zsh_SYS_DYNAMIC_EXECSYMS:
:}     Check whether symbols in the executable are available to dynamically
:}     loaded libraries.
:} If yes, then we don't build a dynamic zsh.  What's the danger here?
:Eh?  I can't find the "if yes, don't build dynamic" code to which you
:refer.  The only thing this is used for as far as I can tell is as one
:of two tests to find out whether it's safe/possible to strip the binary
:after compiling it with dynamic linkage.

>From memory, look in configure.in, just after the test it will test
the result via != yes and if so, set L=L, otherwise L=N  (as in @L@IBZSH)
Now, in Src, we're either building LIBZSH (which builds libzsh.*) or NIBZSH
(which doesn't.)
-- 
Geoff Wing   <gcw@pobox.com>            Mobile : 0412 162 441
Work URL: http://www.primenet.com.au/   Ego URL: http://pobox.com/~gcw/

