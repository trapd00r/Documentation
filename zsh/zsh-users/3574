From zsh-users-return-3574-mason-zsh=primenet.com.au@sunsite.auc.dk Fri Dec 22 15:08:12 2000
Return-Path: <zsh-users-return-3574-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 25171 invoked from network); 22 Dec 2000 15:08:11 -0000
Received: from sunsite.dk (HELO sunsite.auc.dk) (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 22 Dec 2000 15:08:11 -0000
Received: (qmail 28109 invoked by alias); 22 Dec 2000 15:07:56 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 3574
Received: (qmail 28102 invoked from network); 22 Dec 2000 15:07:56 -0000
To: zsh-users@sunsite.auc.dk
Date: 22 Dec 2000 16:08:57 +0100
From: Akim Demaille <akim@epita.fr>
Message-ID: <mv4g0jgijcm.fsf@nostromo.lrde.epita.fr>
Organization: EPITA / LRDE
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Subject: Zsh and Autotest
Sender: news <news@epita.fr>


Hi!

Autotest is a testing framework based on ideas similar to those of
Autoconf.  Autoconf's own test suite is based on Autotest.  An
Autotest test suite is basically a huge for/case/esac/done (25k lines
for Autoconf).  Nobody ever complained about a shell having problems
to handle this.

Nevertheless when I try to run it with Zsh, it basically kills my
machine without starting actual work (-x shows it stops at the for,
i.e., I guess it is trying to find the matching done).  I never had
enough patience to see whether it is still preparing before running,
it's just too painful seeing Zsh swallowing the resources like this.

I personally don't care, Bash and Ash run it fine, but maybe you
wanted to know.  If people want to give it a try, download

        ftp://alpha.gnu.org/gnu/cvs/autoconf.tar.gz

The test suite is the shell script `tests/testsuite', which is created
via make check or make testsuite.

        Akim

PS/  By the way, yes there is Sh compatibility code in there:

#! /bin/sh

# Be Bourne compatible
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
  set -o posix
fi

