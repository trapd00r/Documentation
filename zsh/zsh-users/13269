From zsh-users-return-13269-mason-zsh=primenet.com.au@sunsite.dk Sat Sep 20 20:30:07 2008
Return-Path: <zsh-users-return-13269-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 23668 invoked from network); 20 Sep 2008 20:29:54 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 20 Sep 2008 20:29:54 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 67697 invoked from network); 20 Sep 2008 20:29:36 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 20 Sep 2008 20:29:36 -0000
Received: (qmail 17888 invoked by alias); 20 Sep 2008 20:29:15 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13269
Received: (qmail 17873 invoked from network); 20 Sep 2008 20:29:15 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 20 Sep 2008 20:29:15 -0000
Received: from mx.spodhuis.org (redoubt.spodhuis.org [193.202.115.177])
	by bifrost.dotsrc.org (Postfix) with ESMTPS id 3E1AF802720D
	for <zsh-users@sunsite.dk>; Sat, 20 Sep 2008 22:29:11 +0200 (CEST)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws; s=d200807; d=spodhuis.org;
	h=Received:Date:From:To:Cc:Subject:Message-ID:Mail-Followup-To:References:MIME-Version:Content-Type:Content-Disposition:In-Reply-To;
	b=zi9YDnJJSiFWjon56PybKJYN4TmAIG7GoO30wWcjLlXHDQxFPCU/T6jh3ISAdqJcGcGZupAtS2zuOkWaX48D+o5N/hWTaaZdBxEMe4nzXKbHm5cYaltTZoEQlH6r0kA3ChH2bO2f+dEICopyUZjJdnn7Blxbg5xckDhsK0oYIH8=;
Received: by smtp.spodhuis.org with local 
	id 1Kh94l-000BQg-BD; Sat, 20 Sep 2008 20:29:07 +0000
Date: Sat, 20 Sep 2008 13:29:07 -0700
From: Phil Pennock <zsh-workers+phil.pennock@spodhuis.org>
To: Rocky Bernstein <rocky.bernstein@gmail.com>
Cc: Peter Stephenson <pws@csr.com>,
	zsh users mailing list <zsh-users@sunsite.dk>
Subject: Re: reading a file into an array. mapfile? (f)?
Message-ID: <20080920202907.GA43828@redoubt.spodhuis.org>
Mail-Followup-To: Rocky Bernstein <rocky.bernstein@gmail.com>,
	Peter Stephenson <pws@csr.com>,
	zsh users mailing list <zsh-users@sunsite.dk>
References: <6cd6de210809171953pd956d75gd4b3609ac036fe0@mail.gmail.com> <080917214418.ZM27616@torch.brasslantern.com> <6cd6de210809181747kc0f0a5bt4489f534589725a8@mail.gmail.com> <20080919100725.5c471019@news01> <6cd6de210809190339g57a4e722u5ad1371e858c8501@mail.gmail.com> <200809191100.m8JB0sAC028936@news01.csr.com> <6cd6de210809190744y38654349qa0db6e4d4b8fc2a5@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <6cd6de210809190744y38654349qa0db6e4d4b8fc2a5@mail.gmail.com>
X-Virus-Scanned: ClamAV 0.92.1/8294/Sat Sep 20 20:16:04 2008 on bifrost
X-Virus-Status: Clean

On 2008-09-19 at 10:44 -0400, Rocky Bernstein wrote:
> So now with this, file listing (the "list" command) is now in the debugger.
> Down the line, file information should be kept. Most important would be
> modification time and some sort of checksum (or "cryptographic")
> information. Too bad this isn't already in the zsh/files module.

Mod-time you get from zsh/stat.

You probably want to avoid loading the 'stat' built-in name, since
nowadays that's an external command with different behaviour, but:
 zmodload -aF zsh/stat b:zstat
will get you 'zstat', same behaviour.

% zstat -H foo src
% print ${(k)foo}
blksize nlink size rdev mode mtime inode blocks device atime uid link ctime gid
% print $foo[mtime]
1220980489
% zstat -sH foo src
% print $foo[mtime]
Tue Sep  9 10:14:49

Cryptographic, I'm more cautious of, as the cryptographic libraries tend
to be fairly large and the ABI compatibility awkward.  Having an
external command seg-fault because the version of OpenSSL it's loading
doesn't match the version it was linked against is one thing.  Having
your shell seg-fault and die when a module is loaded or you run a
command is another.

While zsh could just implement certain checksum algorithms internally,
picking which ones are "safe" is a cryptanalysis job and the sort of
thing we should stay away from, as the decisions made would last for
years (measured in decades, probably).

IMO adding cryptographic support to the shell would be into the area of
bloat; zsh is still a Unix shell and still well suited to running
external commands.

Is there a reason that a single fork/exec to get a checksum is a problem
(besides worrying about the portability of the checksum commands used)?

-Phil

