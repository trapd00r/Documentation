From zsh-workers-return-18934-mason-zsh=primenet.com.au@sunsite.dk Thu Aug 07 10:01:15 2003
Return-Path: <zsh-workers-return-18934-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 15794 invoked from network); 7 Aug 2003 10:01:14 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 7 Aug 2003 10:01:14 -0000
Received: (qmail 3086 invoked by alias); 7 Aug 2003 10:01:06 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 18934
Received: (qmail 3065 invoked from network); 7 Aug 2003 10:01:05 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 7 Aug 2003 10:01:05 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [62.189.183.235] by sunsite.dk (MessageWall 1.0.8) with SMTP; 7 Aug 2003 10:1:5 -0000
Received: from EXCHANGE02.csr.com (unverified) by MAILSWEEPER01.cambridgesiliconradio.com
 (Content Technologies SMTPRS 4.3.10) with ESMTP id <T63e8749636c0a88d014c4@MAILSWEEPER01.cambridgesiliconradio.com> for <zsh-workers@sunsite.dk>;
 Thu, 7 Aug 2003 10:55:17 +0100
Received: from csr.com ([192.168.144.127]) by EXCHANGE02.csr.com with Microsoft SMTPSVC(5.0.2195.5329);
	 Thu, 7 Aug 2003 10:57:29 +0100
To: Zsh <zsh-workers@sunsite.dk>
Subject: Re: Just to make sure I'm understanding it... 
In-reply-to: "DervishD"'s message of "Wed, 06 Aug 2003 21:35:57 +0200."
             <20030806193557.GA463@DervishD> 
Date: Thu, 07 Aug 2003 10:56:01 +0100
Message-ID: <3927.1060250161@csr.com>
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 07 Aug 2003 09:57:29.0305 (UTC) FILETIME=[50129490:01C35CCA]

DervishD wrote:
>     Well, in function 'insert-files' there is a line, just at the
> beginning, that reads 'files=( *(N) )', and I want to make sure I
> understand it. Since it starts with a parenthesis, it is (AFAIK) a
> candidate for filename generation. The asterisk seems to be the
> pattern an the 'N' in the parentheses is a glob qualifier (namely the
> 'set NULL_GLOB for this pattern' qualifier). What I don't understand
> is, why the spaces around the pattern and the qualifier?

They're optional, they're just there for readability.

  files=(*(N))

will work but looks like the logo of a secret society.  What you're
probably missing is the the outer parentheses are there to turn the
assignment into an array assignment, they're nothing to do with
globbing.  In this case the place where you can't have spaces is around
the `='.

  files=(
     *(N)
  )

works, too.  It's one of the advantages of arrays --- you can make the
assignments much neater.

However,

  files=*(N)

*doesn't* work.  The right hand side of normal assignment doesn't do
globbing (unless you have the option GLOB_ASSIGN set, which we don't
recommend).  This was changed a while ago: the problem was that if there
were multiple matches, an array assignment was done, while if there was
just one, because of the use of scalar syntax a scalar assignment was
done.  The new arrangement (with GLOB_ASSIGN unset) is much neater.

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR Ltd., Science Park, Milton Road,
Cambridge, CB4 0WH, UK                          Tel: +44 (0)1223 692070


**********************************************************************
The information transmitted is intended only for the person or
entity to which it is addressed and may contain confidential 
and/or privileged material. 
Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by 
persons or entities other than the intended recipient is 
prohibited.  
If you received this in error, please contact the sender and 
delete the material from any computer.
**********************************************************************

