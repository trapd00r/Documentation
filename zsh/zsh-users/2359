From zsh-users-return-2359-mason-zsh=primenet.com.au@sunsite.auc.dk Sun Jun 06 16:20:53 1999
Return-Path: <zsh-users-return-2359-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 23504 invoked from network); 6 Jun 1999 16:20:51 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 6 Jun 1999 16:20:51 -0000
Received: (qmail 21089 invoked by alias); 6 Jun 1999 16:20:35 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 2359
Received: (qmail 21082 invoked from network); 6 Jun 1999 16:20:33 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <990606162023.ZM10310@candle.brasslantern.com>
Date: Sun, 6 Jun 1999 16:20:23 +0000
In-Reply-To: <19990606143605.B23915@thelonious.new.ox.ac.uk>
Comments: In reply to Adam Spiers <adam@thelonious.new.ox.ac.uk>
        "Re: Call for opinions on a couple of prospective zsh patches" (Jun  6,  2:36pm)
References: <990606065150.ZM9165@candle.brasslantern.com> 
	<19990606143605.B23915@thelonious.new.ox.ac.uk>
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-users@sunsite.auc.dk
Subject: Re: Call for opinions on a couple of prospective zsh patches
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Jun 6,  2:36pm, Adam Spiers wrote:
} Subject: Re: Call for opinions on a couple of prospective zsh patches
}
} Bart Schaefer (schaefer@candle.brasslantern.com) wrote:
} > Greg Badros <gjb@@cs.washington.edu> has submitted patches for three new
} > features that could appear in zsh 3.0.6.  I'm undecided whether to add
} > any or all of them.  They are:
} > 
} > * Completion using "dynamic abbreviations" after the manner of the emacs
} >   dabbrev package.  This includes adding a special `dabbrev-complete' ZLE
} >   action, along the lines of expand-or-complete, complete-word, etc.
} 
} Personally I find this feature so useful that I can't stand being
} without it, and still use that version with my patch hacked in to this
} day, which is unfortunate, because it's prevented me from regularly
} trying out the newer development versions.
} 
} Which versions is zle -C (or similar) available in these days?

Peter has been doing interim unofficial patch releases about once a week
for some while now, because Zefram's net access has been intermittent.
The "zle -C" stuff merged with some other completion changes that Sven
Wischnowsky implemented, and all will appear in 3.1.6.

(You know you've been reading zsh-workers a long time when you can spell
Wischnowsky without looking it up.)

} >   I find the effects of `dabbrev-complete' to be -very- similar to
} > 	setopt menu_complete
} > 	compctl -D -s '${=$(history -nr 1)}'
} 
} Also, I don't like the idea of menu-completion behaviour, because I
} tend to keep a huge history (precisely for the reason that it makes a
} dabbrev-expand action so useful), so I'd end up with huge menus (or a
} "do you want a huge menu" prompt) most times I hit the key.  Ugh.

I think you're confusing menu-completion with completion listings.  In a
menu completion, repeatedly striking the completion key (e.g. TAB) cycles
through the list of possible matches; you still see only one at a time,
and you aren't prompted about it.  Listing behavior (setopt auto_list and
list_ambiguous) means that if the word can't be completed, all possible
matches are displayed (or you get prompted if there are too many).

Greg's patches do not cause listing behavior, ever; it's a new builtin,
so it doesn't recognize the regular completion options.  Hm, I'd probably
have to try to do something about that if I were going to include it.

} I'd say that if this next 3.1 release is coming soon then maybe don't
} bother.

The 3.1.6 release should not be very far apart from the 3.0.6 release,
barring unforseen circumstances.

Slightly off-topic:

} I'm constantly finding that M-f and M-b don't do what I want them to,
} and I can't get them to behave how I want either.  How about the
} option of an emacs-like {forward,backward}-word, which jumps to a
} different place depending on which direction you're heading, for
} example?

I imagine this was either an oversight, or works the way it does because
Paul Falstad didn't like having two spaces left behind following a
forward-word backward-delete-word sequence.  I've long been using
	bindkey -s '^[f' '^[E^F'

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

