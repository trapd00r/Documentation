From zsh-workers-return-25893-mason-zsh=primenet.com.au@sunsite.dk Tue Oct 14 12:06:43 2008
Return-Path: <zsh-workers-return-25893-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 23271 invoked from network); 14 Oct 2008 12:06:39 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.1 required=5.0 tests=AWL autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 14 Oct 2008 12:06:39 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 45553 invoked from network); 14 Oct 2008 12:06:21 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 14 Oct 2008 12:06:21 -0000
Received: (qmail 21231 invoked by alias); 14 Oct 2008 12:06:14 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 25893
Received: (qmail 21214 invoked from network); 14 Oct 2008 12:06:12 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 14 Oct 2008 12:06:12 -0000
Received: from cluster-d.mailcontrol.com (cluster-d.mailcontrol.com [217.69.20.190])
	by bifrost.dotsrc.org (Postfix) with ESMTPS id 574C380524C0
	for <zsh-workers@sunsite.dk>; Tue, 14 Oct 2008 14:06:01 +0200 (CEST)
Received: from rly26d.srv.mailcontrol.com (localhost.localdomain [127.0.0.1])
	by rly26d.srv.mailcontrol.com (MailControl) with ESMTP id m9EC61qH005383
	for <zsh-workers@sunsite.dk>; Tue, 14 Oct 2008 13:06:01 +0100
Received: from submission.mailcontrol.com (submission.mailcontrol.com [86.111.216.190])
	by rly26d.srv.mailcontrol.com (MailControl) id m9EC55cI004118
	for zsh-workers@sunsite.dk; Tue, 14 Oct 2008 13:05:05 +0100
Received: from cameurexb01.EUROPE.ROOT.PRI ([193.128.72.68])
	by rly26d-eth0.srv.mailcontrol.com (envelope-sender Peter.Stephenson@csr.com) (MIMEDefang) with ESMTP id m9EC4uJN003397; Tue, 14 Oct 2008 13:05:05 +0100 (BST)
Received: from news01 ([10.103.143.38]) by cameurexb01.EUROPE.ROOT.PRI with Microsoft SMTPSVC(6.0.3790.3959);
	 Tue, 14 Oct 2008 13:04:45 +0100
Date: Tue, 14 Oct 2008 13:04:45 +0100
From: Peter Stephenson <pws@csr.com>
To: zsh-workers@sunsite.dk
Cc: 501851@bugs.debian.org
Subject: Re: Bug#501851: zsh: Completion fails if a directory name contains
 '(', ')' and =?UTF-8?B?J8SE?= '.
Message-ID: <20081014130445.73a7033d@news01>
In-Reply-To: <48F3F9F5.1040009@inz.sakura.ne.jp>
References: <20081010230611.23133.42221.reportbug@debian>
	<20081010231712.GA20915@scru.org>
	<48F0AE88.1020307@inz.sakura.ne.jp>
	<20081011225255.0df2e350@pws-pc>
	<48F2A515.1030203@inz.sakura.ne.jp>
	<2d460de70810122325r7e576759t204653bd537006b5@mail.gmail.com>
	<48F3F9F5.1040009@inz.sakura.ne.jp>
Organization: CSR
X-Mailer: Claws Mail 3.5.0 (GTK+ 2.12.8; i386-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-OriginalArrivalTime: 14 Oct 2008 12:04:45.0163 (UTC) FILETIME=[0C324BB0:01C92DF5]
X-Scanned-By: MailControl A-08-50-15 (www.mailcontrol.com) on 10.68.1.136
X-Virus-Scanned: ClamAV 0.92.1/8422/Tue Oct 14 10:34:30 2008 on bifrost
X-Virus-Status: Clean

On Tue, 14 Oct 2008 10:46:29 +0900
Morita Sho <morita-pub-en-debian@inz.sakura.ne.jp> wrote:
>   zstyle ':completion:*' matcher-list 'm:{[:lower:]}=3D{[:upper:]}'
>=20
> After removing the above line, the completion =C4=84/[TAB] works again.

Thanks for narrowing it down...  I'm aware that that syntax still needs
some work on it, it's only half-converted to supporting non-ASCII
characters, so it's probably not surprising this sort of thing happens.
The problem is the way characters are stored is quite specific to a
single-byte representation; I've made it so that it can be extended to
multibyte/wide characters, but it hasn't been.

I'm not going to get it properly converted before the next release since
it's a big job (I started it once back in June and got bogged down).  When
I get a chance, I'll look and see if there's any thing obvious I can do
with Meta-encoded characters that will work round the problem for now.

Until then you should be able to get away with the old syntax,

zstyle ':completion:*' matcher-list 'm:{a-z}=3D{A-Z}'

since before I finish the job it won't actually handle non-ASCII character
conversions properly anyway.

I will document my way round this as follows...

Index: Doc/Zsh/compwid.yo
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
RCS file: /cvsroot/zsh/zsh/Doc/Zsh/compwid.yo,v
retrieving revision 1.43
diff -u -r1.43 compwid.yo
--- Doc/Zsh/compwid.yo	14 Jul 2008 17:39:26 -0000	1.43
+++ Doc/Zsh/compwid.yo	14 Oct 2008 12:01:54 -0000
@@ -942,14 +942,16 @@
 completion you can use `tt(m:{[:lower:]}=3D{[:upper:]})'.  Although the
 matching system does not yet handle multibyte characters, this is likely
 to be a future extension, at which point this syntax will handle
-arbitrary alphabets; hence this form, rather than the use of explicit
-ranges, is the recommended form.  In other cases
-`tt([:)var(name)tt(:])' forms are allowed.  If the two forms on the left
-and right are the same, the characters must match exactly.  In remaining
-cases, the corresponding tests are applied to both characters, but they
-are not otherwise constrained; any matching character in one set goes
-with any matching character in the other set:  this is equivalent to the
-behaviour of ordinary character classes.
+arbitrary alphabets; until then it is safer to use the older syntax
+that only handles ASCII characters, `tt(m:{a-z}=3D{A-Z}) as this does
+not have side effects in the case of multibyte characters.
+
+In other cases `tt([:)var(name)tt(:])' forms are allowed.  If the two forms
+on the left and right are the same, the characters must match exactly.  In
+remaining cases, the corresponding tests are applied to both characters,
+but they are not otherwise constrained; any matching character in one set
+goes with any matching character in the other set:  this is equivalent to
+the behaviour of ordinary character classes.
=20
 The pattern var(tpat) may also be one or two stars, `tt(*)' or
 `tt(**)'. This means that the pattern on the command line can match


--=20
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070

