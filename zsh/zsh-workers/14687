From zsh-workers-return-14687-mason-zsh=primenet.com.au@sunsite.dk Sat Jun 02 17:48:36 2001
Return-Path: <zsh-workers-return-14687-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2881 invoked from network); 2 Jun 2001 17:48:33 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 2 Jun 2001 17:48:33 -0000
Received: (qmail 11626 invoked by alias); 2 Jun 2001 17:48:16 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 14687
Received: (qmail 11599 invoked from network); 2 Jun 2001 17:48:15 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer goliath.siemens.de)
Date: Sat, 2 Jun 2001 21:48:17 +0400 (MSD)
From: Andrej Borsenkow <Andrej.Borsenkow@mow.siemens.ru>
X-X-Sender:  <bor@itsrm2.mow.siemens.ru>
To: <zsh-workers@sunsite.dk>
Subject: Re: PATCH: "make check" with libzsh (e.g. FreeBSD)
In-Reply-To: <1010602154909.ZM11443@candle.brasslantern.com>
Message-ID: <Pine.SV4.4.33.0106022143160.27900-100000@itsrm2.mow.siemens.ru>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

On Sat, 2 Jun 2001, Bart Schaefer wrote:

> In zsh-workers/14451, Andrej wrote:
> }
> } On Wed, 23 May 2001, Oliver Kiddle wrote:
> }
> } > x86 FreeBSD 4.2-stable
> } >
> } > make check yields several
> } > /usr/libexec/ld-elf.so.1: Shared object "libzsh-4.0.1-pre-5.so" not found
> } >
> } > It seems that make check uses a `make install.modules' but libzsh is
> } > installed as part of `make install.bin'. We need to fix this but I'm not
> } > sure I fully understand this part of the Makefiles. Isn't this an issue
> } > for cygwin?
> } >
> }
> } No, it was there long before. I suspect, that tests were never run on a
> } system that needed libzsh (or already installed version was silently
> } used).
> }
> } Exactly on Cygwin it runs correctly, because it tries first to find DLL in
> } the same directory as executable.
>
> Does this patch fix it?  Unfortunately $(DLLD) is the only reasonable
> symbol to test that is available in Test/Makefile; $(LIBZSH) is defined in
> Src/Makefile.in only.  So this may needlessly export LD_LIBRARY_PATH on a
> system that does not require libzsh, but that should be harmless, right?
>

It is harmless all right. The actual problem is interaction between
LD_RUN_PATH encoded in executable and LD_LIBRARY_PATH. I.e. when two
libraries exist, which one is used. It may result in obscure test
failures.

The only proper workaround is to recompile zsh with different LD_RUN_PATH
value. Or use libtool - I guess, it is quite usable now. If it supports
Cygwin (there were issues) then it supports at least the same systems as
zsh internal tweaks.

-andrej

