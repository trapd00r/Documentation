From zsh-workers-return-5693-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Mar 09 08:03:30 1999
Return-Path: <zsh-workers-return-5693-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 14172 invoked from network); 9 Mar 1999 08:03:29 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 9 Mar 1999 08:03:29 -0000
Received: (qmail 21853 invoked by alias); 9 Mar 1999 08:02:59 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 5693
Received: (qmail 21846 invoked from network); 9 Mar 1999 08:02:58 -0000
Date: Tue, 9 Mar 1999 09:02:08 +0100 (MET)
Message-Id: <199903090802.JAA12276@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: Peter Stephenson's message of Mon, 08 Mar 1999 18:54:05 +0100
Subject: Re: Completion TODO (was: pws-11)


Peter Stephenson wrote:

> Sven Wischnowsky wrote:
> > The current state: condition codes, some of them modifying. Saving and 
> > restoring of the special parameters is done automatically on function
> > entry and exit (and nowhere else).
> > The problems are: modifying condition codes are considered a bad thing 
> > and saving/restoring has to be done explicitly.
> 
> I haven't followed what's wrong with having the parameters restored
> automatically unless compstate[restore] is altered.

I was alluding to the restoring inside a function when one has
multiple tests.

> If the modification of the parameters is simply to be removed from [[-style
> tests, then I still think a builtin is the best way of handling it.
> `compset -i 3' ignores three more characters from $PREFIX, or
> whatever.  This could allow tests with side effects, like `compset -I
> <pattern>' to ignore a pattern at the head of $PREFIX if it matches,
> or whatever.  Then you also could have e.g. `compset -n 2 -1', narrow
> to words 2 to -1 (same as shifting words and decrementing CURRENT),
> `compset -N "start_pat" "optional_end_pat"', narrow to the range of
> words between the patterns with the end pattern optional.  If it's
> much more complicated than that, I can't imagine I would use it much.

I had forgotten to include this in the list of suggestions (although,
I think, it was the first suggestion ever made).
The builtin should have a return value usable for `if compset ...; then'
as a `side effect', right?

> I'm not really enthusiastic about more subscripting hieroglyphics.

;-)

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

