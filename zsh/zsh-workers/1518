From maeder@artemis.com Wed Jul  3 14:19:27 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by melb.werple.net.au (8.7.5/8.7.3/2) with ESMTP id OAA23683 for <mason@werple.mira.net.au>; Wed, 3 Jul 1996 14:19:21 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id AAA07129; Wed, 3 Jul 1996 00:08:57 -0400 (EDT)
Resent-Date: Wed, 3 Jul 1996 00:08:57 -0400 (EDT)
Message-Id: <199607030408.VAA04130@hotlix.artemis.com>
To: zsh-workers@math.gatech.edu
Subject: zsh-3.0-pre1 bug: chpwd cause BUG message after cd
Date: Tue, 02 Jul 1996 21:08:09 -0700
From: Herb Maeder <maeder@artemis.com>
Resent-Message-ID: <"Vk-3g3.0.Gl1.O9Vsn"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/1518
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu
Content-Length: 9014
Status: OR

It seems that zsh-3.0-pre1 issues a "BUG: permanent allocation in doshfunc"
error message after issuing a cd when the "chpwd()" function is set.  It
doesn't seem to matter what it gets set to.

	% /usr/local/bin/zsh -f
	% echo $ZSH_VERSION
	3.0-pre1
	% cd /tmp
	% chpwd() { true; }
	% cd /tmp
	BUG: permanent allocation in doshfunc

I don't know when this started happening, but it did not happen on
zsh-2.6beta10.  I've included the output of reporter below.

Please respond to me directly as I am not on the zsh-workers alias.

Thanks,
Herb.
--
Herb Maeder
maeder@artemis.com


------------------------------ reporter output ------------------------------

% . /usr/local/src/zsh/zsh-3.0-pre1/Util/reporter 
# START zsh saveset
# uname:  SunOS hotlix.artemis.com 5.5 Generic sun4u sparc SUNW,Ultra-1

# Aliases.

alias run-help=man
alias which-command=whence

# Key bindings.

bindkey -r "^@"
bindkey -r "^A"
bindkey -r "^B"
bindkey -r "^C"
bindkey -r "^D"
bindkey -r "^E"
bindkey -r "^F"
bindkey -r "^G"
bindkey -r "^H"
bindkey -r "^I"
bindkey -r "^J"
bindkey -r "^K"
bindkey -r "^L"
bindkey -r "^M"
bindkey -r "^N"
bindkey -r "^O"
bindkey -r "^P"
bindkey -r "^Q"
bindkey -r "^R"
bindkey -r "^S"
bindkey -r "^T"
bindkey -r "^U"
bindkey -r "^V"
bindkey -r "^W"
bindkey -r "^X"
bindkey -r "^Y"
bindkey -r "^Z"
bindkey -r "\e"
bindkey -r "^_"
bindkey -r "^?"
bindkey -r "^X^B"
bindkey -r "^X^F"
bindkey -r "^X^J"
bindkey -r "^X^K"
bindkey -r "^X^N"
bindkey -r "^X^O"
bindkey -r "^X^U"
bindkey -r "^X^V"
bindkey -r "^X^X"
bindkey -r "^X*"
bindkey -r "^XG"
bindkey -r "^Xg"
bindkey -r "^Xr"
bindkey -r "^Xs"
bindkey -r "^Xu"
bindkey -r "\e^D"
bindkey -r "\e^G"
bindkey -r "\e^H"
bindkey -r "\e^I"
bindkey -r "\e^J"
bindkey -r "\e^L"
bindkey -r "\e^M"
bindkey -r "\e^_"
bindkey -r "\e "
bindkey -r "\e!"
bindkey -r "\e\\""
bindkey -r "\e$"
bindkey -r "\e'"
bindkey -r "\e-"
bindkey -r "\e."
bindkey -r "\e0"
bindkey -r "\e1"
bindkey -r "\e2"
bindkey -r "\e3"
bindkey -r "\e4"
bindkey -r "\e5"
bindkey -r "\e6"
bindkey -r "\e7"
bindkey -r "\e8"
bindkey -r "\e9"
bindkey -r "\e<"
bindkey -r "\e>"
bindkey -r "\e?"
bindkey -r "\eA"
bindkey -r "\eB"
bindkey -r "\eC"
bindkey -r "\eD"
bindkey -r "\eF"
bindkey -r "\eG"
bindkey -r "\eH"
bindkey -r "\eL"
bindkey -r "\eN"
bindkey -r "\eP"
bindkey -r "\eQ"
bindkey -r "\eS"
bindkey -r "\eT"
bindkey -r "\eU"
bindkey -r "\eW"
bindkey -r "\e[A"
bindkey -r "\e[B"
bindkey -r "\e[C"
bindkey -r "\e[D"
bindkey -r "\e_"
bindkey -r "\ea"
bindkey -r "\eb"
bindkey -r "\ec"
bindkey -r "\ed"
bindkey -r "\ef"
bindkey -r "\eg"
bindkey -r "\eh"
bindkey -r "\el"
bindkey -r "\en"
bindkey -r "\ep"
bindkey -r "\eq"
bindkey -r "\es"
bindkey -r "\et"
bindkey -r "\eu"
bindkey -r "\ew"
bindkey -r "\ex"
bindkey -r "\ey"
bindkey -r "\ez"
bindkey -r "\e|"
bindkey -r "\e^?"

bindkey "^@"    set-mark-command
bindkey "^A"    beginning-of-line
bindkey "^B"    backward-char
bindkey "^C"    undefined-key
bindkey "^D"    delete-char-or-list
bindkey "^E"    end-of-line
bindkey "^F"    forward-char
bindkey "^G"    send-break
bindkey "^H"    backward-delete-char
bindkey "^I"    expand-or-complete
bindkey "^J"    accept-line
bindkey "^K"    kill-line
bindkey "^L"    clear-screen
bindkey "^M"    accept-line
bindkey "^N"    down-line-or-history
bindkey "^O"    accept-line-and-down-history
bindkey "^P"    up-line-or-history
bindkey "^Q"    push-line
bindkey "^R"    history-incremental-search-backward
bindkey "^S"    history-incremental-search-forward
bindkey "^T"    transpose-chars
bindkey "^U"    kill-whole-line
bindkey "^V"    quoted-insert
bindkey "^W"    backward-kill-word
bindkey "^X"    prefix
bindkey "^Y"    yank
bindkey "^Z"    undefined-key
bindkey "\e"    prefix
bindkey "^_"    undo
bindkey "^?"    backward-delete-char
bindkey "^X^B"  vi-match-bracket
bindkey "^X^F"  vi-find-next-char
bindkey "^X^J"  vi-join
bindkey "^X^K"  kill-buffer
bindkey "^X^N"  infer-next-history
bindkey "^X^O"  overwrite-mode
bindkey "^X^U"  undo
bindkey "^X^V"  vi-cmd-mode
bindkey "^X^X"  exchange-point-and-mark
bindkey "^X*"   expand-word
bindkey "^XG"   list-expand
bindkey "^Xg"   list-expand
bindkey "^Xr"   history-incremental-search-backward
bindkey "^Xs"   history-incremental-search-forward
bindkey "^Xu"   undo
bindkey "\e^D"  list-choices
bindkey "\e^G"  send-break
bindkey "\e^H"  backward-kill-word
bindkey "\e^I"  self-insert-unmeta
bindkey "\e^J"  self-insert-unmeta
bindkey "\e^L"  clear-screen
bindkey "\e^M"  self-insert-unmeta
bindkey "\e^_"  copy-prev-word
bindkey "\e "   expand-history
bindkey "\e!"   expand-history
bindkey "\e\\"" quote-region
bindkey "\e$"   spell-word
bindkey "\e'"   quote-line
bindkey "\e-"   neg-argument
bindkey "\e."   insert-last-word
bindkey "\e0"   digit-argument
bindkey "\e1"   digit-argument
bindkey "\e2"   digit-argument
bindkey "\e3"   digit-argument
bindkey "\e4"   digit-argument
bindkey "\e5"   digit-argument
bindkey "\e6"   digit-argument
bindkey "\e7"   digit-argument
bindkey "\e8"   digit-argument
bindkey "\e9"   digit-argument
bindkey "\e<"   beginning-of-buffer-or-history
bindkey "\e>"   end-of-buffer-or-history
bindkey "\e?"   which-command
bindkey "\eA"   accept-and-hold
bindkey "\eB"   backward-word
bindkey "\eC"   capitalize-word
bindkey "\eD"   kill-word
bindkey "\eF"   forward-word
bindkey "\eG"   get-line
bindkey "\eH"   run-help
bindkey "\eL"   down-case-word
bindkey "\eN"   history-search-forward
bindkey "\eP"   history-search-backward
bindkey "\eQ"   push-line
bindkey "\eS"   spell-word
bindkey "\eT"   transpose-words
bindkey "\eU"   up-case-word
bindkey "\eW"   copy-region-as-kill
bindkey "\e[A"  up-line-or-history
bindkey "\e[B"  down-line-or-history
bindkey "\e[C"  forward-char
bindkey "\e[D"  backward-char
bindkey "\e_"   insert-last-word
bindkey "\ea"   accept-and-hold
bindkey "\eb"   backward-word
bindkey "\ec"   capitalize-word
bindkey "\ed"   kill-word
bindkey "\ef"   forward-word
bindkey "\eg"   get-line
bindkey "\eh"   run-help
bindkey "\el"   down-case-word
bindkey "\en"   history-search-forward
bindkey "\ep"   history-search-backward
bindkey "\eq"   push-line
bindkey "\es"   spell-word
bindkey "\et"   transpose-words
bindkey "\eu"   up-case-word
bindkey "\ew"   copy-region-as-kill
bindkey "\ex"   execute-named-cmd
bindkey "\ey"   yank-pop
bindkey "\ez"   execute-last-named-cmd
bindkey "\e|"   vi-goto-column
bindkey "\e^?"  backward-kill-word

# Completions.

compctl -b bindkey
compctl -c builtin
compctl -v export
compctl -o setopt
compctl -v typeset
compctl -v unset
compctl -o unsetopt
compctl -v vared
compctl -c which
compctl -C -c
compctl -D -f
compctl -T

# Undefined functions.


# Defined functions.

chpwd () {
        true
}

# Limits.

limit datasize        2047MB
limit stacksize       8MB
limit descriptors     64

# Non-array variables.

TERMCAP=''
TERM='xterm'
\'!\'="0"
\'#\'="0"
\'$\'="3905"
\'?\'="1"
ARGC="0"
AWK="nawk"
BAUD="9600"
CDPATH="\'\'"
COLUMNS="80"
CPP="/usr/ccs/lib/cpp"
DIRSTACKSIZE="-1"
EGID="500"
ERRNO="0"
EUID="500"
FCEDIT="vi"
FIGNORE="\'\'"
FPATH="\'\'"
GID="500"
HISTCHARS="\'!^#\'"
HISTSIZE="30"
HOME="/usr/esw/root/lsf"
HOST="hotlix.artemis.com"
HZ="100"
KEYTIMEOUT="40"
LANG="\'\'"
LINENO="329"
LINES="61"
LISTMAX="100"
LOGCHECK="60"
LOGNAME="lsf"
MACHTYPE="sparc"
MAIL="/var/mail/lsf"
MAILCHECK="60"
MAILPATH="\'\'"
MANPATH="\'\'"
NULLCMD="cat"
OLDPWD="/tmp"
OPTARG="\'\'"
OPTIND="1"
OSTYPE="solaris2.5"
PATH="/usr/bin:."
PERIOD="0"
POSTEDIT="\'\'"
PPID="3894"
PROMPT="\'%m%# \'"
PROMPT2="\'> \'"
PROMPT3="\'?# \'"
PROMPT4="\'+ \'"
PS1="\'%m%# \'"
PS2="\'> \'"
PS3="\'?# \'"
PS4="\'+ \'"
PSVAR="\'\'"
PWD="/tmp"
RANDOM="28183"
READNULLCMD="more"
REPORTTIME="-1"
RPROMPT="\'\'"
RPS1="\'\'"
SAVEHIST="0"
SECONDS="54"
SHELL="/bin/zsh"
SHLVL="2"
SPROMPT="\'zsh: correct \'\\'\'%R\'\\'\' to \'\\'\'%r\'\\'\' [nyae]? \'"
TIMEFMT="\'%J  %U user %S system %P cpu %*E total\'"
TMOUT="0"
TMPPREFIX="/tmp/zsh"
TTY="/dev/pts/6"
TTYIDLE="-1"
TZ="US/Pacific"
UID="500"
USERNAME="lsf"
VENDOR="sun"
WATCH="\'\'"
WATCHFMT="\'%n has %a %l from %m.\'"
WORDCHARS="\'*?_-.[]~=/&;!#$%^(){}<>\'"
ZSH_NAME="zsh"
ZSH_VERSION="3.0-pre1"
each="\'unix"
histchars="\'!^#\'"
reporter_OSVersion="SunOS_5.5"
reporter_junkiequotes="no"
status="1"
str="\'SunOS hotlix.artemis.com 5.5 Generic sun4u sparc SUNW,Ultra-1\'"
prompt='test%'

# Array variables.

argv=()
'*'=()
cdpath=()
fignore=()
fpath=()
mailpath=()
manpath=()
path=(/usr/bin .)
psvar=()
signals=(EXIT HUP INT QUIT ILL TRAP IOT EMT FPE KILL BUS SEGV SYS PIPE ALRM TERM USR1 USR2 CLD PWR WINCH URG POLL STOP TSTP CONT TTIN TTOU VTALRM PROF XCPU XFSZ WAITING LWP FREEZE THAW CANCEL RTMIN 38 39 40 41 42 43 RTMAX ZERR DEBUG)
watch=()

# Exported variables.

export TERMCAP
export TERM
export HOME=/usr/esw/root/lsf
export HZ=100
export LOGNAME=lsf
export MAIL=/var/mail/lsf
export PATH=/usr/bin:.
export PWD=/tmp
export SHELL=/bin/zsh
export SHLVL=2
export TERM=xterm
export TZ=US/Pacific

# Setopt.

setopt bgnice
setopt hashcmds
setopt hashdirs
setopt hashlistall
setopt norcs
setopt notify

# END zsh saveset


