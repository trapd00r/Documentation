From zsh-workers-return-21570-mason-zsh=primenet.com.au@sunsite.dk Mon Aug 08 08:40:38 2005
Return-Path: <zsh-workers-return-21570-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16234 invoked from network); 8 Aug 2005 08:40:33 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 8 Aug 2005 08:40:33 -0000
Received: (qmail 93259 invoked from network); 8 Aug 2005 08:40:27 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 8 Aug 2005 08:40:27 -0000
Received: (qmail 9845 invoked by alias); 8 Aug 2005 08:40:24 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 21570
Received: (qmail 9835 invoked from network); 8 Aug 2005 08:40:23 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 8 Aug 2005 08:40:23 -0000
Received: (qmail 92956 invoked from network); 8 Aug 2005 08:40:23 -0000
Received: from cluster-e.mailcontrol.com (HELO rly07e.srv.mailcontrol.com) (217.79.216.190)
  by a.mx.sunsite.dk with SMTP; 8 Aug 2005 08:40:16 -0000
Received: from iris.logica.co.uk (iris.logica.co.uk [158.234.9.163])
	by rly07e.srv.mailcontrol.com (MailControl) with ESMTP id j788e85G019577;
	Mon, 8 Aug 2005 09:40:09 +0100
Received: from trentino.logica.co.uk ([158.234.142.59])
	by iris.logica.co.uk (8.12.3/8.12.3/Debian -4) with ESMTP id j788e8Tp024885;
	Mon, 8 Aug 2005 09:40:08 +0100
Received: from trentino.groupinfra.com (localhost [127.0.0.1])
	by trentino.logica.co.uk (Postfix) with ESMTP id 161087E52F;
	Mon,  8 Aug 2005 10:40:08 +0200 (CEST)
Cc: zsh-workers@sunsite.dk
X-VirusChecked: Checked
X-StarScan-Version: 5.0.7; banners=.,-,-
In-reply-to: <20050808020353.GG16693@ay.vinc17.org> 
From: Oliver Kiddle <okiddle@yahoo.co.uk>
References: <20050804071923.GB10096@lespaul.et.put.poznan.pl> <20050808020353.GG16693@ay.vinc17.org>
To: Vincent Lefevre <vincent@vinc17.org>
Subject: Re: SVN completion problem 
Date: Mon, 08 Aug 2005 10:40:08 +0200
Message-ID: <3488.1123490408@trentino.groupinfra.com>
X-Scanned-By: MailControl A-05-01-05 (www.mailcontrol.com)
X-Spam-Checker-Version: SpamAssassin 3.0.4 (2005-06-05) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00 autolearn=ham 
	version=3.0.4

Vincent Lefevre wrote:
> 
> BTW, "svn help s<TAB>" doesn't work: it doesn't try to complete to
> anything.

I think there's a few sub commands that could be better handled. The
patch below handles help for svn and svnadmin. I also fixed a bug where
it wasn't picking up svnadmin subcommands that had a `-' in their name.

Patch is big because I rearranged things a bit. sub command completion
wasn't factored out especially helpfully.

Oliver

Index: Completion/Unix/Command/_subversion
===================================================================
RCS file: /cvsroot/zsh/zsh/Completion/Unix/Command/_subversion,v
retrieving revision 1.13
diff -u -r1.13 _subversion
--- Completion/Unix/Command/_subversion	14 Jun 2005 15:16:47 -0000	1.13
+++ Completion/Unix/Command/_subversion	8 Aug 2005 08:34:14 -0000
@@ -1,19 +1,139 @@
 #compdef svn svnadmin svnadmin-static=svnadmin
 
 _svn () {
+  local curcontext="$curcontext" state line expl ret=1
 
-  _arguments -s \
+  _arguments -C \
     '(-)--help[print help information]' \
     '(- *)--version[print client version information]' \
-    '*::svn command:_svn_command'
+    '1: :->cmds' \
+    '*:: :->args' && ret=0
+
+  if [[ -n $state ]] && (( ! $+_svn_cmds )); then
+    typeset -gHA _svn_cmds
+    _svn_cmds=(
+      ${=${(f)${${"$(LC_MESSAGES=C _call_program commands svn help)"#l#*Available subcommands:}%%Subversion is a tool*}}/(#s)[[:space:]]#(#b)([a-z]##)[[:space:]]#(\([a-z, ?]##\))#/$match[1] :$match[1]${match[2]:+:${${match[2]//[(),]}// /:}}:}
+    )
+  fi
+
+  case $state in
+    cmds)
+      _wanted commands expl 'svn command' _svn_commands && ret=0
+    ;;
+    args)
+      local cmd args usage
+      typeset -gHA _cache_svn_status
+
+      cmd="${${(k)_svn_cmds[(R)*:$words[1]:*]}:-${(k)_svn_cmds[(i):$words[1]:]}}"
+      if (( $#cmd )); then
+        curcontext="${curcontext%:*:*}:svn-${cmd}:"
+
+        usage=${${(M)${(f)"$(LC_MESSAGES=C _call_program options svn help $cmd)"}:#usage:*}#usage: $cmd] }
+        args=(
+          ${=${${${(M)${(f)"$(LC_MESSAGES=C _call_program options svn help $cmd)"##*Valid options:}:#* :*}%% #:*}/ arg/:arg:}/(#b)-([[:alpha:]]) \[--([a-z-]##)\](:arg:)#/(--$match[2])-$match[1]$match[3] (-$match[1])--$match[2]$match[3]}
+        )
+
+        case $cmd in;
+          add)
+            args+=(
+              '*:file:_files -g "*(^e:_svn_controlled:)"'
+            )
+          ;;
+          commit)
+            args-+=(
+              '*:file:_files -g "*(e:_svn_status:)"'
+            )
+          ;;
+          delete)
+            args+=(
+              '*:file:_files -g ".svn(/e:_svn_deletedfiles:)"'
+            )
+          ;;
+          help)
+            args+=(
+              '*::sub command:_svn_commands'
+            )
+          ;;
+          log)
+            args+=(
+              '1: : _alternative "files:file:_files -g \*\(e:_svn_controlled:\)" "urls:URL:_svn_urls"'
+	      '*:file:_files -g "*(e:_svn_controlled:)"'
+            )
+          ;;
+          revert)
+            args+=(
+              '*:file:_files -g "(.svn|*)(/e:_svn_deletedfiles:,e:_svn_status:)"'
+            )
+          ;;
+          *)
+            case $_svn_subcmd_usage in
+              *(SRC|DST|TARGET|URL*PATH)*)
+                args+=(
+	          '*: : _alternative "files:file:_files" "urls:URL:_svn_urls"'
+	        )
+	      ;;
+              *URL*) args+=( ':URL:_svn_urls' ) ;;
+              *PATH*) args+=( '*:file:_files' ) ;;
+            esac
+          ;;
+        esac
+
+        _arguments "$args[@]" && ret=0
+
+      else
+        _message "unknown svn command: $words[1]"
+      fi
+    ;;
+  esac
+
+  return ret
 }
 
 _svnadmin () {
+  local curcontext="$curcontext" state line ret=1
 
-  _arguments -s \
+  _arguments -C \
     '(-)--help[print help information]' \
     '(- *)--version[print client version information]' \
-    '*::svnadmin command:_svnadmin_command'
+    '1: :->cmds' \
+    '*:: :->args' && ret=0
+
+  if [[ -n $state ]] && (( ! $+_svnadmin_cmds )); then
+    typeset -gHA _svnadmin_cmds
+    _svnadmin_cmds=(
+      ${=${(f)${${"$(LC_MESSAGES=C _call_program commands svnadmin help)"#l#*Available subcommands:}}}/(#s)[[:space:]]#(#b)([-a-z]##)[[:space:]]#(\([a-z, ?]##\))#/$match[1] :$match[1]${match[2]:+:${${match[2]//[(),]}// /:}}:}
+    )
+  fi
+
+  case $state in
+    cmds)
+      _wanted commands expl 'svnadmin command' _svnadmin_commands && ret=0
+    ;;
+    args)
+      local cmd args usage
+
+      cmd="${${(k)_svnadmin_cmds[(R)*:$words[1]:*]}:-${(k)_svnadmin_cmds[(i):$words[1]:]}}"
+      if (( $#cmd )); then
+        curcontext="${curcontext%:*:*}:svnadmin-${cmd}:"
+
+        usage=${${(M)${(f)"$(LC_MESSAGES=C _call_program options svnadmin help $cmd)"}:#$cmd: usage:*}#$cmd: usage: svnadmin $cmd }
+        args=(
+          ${=${${${(M)${(f)"$(LC_MESSAGES=C _call_program options svnadmin help $cmd)"##*Valid options:}:#*:*}%% #:*}/ arg/:arg:}/(#b)-([[:alpha:]]) \[--([a-z-]##)\](:arg:)#/(--$match[2])-$match[1]$match[3] (-$match[1])--$match[2]$match[3]}
+        )
+        if [[ $_svnadmin_subcmd_usage == *REPOS_PATH* ]]; then
+          args+=( ":path:_files -/" )
+        elif [[ $cmd = help ]]; then
+          args+=( "*:subcommand:_svnadmin_commands" )
+        fi
+
+        _arguments "$args[@]" && ret=0
+      else
+        _message "unknown svnadmin command: $words[1]"
+      fi
+    ;;
+  esac
+
+  return ret
 }
 
 (( $+functions[_svn_controlled] )) ||
@@ -23,7 +143,7 @@
 
 (( $+functions[_svn_deletedfiles] )) ||
 _svn_deletedfiles() {
-  # Typical usage would be _files -g '.svn(/e:_svn_deletedfiles:)' 
+  # Typical usage would be _files -g '.svn(/e:_svn_deletedfiles:)'
   local cont controlled
   reply=( )
   [[ $REPLY = (*/|).svn ]] || return
@@ -54,139 +174,20 @@
   else
     compset -S '[^:]*'
     _wanted url-schemas expl 'URL schema' compadd -S '' - \
-        file:// http:// https:// svn:// svn+ssh:// 
-  fi    
-}
-
-(( $+functions[_svn_command] )) ||
-_svn_command () {
-  local cmd
-
-  if (( ! $+_svn_cmds )); then
-    typeset -gHA _svn_cmds
-    _svn_cmds=(
-      ${=${(f)${${"$(LC_MESSAGES=C _call_program commands svn help)"#l#*Available subcommands:}%%Subversion is a tool*}}/(#s)[[:space:]]#(#b)([a-z]##)[[:space:]]#(\([a-z, ?]##\))#/$match[1] :$match[1]${match[2]:+:${${match[2]//[(),]}// /:}}:}
-    )
-  fi
-
-  if (( CURRENT == 1 )); then
-    _tags commands && { compadd "$@" -k _svn_cmds || compadd "$@" ${(s.:.)_svn_cmds} }
-  else
-    local curcontext="$curcontext"
-
-    cmd="${${(k)_svn_cmds[(R)*:$words[1]:*]}:-${(k)_svn_cmds[(i):$words[1]:]}}"
-    if (( $#cmd )); then
-      curcontext="${curcontext%:*:*}:svn-${cmd}:"
-      _svn_subcommand $cmd
-    else
-      _message "unknown svn command: $words[1]"
-    fi
+        file:// http:// https:// svn:// svn+ssh://
   fi
 }
 
-(( $+functions[_svn_subcommand] )) ||
-_svn_subcommand () {
-  local subcmd _svn_subcmds _svn_subcmd_usage
-  typeset -gHA _cache_svn_status
-
-  _svn_subcmd_usage=${${(M)${(f)"$(LC_MESSAGES=C _call_program options svn help $1)"}:#usage:*}#usage: $1 }
-
-  _svn_subcmds=(
-    ${=${${${(M)${(f)"$(LC_MESSAGES=C _call_program options svn help $1)"##*Valid options:}:#* :*}%% #:*}/ arg/:arg:}/(#b)-([[:alpha:]]) \[--([a-z-]##)\](:arg:)#/(--$match[2])-$match[1]$match[3] (-$match[1])--$match[2]$match[3]}
-  )
-
-  case $1 in;
-    add)
-      _svn_subcmds+=(
-        '*:file:_files -g "*(^e:_svn_controlled:)"'
-      )
-    ;;
-    commit)
-      _svn_subcmds+=(
-        '*:file:_files -g "*(e:_svn_status:)"'
-      )
-    ;;
-    delete)
-      _svn_subcmds+=(
-        '*:file:_files -g ".svn(/e:_svn_deletedfiles:)"'
-      )
-    ;;
-    log)
-      _svn_subcmds+=(
-        '1: : _alternative "files:file:_files -g \*\(e:_svn_controlled:\)" "urls:URL:_svn_urls"'
-	'*:file:_files -g "*(e:_svn_controlled:)"'
-      )
-    ;;
-    revert)
-      _svn_subcmds+=(
-        '*:file:_files -g "(.svn|*)(/e:_svn_deletedfiles:,e:_svn_status:)"'
-      )
-    ;;
-    *)
-      case $_svn_subcmd_usage in
-        *(SRC|DST|TARGET|URL*PATH)*)
-          _svn_subcmds+=( 
-	    '*: : _alternative "files:file:_files" "urls:URL:_svn_urls"'
-	  )
-	;;
-        *URL*) _svn_subcmds+=( ':URL:_svn_urls' ) ;;
-        *PATH*) _svn_subcmds+=( '*:file:_files' ) ;;
-      esac
-    ;;
-  esac
-
-  _arguments "$_svn_subcmds[@]" && ret=0
-
-  return ret
+(( $+functions[_svn_commands] )) ||
+_svn_commands() {
+  compadd "$@" -k _svn_cmds || compadd "$@" ${(s.:.)_svn_cmds}
 }
 
-
 (( $+functions[_svnadmin_command] )) ||
-_svnadmin_command () {
-  local cmd
-
-  if (( ! $+_svnadmin_cmds )); then
-    typeset -gHA _svnadmin_cmds
-    _svnadmin_cmds=(
-      ${=${(f)${${"$(LC_MESSAGES=C _call_program commands svnadmin help)"#l#*Available subcommands:}}}/(#s)[[:space:]]#(#b)([a-z]##)[[:space:]]#(\([a-z, ?]##\))#/$match[1] :$match[1]${match[2]:+:${${match[2]//[(),]}// /:}}:}
-    )
-  fi
-
-  if (( CURRENT == 1 )); then
-    _tags commands && { compadd "$@" -k _svnadmin_cmds || compadd "$@" ${(s.:.)_svnadmin_cmds}  }
-  else
-    local curcontext="$curcontext"
-
-    cmd="${${(k)_svnadmin_cmds[(R)*:$words[1]:*]}:-${(k)_svnadmin_cmds[(i):$words[1]:]}}"
-    if (( $#cmd )); then
-      curcontext="${curcontext%:*:*}:svnadmin-${cmd}:"
-      _svnadmin_subcommand $cmd
-    else
-      _message "unknown svnadmin command: $words[1]"
-    fi
-  fi
+_svnadmin_commands() {
+  compadd "$@" -k _svnadmin_cmds || compadd "$@" ${(s.:.)_svnadmin_cmds}
 }
 
-(( $+functions[_svnadmin_subcommand] )) ||
-_svnadmin_subcommand () {
-  local subcmd _svnadmin_subcmds _svnadmin_subcmd_usage
-
-  _svnadmin_subcmd_usage=${${(M)${(f)"$(LC_MESSAGES=C _call_program options svnadmin help $1)"}:#$1: usage:*}#$1: usage: svnadmin $1 }
-
-  _svnadmin_subcmds=(
-    ${=${${${(M)${(f)"$(LC_MESSAGES=C _call_program options svnadmin help $1)"##*Valid options:}:#*:*}%% #:*}/ arg/:arg:}/(#b)-([[:alpha:]]) \[--([a-z-]##)\](:arg:)#/(--$match[2])-$match[1]$match[3] (-$match[1])--$match[2]$match[3]}
-  )
-
-  [[ "$_svnadmin_subcmd_usage" == *REPOS_PATH* ]] &&
-  _svnadmin_subcmds=($_svnadmin_subcmds ":path:_files -/")
-
-  _arguments "$_svnadmin_subcmds[@]" && ret=0
-
-  return ret
-
-}
-
-
 _subversion () {
   case $service in
     (svn) _svn "$@" ;;


This e-mail and any attachment is for authorised use by the intended recipient(s) only. It may contain proprietary material, confidential information and/or be subject to legal privilege. It should not be copied, disclosed to, retained or used by, any other party. If you are not an intended recipient then please promptly delete this e-mail and any attachment and all copies and inform the sender. Thank you.

