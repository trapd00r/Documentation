From zsh-workers-request@euclid.skiles.gatech.edu  Tue Aug  6 01:15:51 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by coral.primenet.com.au (8.7.5/8.7.3) with ESMTP id BAA07206 for <mason@primenet.com.au>; Tue, 6 Aug 1996 01:15:49 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id LAA19512; Mon, 5 Aug 1996 11:09:13 -0400 (EDT)
Resent-Date: Mon, 5 Aug 1996 11:06:03 -0400 (EDT)
Message-Id: <199608051504.LAA15060@k2.ccs.neu.edu>
X-Authentication-Warning: k2.ccs.neu.edu: Host localhost.ccs.neu.edu didn't use HELO protocol
To: zsh-users@math.gatech.edu
Reply-To: "Justin Sheehy" <dworkin@ccs.neu.edu>
Subject: 'for' brokenness?
Date: Mon, 05 Aug 1996 11:04:54 -0400
From: Justin Sheehy <dworkin@k2.ccs.neu.edu>
Resent-Message-ID: <"YCsg72.0.tl4.RtW1o"@euclid>
Resent-From: zsh-users@math.gatech.edu
X-Mailing-List: <zsh-users@math.gatech.edu> archive/latest/343
X-Loop: zsh-users@math.gatech.edu
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

much strangeness here...

some uses of for are just exiting quietly, instead of the desired
behavior:

justin@caffeine:(~)% for i in *
justin@caffeine:(~)% 

shouldn't that give me a 2nd level prompt at which I can enter my
do..list..done commands? instead I see exactly what I pasted above. It
just exits w/o doing anything. most forms of 'for' are doing this, but
'foreach' is working. wtf!?

justin@caffeine:(~/foo)% for i [ in * ]
justin@caffeine:(~/foo)% for i in *
justin@caffeine:(~/foo)% for i ( * )   
justin@caffeine:(~/foo)% foreach i ( * )
> do
> echo $i
> done 
1
2
3
4
justin@caffeine:(~/foo)% 
justin@caffeine:(~/foo)% echo $VERSION 
zsh 2.5.0

any ideas?

-Justin

