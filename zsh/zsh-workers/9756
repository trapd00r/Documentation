From zsh-workers-return-9756-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Feb 16 06:47:59 2000
Return-Path: <zsh-workers-return-9756-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1076 invoked from network); 16 Feb 2000 06:47:56 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 16 Feb 2000 06:47:56 -0000
Received: (qmail 19478 invoked by alias); 16 Feb 2000 06:47:49 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 9756
Received: (qmail 19465 invoked from network); 16 Feb 2000 06:47:48 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1000216064743.ZM18361@candle.brasslantern.com>
Date: Wed, 16 Feb 2000 06:47:42 +0000
In-Reply-To: <38A9AECE.5B213E7@u.genie.co.uk>
Comments: In reply to Oliver Kiddle <opk@u.genie.co.uk>
        "Re: help with _match, globcomplete etc. (with a PATCH)" (Feb 15,  7:53pm)
References: <200002151608.RAA14415@beta.informatik.hu-berlin.de> 
	<38A9AECE.5B213E7@u.genie.co.uk>
X-Mailer: Z-Mail (5.0.0 30July97)
To: Zsh workers <zsh-workers@sunsite.auc.dk>
Subject: Re: help with _match, globcomplete etc. (with a PATCH)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Feb 15,  7:53pm, Oliver Kiddle wrote:
} Subject: Re: help with _match, globcomplete etc. (with a PATCH)
}
} zsh -f
} bindkey -me
} unsetopt glob
} typeset -A code
} code[ai]=foo
} echo $code[ai]/{a,<tab>

All I get from that is a beep, before Sven's 9749, and

zagzig% echo foo/\{a, 
                      ^note trailing space added
with 9749 applied.

Of course that seems wrong, too.  I didn't want the brace to be quoted.

What output do you see?

} The main limiting factor on my configuration is that I can't do
} parameter expansion, command substitution and arithmetic expansion
} independantly.

Hmm.  This would almost have to be done in C code; if you have more
than one of the three forms in the same "word", it'd get pretty messy
to dismantle it to expand only the appropriate substring(s).

} Also, I can't see a way of doing globbing, while preserving variable
} references.

This strikes me as nigh impossible in the general case.  What would you
expect to see if you invoked the "glob but preserve variables" expansion
in a case like:

	zsh% arr=('[sS]' Src/M ../)
	zsh% print -l ${~^arr}*

??  Or do I completely misunderstand what you're asking?

(I note that on that example expand-word produces a list of files but
the _expand completer (with substitute and glob styles set to 1) only
beeps, with or without 9752 applied.  Is that the right behavior?)

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

