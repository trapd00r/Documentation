From zsh-workers-request@math.gatech.edu  Sat Oct 28 09:12:29 1995
Received: from math.gatech.edu (euclid.skiles.gatech.edu [130.207.146.50]) by werple.net.au (8.7/8.7.1) with SMTP id JAA13094 for <mason@werple.mira.net.au>; Sat, 28 Oct 1995 09:12:26 +1000 (EST)
Received: by math.gatech.edu (5.x/SMI-SVR4)
	id AA10714; Fri, 27 Oct 1995 18:55:47 -0400
Resent-Date: Fri, 27 Oct 1995 18:53:01 -0400
Old-Return-Path: <coleman@math.gatech.edu>
Message-Id: <199510272253.SAA16687@redwood.skiles.gatech.edu>
X-Mailer: exmh version 1.6.4 10/10/95
To: zsh-workers@math.gatech.edu
Subject: Re: ZSH's future - POSIX 
In-Reply-To: Your message of "Fri, 27 Oct 1995 18:16:16 +1000."
             <199510270817.SAA13131@werple.net.au> 
Mime-Version: 1.0
Content-Type: text/plain
Date: Fri, 27 Oct 1995 18:53:01 -0400
From: Richard Coleman <coleman@math.gatech.edu>
Resent-Message-Id: <"DR3mq2.0.Kd2.oDMam"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/505
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

> > The code should conform to the IEEE POSIX 1003.1 standard and to
> > the proposed ANSI-C standard so that it should be portable to all
> > such
> 	
> I seem to remember there was a problem with some of the stat() and associated
> stuff.  Mainly because POSIX doesn't support all the S_I*() stuff used.
> There would need to be a large rewrite of one part of code to make it fully
> POSIX compatible.  One really big drawback with POSIX compatibility is its
> lack of support for things like symbolic-links, sockets, etc.

There are two notions of POSIX compatibility here.

The first is whether the code itself uses only POSIX features.  Zsh is
fairly good in this respect.  This was one of the reasons I rewrote the
signals code a while back.  But I don't think zsh would compile in a strict
POSIX environment.  Most of the problems would probably be because zsh
assumes the existentence of things not covered in the POSIX standard,
but available on most all unix machines (such as symbolic links).
This could probably be easily fixed if necessary, but I don't really
see the need for this.  If every vendor supports a feature, then it is
standard enough for me.  The goal after all is portability.

The second is whether zsh comforms to the POSIX standard concerning
shell syntax.  I believe this was what the ksh literature for ksh93
was referring to.  I believe ksh93 is supposed to be a conforming
superset of the POSIX shell standard.  I assume that zsh doesn't
conform to this standard.  It might be worth investigating what
parts of zsh don't conform.

rc





