From zsh-workers-return-7793-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Sep 13 09:06:56 1999
Return-Path: <zsh-workers-return-7793-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4033 invoked from network); 13 Sep 1999 09:06:54 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 13 Sep 1999 09:06:54 -0000
Received: (qmail 27467 invoked by alias); 13 Sep 1999 09:06:50 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 7793
Received: (qmail 27459 invoked from network); 13 Sep 1999 09:06:48 -0000
Date: Mon, 13 Sep 1999 11:06:42 +0200 (MET DST)
Message-Id: <199909130906.LAA05524@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
Subject: PATCH: ... and ispell


Maybe we could do more sophisticated things to find dictionaries one
day.

Bye
 Sven

diff -u -r oldcompletion/User/_ispell Completion/User/_ispell
--- oldcompletion/User/_ispell	Mon Sep 13 10:38:02 1999
+++ Completion/User/_ispell	Sat Sep 11 23:14:50 1999
@@ -0,0 +1,95 @@
+#compdef ispell buildhash munchlist findaffix tryaffix icombine ijoin
+
+case "$words[1]" in
+ispell)
+  _arguments -s \
+    '(-n)-t[input file is in TeX/LaTeX format]' \
+    '(-t)-n[input file is in nroff/troff format]' \
+    '(-x)-b[create backup file]' \
+    '(-b)-x[don'"'"'t create backup file]' \
+    '(-C)-B[report run-together words as errors]' \
+    '(-B)-C[take run-together words as compounds]' \
+    '-P[don'"'"'t generate extra root/affix combinations]' \
+    '-m[make possible root/affix combinations]' \
+    '-S[sort guesses by probable correctness]' \
+    '-d[specify alternate dictionary file]:dictionary file:_files' \
+    '-p[specify alternate personal dictionary file]:personal dictionary file:_files' \
+    '-w[specify additional word characters]:word characters:' \
+    '-W[specify length of legal words]:length of legal words:' \
+    '-T[specify formatter type]:formatter type:(nroff mm ms me man NeXT tex bib)' \
+    '(-N)-M[show menu]' \
+    '(-M)-N[don'"'"'t show menu]' \
+    '-L-[specify number of context lines to show]:number of context lines:' \
+    '-V[show non-7-bit characters escaped]' \
+    '-l[produce list of misspelled words on stdout]' \
+    '-s[stop after each line of input (SIGTSTP)]' \
+    '-f[specify output file name]:output file:_files' \
+    '(-A)-a[single line input/output mode]' \
+    '(-a)-A[single line input/output mode (with include-files)]' \
+    '(-e)-c[produce list of possible root words and affixes]' \
+    '(-c)-e-[expand affix flags]::expansion level:((1\:normal 2\:append\ prepend\ original\ root/affix\ combination 3\:output\ multiple\ lines 4\:append\ root\ length\ ratios))' \
+    '-D[dump affix tables]' \
+    '*-v[show version]' \
+    ':file to spell-check:_files'
+  ;;
+buildhash)
+  _arguments \
+    '(-c)-s[silent operation]' \
+    '(: -s)-c[count mode]:count: :affix file:_files -g \*.\(\#i\)aff' \
+    ':raw dictionary file:_files:' \
+    ':affix file:_files -g \*.\(\#i\)aff' \
+    ':hashed output file:_files \*.\(\#i\)hash'
+  ;;
+munchlist)
+  _arguments -s \
+    '-l[specify affix file]:affix file:_files -g \*.\(\#i\)aff' \
+    '-c[specify converted output file name]:converted file name:_files' \
+    '-T[specify string character type]:string character type:' \
+    '-s[specify strip hash file]:hash file:_files \*.\(\#i\)hash' \
+    '-D[debug mode]' \
+    '-v[verbose mode]' \
+    '-w[specify additional word characters]:word characters:' \
+    '*:dictionary file:_files'
+  ;;
+findaffix)
+  _arguments -s \
+    '(-s)-p[search possible prefixes]' \
+    '(-p)-s[search possible suffixes]' \
+    '-f[sort affixes by frequency]' \
+    '-c[clean output]' \
+    '-m[specify minimum affix length]:minimum affix length:' \
+    '-M[specify maximum affix length]:maximum affix length:' \
+    '-e[specify header/trailer length of suppressed affixes]:header/trailer length of suppressed affixes:' \
+    '-t[specify field separator character]:field separator character:' \
+    '-l[specify minimum occurrence count]:minimum occurrence count:' \
+    '*:dictionary file:_files'
+  ;;
+tryaffix)
+  _arguments -s \
+    '(-s)-p[estimate effectiveness of prefix]' \
+    '(-p)-s[estimate effectiveness of suffix]' \
+    '-c[write only summary of the results]' \
+    ':expanded dictionary file:_files:' \
+    '*:affix and optional addition:'
+  ;;
+icombine)
+  _arguments \
+    '-T[specify string character type]:string character type:' \
+    ':affix file:_files -g \*.\(\#i\)aff'
+  ;;
+ijoin)
+  _arguments -s \
+    '(-u)-s[use signed comparison]' \
+    '(-s)-u[use unsigned comparison]' \
+    '-a[print lines for unpairable lines and normal output]:file number:(1 2)' \
+    '-v[print lines for unpairable lines instead of normal output]:file number:(1 2)' \
+    '-e[specify replacement string]:replacement string:' \
+    '-o[specify output field list]:output field list:' \
+    '-t[specify field separator character]:field separator character:' \
+    '(-1 -2)-j-[specify join file and field]:file number:(1 2):field number:' \
+    '(-j)-1[specify join field]:field number:' \
+    '(-j)-2[specify join field]:field number:' \
+    ':first input file:_files' \
+    ':second input file:_files'
+  ;;
+esac

--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

