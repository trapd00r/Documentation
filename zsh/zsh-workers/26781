From zsh-workers-return-26781-mason-zsh=primenet.com.au@sunsite.dk Wed Mar 25 11:23:17 2009
Return-Path: <zsh-workers-return-26781-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 18450 invoked from network); 25 Mar 2009 11:23:13 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.0 required=5.0 tests=AWL,BAYES_00,HTML_MESSAGE,
	MISSING_HEADERS autolearn=no version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 25 Mar 2009 11:23:13 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 89851 invoked from network); 25 Mar 2009 11:23:08 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 25 Mar 2009 11:23:08 -0000
Received: (qmail 17501 invoked by alias); 25 Mar 2009 11:23:02 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 26781
Received: (qmail 17479 invoked from network); 25 Mar 2009 11:23:01 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 25 Mar 2009 11:23:01 -0000
Received: from novuscom.net (smtp.novuscom.net [216.19.176.3])
	by bifrost.dotsrc.org (Postfix) with ESMTP id E58EF80590EB
	for <zsh-workers@sunsite.dk>; Wed, 25 Mar 2009 12:22:56 +0100 (CET)
Received: (qmail 11086 invoked from network); 25 Mar 2009 11:22:55 -0000
Received: from 216-19-179-189.dyn.novuscom.net (HELO [192.168.0.101]) ([216.19.179.189])
          (envelope-sender <jstrait@moonloop.net>)
          by smtp.novuscom.net (qmail-ldap-1.03) with SMTP
          for <zsh-workers@sunsite.dk>; 25 Mar 2009 11:22:55 -0000
Message-ID: <49CA13C0.1070308@moonloop.net>
Date: Wed, 25 Mar 2009 04:21:36 -0700
From: Jon Strait <jstrait@moonloop.net>
User-Agent: Thunderbird 2.0.0.19 (X11/20090213)
MIME-Version: 1.0
CC: zsh workers <zsh-workers@sunsite.dk>
Subject: Re: PATCH: New options for the PCRE module (to replace my previous)
References: <49C9F742.4060303@moonloop.net> <20090325100256.33b614d3@news01>
In-Reply-To: <20090325100256.33b614d3@news01>
Content-Type: multipart/mixed;
 boundary="------------080107030601090406080705"
X-Virus-Scanned: ClamAV 0.92.1/9164/Wed Mar 25 05:02:31 2009 on bifrost
X-Virus-Status: Clean

This is a multi-part message in MIME format.
--------------080107030601090406080705
Content-Type: multipart/alternative;
 boundary="------------070807090306080608070004"


--------------070807090306080608070004
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

Peter Stephenson wrote:
> On Wed, 25 Mar 2009 02:20:02 -0700
> Jon Strait <jstrait@moonloop.net> wrote:
>   
>> A few adjustments since last time, with documentation.
>>
>> No reset of the special variables is done on a match failure.
>>     
>
> Er, I can't remember what Phil said (I haven't been following this in any
> detail), but the documentation now says variables aren't altered on a
> failure, so presumably that is now incorrect.  I don't think this is
> crucial as long as it's documented correctly.
>
> Could you in any case send a documentation patch against the current source
> and with lines wrapped to 80 columns?
>
> Thanks.
>
>   
No, I ended up keeping the original behavior:  On match failure, none of 
the special variables are modified (reset).

Here is the updated doc patch.

Please let me know if anything I added isn't clear enough.  Thanks.

--------------070807090306080608070004
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html;charset=ISO-8859-1" http-equiv="Content-Type">
</head>
<body bgcolor="#ffffff" text="#000000">
Peter Stephenson wrote:
<blockquote cite="mid:20090325100256.33b614d3@news01" type="cite">
  <pre wrap="">On Wed, 25 Mar 2009 02:20:02 -0700
Jon Strait <a class="moz-txt-link-rfc2396E" href="mailto:jstrait@moonloop.net">&lt;jstrait@moonloop.net&gt;</a> wrote:
  </pre>
  <blockquote type="cite">
    <pre wrap="">A few adjustments since last time, with documentation.

No reset of the special variables is done on a match failure.
    </pre>
  </blockquote>
  <pre wrap=""><!---->
Er, I can't remember what Phil said (I haven't been following this in any
detail), but the documentation now says variables aren't altered on a
failure, so presumably that is now incorrect.  I don't think this is
crucial as long as it's documented correctly.

Could you in any case send a documentation patch against the current source
and with lines wrapped to 80 columns?

Thanks.

  </pre>
</blockquote>
No, I ended up keeping the original behavior:&nbsp; On match failure, none
of the special variables are modified (reset).<br>
<br>
Here is the updated doc patch.<br>
<br>
Please let me know if anything I added isn't clear enough.&nbsp; Thanks.<br>
</body>
</html>

--------------070807090306080608070004--

--------------080107030601090406080705
Content-Type: text/x-patch;
 name="mod_pcre.yo.patch"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="mod_pcre.yo.patch"

--- mod_pcre-old.yo	2009-01-15 01:49:06.000000000 -0800
+++ mod_pcre.yo	2009-03-25 03:55:58.000000000 -0700
@@ -6,7 +6,7 @@
 
 startitem()
 findex(pcre_compile)
-item(tt(pcre_compile) [ tt(-aimx) ] var(PCRE))(
+item(tt(pcre_compile) [ tt(-aimxs) ] var(PCRE))(
 Compiles a perl-compatible regular expression.
 
 Option tt(-a) will force the pattern to be anchored.
@@ -15,6 +15,8 @@
 tt(^) and tt($) will match newlines within the pattern.
 Option tt(-x) will compile an extended pattern, wherein
 whitespace and tt(#) comments are ignored.
+Option tt(-s) makes the dot metacharacter match all characters, 
+including those that indicate newline.
 )
 findex(pcre_study)
 item(tt(pcre_study))(
@@ -22,7 +24,8 @@
 matching.
 )
 findex(pcre_match)
-item(tt(pcre_match) [ tt(-v) var(var) ] [ tt(-a) var(arr) ] var(string))(
+item(tt(pcre_match) [ tt(-v) var(var) ] [ tt(-a) var(arr) ] \
+[ tt(-n) var(offset) ] [ tt(-b) ] var(string))(
 Returns successfully if tt(string) matches the previously-compiled
 PCRE.
 
@@ -33,8 +36,38 @@
 case it will set the array var(arr).  Similarly, the variable
 var(MATCH) will be set to the entire matched portion of the
 string, unless the tt(-v) option is given, in which case the variable
-var(var) will be set.
-No variables are altered if there is no successful match.
+var(var) will be set. 
+No variables are altered if there is no successful match. 
+A tt(-n) option starts searching for a match from the 
+byte var(offset) position in var(string).  If the tt(-b) option is given, 
+the variable var(ZPCRE_OP) will be set to an offset pair string, 
+representing the byte offset positions of the entire matched portion 
+within the var(string).  For example, a var(ZPCRE_OP) set to "32 45" indicates
+that the matched portion began on byte offset 32 and ended on byte offset 44. 
+Here, byte offset position 45 is the position directly after the matched
+portion.  Keep in mind that the byte position isn't necessarily the same 
+as the character position when UTF-8 characters are involved.  
+Consequently, the byte offset positions are only to be relied on in the
+context of using them for subsequent searches on var(string), using an offset
+position as an argument to the tt(-n) option.  This is mostly
+used to implement the "find all non-overlapping matches" functionality.
+
+A simple example of "find all non-overlapping matches":
+
+example(
+string="The following zip codes: 78884 90210 99513"
+pcre_compile -m "\d{5}"
+accum=()
+pcre_match -b -- $string
+while [[ $? -eq 0 ]] do
+    b=($=ZPCRE_OP)
+    accum+=$MATCH
+    pcre_match -b -n $b[2] -- $string
+done
+print -l $accum
+
+
+)
 )
 enditem()
 

--------------080107030601090406080705--

