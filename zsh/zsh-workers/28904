From zsh-workers-return-28904-mason-zsh=primenet.com.au@zsh.org Fri Mar 18 01:11:29 2011
Return-Path: <zsh-workers-return-28904-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 12469 invoked by alias); 18 Mar 2011 01:11:29 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28904
Received: (qmail 12827 invoked from network); 18 Mar 2011 01:11:27 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <110317181104.ZM26932@torch.brasslantern.com>
Date: Thu, 17 Mar 2011 18:11:03 -0700
In-reply-to: <87pqppiqbx.fsf@ft.bewatermyfriend.org>
Comments: In reply to Frank Terbeck <ft@bewatermyfriend.org>
 "Re: PATCH: edit-command-line: disable `monitor' option locally" (Mar 17,
 6:56pm)
References: <1300306570-24592-1-git-send-email-ft@bewatermyfriend.org>
	<110316210401.ZM25580@torch.brasslantern.com>
	<87tyf2hxe6.fsf@ft.bewatermyfriend.org>
	<110317082534.ZM26573@torch.brasslantern.com>
	<87pqppiqbx.fsf@ft.bewatermyfriend.org>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-workers@zsh.org
Subject: Re: PATCH: edit-command-line: disable `monitor' option locally
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Mar 17,  6:56pm, Frank Terbeck wrote:
} Bart Schaefer wrote:
} > I suspect that in your case the entire edit-command-line function is
} > stopped, so rm -f / zle send-break never happens until after you bring
} > it into the foreground again, but I don't know why it differs for me.
} 
} Here it is:
} [snip]
} % zsh -f
} zsh% cat t
} autoload -Uz edit-command-line
} zle -N edit-command-line
} bindkey $'\ee' edit-command-line
} zsh% source ./t
} zsh% echo foobar+edit-command-line:11> local 'tmpfile=/tmp/zshecl16683'
} +edit-command-line:13> print -R - 'echo foobar'
} +edit-command-line:15> vim /tmp/zshecl16683
} zsh: suspended  

So, exactly as I thought, your entire shell function is being stopped
at this point.  This does not happen for me.  In fact, with VISUAL=less,
it becomes impossible for me to stop the "editor" AT ALL, even though
under normal circumstances I can suspend less normally.  Further, if
I set VISUAL=emacs so that it opens in a new window, I can't suspend
emacs by typing ^Z into the shell window.  This is with the ORIGINAL
edit-command-line, NOT with the patch to add no_monitor.

So AFAICT, for me, the only reason the ^Z is being handled at all is
because vim is handling it internally; monitor only affects whether
the shell does the right thing when vim does its own suspend.

If I add an   stty < /dev/tty >& /dev/tty   to edit-command-line, I
find that my susp character has been set to undef:

torch% VISUAL=cat
torch% +edit-command-line:2> local 'tmpfile=/tmp/zshecl26906'
+edit-command-line:3> print -R - ''
+edit-command-line:5> stty
speed 38400 baud; line = 0;
quit = <undef>; susp = <undef>; lnext = <undef>; flush = <undef>;
min = 1; time = 0;
-brkint inlcr -imaxbel
-icanon -echo
+edit-command-line:6> cat /tmp/zshecl26906

+edit-command-line:7> print -Rz - ''
+edit-command-line:8> rm -f /tmp/zshecl26906
+edit-command-line:9> zle send-break

torch% 

So zsh apparently is already trying to do the right thing.

What we need to figure out is why the suspend character has not been
successfully cleared for you (and for the people reporting this bug).
I believe it's zsetterm() in Src/Zle/zle_main.c that clears the VSUSP
field in the ttyinfo structure in my case.

Of course that doesn't help with vim handling the keystroke on its
own and pretending it got a signal that it never got.

-- 

