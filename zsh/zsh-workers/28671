From zsh-workers-return-28671-mason-zsh=primenet.com.au@zsh.org Sat Jan 29 23:18:37 2011
Return-Path: <zsh-workers-return-28671-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 6177 invoked by alias); 29 Jan 2011 23:18:37 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28671
Received: (qmail 6310 invoked from network); 29 Jan 2011 23:18:34 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-0.9 required=5.0 tests=BAYES_00,MISSING_HEADERS,
	RCVD_IN_DNSWL_NONE autolearn=no version=3.3.1
Received-SPF: pass (ns1.primenet.com.au: SPF record at ntlworld.com designates 81.103.221.49 as permitted sender)
Date: Sat, 29 Jan 2011 23:18:12 +0000
From: Peter Stephenson <p.w.stephenson@ntlworld.com>
Cc: Zsh Hackers' List <zsh-workers@zsh.org>
Subject: Re: Absolute pathnames similar to expand-cmd-path
Message-ID: <20110129231812.67a1025f@pws-pc.ntlworld.com>
In-Reply-To: <20110128221724.2f1753ba@pws-pc.ntlworld.com>
References: <44CE36D4-9044-4148-BDCE-636D85AC003B@cl.cam.ac.uk>
	<AANLkTi==AFonoqW8xjRMtzROxsNdPNx4e8k=7Wt8zXUd@mail.gmail.com>
	<110127195309.ZM4952@torch.brasslantern.com>
	<20110128221724.2f1753ba@pws-pc.ntlworld.com>
X-Mailer: Claws Mail 3.7.8 (GTK+ 2.22.0; x86_64-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Cloudmark-Analysis: v=1.1 cv=R50lirqlHffDPPkwUlkuVa99MrvKdVWo//yz83qex8g= c=1 sm=0 a=grTaqnFszTkA:10 a=kj9zAlcOel0A:10 a=NLZqzBF-AAAA:8 a=CAKsNqdDdve3euiBs-IA:9 a=_jxyUGS1dW1QWOcvMhMA:7 a=K4uEpLYxsUHmXc6bJMRIcSxdkoYA:4 a=CjuIK1q_8ugA:10 a=_dQi-Dcv4p4A:10 a=HpAAvcLHHh0Zw7uRqdWCyQ==:117

On Fri, 28 Jan 2011 22:17:24 +0000
Peter Stephenson <p.w.stephenson@ntlworld.com> wrote:
> This tickles cursor positioning annyonances in undo.

An example of what I'm talking about that doesn't need user-defined
widgets:

- type 'echo foo bar'
- move the cursor to 'f'
- delete the next word (Esc d in Emacs mode)
- undo.

You find the cursor at the end of the line.  I contend that you'd
expect it to be on the f.  OK, I state as a fact that that's what I'd
expect and it seems to me the only natural expectation.

We don't update the last cursor position on movement commands, only on
changes.  I *think* the following simple change makes things much
better, to wit, after an undo you get taken back to the cursor
position immediately before the change being undone, rather than where
you made the change before that.

Please say if you see any more oddities with undo, I've been wondering
about this for years and have only just started trying to get to grips
with the undo system.

CVS is still down.  It sounds like it's probably time to move to git
after the next stable release, nobody's suggested replacing it with an
even more trendy system yet...

--- ../zsh-git/zsh/Src/Zle/zle_utils.c	2010-10-05 22:24:01.000000000 +0100
+++ Src/Zle/zle_utils.c	2011-01-29 23:08:45.000000000 +0000
@@ -1085,8 +1085,10 @@ mkundoent(void)
     struct change *ch;
 
     UNMETACHECK();
-    if(lastll == zlell && !ZS_memcmp(lastline, zleline, zlell))
+    if(lastll == zlell && !ZS_memcmp(lastline, zleline, zlell)) {
+	lastcs = zlecs;
 	return;
+    }
     for(pre = 0; pre < sh && zleline[pre] == lastline[pre]; )
 	pre++;
     for(suf = 0; suf < sh - pre &&

-- 
Peter Stephenson <p.w.stephenson@ntlworld.com>
Web page now at http://homepage.ntlworld.com/p.w.stephenson/

