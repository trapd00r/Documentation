From zsh-workers-request@euclid.skiles.gatech.edu  Mon Oct 14 19:18:38 1996
Return-Path: zsh-workers-request@euclid.skiles.gatech.edu
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by coral.primenet.com.au (8.7.5/8.7.3) with ESMTP id TAA10392 for <mason@primenet.com.au>; Mon, 14 Oct 1996 19:18:23 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id FAA02643; Mon, 14 Oct 1996 05:02:48 -0400 (EDT)
Resent-Date: Mon, 14 Oct 1996 05:02:48 -0400 (EDT)
From: ams104@york.ac.uk (Alan Stephenson)
Message-Id: <199610140902.KAA11668@sgi20.york.ac.uk>
Subject: Building zsh-3.0.0 SGI IRIX 5.3
To: zsh-workers@math.gatech.edu
Date: Mon, 14 Oct 1996 10:02:16 +0100 (BST)
X-Mailer: ELM [version 2.4 PL24 ME8b]
MIME-Version: 1.0
Content-type: text/plain; charset="US-ASCII"
Resent-Message-ID: <"6sq_p2.0.Df.t6WOo"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/2223
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Probably something silly, but:

  The configure script supplied is determined to think I'm
cross-compiling. Even if I persuade it I'm not, by hacking the script,
the following occurs during the operation of `make':

...
        sed -n -f ./makepro.sed zle_utils.c > zle_utils.pro
        sed -n -f ./makepro.sed zle_vi.c > zle_vi.pro
        sed -n -f ./makepro.sed zle_word.c > zle_word.pro
        nawk -f ./signames.awk /usr/include/sys/signal.h > signames.h
        gcc -c -I.. -I. -I.  -DHAVE_CONFIG_H (-xansi -rdata_shared -p0
-g0 -s -O2 -32) ansi2knr.c
UX:sh (sh): ERROR: sh: Syntax error at line 1: `(' unexpected
*** Error code 2 (bu21)
*** Error code 1 (bu21)

  Not really sure what's going on here. Should the gcc line have the
brackets? I've done the `reporter' thing, too. Hope you can help me. I
might write again if I can't get it to build under Linux, too :)

------
.alan.

# START zsh saveset
# uname:  IRIX sgi20 5.3 11091810 IP12 mips

# Aliases.

alias clea=clear
alias keys='xmodmap -pke'
alias ll='ls -bl'
alias netscape=/usr/local/bin/netscape
alias prn=/usr/local/bin/print
alias run-help=/usr/bin/man
alias which-command=/usr/fs4/ug94/ams104/bin/s/lsa
alias xping='ping -c 4 -Rv'

# Key bindings.

bindkey -r "^@"
bindkey -r "^A"
bindkey -r "^B"
bindkey -r "^C"
bindkey -r "^D"
bindkey -r "^E"
bindkey -r "^F"
bindkey -r "^G"
bindkey -r "^H"
bindkey -r "^I"
bindkey -r "^J"
bindkey -r "^K"
bindkey -r "^L"
bindkey -r "^M"
bindkey -r "^N"
bindkey -r "^O"
bindkey -r "^P"
bindkey -r "^Q"
bindkey -r "^R"
bindkey -r "^S"
bindkey -r "^T"
bindkey -r "^U"
bindkey -r "^V"
bindkey -r "^W"
bindkey -r "^X"
bindkey -r "^Y"
bindkey -r "^Z"
bindkey -r "\e"
bindkey -r "^_"
bindkey -r "^?"
bindkey -r "^X^B"
bindkey -r "^X^F"
bindkey -r "^X^J"
bindkey -r "^X^K"
bindkey -r "^X^N"
bindkey -r "^X^O"
bindkey -r "^X^U"
bindkey -r "^X^V"
bindkey -r "^X^X"
bindkey -r "^X*"
bindkey -r "^XG"
bindkey -r "^Xg"
bindkey -r "^Xr"
bindkey -r "^Xs"
bindkey -r "^Xu"
bindkey -r "\e^D"
bindkey -r "\e^G"
bindkey -r "\e^H"
bindkey -r "\e^I"
bindkey -r "\e^J"
bindkey -r "\e^L"
bindkey -r "\e^M"
bindkey -r "\e^_"
bindkey -r "\e "
bindkey -r "\e!"
bindkey -r "\e\\""
bindkey -r "\e$"
bindkey -r "\e'"
bindkey -r "\e-"
bindkey -r "\e."
bindkey -r "\e0"
bindkey -r "\e1"
bindkey -r "\e2"
bindkey -r "\e3"
bindkey -r "\e4"
bindkey -r "\e5"
bindkey -r "\e6"
bindkey -r "\e7"
bindkey -r "\e8"
bindkey -r "\e9"
bindkey -r "\e<"
bindkey -r "\e>"
bindkey -r "\e?"
bindkey -r "\eA"
bindkey -r "\eB"
bindkey -r "\eC"
bindkey -r "\eD"
bindkey -r "\eF"
bindkey -r "\eG"
bindkey -r "\eH"
bindkey -r "\eL"
bindkey -r "\eN"
bindkey -r "\eP"
bindkey -r "\eQ"
bindkey -r "\eS"
bindkey -r "\eT"
bindkey -r "\eU"
bindkey -r "\eW"
bindkey -r "\e[069q"
bindkey -r "\e[072q"
bindkey -r "\e[073q"
bindkey -r "\e[100q"
bindkey -r "\e[139q"
bindkey -r "\e[142q"
bindkey -r "\e[158q"
bindkey -r "\e[159q"
bindkey -r "\e[160q"
bindkey -r "\e[161q"
bindkey -r "\e[162q"
bindkey -r "\e[164q"
bindkey -r "\e[165q"
bindkey -r "\e[167q"
bindkey -r "\e[168q"
bindkey -r "\e[169q"
bindkey -r "\e[A"
bindkey -r "\e[B"
bindkey -r "\e[C"
bindkey -r "\e[D"
bindkey -r "\e[P"
bindkey -r "\e[Z"
bindkey -r "\e_"
bindkey -r "\ea"
bindkey -r "\eb"
bindkey -r "\ec"
bindkey -r "\ed"
bindkey -r "\ef"
bindkey -r "\eg"
bindkey -r "\eh"
bindkey -r "\el"
bindkey -r "\en"
bindkey -r "\ep"
bindkey -r "\eq"
bindkey -r "\es"
bindkey -r "\et"
bindkey -r "\eu"
bindkey -r "\ew"
bindkey -r "\ex"
bindkey -r "\ey"
bindkey -r "\ez"
bindkey -r "\e|"
bindkey -r "\e^?"

bindkey "^@"	set-mark-command
bindkey "^A"	insert-last-word
bindkey "^B"	backward-char
bindkey "^C"	undefined-key
bindkey "^D"	delete-char-or-list
bindkey "^E"	end-of-line
bindkey "^F"	forward-char
bindkey "^G"	send-break
bindkey "^H"	backward-delete-char
bindkey "^I"	expand-or-complete
bindkey "^J"	accept-line
bindkey "^K"	kill-line
bindkey "^L"	clear-screen
bindkey "^M"	accept-line
bindkey "^N"	down-line-or-history
bindkey "^O"	accept-line-and-down-history
bindkey "^P"	up-line-or-history
bindkey "^Q"	push-line
bindkey "^R"	history-incremental-search-backward
bindkey "^S"	history-incremental-search-forward
bindkey "^T"	transpose-chars
bindkey "^U"	kill-whole-line
bindkey "^V"	quoted-insert
bindkey "^W"	backward-kill-word
bindkey "^X"	prefix
bindkey "^Y"	yank
bindkey "^Z"	undefined-key
bindkey "\e"	prefix
bindkey "^_"	undo
bindkey "^?"	backward-delete-char
bindkey "^X^B"	vi-match-bracket
bindkey "^X^F"	vi-find-next-char
bindkey "^X^J"	vi-join
bindkey "^X^K"	kill-buffer
bindkey "^X^N"	infer-next-history
bindkey "^X^O"	overwrite-mode
bindkey "^X^U"	undo
bindkey "^X^V"	vi-cmd-mode
bindkey "^X^X"	exchange-point-and-mark
bindkey "^X*"	expand-word
bindkey "^XG"	list-expand
bindkey "^Xg"	list-expand
bindkey "^Xr"	history-incremental-search-backward
bindkey "^Xs"	history-incremental-search-forward
bindkey "^Xu"	undo
bindkey "\e^D"	list-choices
bindkey "\e^G"	send-break
bindkey "\e^H"	backward-kill-word
bindkey "\e^I"	self-insert-unmeta
bindkey "\e^J"	self-insert-unmeta
bindkey "\e^L"	clear-screen
bindkey "\e^M"	self-insert-unmeta
bindkey "\e^_"	copy-prev-word
bindkey "\e "	expand-history
bindkey "\e!"	expand-history
bindkey "\e\\""	quote-region
bindkey "\e$"	spell-word
bindkey "\e'"	quote-line
bindkey "\e-"	neg-argument
bindkey "\e."	insert-last-word
bindkey "\e0"	digit-argument
bindkey "\e1"	digit-argument
bindkey "\e2"	digit-argument
bindkey "\e3"	digit-argument
bindkey "\e4"	digit-argument
bindkey "\e5"	digit-argument
bindkey "\e6"	digit-argument
bindkey "\e7"	digit-argument
bindkey "\e8"	digit-argument
bindkey "\e9"	digit-argument
bindkey "\e<"	beginning-of-buffer-or-history
bindkey "\e>"	end-of-buffer-or-history
bindkey "\e?"	which-command
bindkey "\eA"	accept-and-hold
bindkey "\eB"	backward-word
bindkey "\eC"	capitalize-word
bindkey "\eD"	kill-word
bindkey "\eF"	forward-word
bindkey "\eG"	get-line
bindkey "\eH"	run-help
bindkey "\eL"	down-case-word
bindkey "\eN"	history-search-forward
bindkey "\eP"	history-search-backward
bindkey "\eQ"	push-line
bindkey "\eS"	spell-word
bindkey "\eT"	transpose-words
bindkey "\eU"	up-case-word
bindkey "\eW"	copy-region-as-kill
bindkey "\e[069q"	expand-cmd-path
bindkey "\e[072q"	expand-word
bindkey "\e[073q"	accept-and-menu-complete
bindkey "\e[100q"	set-mark-command
bindkey "\e[139q"	copy-prev-word
bindkey "\e[142q"	kill-region
bindkey "\e[158q"	backward-word
bindkey "\e[159q"	beginning-of-line
bindkey "\e[160q"	backward-kill-line
bindkey "\e[161q"	history-beginning-search-backward
bindkey "\e[162q"	history-incremental-search-backward
bindkey "\e[164q"	history-beginning-search-forward
bindkey "\e[165q"	history-incremental-search-forward
bindkey "\e[167q"	forward-word
bindkey "\e[168q"	end-of-line
bindkey "\e[169q"	kill-line
bindkey "\e[A"	up-line-or-search
bindkey "\e[B"	down-line-or-search
bindkey "\e[C"	forward-char
bindkey "\e[D"	backward-char
bindkey "\e[P"	delete-char
bindkey "\e[Z"	list-choices
bindkey "\e_"	insert-last-word
bindkey "\ea"	accept-and-hold
bindkey "\eb"	backward-word
bindkey "\ec"	capitalize-word
bindkey "\ed"	kill-word
bindkey "\ef"	forward-word
bindkey "\eg"	get-line
bindkey "\eh"	run-help
bindkey "\el"	down-case-word
bindkey "\en"	history-search-forward
bindkey "\ep"	history-search-backward
bindkey "\eq"	push-line
bindkey "\es"	spell-word
bindkey "\et"	transpose-words
bindkey "\eu"	up-case-word
bindkey "\ew"	copy-region-as-kill
bindkey "\ex"	execute-named-cmd
bindkey "\ey"	yank-pop
bindkey "\ez"	execute-last-named-cmd
bindkey "\e|"	vi-goto-column
bindkey "\e^?"	backward-kill-word

# Completions.

compctl -e -g '*.dvi' dvips
compctl -e -k comhosts ftp
compctl -e -g '*.(gz|Z|z)' gunzip
compctl -e -g '*.tex' latex
compctl -e -k comhosts ncftp
compctl -e -k comhosts ping
compctl -fe -x 'S[stu][Stu]' -e -k s1d - 'S[tow]' -e -k towd -- rcp
compctl -e -k comhosts telnet
compctl -e -g '*.dvi' xdvi

# Undefined functions.


# Defined functions.

clear () {
	echo '\c'
}
determine () {
	ROOM=$REMOTEHOST 
	IDR="?" 
	MACHINE="Unknown Machine" 
	IDM="?" 
	IDEXACT="" 
	if [[ "$1" = [Ss]tudent1pc* ]]
	then
		NUMBER=$( /usr/bin/expr "$1" : '[^1]*1[^0-9]*\([0-9]*\)[^0-9]*' ) 
	else
		NUMBER=$( /usr/bin/expr "$1" : '[^0-9]*\([0-9]*\)[^0-9]*' ) 
	fi
	case $1 in
		sgi<1-20>) ROOM=$ROOMNAMES[1] 
			IDR=$IDRS[1] 
			MACHINE="$MACHINENAMES[5] $NUMBER" 
			IDM=$IDMS[5] 
			IDEXACT=Yes ;;
		figaro) ROOM=$ROOMNAMES[5] 
			IDR=$IDRS[5] 
			MACHINE="$MACHINENAMES[5] 'Figaro'" 
			IDM=$IDMS[5] 
			IDEXACT=Yes ;;
		cst<1-29>) ROOM=$ROOMNAMES[6] 
			IDR=$IDRS[6] 
			MACHINE="$MACHINENAMES[3] $NUMBER" 
			IDM=$IDMS[3] 
			IDEXACT=Yes ;;
		cst<30-50>) ROOM=$ROOMNAMES[7] 
			IDR=$IDRS[7] 
			MACHINE="$MACHINENAMES[3] $NUMBER" 
			IDM=$IDMS[3] 
			IDEXACT=Yes ;;
		cst<100-147>) ROOM=$ROOMNAMES[8] 
			IDR=$IDRS[8] 
			MACHINE="$MACHINENAMES[3] $NUMBER" 
			IDM=$IDMS[3] 
			IDEXACT=Yes ;;
		cst<148-171>) ROOM=$ROOMNAMES[9] 
			IDR=$IDRS[9] 
			MACHINE="$MACHINENAMES[3] $NUMBER" 
			IDM=$IDMS[3] 
			IDEXACT=Yes ;;
		alibpc*) ROOM=$ROOMNAMES[12] 
			IDR=$IDRS[12] 
			MACHINE="$MACHINENAMES[3] $NUMBER" 
			IDM=$IDMS[3] 
			IDEXACT=Yes ;;
		diyftp) ROOM=$ROOMNAMES[5] 
			IDR=$IDRS[5] 
			MACHINE="$MACHINENAMES[3] \`diyftp'" 
			IDM=$IDMS[3] 
			IDEXACT=Yes ;;
		cq<1-12>) ROOM=$ROOMNAMES[11] 
			IDR=$IDRS[11] 
			MACHINE="$MACHINENAMES[4] $NUMBER" 
			IDM=$IDMS[4] 
			IDEXACT=Yes ;;
		cq<13-22>) ROOM=$ROOMNAMES[3] 
			IDR=$IDRS[3] 
			MACHINE="$MACHINENAMES[4] $NUMBER" 
			IDM=$IDMS[4] 
			IDEXACT=Yes ;;
		csmac<1-5>) ROOM=$ROOMNAMES[10] 
			IDR=$IDRS[10] 
			MACHINE="$MACHINENAMES[6] $NUMBER" 
			IDM=$IDMS[6] 
			IDEXACT=Yes ;;
		g?ts?) ROOM=$ROOMNAMES[2] 
			IDR=$IDRS[2] 
			MACHINE="$MACHINENAMES[1]" 
			IDM=$IDMS[1] ;;
		l3ts0) ROOM=$ROOMNAMES[3] 
			IDR=$IDRS[3] 
			MACHINE="$MACHINENAMES[1] $NUMBER" 
			IDM=$IDMS[1] ;;
		[sS]tudent1|[aA]tlas) ROOM=$ROOMNAMES[4] 
			IDR=$IDRS[4] 
			MACHINE=$MACHINENAMES[2] 
			IDM=$IDMS[2] 
			IDEXACT=No ;;
		student1pc*) ROOM=$ROOMNAMES[4] 
			IDR=$IDRS[4] 
			if [[ $NUMBER -eq 34 ]]
			then
				MACHINE="Alan's CompSci PC" 
			else
				MACHINE="$MACHINENAMES[2] $NUMBER" 
			fi
			IDM=$IDMS[2] 
			IDEXACT=Yes ;;
		boobook) ROOM=$ROOMNAMES[13] 
			IRD=$IDRS[13] 
			MACHINE="$MACHINENAMES[3]" 
			IDM=$IDMS[3] 
			IDEXACT=Yes ;;
		
	esac
}
logout () {
	if [[ ${(L)IDM} = sgi ]]
	then
		utf a
		utf o $(echo "Left $MACHINE $(/usr/bin/date +'at %H:%M.%S %Y/%m/%e')")
		~/X11/ends
	else
		utf a
		utf o $(echo "Left $MACHINE $(/usr/bin/date +'at %H:%M.%S %Y/%m/%e')")
		exit
	fi
}
ls () {
	/sbin/ls -abCF $*
}
nis () {
	/usr/bin/ypmatch $* passwd.byname
}
precmd () {
	title
	if [ -s $MAIL ]
	then
		M='*' 
	else
		M=':' 
	fi
	prompt=$pron'%m'$prmid$M'%~ >'$proff' ' 
}
texglob () {
	if [[ $PWD = */tex/* ]]
	then
		reply=(*.tex) 
	elif [[ $PWD = */web/* ]]
	then
		reply=(*.html) 
	fi
}
title () {
	print -n -P '\2201.yZSH @ %m:%~\234\2203.y%m:%~\234'
}

# Limits.

limit datasize        512MB
limit stacksize       64MB
limit descriptors     200
limit vmemorysize     512MB
limit resident        12MB

# Non-array variables.

TERMCAP=''
TERM='iris-ansi'
\'#\'="0"
\'$\'="11234"
\'?\'="1"
ARGC="0"
AWK="awk"
BAUD="38400"
CDPATH=".:..:/usr/fs1/ug90:/usr/fs1/ug91:/usr/fs1/ug92:/usr/fs1/ug93:/usr/fs4/ug94:/usr/fs3/ug92:/usr:/usr/fs4/ug94/ams104:/usr/fs4/ug94/ams104/bin:/usr/fs4/ug94/ams104/inter"
CFLAGS="\'(-xansi -rdata_shared -p0 -g0 -s -O2 -32)\'"
COLUMNS="80"
CPP="/lib/cpp"
DIRSTACKSIZE="-1"
DISPLAY=":0"
EDITOR="/usr/fs5/extn/intm66/bin/vim"
EGID="3300"
ERRNO="1"
EUID="8815"
FCEDIT="vi"
FIGNORE="\'\'"
FINDME="sausages"
FOUND="Yes"
FPATH="\'\'"
GID="3300"
HISTCHARS="\'!^#\'"
HISTSIZE="30"
HOME="/usr/fs4/ug94/ams104"
HOST="sgi20"
IDEXACT="Yes"
IDM="sgi"
IDR="d104"
KEYTIMEOUT="40"
LANG="\'\'"
LINENO="329"
LINES="25"
LISTMAX="100"
LOGCHECK="60"
LOGNAME="ams104"
M=":"
MACHINE="\'SGI 20\'"
MACHTYPE="mips"
MAIL="/usr/mail/ams104"
MAILCHECK="60"
MAILPATH="\'\'"
MANPAGER="/usr/local/bin/less"
MANPATH="/usr/share/catman:/usr/fs4/ug94/ams104/man:/usr/fs8/ug93/jd102/man:/usr/fs4/ug94/bc102/man:/usr/local/pub/man"
NULLCMD=":"
NUMBER="20"
OLDPWD="/usr/tmp/ams104/zsh-3.0.0"
OPTARG="\'\'"
OPTIND="1"
OSTYPE="irix5.3"
PAGER="/usr/local/bin/less"
PATH="/usr/fs4/ug94/ams104:/usr/fs4/ug94/ams104/bin:/usr/fs4/ug94/ams104/bin/s:/usr/fs4/ug94/ams104/bin/safe:/usr/fs4/ug94/ams104/X11:/usr/fs4/ug94/ams104/X11/naa:/usr/fs1/ug92/mad5/bin:/usr/fs8/ug93/mh104/bin:/usr/fs8/ug93/jd102/bin:/usr/fs4/ug94/jwb101/bin:/usr/fs4/ug94/bc102/bin:/usr/fs4/ug94/opk101/bin:/usr/fs3/ug92/dmh10/bin:/usr/fs8/ug93/acc101/bin:/usr/fs1/ug95/rjb108/bin:/usr/local/bin:/usr/local/pub:/usr/bin:/usr/sbin:/usr/bsd:/usr/etc:/sbin:/usr/bin/X11:/etc:/usr/fs5/extn/intm66/bin:/usr/fs5/extn/intm66/others:/usr/fs8/ug93/acc101/sbin:."
PERIOD="0"
POSTEDIT="\'\'"
PPID="11232"
PRINTER="classroom"
PROMPT="\'%{%}%m%{%}:%~ > %{%} \'"
PROMPT2="\'(%_) > \'"
PROMPT3="\'?# \'"
PROMPT4="\'+ \'"
PS1="\'%{%}%m%{%}:%~ > %{%} \'"
PS2="\'(%_) > \'"
PS3="\'?# \'"
PS4="\'+ \'"
PSVAR="\'\'"
PWD="/usr/tmp/ams104/zsh-3.0.0/Util"
RANDOM="1624"
READNULLCMD="/usr/bin/cat"
REALHOST="sgi20"
REALREMOTEHOST="\'\'"
REPORTTIME="-1"
ROOM="\'Derwent 104\'"
RPROMPT="\'\'"
RPS1="\'\'"
SAVEHIST="0"
SECONDS="2909"
SHELL="/usr/fs4/ug94/ams104/bin/zsh"
SHLVL="1"
SPROMPT="\'zsh: correct \'\'%R\'\' to \'\'%r\'\' [nyae]? \'"
TEXINPUTS=".:/usr/fs8/ug93/mh104/TeX/packages:/usr/fs4/ug94/ams104/tex/packages:/usr/appl/tex//"
TIMEFMT="\'%J  %U user %S system %P cpu %*E total\'"
TMOUT="0"
TMPPREFIX="/tmp/zsh"
TTY="/dev/ttyq5"
TTYIDLE="-1"
TZ="GMT0BST-1,90/2:00:00,300/2:00:00"
UID="8815"
USER="ams104"
USERNAME="ams104"
VENDOR="sgi"
VISUAL="/usr/fs5/extn/intm66/bin/vim"
WATCH="\'\'"
WATCHFMT="\'%n has %a %l from %m.\'"
WINDOWID="71303172"
WORDCHARS="\'*?_-.[]~=&;!#$%^(){}<>\'"
XUSERFILESEARCHPATH="/usr/fs4/ug94/ams104/.desktop-sgi20/%N:/usr/fs4/ug94/ams104/%N:/usr/fs4/ug94/ams104/.setup/%N:/usr/fs4/ug94/ams104/%L/%N%C:/usr/fs4/ug94/ams104/%l/%N%C:/usr/fs4/ug94/ams104/%N%C:/usr/fs4/ug94/ams104/%L/%N:/usr/fs4/ug94/ams104/%l/%N"
ZSH_NAME="zsh"
ZSH_VERSION="2.6-beta20"
a="/usr/fs4/ug94/ams104"
each="__FILE__"
histchars="\'!^#\'"
m_correct="1"
m_extra="-5"
m_mprog="/usr/fs4/ug94/ams104/bin/safe/mpr"
m_repeat="30"
m_rprog="/usr/fs4/ug94/ams104/bin/s/rback"
no_xceed="wank"
prmid="\'%{%}\'"
proff="\' %{%}\'"
pron="\'%{%}\'"
reporter_OSVersion="IRIX_5.3"
reporter_junkiequotes="no"
status="1"
str="\'IRIX sgi20 5.3 11091810 IP12 mips\'"
t="/usr/tmp/ams104"
tmp="/usr/tmp"
prompt='test%'

# Array variables.

argv=()
'*'=()
IDMS=(term s1pc i486 i386 sgimac )
IDRS=(d104 g022 l051 v058 xc001 l117 w218 g169 d114 z013b jbml alanna )
MACHINENAMES=(Terminal 'CompSci PC' '486 PC' '386 PC' SGI'Apple MAC' )
ROOMNAMES=('Derwent 104' 'Goodricke 022' 'Langwith 051' 'Vanbrugh 058' 'Computing X/C001' 'Langwith 117' 'Wentworth 218' 'Goodricke 169' 'Derwent 114' 'Languages 013b' Library 'Alcuin Library''Anna''s House' )
cdpath=(. .. /usr/fs1/ug90 /usr/fs1/ug91 /usr/fs1/ug92 /usr/fs1/ug93 /usr/fs4/ug94 /usr/fs3/ug92 /usr /usr/fs4/ug94/ams104 /usr/fs4/ug94/ams104/bin/usr/fs4/ug94/ams104/inter )
comhosts=(sgi20 tower.york.ac.uk student1.cs.york.ac.uk unix.hensa.ac.uk ftp.sunet.se spodbox.ehche.ac.uk yay.tim.org jumper.mcc.ac.uk reliant.lasermoon.co.uk johann.cs.york.ac.uk goodram.york.ac.ukcopper.york.ac.uk )
fignore=()
fpath=()
mailpath=()
manpath=(/usr/share/catman /usr/fs4/ug94/ams104/man /usr/fs8/ug93/jd102/man /usr/fs4/ug94/bc102/man/usr/local/pub/man )
path=(/usr/fs4/ug94/ams104 /usr/fs4/ug94/ams104/bin /usr/fs4/ug94/ams104/bin/s /usr/fs4/ug94/ams104/bin/safe /usr/fs4/ug94/ams104/X11 /usr/fs4/ug94/ams104/X11/naa /usr/fs1/ug92/mad5/bin /usr/fs8/ug93/mh104/bin /usr/fs8/ug93/jd102/bin /usr/fs4/ug94/jwb101/bin /usr/fs4/ug94/bc102/bin /usr/fs4/ug94/opk101/bin /usr/fs3/ug92/dmh10/bin /usr/fs8/ug93/acc101/bin /usr/fs1/ug95/rjb108/bin /usr/local/bin /usr/local/pub /usr/bin /usr/sbin /usr/bsd /usr/etc /sbin /usr/bin/X11 /etc /usr/fs5/extn/intm66/bin /usr/fs5/extn/intm66/others /usr/fs8/ug93/acc101/sbin. )
psvar=()
s1d=(Student1.cs.york.ac.uk:/s/ug/ Student1.cs.york.ac.uk:/usr/ Student1.cs.york.ac.uk:/s/ug/group/ student1.cs.york.ac.uk:/s/ug/ Student1.cs.york.ac.uk:/usr/tmp/ student1.cs.york.ac.uk:/usr/ student1.cs.york.ac.uk:/s/ug/group/student1.cs.york.ac.uk:/usr/tmp/ )
signals=(EXIT HUP INT QUIT ILL TRAP IOT EMT FPE KILL BUS SEGV SYS PIPE ALRM TERM USR1 USR2 CLD PWR WINCH URG POLL STOP TSTP CONT TTIN TTOU VTALRM PROF XCPU XFSZ 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 RTMIN ZERRDEBUG )
towd=(tower.york.ac.uk:/usr/tmp/ )
watch=()

# Exported variables.

export TERMCAP
export TERM
export AWK
export CDPATH
export CFLAGS
export CPP
export DISPLAY
export EDITOR
export FINDME
export FOUND
export HOME
export IDEXACT
export IDM
export IDR
export LOGNAME
export M
export MACHINE
export MAIL
export MANPAGER
export MANPATH
export NULLCMD
export PAGER
export PATH
export PRINTER
export PROMPT2
export PWD
export READNULLCMD
export ROOM
export SHELL
export SHLVL
export TERM
export TEXINPUTS
export TZ
export USER
export VISUAL
export WINDOWID
export WORDCHARS
export XUSERFILESEARCHPATH
export each
export m_correct
export m_extra
export m_mprog
export m_repeat
export m_rprog
export no_xceed
export path
export prmid
export proff
export prompt
export pron
export reporter_OSVersion
export reporter_do_all
export reporter_junkiequotes
export str
export t
export tmp

# Setopt.

setopt allexport
setopt autocd
setopt autoparamkeys
setopt completeinword
setopt extendedglob
setopt globcomplete
setopt globdots
setopt hashcmds
setopt hashdirs
setopt hashlistall
setopt ignorebraces
setopt login
setopt menucomplete
setopt nobanghist
setopt nobeep
setopt nohup
setopt nullglob
setopt numericglobsort
setopt rcexpandparam
setopt rcquotes
setopt shwordsplit

# END zsh saveset

