From schaefer@candle.brasslantern.com Mon May 27 05:00:47 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by melb.werple.net.au (8.7.5/8.7.3) with ESMTP id FAA27502 for <mason@werple.mira.net.au>; Mon, 27 May 1996 05:00:45 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id OAA14355; Sun, 26 May 1996 14:47:05 -0400 (EDT)
Resent-Date: Sun, 26 May 1996 14:43:09 -0400 (EDT)
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <960526114405.ZM2686@candle.brasslantern.com>
Date: Sun, 26 May 1996 11:44:04 -0700
In-Reply-To: Huy Le <huyle@pride.ugcs.caltech.edu>
        "'print -s' in a function" (May 26,  5:19am)
References: <199605261219.FAA09817@envy.ugcs.caltech.edu>
Reply-To: schaefer@nbn.com
X-Mailer: Z-Mail (4.0b.514 14may96)
To: Huy Le <huyle@pride.ugcs.caltech.edu>, zsh-users@math.gatech.edu
Subject: Re: 'print -s' in a function
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-Message-ID: <"MDPpl1.0.NV3.yOAgn"@euclid>
Resent-From: zsh-users@math.gatech.edu
X-Mailing-List: <zsh-users@math.gatech.edu> archive/latest/222
X-Loop: zsh-users@math.gatech.edu
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu
Content-Length: 1923
Status: O

On May 26,  5:19am, Huy Le wrote:
} Subject: 'print -s' in a function
}
} VERSION: zsh2.6beta13
} 
} So, I'm trying the following:
} 
} function fed() {
}   # Allows for the editing of functions in memory
} 
[snip]
} 
}   builtin print -s "function `which $1`"
} 
}   fc
} }
} 
} If you try running this, such as running:
}       fed fed
} you'll notice that what shows up in your editor
} is "fed fed" instead of the contents of fed.
} 
} The problem is that the history doesn't get updated right
} away after the 'print -s' line.  Why?  Could this be a bug?

The history does get updated right away; replace "fc" with "history 1"
and you'll see that the `print -s' output is there.

What doesn't get updated seems to be the history position from which
"fc" starts looking backwards for commands to edit.  Even if you use

	n=$(print -P %\!)
	((n++))
	fc $n

You just get "fc: bad history number" even though an event with that
number shows up in the "history 1" output.

This may be intentional behavior of fc for some other reason -- you
don't normally want a command to edit itself.  Stick a SECOND command
into the history:

	builtin print -s "function `which $1`"
	builtin print -s "echo Dummy command for fed"
	fc

and then it works as you wanted -- and the dummy command never shows
up in the history list, it gets replaced by the result of "fc".

BTW, there's a history quoting bug (beta19).  Try:

zsh% function broken () {
> n=$(print -P %\!)
> }
zsh %
      ^
Type C-p here to edit the last command; note that the ! in %! is not
quoted; you get:

zsh% function broken () {
	n=$(print -P %!)
}

This produces a history-not-found error when you press return.

-- 
Bart Schaefer                             Brass Lantern Enterprises
http://www.well.com/user/barts            http://www.nbn.com/people/lantern

New male in /home/schaefer:
>N  2 Justin William Schaefer  Sat May 11 03:43  53/4040  "Happy Birthday"


