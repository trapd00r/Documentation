From zsh-users-return-13129-mason-zsh=primenet.com.au@sunsite.dk Mon Aug 11 15:21:06 2008
Return-Path: <zsh-users-return-13129-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 22968 invoked from network); 11 Aug 2008 15:21:03 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 11 Aug 2008 15:21:03 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 44873 invoked from network); 11 Aug 2008 15:20:11 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 11 Aug 2008 15:20:11 -0000
Received: (qmail 19693 invoked by alias); 11 Aug 2008 15:19:35 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13129
Received: (qmail 19678 invoked from network); 11 Aug 2008 15:19:34 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 11 Aug 2008 15:19:34 -0000
Received: from vms173003pub.verizon.net (vms173003pub.verizon.net [206.46.173.3])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 82D1F809A180
	for <zsh-users@sunsite.dk>; Mon, 11 Aug 2008 17:18:51 +0200 (CEST)
Received: from torch.brasslantern.com ([96.238.220.37])
 by vms173003.mailsrvcs.net
 (Sun Java System Messaging Server 6.2-6.01 (built Apr  3 2006))
 with ESMTPA id <0K5F0087EZS0ZM58@vms173003.mailsrvcs.net> for
 zsh-users@sunsite.dk; Mon, 11 Aug 2008 10:16:49 -0500 (CDT)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id m7BFGl4T028087	for
 <zsh-users@sunsite.dk>; Mon, 11 Aug 2008 08:16:48 -0700
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id m7BFGlof028086	for zsh-users@sunsite.dk; Mon,
 11 Aug 2008 08:16:47 -0700
Date: Mon, 11 Aug 2008 08:16:47 -0700
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: A generic function/framework/mechanism for regular polling of data?
In-reply-to: <2d460de70808110631y56666be3mbb3019553de5cc94@mail.gmail.com>
To: "Zsh users list" <zsh-users@sunsite.dk>
Message-id: <080811081647.ZM28085@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <2d460de70808071833p8871ca5m19159361b6eb855b@mail.gmail.com>
	<20080810131431.GB75798@redoubt.spodhuis.org>
	<2d460de70808110631y56666be3mbb3019553de5cc94@mail.gmail.com>
Comments: In reply to "Richard Hartmann" <richih.mailinglist@gmail.com>
 "Re: A generic function/framework/mechanism for regular polling of data?" (Aug
 11,  3:31pm)
X-Virus-Scanned: ClamAV 0.92.1/8007/Mon Aug 11 15:51:54 2008 on bifrost
X-Virus-Status: Clean

On Aug 11,  3:31pm, Richard Hartmann wrote:
}
} What, if any, is the canonical way to parse information from a file
} and putting that into variables.

The canonical way is for the file to be a simple series of assignment
statements, possibly with the occasional "typeset" command thrown in.

This is the reason that the shell uses an interpreted language.  If a
way to load variables is all you're looking for, I don't understand why
you're making this into a programming problem.

} PS: Mental note: Cleanly seperate what I know and what I want to
} know when asking questions. Do not ask about the whole concept,
} only ask about the missing pieces.

Well, no.  Context is often quite important.  Frequently the problem
with programming questions is that the questioner wants to fill in a
missing piece when really it's the entire concept that's wrong (or at
least sub-optimal).  At the very least lack of context makes it hard
to frame the right question.

Case in point:  My answer above doesn't seem to accomplish your first
goal, which (I thought) was how to describe to the shell a parser for
information in arbitrary formats from various sources about assorted
system state.  (The answer to which seems to be that no, zsh doesn't
have an internal equivalent of lex/yacc; the closest thing likely is
zregexparse, which is entirely undocumented except for the examples in
_regex_arguments in the completion system.)

