From zsh-workers-return-6924-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Jun 29 14:20:38 1999
Return-Path: <zsh-workers-return-6924-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 9399 invoked from network); 29 Jun 1999 14:20:36 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 29 Jun 1999 14:20:36 -0000
Received: (qmail 1760 invoked by alias); 29 Jun 1999 14:20:09 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 6924
Received: (qmail 1750 invoked from network); 29 Jun 1999 14:20:08 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer david.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: "Sven Wischnowsky" <wischnow@informatik.hu-berlin.de>,
        <zsh-workers@sunsite.auc.dk>
Subject: Is current widget system suitable? RE: new menu selection and Re: New compinstall and bindkey
Date: Tue, 29 Jun 1999 18:20:05 +0400
Message-ID: <002301bec23a$7bb95db0$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="koi8-r"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)
In-Reply-To: <199906291409.QAA24364@beta.informatik.hu-berlin.de>
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2314.1300

> If we change it we should probably give another widget a special
> meaning in menu-select so that we have one for the current behaviour
> and one for `leave menu-selection and accept the current match'. With
> that users could do a `bindkey -M menuselect ...' to get their
> prefered behavior. So: any suggestions for which widget we should use?
> (Remember that one couldn't use this widget to leave menu-select,
> then.) And what should be the default?
>

I wanted to write about this anyway. Unfortunately, current widget system is not
well suited for programming (in user-defined widgets). Currently widgets mostly
are "high-level" ones, that do fairly complex tasks. That was fine when all
widgets were builtin ones. But now more of a low-level, primitive widgets are
needed - that do some well defined atomic action. Good example is completion.
What is needed is probably such primitives as next-match, previous-match,
insert-match, exit-menu etc. Using these most of other tasks could be easily
porgrammed with user-defined widgets - and if some prove universally useful,
they could be implemented as builtin.

This assumes, that user-defined widgets work. As my recent example shows, not
quite :-)

/andrej

