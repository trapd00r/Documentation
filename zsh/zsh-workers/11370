From zsh-workers-return-11370-mason-zsh=primenet.com.au@sunsite.auc.dk Mon May 15 11:40:29 2000
Return-Path: <zsh-workers-return-11370-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16457 invoked from network); 15 May 2000 11:40:28 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 15 May 2000 11:40:28 -0000
Received: (qmail 14787 invoked by alias); 15 May 2000 11:40:18 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 11370
Received: (qmail 14778 invoked from network); 15 May 2000 11:40:18 -0000
Date: Mon, 15 May 2000 13:40:14 +0200 (MET DST)
Message-Id: <200005151140.NAA15701@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: "Bart Schaefer"'s message of Mon, 15 May 2000 11:31:59 +0000
Subject: Re: PATCH: Re: splitting with empty separator.


Bart Schaefer wrote:

> ...
> 
> Now here's 3.1.7-pre-3 with 11368 applied:
> 
> zagzig% a="$(print -P '\0')"
> zagzig% b=(${(s::)a}); print $#b
> 2
> zagzig% print -R - "$b" | cat -v
> ^@ 
> zagzig% print -R - "$a" | cat -v
> ^@
> 
> What's the second character in $b in 3.1.7-pre-3?

Eh?

  % ./zsh -f
  % a="$(print -P '\0')"
  % b=(${(s::)a}); print $#b
  1
  % x="$b[1]"
  % echo $#x
  1

Does anyone else see the `2' (it would be `second element')?


Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

