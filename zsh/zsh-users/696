From zsh-workers-request@euclid.skiles.gatech.edu Sat Feb 22 04:49:32 1997
Return-Path: <zsh-workers-request@euclid.skiles.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 3639 invoked from network); 22 Feb 1997 04:49:30 -0000
Received: from euclid.skiles.gatech.edu (list@130.207.146.50)
  by coral.primenet.com.au with SMTP; 22 Feb 1997 04:49:30 -0000
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id XAA01732; Fri, 21 Feb 1997 23:43:12 -0500 (EST)
Resent-Date: Fri, 21 Feb 1997 23:23:16 -0500 (EST)
Message-Id: <9702220423.AA01074@tallowcross.uni-frankfurt.de>
Content-Type: text/plain
Mime-Version: 1.0 (NeXT Mail 3.3 v118.2)
In-Reply-To: <26145.199702211512@stone.dcs.warwick.ac.uk>
X-Nextstep-Mailer: Mail 3.3 (Enhance 1.3)
From: Uli Zappe <uli@tallowcross.uni-frankfurt.de>
Date: Sat, 22 Feb 97 05:23:57 +0100
To: zsh-users@math.gatech.edu
Subject: Re: 2 more questions
References: <26145.199702211512@stone.dcs.warwick.ac.uk>
Resent-Message-ID: <"KFjPO2.0.IM.pId3p"@euclid>
Resent-From: zsh-users@math.gatech.edu
X-Mailing-List: <zsh-users@math.gatech.edu> archive/latest/696
X-Loop: zsh-users@math.gatech.edu
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Hi,

first, a LOT of thanks to you all for all of your answers! :-))

My second problem was easily solved by print -l which fits my needs  
perfectly. It's the same as echo "$VARIABLE" in sh (the quotes make  
for a newline there) which doesn't work in zsh.


The first, however, proved more tricky, mainly because I failed to  
make clear that I'd really need the stdout of the foregoing process  
in a VARIABLE, because I need it TWO times in the command  
afterwards.

Actually, my task was the following:

    cat $FILE | mv $FIELD1_IN_LINEX_OF_FILE $FIELD2_IN_LINEX_OF_FILE

I thought I had read of such a variable in zsh somewhere and just  
couldn't find it anymore, but judging by your comments I was simply  
mistaken.

What I tried then was a

      $(cat $FILE | awk '{printf("mv %s %s\n",$1,$2)}')

This works perfectly with only one line in $FILE, but I couldn't  
get it to work with more than one. Obviously the shell interprets  
the WHOLE output of &(...) as always ONE SINGLE command no matter  
what I do.

So I ended up with

      IFS="
      "
      LINES=($(cat $FILE))
      IFS=$DEFAULT_IFS
      for LINE in $LINES
      do
      $(echo $LINE | awk '{printf("mv %s %s\n",$1,$2)}')
      done

which is the best solution I was able to find.

Thanks again!


                Bye
                        Uli

______________________________________________________________________

Uli Zappe               E-Mail: uli@tallowcross.uni-frankfurt.de
                                (NeXTMail,Mime,ASCII) PGP on request
Lorscher Strasse 5      WWW:    -
D-60489 Frankfurt       Fon:    +49 (69) 9784 0007
Germany                 Fax:    +49 (69) 9784 0042

staff member of NEXTTOYOU - the German NEXTSTEP/OPENSTEP magazine
______________________________________________________________________

