From raymond@es.ele.tue.nl Sat Jun 22 03:03:50 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by melb.werple.net.au (8.7.5/8.7.3/2) with ESMTP id DAA25487 for <mason@werple.mira.net.au>; Sat, 22 Jun 1996 03:03:48 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id MAA05112; Fri, 21 Jun 1996 12:55:20 -0400 (EDT)
Resent-Date: Fri, 21 Jun 1996 12:55:20 -0400 (EDT)
Date: Fri, 21 Jun 1996 18:54:18 +0200 (METDST)
Message-Id: <199606211654.SAA06592@krait.es.ele.tue.nl>
From: Raymond Nijssen <raymond@es.ele.tue.nl>
To: A.Main@dcs.warwick.ac.uk
CC: zsh-workers@math.gatech.edu
In-reply-to: <1561.199606211329@stone.dcs.warwick.ac.uk> (message from Zefram
	on Fri, 21 Jun 1996 14:29:16 +0100 (BST))
Subject: Re: quoting bug
Resent-Message-ID: <"DCi773.0.nF1.tFjon"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/1416
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu
Content-Length: 1165
Status: O

::: "Z" == Zefram  <A.Main@dcs.warwick.ac.uk> writes:

 >> zsh fails to break up strings properly where other shells do the right thing.
 > setopt SH_WORD_SPLIT


Thanks for the swift reply.  Sorry that it appears to be a FAQ.

I can see the point made in the FAQ regarding the usefulness of this feature.

Mainly for compatibility reasons, I can not see why the incompatible behavior
is the default.

Especially because it's biting me :-{ since setopts are not inherited across
subshell invocations.  That is, this doesn't seem to be the case, though I
couldn't find anything in the documentation whether or not that is supposed to
happen.

Also, adding this setopt to my ~/.zshenv doesn't help either since the
subshells start with #!/usr/bin/zsh -f   (which is a very useful option to
prevent destruction of the enviroment constructed in the parent script)


So the only two ways around this that I can see are either adding this setopt
to /etc/zshenv, which is clearly unacceptable on a multi-user system, or
modification of all shell scripts .... :-(

Should invoking zsh via a link to `ksh' affect the zsh -f flag?  AFAIK, `ksh
-f' is not defined.

-Raymond


