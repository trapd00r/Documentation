From zsh-workers-return-7900-mason-zsh=primenet.com.au@sunsite.auc.dk Fri Sep 17 08:29:17 1999
Return-Path: <zsh-workers-return-7900-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 15989 invoked from network); 17 Sep 1999 08:29:16 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 17 Sep 1999 08:29:16 -0000
Received: (qmail 8024 invoked by alias); 17 Sep 1999 08:29:08 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 7900
Received: (qmail 8017 invoked from network); 17 Sep 1999 08:29:07 -0000
Date: Fri, 17 Sep 1999 10:29:03 +0200 (MET DST)
Message-Id: <199909170829.KAA02161@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: Adam Spiers's message of Thu, 16 Sep 1999 16:51:13 +0100
Subject: Re: Stopping wrap-round in menu completion?


[ list changed to workers ]

Adam Spiers wrote:

> Is it possible to prevent wrap-round (looping) in menu completion?  I
> have a _history_complete_word which returns unsorted matches via
> compgen -V (hence sorted by the time they went in the history), but if
> I menu complete beyond the oldest match, I'd like nothing to happen.

Not in the C-code. However for a bindable command in the new
completion system you can do that.

Dunno if the patch is worth including, but why not...

Try `compconf history_stop=yes' or `compconf history_stop=verbose'.

Bye
 Sven

diff -u oldcompletion/Commands/_history_complete_word Completion/Commands/_history_complete_word
--- oldcompletion/Commands/_history_complete_word	Fri Sep 17 09:32:41 1999
+++ Completion/Commands/_history_complete_word	Fri Sep 17 10:26:30 1999
@@ -2,9 +2,30 @@
 
 local expl
 
-if [[ -n "$compconfig[history_sort]" ]]; then
-  _description expl 'history word'
+if [[ -n "$compstate[old_list]" && -n "$compconfig[history_stop]" ]]; then
+  if [[ -z "$_hist_menu_end" &&
+        compstate[old_insert] -lt _hist_menu_length ]]; then
+    compstate[old_list]=keep
+    compstate[insert]=$((compstate[old_insert]+1))
+  else
+    _hist_menu_end=yes
+    if [[ "$compconfig[history_stop]" = verbose ]]; then
+      _message 'end of history reached'
+    else
+      compstate[old_list]=keep
+      compstate[insert]=_hist_menu_length
+    fi
+  fi
 else
-  _description -V expl 'history word'
+  if [[ -n "$compconfig[history_sort]" ]]; then
+    _description expl 'history word'
+  else
+    _description -V expl 'history word'
+  fi
+  compgen "$expl[@]" -Q -H 0 ''
+  compstate[insert]=1
+  if [[ -n "$compconfig[history_stop]" ]]; then
+    _hist_menu_length="$compstate[nmatches]"
+    _hist_menu_end=''
+  fi
 fi
-compgen "$expl[@]" -Q -H 0 ''
diff -u od/Zsh/compsys.yo Doc/Zsh/compsys.yo
--- od/Zsh/compsys.yo	Fri Sep 17 09:32:18 1999
+++ Doc/Zsh/compsys.yo	Fri Sep 17 10:21:33 1999
@@ -1467,6 +1467,13 @@
 alphabetically instead of keeping them in the order in which they
 appear in the history (from youngest to oldest).
 )
+item(tt(history_stop))(
+If this is set to a non-empty string, the tt(_history_complete_word)
+bindable command will always insert matches as if menu-completion were 
+started and it will stop when the last match is inserted. If this key
+is set to tt(verbose) a message will be displayed when the last match
+is reached.
+)
 item(tt(cvs_disable_stat))(
 This is used by the completion function for the tt(cvs) command. If it 
 is set to a non-empty value, this function will not try to use the

--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

