From zsh-users-return-3631-mason-zsh=primenet.com.au@sunsite.dk Mon Feb 19 09:56:07 2001
Return-Path: <zsh-users-return-3631-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4621 invoked from network); 19 Feb 2001 09:56:06 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 19 Feb 2001 09:56:06 -0000
Received: (qmail 20212 invoked by alias); 19 Feb 2001 09:55:55 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 3631
Received: (qmail 20198 invoked from network); 19 Feb 2001 09:55:55 -0000
Date: Mon, 19 Feb 2001 10:55:51 +0100 (MET)
Message-Id: <200102190955.KAA10015@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-users@sunsite.dk
CC: Hannu Koivisto <azure@iki.fi>
In-reply-to: Hannu Koivisto's message of 19 Feb 2001 11:52:40 +0200
Subject: Re: How to create unnamed temporary arrays?


Hannu Koivisto wrote:

> Greetings,
> 
> I'm currently using something like this to list the base names of
> files in /usr/local/etc/packages/ directory, each name on its own
> line:
> 
> echo ${(F)$(echo /usr/local/etc/packages/*(.:t:r))}
> 
> This has the obvious problem that it doesn't work if filenames have
> spaces in them.  I just couldn't figure out any way to do something
> corresponding to:
> 
> kala=(/usr/local/etc/packages/*(.:t:r))
> echo ${(F)kala}
> 
> without creating that temporary array variable.  Not that this
> really matters in this case, but I've faced situations earlier
> where avoiding the temporary name might have been more convenient
> and now I finally have a simple enough example to demonstrate it.
> 
> So, is there a way?  I'm using zsh versions 3.1.9-dev-6 and
> 3.1.9-dev-8 from Debian GNU/Linux testing/unstable and stable,
> respectively.

If I got that right and you really only want those filenames one per
line, you can just use:

  print -l /usr/local/etc/packages/*(.:t:r)

(the -l option to print makes it print the argument one per line).

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

