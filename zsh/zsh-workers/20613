From zsh-workers-return-20613-mason-zsh=primenet.com.au@sunsite.dk Thu Dec 09 17:22:28 2004
Return-Path: <zsh-workers-return-20613-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 22688 invoked from network); 9 Dec 2004 17:22:28 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 9 Dec 2004 17:22:28 -0000
Received: (qmail 64164 invoked from network); 9 Dec 2004 17:22:22 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 9 Dec 2004 17:22:22 -0000
Received: (qmail 24933 invoked by alias); 9 Dec 2004 17:22:07 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 20613
Received: (qmail 24918 invoked from network); 9 Dec 2004 17:22:06 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 9 Dec 2004 17:22:06 -0000
Received: (qmail 63782 invoked from network); 9 Dec 2004 17:22:06 -0000
Received: from mailhost1.csr.com (HELO MAILSWEEPER01.csr.com) (81.105.217.43)
  by a.mx.sunsite.dk with SMTP; 9 Dec 2004 17:22:03 -0000
Received: from exchange03.csr.com (unverified [10.100.137.60]) by MAILSWEEPER01.csr.com
 (Content Technologies SMTPRS 4.3.12) with ESMTP id <T6dc541a8270a6c8d01884@MAILSWEEPER01.csr.com> for <zsh-workers@sunsite.dk>;
 Thu, 9 Dec 2004 17:20:49 +0000
Received: from news01.csr.com ([10.103.143.38]) by exchange03.csr.com with Microsoft SMTPSVC(5.0.2195.6713);
	 Thu, 9 Dec 2004 17:22:50 +0000
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.13.1/8.12.11) with ESMTP id iB9HM2mN009940
	for <zsh-workers@sunsite.dk>; Thu, 9 Dec 2004 17:22:02 GMT
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.13.1/8.13.1/Submit) with ESMTP id iB9HM2IL009937
	for <zsh-workers@sunsite.dk>; Thu, 9 Dec 2004 17:22:02 GMT
Message-Id: <200412091722.iB9HM2IL009937@news01.csr.com>
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: PATCH: another match-words-by-style fix
Date: Thu, 09 Dec 2004 17:22:01 +0000
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 09 Dec 2004 17:22:50.0326 (UTC) FILETIME=[B5744F60:01C4DE13]
X-Spam-Checker-Version: SpamAssassin 2.63 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, hits=0.0 required=6.0 tests=none autolearn=no version=2.63
X-Spam-Hits: 0.0

We're heading into too-clever-by-half territory here...

While I was looking at match-words-by-style, I noticed it was
inconsistent if the cursor was inside a quoted word 'like this'.  It
could think the word was "this'", for example.  This fixes it up.

Although potentially being able to look inside an individual word is a
useful feature, it's an unexpected effect if widget is documented as
producing words as the shell sees them.

Index: Functions/Zle/match-words-by-style
===================================================================
RCS file: /cvsroot/zsh/zsh/Functions/Zle/match-words-by-style,v
retrieving revision 1.3
diff -u -r1.3 match-words-by-style
--- Functions/Zle/match-words-by-style	9 Dec 2004 14:44:47 -0000	1.3
+++ Functions/Zle/match-words-by-style	9 Dec 2004 17:19:02 -0000
@@ -69,13 +69,13 @@
 
 local wordstyle spacepat wordpat1 wordpat2 opt charskip wordchars wordclass
 local match mbegin mend pat1 pat2 word1 word2 ws1 ws2 ws3 skip
-local MATCH MBEGIN MEND
+local nwords MATCH MBEGIN MEND
 
 if [[ -z $curcontext ]]; then
     local curcontext=:zle:match-words-by-style
 fi
 
-while getopts "w:s:c:C:" opt; do
+while getopts "w:s:c:C:tT" opt; do
   case $opt in
     (w)
     wordstyle=$OPTARG
@@ -107,6 +107,7 @@
   (shell) local bufwords
 	  # This splits the line into words as the shell understands them.
 	  bufwords=(${(z)LBUFFER})
+	  nwords=${#bufwords}
 	  # Work around bug: if stripping quotes failed, a bogus
 	  # space is appended.  Not a good test, since this may
 	  # be a quoted space, but it's hard to get right.
@@ -129,6 +130,23 @@
 	    wordpat2="${(q)wordpat2}"
 	  fi
 	  spacepat='[[:space:]]#'
+
+	  # Assume the words are at the top level, i.e. if we are inside
+	  # 'something with spaces' then we need to ignore the embedded
+	  # spaces and consider the whole word.
+	  bufwords=(${(z)BUFFER})
+	  if (( ${#bufwords[$nwords]} > ${#wordpat1} )); then
+	    # Yes, we're in the middle of a shell word.
+	    # Find out what's in front.
+	    eval pat1='${LBUFFER%%(#b)('${wordpat1}')('${spacepat}')}'
+	    # Now everything from ${#pat1}+1 is wordy
+	    wordpat1=${(q)LBUFFER[${#pat1}+1,-1]}
+
+	    # Likewise at the end...
+	    eval pat2='${RBUFFER##(#b)('${charskip}${spacepat}')('\
+${wordpat2}')('${spacepat}')}'
+	    wordpat2=${(q)RBUFFER[1,-1-${#pat2}]}
+	  fi
 	  ;;
   (*space) spacepat='[[:space:]]#'
            wordpat1='[^[:space:]]##'

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070


**********************************************************************
This email and any files transmitted with it are confidential and
intended solely for the use of the individual or entity to whom they
are addressed. If you have received this email in error please notify
the system manager.

This footnote also confirms that this email message has been swept by
MIMEsweeper for the presence of computer viruses.

www.mimesweeper.com
**********************************************************************

