From zsh-workers-return-12311-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Jul 19 12:09:56 2000
Return-Path: <zsh-workers-return-12311-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 29042 invoked from network); 19 Jul 2000 12:09:52 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 19 Jul 2000 12:09:52 -0000
Received: (qmail 20351 invoked by alias); 19 Jul 2000 12:09:35 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 12311
Received: (qmail 20343 invoked from network); 19 Jul 2000 12:09:29 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer goliath.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: "ZSH workers mailing list" <zsh-workers@sunsite.auc.dk>
Subject: Dynamic loading under Cygwin
Date: Wed, 19 Jul 2000 16:09:20 +0400
Message-ID: <000a01bff17a$2b7b2ca0$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="koi8-r"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400

It looks pretty doable. To do it we need

1. make sure, that symbols get `dllexport' in module source and
`dllimport' everywhere else

2. compile dll and stub library

3. link against stub library

(there may be one more point - I do not know, if Cygwin supports
LD_RUN_PATH or equiv. We may need to install DLLs into $bindir instead
of $libdir).

So

1. It is easy enough. Just let *.mdh files redefine mod_export as
`__declspec(dllimport)' if IMPORTING_MODULE_* is defined and
`__declspec(dllexport)' otherweise. The files are automatically
generated so it needs change in one place only. (It may conflict with
current usage of mod_export - but it shouldn't be so hard to solve).
There may be problems, if Cygwin does not allow more than one
declaration with dllexport flag. This should be doable as well (we can
define dllexport at the *end* of *.mdh files after all *.epro files are
included. Then only real definitions will get dllexport flag).

2. Well, playing with dllwrap shows, that this is trivial. It does
everything in one nice pass; just specify object files and names of
output files.

3. THAT makes me uneasy. It means, that if one module depends on
another, it has to be linked with stub library for the later. Shudder.
While it is definitely possible in closed environment, it makes
stand-alone module compilation even less likely. Stub library is not
needed, if we use dlopen()/dlsym() interface (it hardly makes any
performance difference). May be, it is even possible to automate it
(thus duplicating decent run-time loader on normal OS :-) Else we
eventually should install stub libraries somewhere to be available. May
be, it is easier.

-andrej

Have a nice DOS!
B >>

