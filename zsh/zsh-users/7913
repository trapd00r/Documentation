From zsh-users-return-7913-mason-zsh=primenet.com.au@sunsite.dk Mon Aug 23 19:47:23 2004
Return-Path: <zsh-users-return-7913-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 22733 invoked from network); 23 Aug 2004 19:47:21 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 23 Aug 2004 19:47:21 -0000
Received: (qmail 7346 invoked from network); 23 Aug 2004 19:47:14 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 23 Aug 2004 19:47:14 -0000
Received: (qmail 24629 invoked by alias); 23 Aug 2004 19:46:30 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 7913
Received: (qmail 24619 invoked from network); 23 Aug 2004 19:46:29 -0000
Received: from unknown (HELO a.mx.sunsite.dk) (130.225.247.88)
  by 130.225.247.90 with SMTP; 23 Aug 2004 19:46:29 -0000
Received: (qmail 5909 invoked from network); 23 Aug 2004 19:45:11 -0000
Received: from madrid10.amenworld.com (62.193.203.32)
  by a.mx.sunsite.dk with SMTP; 23 Aug 2004 19:45:09 -0000
Received: from DervishD.pleyades.net (212.Red-80-35-44.pooles.rima-tde.net [80.35.44.212])
	by madrid10.amenworld.com (8.10.2/8.10.2) with ESMTP id i7NJj4118788
	for <zsh-users@sunsite.dk>; Mon, 23 Aug 2004 21:45:05 +0200
Received: from disposable1@telefonica.net by DervishD.pleyades.net with local (Exim MTA 2.05)
	  id <1BzKlh-0006Xj-00>; Mon, 23 Aug 2004 21:46:13 +0200
Date: Mon, 23 Aug 2004 21:46:13 +0200
From: DervishD <disposable1@telefonica.net>
To: zsh-users@sunsite.dk
Subject: Re: Using zle outside zsh
Message-ID: <20040823194613.GA25072@DervishD>
Mail-Followup-To: zsh-users@sunsite.dk
References: <20040823155951.GA24279@DervishD> <Pine.LNX.4.61.0408231018430.5997@toltec.zanshin.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <Pine.LNX.4.61.0408231018430.5997@toltec.zanshin.com>
User-Agent: Mutt/1.4.2.1i
Organization: Pleyades
X-Spam-Checker-Version: SpamAssassin 2.63 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, hits=-0.0 required=6.0 tests=BAYES_44 autolearn=no 
	version=2.63
X-Spam-Hits: -0.0

    Hi Bart :)

 * Bart Schaefer <schaefer@brasslantern.com> dixit:
> >     What I'm thinking is: will it be difficult to use zsh as the
> > command line interpreter?
> This is actually relatively easy to do.  For a working example, see
> Functions/Misc/nslookup in the zsh distribution.

    The problem here is that if the command prints its own prompt, a
code like this:

#!/bin/zsh

emulate -L zsh

zpty telnet telnet

zpty -r telnet response 'telnet>'
print -nr $response

while line=''; vared -e line
do
    [[ "$line" == "quit" ]] && break

    zpty -w telnet "$line"
    zpty -r telnet response 'telnet>'
    print -nr $response
done

zpty -w telnet "quit"
zpty -d telnet


    doesn't work, because the prompt doesn't have a carriage return.
The first 'print -nr' doesn't print anything because the buffers
aren't flushed until a '\n' is printed (in line buffer mode, I mean).

    But the worst problem is in the inner loop. I want zpty to read
all that 'telnet' spits until it finds 'telnet>', but blocks forever.
And if I change the code to just "zpty -r telnet" (that is, no
parameter and no pattern), it spits about 700 bytes of data and
stops, waiting for a buffer to fill (which never does).

    If the command run by zpty doesn't ends its chat with end of
line, is almost impossible to use zsh as a 'frontend' (so to say...).
Am I doing anything wrong?

    Obviously I can change the code above to make it read by lines:

#!/bin/zsh

emulate -L zsh

zpty telnet telnet

zpty -r telnet response 'telnet>'
print -nr $response

while line=''; vared -e line
do
    [[ "$line" == "quit" ]] && break

    zpty -w telnet "$line"
    while zpty -r telnet response
    do
        print -nr $response
    done
done

zpty -w telnet "quit"
zpty -d telnet

    This works, but never prints the command prompt, since it doesn't
have "\n", and moreover the inner loop blocks forever. Making the
zpty non-blocking leads to a race condition (solved by adding some
delay between the writing and the reading in the inner loop) :(( I
think that this is more difficult than I thought when the command
doesn't ends with a carriage return, which is the common case since I
want to use zle as a frontend for commands that prints their own
prompt... Any suggestion?

    Raúl Núñez de Arenas Coronado

-- 
Linux Registered User 88736
http://www.pleyades.net & http://raul.pleyades.net/

