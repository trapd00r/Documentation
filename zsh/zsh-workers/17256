From zsh-workers-return-17256-mason-zsh=primenet.com.au@sunsite.dk Wed May 29 17:51:03 2002
Return-Path: <zsh-workers-return-17256-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 24666 invoked from network); 29 May 2002 17:51:03 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 29 May 2002 17:51:03 -0000
Received: (qmail 4899 invoked by alias); 29 May 2002 17:50:54 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 17256
Received: (qmail 4882 invoked from network); 29 May 2002 17:50:53 -0000
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: Re: PATCH: Re: Odd trap return status 
In-reply-to: "Bart Schaefer"'s message of "Wed, 29 May 2002 10:27:29 PDT."
             <Pine.LNX.4.44.0205291021500.2351-100000@ns1.sodaware.com> 
Date: Wed, 29 May 2002 18:50:26 +0100
Message-ID: <15927.1022694626@csr.com>
From: Peter Stephenson <pws@csr.com>

Bart Schaefer wrote:
> On Wed, 29 May 2002, Peter Stephenson wrote:
> 
> > We save and restore a whole load of status for all traps, which isn't
> > necessary if they are fake traps which are never caused by signals.
> > This is a minimal patch for that.
> 
> Hrm.  This seems wrong to me.  TRAPDEBUG definitely MUST NOT affect the
> return code, etc., of the surrounding function.
> 
> It would seem to me that even TRAPEXIT should not change values such as
> list_pipe_job and badcshglob.

I think you may be missing the point a bit, unless I am...

  trap 'return 1' DEBUG

would already cause a return from the enclosing function, only the
return status would get lost.  I haven't changed the command flow at
all, only the effect on status variables.  So it seems to me illogical
to insist that the return value be lost.  (However, you can argue that
applies to traps from real signals, too.)

The other stuff --- list_pipe_job, etc. --- should be maintained
consistently anyway.  The point about saving it was not because the
function shouldn't affect the surroundings --- if it was, we would need
to do it in a whole load of other cases such as precmd --- but because
the signal could happen at a point where the shell was already in the
middle of executing something else, and this could cause an inconsistent
state which we needed to recover from.

I think.

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR Ltd., Science Park, Milton Road,
Cambridge, CB4 0WH, UK                          Tel: +44 (0)1223 392070


**********************************************************************
The information transmitted is intended only for the person or
entity to which it is addressed and may contain confidential 
and/or privileged material. 
Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by 
persons or entities other than the intended recipient is 
prohibited.  
If you received this in error, please contact the sender and 
delete the material from any computer.
**********************************************************************

