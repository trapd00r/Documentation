From zsh-workers-return-6210-mason-zsh=primenet.com.au@sunsite.auc.dk Tue May 04 08:59:22 1999
Return-Path: <zsh-workers-return-6210-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20280 invoked from network); 4 May 1999 08:59:21 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 4 May 1999 08:59:21 -0000
Received: (qmail 7514 invoked by alias); 4 May 1999 08:58:53 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 6210
Received: (qmail 7507 invoked from network); 4 May 1999 08:58:50 -0000
Message-Id: <9905040834.AA12933@ibmth.df.unipi.it>
To: zsh-workers@sunsite.auc.dk
Subject: Re: ZSH 2GB File Limit (Solaris 2.6) 
In-Reply-To: "Peter Bray"'s message of "Tue, 04 May 1999 17:24:39 DFT."
             <Pine.GSO.4.10.9905041712120.595-100000@northam> 
Date: Tue, 04 May 1999 10:34:21 +0200
From: Peter Stephenson <pws@ibmth.df.unipi.it>

Peter Bray wrote:
> 	The following command "cat /dev/zero > junk" was found to stop
> writing to the file junk when it reached 2 GB in size. Using /bin/ksh
> with the same command on the same VxFS file system (with large file
> support turned on) resulted in the command running until it filled up the
> disk (there was 6GB remaining on the disk). Having recently compile a dew
> GNU tools I notice they turn on large file support durring compilation.

That's this code from bash's configure.  What do we do, just copy it and
change BASH to ZSH?  The configure system has a fairly free-wheeling
copyright.  Are there any other issues?  I don't know anything about large
file support.

dnl
dnl If available, use support for large files unless the user specified
dnl one of the CPPFLAGS, LDFLAGS, or LIBS variables (<eggert@twinsun.com>
dnl via GNU patch 2.5)
dnl
AC_DEFUN(BASH_LARGE_FILE_SUPPORT,
[AC_MSG_CHECKING(whether large file support needs explicit enabling)
ac_getconfs=''
ac_result=yes
ac_set=''
ac_shellvars='CPPFLAGS LDFLAGS LIBS'
for ac_shellvar in $ac_shellvars; do
  case $ac_shellvar in
  CPPFLAGS) ac_lfsvar=LFS_CFLAGS ac_lfs64var=LFS64_CFLAGS ;;
  *) ac_lfsvar=LFS_$ac_shellvar ac_lfs64var=LFS64_$ac_shellvar ;;
  esac
  eval test '"${'$ac_shellvar'+set}"' = set && ac_set=$ac_shellvar
  (getconf $ac_lfsvar) >/dev/null 2>&1 || { ac_result=no; break; }
  ac_getconf=`getconf $ac_lfsvar`
  ac_getconf64=`getconf $ac_lfs64var`
  ac_getconfs=$ac_getconfs$ac_getconf\ $ac_getconf64
  eval ac_test_$ac_shellvar="\$ac_getconf\ \$ac_getconf64"
done
case "$ac_result$ac_getconfs" in
yes) ac_result=no ;;
esac
case "$ac_result$ac_set" in
yes?*) ac_result="yes, but $ac_set is already set, so use its settings"
esac
AC_MSG_RESULT($ac_result)
case $ac_result in
yes)
  for ac_shellvar in $ac_shellvars; do
    eval $ac_shellvar=\$ac_test_$ac_shellvar
  done ;;
esac
])

-- 
Peter Stephenson <pws@ibmth.df.unipi.it>       Tel: +39 050 844536
WWW:  http://www.ifh.de/~pws/
Dipartimento di Fisica, Via Buonarroti 2, 56127 Pisa, Italy

