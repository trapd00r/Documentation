From zsh-workers-return-7656-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Sep 06 09:56:11 1999
Return-Path: <zsh-workers-return-7656-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 17893 invoked from network); 6 Sep 1999 09:56:10 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 6 Sep 1999 09:56:10 -0000
Received: (qmail 27810 invoked by alias); 6 Sep 1999 09:55:56 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 7656
Received: (qmail 27802 invoked from network); 6 Sep 1999 09:55:55 -0000
Date: Mon, 6 Sep 1999 11:55:50 +0200 (MET DST)
Message-Id: <199909060955.LAA29854@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: Adam Spiers's message of Sun, 5 Sep 1999 22:45:40 +0100
Subject: Re: Miscellaneous buglettes


Adam Spiers wrote:

>   - In the Completion System/Completion Functions section of the
>     info page, the bit describing _long_options refers to -help
>     where it should refer to --help.  This is odd, because the
>     corresponding .yo file refers to --help AFAICS.  I've no idea
>     how to fix this.

Hm, just using `tt(-)tt(-help)' seems to work.

Btw, the second example for `_arguments' is messed up in the info
file, while the first one isn't. How comes that?

Bye
 Sven

diff -u od/Zsh/compsys.yo Doc/Zsh/compsys.yo
--- od/Zsh/compsys.yo	Mon Sep  6 11:54:15 1999
+++ Doc/Zsh/compsys.yo	Mon Sep  6 11:53:53 1999
@@ -924,10 +924,10 @@
 string from the line may contain more than one such option letter.
 
 The function can also be made to automatically complete long options
-for commands that support the `tt(--help)' option as, for example,
-most of the GNU commands do. For this, the string `tt(--)' must be
+for commands that support the `tt(-)tt(-help)' option as, for example,
+most of the GNU commands do. For this, the string `tt(-)tt(-)' must be
 given as one argument and if it is, the command from the line is
-invoked with the `tt(--help)' option and its output is parsed to find
+invoked with the `tt(-)tt(-help)' option and its output is parsed to find
 possible option names. Note that this means that you should be careful
 to make sure that this feature is not used for a command that does not
 support this option.
@@ -935,13 +935,13 @@
 For options that get an argument after a `tt(=)', the function also tries
 to automatically find out what should be completed as the argument.
 The possible completions for option-arguments can be described with
-the arguments after the `tt(--)' (which are not used as described
+the arguments after the `tt(-)tt(-)' (which are not used as described
 above). Each argument contains one description of the form
 `var(pattern)tt(:)var(message)tt(:)var(action)'. The var(message) and
 the var(action) have the same format as for the normal option
 descriptions described above. The var(action) will be executed to
 complete arguments of options whose description in the output of the
-command from the line with the `tt(--help)' option matches the
+command from the line with the `tt(-)tt(-help)' option matches the
 var(pattern). For example:
 
 example(_arguments -- '*\*'     '(yes no)' \ 
@@ -963,17 +963,17 @@
 it about this as described for the normal option descriptions above.
 
 The option `tt(-i) var(patterns)' (which must be given after the
-`tt(--)') can be used to give patterns for options which should not be
+`tt(-)tt(-)') can be used to give patterns for options which should not be
 completed. The patterns can be given as the name of an array parameter
 or as a literal list in parentheses. E.g. `tt(-i
-"(--(en|dis)able-FEATURE*)")' will make the options
-`tt(--enable-FEATURE)' and `tt(--disable-FEATURE)' be ignored. The
-option `tt(-s) var(pairs)' (again, after the `tt(--)') can be used to
+"LPAR()-)tt(-(en|dis)able-FEATURE*RPAR()")' will make the options
+`tt(-)tt(-enable-FEATURE)' and `tt(-)tt(-disable-FEATURE)' be ignored. The
+option `tt(-s) var(pairs)' (again, after the `tt(-)tt(-)') can be used to
 describe option aliases. Each var(pair) consists of a pattern and a
 replacement. E.g. some tt(configure)-scripts describe options only as
-`tt(--enable-foo)', but also accept `tt(disable-foo)'. To allow
-completion of the second form, one would use `tt(-s "(#--enable-
---disable-)")'.
+`tt(-)tt(-enable-foo)', but also accept `tt(disable-foo)'. To allow
+completion of the second form, one would use `tt(-s "LPAR()#-)tt(-enable-
+-)tt(-disable-RPAR()")'.
 
 Finally, this function uses one configuration key: tt(option_prefix). If
 this is set to a string containing `tt(short)' or `tt(all)' as a

--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

