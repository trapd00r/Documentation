From zsh-workers-return-14322-mason-zsh=primenet.com.au@sunsite.dk Sun May 13 05:01:50 2001
Return-Path: <zsh-workers-return-14322-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 26625 invoked from network); 13 May 2001 05:01:49 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 13 May 2001 05:01:49 -0000
Received: (qmail 13100 invoked by alias); 13 May 2001 05:01:41 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 14322
Received: (qmail 13082 invoked from network); 13 May 2001 05:01:39 -0000
X-Authentication-Warning: paullew-ultra.cisco.com: paullew set sender to paullew@cisco.com using -f
From: Paul Lew <paullew@cisco.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <15102.5367.376732.431694@paullew-ultra.cisco.com>
Date: Sat, 12 May 2001 22:00:39 -0700
To: zsh-workers@sunsite.dk
cc: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Subject: Re: architecture independent wordcode files (.zwc)
In-Reply-To: <1010513004337.ZM7197@candle.brasslantern.com>
References: <15101.39024.899564.120545@paullew-ultra.cisco.com>
	<1010513004337.ZM7197@candle.brasslantern.com>
X-Mailer: VM 6.92 under Emacs 20.7.1

>>>>> "Bart" == Bart Schaefer <schaefer@candle.brasslantern.com> writes:

    Bart> On May 12,  1:09pm, Paul Lew wrote:
    Bart> } Subject: architecture independent wordcode files (.zwc)
    Bart> }
    Bart> }     Right now we have .zshenv compiled into .zshenv.zwc
    Bart> }     and .zshrc compiled into .zshrc.zwc on the solaris
    Bart> }     machine. However, this does not work for the Linux. I
    Bart> }     got zsh cored when reading the .zwc file for the wrong
    Bart> }     architecture.
    Bart> }
    Bart> }     The emacs .elc files works on different endian
    Bart> }     machines. Any plan to do the same with .zwc files?

    Bart> It's supposed to work -- the zcompile doc says:

    Bart> The created file always contains two versions of the
    Bart> compiled format, one for big-endian machines and one for
    Bart> small-endian machines.  The upshot of this is that the
    Bart> compiled file is machine indepen- dent and if it is read or
    Bart> mapped, only one half of the file is actually used (and
    Bart> mapped).

    Bart> If possible, please send a stack trace from your core dump
    Bart> to zsh-workers.  Thanks.

muggle paullew Src>> uname -sr
Linux 2.2.14-5.0mvfs

muggle paullew Src>> file ~/zsh-i686-gdb.core
/users/paullew/zsh-i686-gdb.core: ELF 32-bit LSB core file of 'zsh'
(signal 11), Intel 80386, version 1

muggle paullew Src>> gdb =zsh ~/zsh-i686-gdb.core
GNU gdb 19991004
Copyright 1998 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and
you are
welcome to change it and/or distribute copies of it under certain
conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for
details.
This GDB was configured as "i386-redhat-linux"...
Core was generated by `zsh'.
Program terminated with signal 11, Segmentation fault.
Reading symbols from /lib/libdl.so.2...done.
Reading symbols from /lib/libnsl.so.1...done.
Reading symbols from /lib/libtermcap.so.2...done.
Reading symbols from /lib/libm.so.6...done.
Reading symbols from /lib/libc.so.6...done.
Reading symbols from /lib/ld-linux.so.2...done.
Reading symbols from /lib/libnss_files.so.2...done.
Reading symbols from /lib/libnss_nis.so.2...done.
#0  0x400b5c27 in strlen (str=0x4001aff8 <Address 0x4001aff8 out of #bounds>)
    at ../sysdeps/i386/strlen.c:27
27      ../sysdeps/i386/strlen.c: No such file or directory.
(gdb) where
#0  0x400b5c27 in strlen (str=0x4001aff8 <Address 0x4001aff8 out of #bounds>)
    at ../sysdeps/i386/strlen.c:27
#1  0x80a8a59 in dupstring (s=0x4001aff8 <Address 0x4001aff8 out of #bounds>)
    at string.c:39
#2  0x809d869 in ecgetstr (s=0xbffff90c, dup=2, tok=0xbffff880) at parse.c:2110
#3  0x8063ded in addvars (state=0xbffff90c, pc=0x4001a374, export=0)
    at exec.c:1505
#4  0x8061da0 in execsimple (state=0xbffff90c) at exec.c:753
#5  0x8061f06 in execlist (state=0xbffff90c, dont_change_job=1, exiting=0)
    at exec.c:806
#6  0x8061d07 in execode (p=0x80f0288, dont_change_job=1, exiting=0)
    at exec.c:729
#7  0x8079f84 in source (s=0xbffff974 "/users/paullew/.zshenv") at init.c:996
#8  0x807a230 in sourcehome (s=0x80bc7e0 ".zshenv") at init.c:1044
#9  0x8079c49 in run_init_scripts () at init.c:893
#10 0x807aa26 in zsh_main (argc=1, argv=0xbffffb34) at init.c:1204
#11 0x80517b0 in main (argc=1, argv=0xbffffb34) at ./main.c:37
(gdb) quit

Please let me know if more info is needed.  Thanks.

