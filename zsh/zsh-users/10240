From zsh-users-return-10240-mason-zsh=primenet.com.au@sunsite.dk Wed May 10 21:22:12 2006
Return-Path: <zsh-users-return-10240-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 10118 invoked from network); 10 May 2006 21:22:08 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.1 (2006-03-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00,
	FORGED_RCVD_HELO autolearn=ham version=3.1.1
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 10 May 2006 21:22:08 -0000
Received: (qmail 24872 invoked from network); 10 May 2006 21:22:02 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 10 May 2006 21:22:02 -0000
Received: (qmail 22910 invoked by alias); 10 May 2006 21:21:54 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 10240
Received: (qmail 22900 invoked from network); 10 May 2006 21:21:54 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 10 May 2006 21:21:54 -0000
Received: (qmail 23769 invoked from network); 10 May 2006 21:21:54 -0000
Received: from ns9.hostinglmi.net (213.194.149.146)
  by a.mx.sunsite.dk with SMTP; 10 May 2006 21:21:53 -0000
Received: from 212.red-80-35-44.staticip.rima-tde.net ([80.35.44.212] helo=localhost)
	by ns9.hostinglmi.net with esmtpa (Exim 4.52)
	id 1Fdw8F-0003qV-VL; Wed, 10 May 2006 23:22:08 +0200
Date: Wed, 10 May 2006 23:21:55 +0200
From: DervishD <zsh@dervishd.net>
To: Lloyd Zusman <ljz@asfast.com>
Cc: zsh-users@sunsite.dk
Subject: Re: File locking within zsh?
Message-ID: <20060510212155.GB5555@DervishD>
Mail-Followup-To: Lloyd Zusman <ljz@asfast.com>, zsh-users@sunsite.dk
References: <87r7324zyh.fsf@asfast.com> <20060510062930.GB4340@DervishD> <87y7xai4ev.fsf@asfast.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <87y7xai4ev.fsf@asfast.com>
User-Agent: Mutt/1.4.2.1i
Organization: DervishD
X-AntiAbuse: This header was added to track abuse, please include it with any abuse report
X-AntiAbuse: Primary Hostname - ns9.hostinglmi.net
X-AntiAbuse: Original Domain - sunsite.dk
X-AntiAbuse: Originator/Caller UID/GID - [0 0] / [47 12]
X-AntiAbuse: Sender Address Domain - dervishd.net
X-Source: 
X-Source-Args: 
X-Source-Dir: 

    Hola Lloyd :)))

 * Lloyd Zusman <ljz@asfast.com> dixit:
> >> I know that I can do this with a number of compiled executables,
> >> but I'm looking for a zsh-only solution.
> >
> >     Apart from the 'ln' trick, you can do this in Perl if you don't
> > want compiled executables.
> 
> Well, the perl interpreter is a compiled executable, and a rather
> heavy one, at that.  I'm trying to avoid spawning any extra
> processes.

    OK. I thought that your problem was that you didn't want to write
it in C, for example. If you're trying to avoid heavy binaries, avoid
Perl ;))

> >     If you could ellaborate on the problem you're trying to solve, I
> > can try to give a better solution.
> 
> I'm writing a zsh shell function that might be invoked within concurrent
> terminal sessions.  There's a critical section of code within this shell
> function that I want to protect with an exclusive lock.  I only need to
> protect this critical section from other invocations of this same shell
> function.

    OK, then probably the 'ln' solution will do.
 
> Perhaps I can write a loadable zsh module which can supply this
> capability.

    Probably, but that's a lot of work for something you can achieve
using 'ln'. You can even write a couple of shell functions using 'ln'
to do the locking.

    The only problem I see with the 'ln' solution is that it doesn't
block, you're forced to use a busy-wait loop :((

    If you don't want to use a busy-wait loop, you can try to use a
FIFO (in the filesystem, I mean) or a socket. Synchronizing more than
two tasks using those mechanism is tricky, but I think it can be
done. Think of your problem not as a "locking problem" but just as an
"IPC problem". A bit complex, anyway, because the shell doesn't
provide atomic operations that block (AFAIK).

    Of course, a zsh module for doing locking would be great ;) (or
adding the needed functions to zsh/files, for example).

> >     Good luck :)
> 
> Muchas gracias. :)

    De nada :))) I'm happy of reading you again :)

    BTW, this issue has been partially addressed in zsh-users 8632
and 8633.

    Raúl Núñez de Arenas Coronado

-- 
Linux Registered User 88736 | http://www.dervishd.net
http://www.pleyades.net & http://www.gotesdelluna.net
It's my PC and I'll cry if I want to... RAmen!

