From zsh-workers-return-13869-mason-zsh=primenet.com.au@sunsite.dk Mon Apr 02 09:15:37 2001
Return-Path: <zsh-workers-return-13869-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 10874 invoked from network); 2 Apr 2001 09:15:36 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 2 Apr 2001 09:15:36 -0000
Received: (qmail 47 invoked by alias); 2 Apr 2001 09:15:29 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 13869
Received: (qmail 36 invoked from network); 2 Apr 2001 09:15:28 -0000
Date: Mon, 2 Apr 2001 11:15:29 +0200 (MET DST)
Message-Id: <200104020915.LAA04501@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.dk
In-reply-to: =?iso-8859-1?q?Oliver=20Kiddle?='s message of Fri, 30 Mar 2001
	17:35:01 +0100 (BST)
Subject: Re: Two missing completion functions that bug me


Oliver Kiddle wrote:

> --- Bart Schaefer <schaefer@candle.brasslantern.com> wrote:
> 
> > Yes, but when you're allowed to have other options intervene between
> > an
> > option and its argument (as in `tar -fxv file' for example) there has
> > to
> > be some way to prevent completion from inserting the space after
> > `-f'.
> 
> I accept this but would argue that there are more commands which don't
> allow other options to intervene. Things like tar can be achieved with
> with states. Maybe _arguments needs some way to describe whether or not
> options can intervene between an option and its argument.

Yes, I was beginning to think the same.  Would it be enough to make my 
other patch optional (i.e. adding a option to _arguments to select
either that behaviour or to de-select it)?  Which should be the
default?

> Things get
> messy if more than one of the options take an argument.

If I understand you correctly... I said in one of my previous messages 
that _arguments can do that.  Do we have to disallow it?  I'd prefer
it if we could keep it, mostly because I don't see a reason to make it 
optional -- either it's the intended reason or the specs given to
_arguments or the command line are messed up (only in the last case
there may be a reason to make _arguments smart enough to detect it and 
notify the user).

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

