From zsh-users-return-5986-mason-zsh=primenet.com.au@sunsite.dk Tue Mar 25 05:24:51 2003
Return-Path: <zsh-users-return-5986-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 25587 invoked from network); 25 Mar 2003 05:24:50 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 25 Mar 2003 05:24:50 -0000
Received: (qmail 16681 invoked by alias); 25 Mar 2003 05:24:29 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 5986
Received: (qmail 16669 invoked from network); 25 Mar 2003 05:24:29 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 25 Mar 2003 05:24:29 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [207.99.30.4] by sunsite.dk (MessageWall 1.0.8) with SMTP; 25 Mar 2003 5:24:28 -0000
Received: from acolyte.scowler.net (localhost [127.0.0.1])
	by acolyte.scowler.net (8.12.6/8.12.6/Debian-7) with ESMTP id h2P5ONHv017618
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=OK);
	Tue, 25 Mar 2003 00:24:23 -0500
Received: (from clint@localhost)
	by acolyte.scowler.net (8.12.6/8.12.6/Debian-7) id h2P5OMua017617;
	Tue, 25 Mar 2003 00:24:22 -0500
X-Authentication-Warning: acolyte.scowler.net: clint set sender to clint@zsh.org using -f
Date: Tue, 25 Mar 2003 00:24:22 -0500
From: Clint Adams <clint@zsh.org>
To: Phil Gregory <phil_g@pobox.com>
Cc: Zsh Users <zsh-users@sunsite.dk>
Subject: Re: sending escape sequences to print in color
Message-ID: <20030325052422.GA17570@acolyte.scowler.net>
References: <20030324210057.GK26991@fruitcom.com> <20030324214051.GB63147@dan.emsphone.com> <20030324221233.GL5531@mithrandir.aperiodic.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20030324221233.GL5531@mithrandir.aperiodic.net>
User-Agent: Mutt/1.5.4i

> I didn't know about the existence of echotc; cool.  But I prefer
> terminfo names (they're barely more mnemonic, at least).  Why doesn't
> echoti take arguments?  (That's the only thing I'd use it for--simpler
> to use the associative array for static strings.)

With the following patch, you'll be able to do
echoti setaf 4
or whatnot.

Index: Src/Modules/terminfo.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/Modules/terminfo.c,v
retrieving revision 1.19
diff -u -r1.19 terminfo.c
--- Src/Modules/terminfo.c	7 Oct 2002 11:48:08 -0000	1.19
+++ Src/Modules/terminfo.c	25 Mar 2003 05:21:51 -0000
@@ -59,8 +59,8 @@
 static int
 bin_echoti(char *name, char **argv, Options ops, int func)
 {
-    char *s, *t;
-    int num;
+    char *s, *t, *u;
+    int num, argct;
 
     s = *argv++;
     /* This depends on the termcap stuff in init.c */
@@ -92,9 +92,28 @@
 	zwarnnam(name, "no such terminfo capability: %s", s, 0);
 	return 1;
     }
-
-    tputs(t, 1, putchar);
+    /* count the number of arguments required */
+    for (argct = 0, u = t; *u; u++)
+        if (*u == '%') {
+            if (u++, (*u == 'd' || *u == '2' || *u == '3' || *u == '.' ||
+                      *u == '+'))
+                argct++;
+        }
+    /* check that the number of arguments provided is correct */
+    if (arrlen(argv) != argct) {
+        zwarnnam(name, (arrlen(argv) < argct) ? "not enough arguments" :
+                 "too many arguments", NULL, 0);
+        return 1;
+    }
+    /* output string, through the proper termcap functions */
+    if (!argct)
+        tputs(t, 1, putraw);
+    else {
+        num = (argv[1]) ? atoi(argv[1]) : atoi(*argv);
+        tputs(tparm(t, atoi(*argv)), num, putraw);
+    }
     return 0;
+
 }
 
 /**/

