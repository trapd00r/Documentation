From zsh-workers-return-16122-mason-zsh=primenet.com.au@sunsite.dk Tue Oct 23 11:18:33 2001
Return-Path: <zsh-workers-return-16122-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 19786 invoked from network); 23 Oct 2001 11:18:33 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 23 Oct 2001 11:18:33 -0000
Received: (qmail 29166 invoked by alias); 23 Oct 2001 11:18:22 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16122
Received: (qmail 29151 invoked from network); 23 Oct 2001 11:18:20 -0000
Sender: kiddleo@cav.logica.co.uk
Message-ID: <3BD54FFA.1990F3A4@yahoo.co.uk>
Date: Tue, 23 Oct 2001 12:09:46 +0100
From: Oliver Kiddle <okiddle@yahoo.co.uk>
X-Mailer: Mozilla 4.77 [en] (X11; U; Linux 2.2.15 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: zsh-workers@sunsite.dk
Subject: PATCH: %n value with format reuse
References: <3BC1802A.1F0FF490@yahoo.co.uk>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

I wrote:
> 
> Any views on whether the count (as returned with %n) should be zeroed
> when reusing the format string?

At the time I wrote that, I hadn't realised that ksh supports %n because
it is not documented. Anyway, ksh does restart the count at zero when
reusing the format strings so for consistency, zsh should do the same.

Oliver

Index: Src/builtin.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/builtin.c,v
retrieving revision 1.60
diff -u -r1.60 builtin.c
--- Src/builtin.c       2001/10/18 14:22:21     1.60
+++ Src/builtin.c       2001/10/23 11:07:55
@@ -2897,7 +2897,7 @@
     int flags[5], *len;
     char *start, *endptr, *c, *d, *flag, spec[11], *fmt = NULL;
     char **first, *curarg, *flagch = "0+- #", save, nullstr = '\0';
-    zlong count = 0;
+    zlong count;
     FILE *fout = stdout;
 
     mnumber mnumval;
@@ -3096,6 +3096,7 @@
     /* printf style output */
     *spec='%';
     do {
+       count = 0;
        if (maxarg) {
            first += maxarg;
            argc -= maxarg;
Index: Test/B03print.ztst
===================================================================
RCS file: /cvsroot/zsh/zsh/Test/B03print.ztst,v
retrieving revision 1.3
diff -u -r1.3 B03print.ztst
--- Test/B03print.ztst  2001/10/18 14:22:21     1.3
+++ Test/B03print.ztst  2001/10/23 11:07:55
@@ -144,6 +144,11 @@
 >two   b:0x2%
 >three c:0x3%
 
+ printf '%d%n' 123 val val val > /dev/null
+ printf '%d\n' val
+0:%n count zeroed on format reuse
+>1
+
 # this should fill spec string with '%0+- #*.*d\0' - 11 characters
  printf '%1$0+- #-08.5dx\n' 123
 0:maximal length format specification

