From zsh-workers-return-22732-mason-zsh=primenet.com.au@sunsite.dk Sun Sep 17 23:38:59 2006
Return-Path: <zsh-workers-return-22732-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 11328 invoked from network); 17 Sep 2006 23:38:57 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.5 (2006-08-29) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00,
	FORGED_RCVD_HELO autolearn=ham version=3.1.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 17 Sep 2006 23:38:57 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 12451 invoked from network); 17 Sep 2006 23:38:51 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 17 Sep 2006 23:38:51 -0000
Received: (qmail 9749 invoked by alias); 17 Sep 2006 23:38:49 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 22732
Received: (qmail 9740 invoked from network); 17 Sep 2006 23:38:48 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 17 Sep 2006 23:38:48 -0000
Received: (qmail 12156 invoked from network); 17 Sep 2006 23:38:48 -0000
Received: from acolyte.scowler.net (216.254.112.45)
  by a.mx.sunsite.dk with SMTP; 17 Sep 2006 23:38:47 -0000
Received: by acolyte.scowler.net (Postfix, from userid 1000)
	id DF47370055; Sun, 17 Sep 2006 19:38:45 -0400 (EDT)
Date: Sun, 17 Sep 2006 19:38:45 -0400
From: Clint Adams <clint@zsh.org>
To: zsh-workers@sunsite.dk
Subject: Re: PATCH: functrace [was Re: funcstack and backtraces]
Message-ID: <20060917233845.GA32023@scowler.net>
Mail-Followup-To: zsh-workers@sunsite.dk
References: <20060901191034.GA31335@scowler.net> <060904142643.ZM9472@torch.brasslantern.com> <20060917191418.GA22898@scowler.net> <060917155254.ZM312@torch.brasslantern.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <060917155254.ZM312@torch.brasslantern.com>
User-Agent: Mutt/1.5.13 (2006-08-11)

> Adding an extra level of function stack avoids the crash, but this
> still doesn't look right to me:

What crash?

> schaefer<505> (bar() { foo } ; foo() { print $functrace } ; bar )
> bar:0 Src/zsh:bar:0
> 
> No mention of "foo" at all?  Whose idea of useful is that?  And here:

I was assuming that the function printing the trace would be able to
identify itself, but if not, "foo" is in $funcstack.  Shouldn't be too
difficult to tack it on in functracegetfn if that's useful though.

> schaefer<506> (baz() { bar }; 
>  bar() { foo } ;                                   
>  foo() { print $functrace } ;      
>  baz )
> bar:0 baz:0 Src/zsh:bar:0

> What does that it mean that "bar" is at both ends of the stack?

I can't reproduce that.  I get
bar:0 baz:0 Src/zsh:6
(or Src/zsh:0 Src/zsh:0 Src/Zsh:12)

> You're right about it being buggy when functionargzero is not set.
> Even the examples above that don't crash when it is set, crash when
> it is not set (with effectively the same backtrace).

I can't reproduce that either.

