From zsh-workers-request@euclid.skiles.gatech.edu Fri Dec 20 01:23:16 1996
Return-Path: <zsh-workers-request@euclid.skiles.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 6422 invoked from network); 20 Dec 1996 01:23:14 -0000
Received: from euclid.skiles.gatech.edu (list@130.207.146.50)
  by coral.primenet.com.au with SMTP; 20 Dec 1996 01:23:14 -0000
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id UAA18991; Thu, 19 Dec 1996 20:22:39 -0500 (EST)
Resent-Date: Thu, 19 Dec 1996 20:22:39 -0500 (EST)
Message-Id: <199612200122.UAA02421@redwood.skiles.gatech.edu>
To: Wolfgang Hukriede <whukriede@ifm.uni-kiel.de>
Cc: zsh-workers@math.gatech.edu
Subject: Re: zsh-3.0.2 repacked 
In-reply-to: Your message of "Fri, 20 Dec 1996 01:38:39 +0100."
             <199612200038.BAA18599@sally.ifm.uni-kiel.de> 
Date: Thu, 19 Dec 1996 20:22:33 -0500
From: Richard Coleman <coleman@math.gatech.edu>
Resent-Message-ID: <"F-pcx.0.ge4.VfUko"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/2603
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

> I'm sorry, but definitely there's no such alleged bug in the NeXTStep libc.
> Setting BAUD to zero fixes the jumping movement of the cursor, nothing else,
> the screen output is as fast/slow as without setting BAUD.
> 
> Then, after:
> 
>         setvbuf(shout, NULL, _IOFBF, 0);
> 
> shout->_bufsiz gives ZERO, as well as shout->_base still is ZERO, in other
> words, shout is unbuffered. I cannot imagine this should be different with
> other libc's. Have you actually checked this?
> 
> Also, to fix that all,
> 
>         setvbuf(shout, NULL, _IOFBF, BUFSIZ);
> 
> is totally sufficient, and has the advantage, that the buffer only is
> allocated if shout is actually used. (Further: imo there's really no need for
> conditional compilation here.).

This is definitely a bug.  If second argument is NULL, and the mode is
either _IOFBF (fully buffered) or _IOLBF (line buffered), then the libc
should ignore the fourth argument and allocate a buffer of the appropriate
length.  This is according to Steven's "Advanced Programming in the Unix
Environment".

rc

