From zsh-users-return-14214-mason-zsh=primenet.com.au@sunsite.dk Thu Jul 02 19:51:20 2009
Return-Path: <zsh-users-return-14214-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 9536 invoked from network); 2 Jul 2009 19:51:08 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from new-brage.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.254.104)
  by ns1.primenet.com.au with SMTP; 2 Jul 2009 19:51:08 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 78685 invoked from network); 2 Jul 2009 19:51:01 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 2 Jul 2009 19:51:01 -0000
Received: (qmail 9133 invoked by alias); 2 Jul 2009 19:50:44 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 14214
Received: (qmail 9123 invoked from network); 2 Jul 2009 19:50:44 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 2 Jul 2009 19:50:44 -0000
Received: from mail-ew0-f218.google.com (mail-ew0-f218.google.com [209.85.219.218])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 605DC8030866
	for <zsh-users@sunsite.dk>; Thu,  2 Jul 2009 21:50:40 +0200 (CEST)
Received: by ewy18 with SMTP id 18so2210576ewy.45
        for <zsh-users@sunsite.dk>; Thu, 02 Jul 2009 12:50:40 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:received:in-reply-to:references
         :date:message-id:subject:from:to:content-type
         :content-transfer-encoding;
        bh=kvAJ9aI7V4H73QRxOoAGOgRqqJKjBTQBeX2Q6+ejgdA=;
        b=UMgC9/7Pv45lkvrko4tbONKDZ90yJ9cYzv5i/aqt5y2w1iYH6kgOe8Wcr6RaYM0GfH
         KI9ObsucITi8LvQjraFcTRnnhKCC6ifgmuPfxArAA5BifG0DKvFl/pHxFupWnHuKqEJx
         YTzHSrxNa9DcXJZI+drOE8QT0lxsTPPruIa1c=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type:content-transfer-encoding;
        b=qFhqzYCl8m9zecsl+zdDz4pN22edfCrvbIp2z2NDISN2TeSRFooyaFjbdbBnquSZD2
         zJQzL7zCmsd1rEbqKo/3Ok2xom4fqIM/QO7ZMxsvL4tOFqzntAYD3K83c/67MG7RBfAG
         buKobT41A0FpGaNZCFBvJudnKWtXNoFyuG58M=
MIME-Version: 1.0
Received: by 10.210.59.14 with SMTP id h14mr1372221eba.99.1246564239943; Thu, 
	02 Jul 2009 12:50:39 -0700 (PDT)
In-Reply-To: <198303.88532.qm@web23507.mail.ird.yahoo.com>
References: <198303.88532.qm@web23507.mail.ird.yahoo.com>
Date: Thu, 2 Jul 2009 21:50:39 +0200
Message-ID: <237967ef0907021250x5b621333m875aff26fa8aeaac@mail.gmail.com>
Subject: Re: Mimicking tcsh line-editing behavior
From: Mikael Magnusson <mikachu@gmail.com>
To: zsh-users@sunsite.dk
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-Virus-Scanned: ClamAV 0.94.2/9535/Thu Jul  2 10:57:25 2009 on bifrost
X-Virus-Status: Clean

2009/7/2 Rhyme Tan <rhymetan@rocketmail.com>:
> My default shell is tcsh. In tcsh I can use alt(meta)-backspace, alt-F or
> alt-B to delete, or move forward or backward through a path.
>
> For example I type:
>
> ls /An/Example/of/a/Path/Name/
>
> To delete Path/Name/, I simply hold down the alt key and press backspace
> twice (alt-backspace x2). This will leave me with the path
> &quot;/An/Example/of/a/&quot;. I cannot do this in zsh because pressing
> alt-backspace will delete the whole path (that is,
> &quot;/An/Example/of/a/Path/Name/&quot;). Is there some magic config option
> I can pass to zsh to duplicate the behavior of alt-backspace, -F, or -B) in
> tcsh?
>
> Thanks.

This was posted here some time ago (months, years, who knows?) and I
have used it since:

_my_extended_wordchars='*?_-.[]~=&;!#$%^(){}<>:@,\\';
#'
_my_extended_wordchars_space="${my_extended_wordchars} "
_my_extended_wordchars_slash="${my_extended_wordchars}/"

# is the current position \-quoted ?
function _is_quoted(){
 test "${BUFFER[$CURSOR-1,CURSOR-1]}" = "\\"
}

_unquote-backward-delete-word(){
    while  _is_quoted
      do zle .backward-kill-word
    done
}

_unquote-forward-delete-word(){
    while  _is_quoted
      do zle .kill-word
    done
}

_unquote-backward-word(){
    while  _is_quoted
      do zle .backward-word
    done
}

_unquote-forward-word(){
    while _is_quoted
      do zle .forward-word
    done
}

_backward-delete-to-space() {
    local WORDCHARS=${_my_extended_wordchars_slash}
    zle .backward-kill-word
    _unquote-backward-delete-word
}

_backward-delete-to-/ () {
    local WORDCHARS=${_my_extended_wordchars}
    zle .backward-kill-word
    _unquote-backward-delete-word
}

_forward-delete-to-space() {
    local WORDCHARS=${_my_extended_wordchars_slash}
    zle .kill-word
    _unquote-forward-delete-word
}

_forward-delete-to-/ () {
    local WORDCHARS=${_my_extended_wordchars}
    zle .kill-word
    _unquote-forward-delete-word
}

_backward-to-space() {
    local WORDCHARS=${_my_extended_wordchars_slash}
    zle .backward-word
    _unquote-backward-word
}

_forward-to-space() {
     local WORDCHARS=${_my_extended_wordchars_slash}
     zle .forward-word
     _unquote-forward-word
}

_backward-to-/ () {
    local WORDCHARS=${_my_extended_wordchars}
    zle .backward-word
    _unquote-backward-word
}

_forward-to-/ () {
     local WORDCHARS=${_my_extended_wordchars}
     zle .forward-word
     _unquote-forward-word
}

zle -N _backward-delete-to-/
zle -N _forward-delete-to-/
zle -N _backward-delete-to-space
zle -N _forward-delete-to-space
zle -N _backward-to-/
zle -N _forward-to-/
bindkey '^w'      _backward-delete-to-/
bindkey '^[^w'    _backward-delete-to-space
bindkey "^[^[[D"  _backward-to-/
bindkey "^[^[[C"  _forward-to-/
bindkey "^[^B"    _backward-to-/
bindkey "^[^F"    _forward-to-/
bindkey "^[^?"    _backward-delete-to-/
bindkey "^[^[[3~" _forward-delete-to-/


adjust the bindings to your liking obviously. It is not perfect when
it comes across some multibyte characters i think.

-- 
Mikael Magnusson

