From zsh-users-return-12484-mason-zsh=primenet.com.au@sunsite.dk Sat Jan 26 02:13:25 2008
Return-Path: <zsh-users-return-12484-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 8145 invoked from network); 26 Jan 2008 02:13:11 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 26 Jan 2008 02:13:11 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 59573 invoked from network); 26 Jan 2008 02:12:52 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 26 Jan 2008 02:12:52 -0000
Received: (qmail 14071 invoked by alias); 26 Jan 2008 02:12:40 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12484
Received: (qmail 14056 invoked from network); 26 Jan 2008 02:12:40 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 26 Jan 2008 02:12:40 -0000
Received: from vms044pub.verizon.net (vms044pub.verizon.net [206.46.252.44])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 77AC380190F6
	for <zsh-users@sunsite.dk>; Sat, 26 Jan 2008 03:12:36 +0100 (CET)
Received: from torch.brasslantern.com ([71.121.18.67])
 by vms044.mailsrvcs.net (Sun Java System Messaging Server 6.2-6.01 (built Apr
 3 2006)) with ESMTPA id <0JV800GW0BGSKBW1@vms044.mailsrvcs.net> for
 zsh-users@sunsite.dk; Fri, 25 Jan 2008 20:12:30 -0600 (CST)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id m0Q2CRkv021174; Fri,
 25 Jan 2008 18:12:28 -0800
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id m0Q2CRsp021173; Fri, 25 Jan 2008 18:12:27 -0800
Date: Fri, 25 Jan 2008 18:12:27 -0800
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: idea for new feature (was: Re: sticky-note and zle bindings)
In-reply-to: <13ed09c00801251018l1007ac9an9c453651d5695c46@mail.gmail.com>
To: "Robert Knight" <robertknight@gmail.com>, zsh-users@sunsite.dk
Message-id: <080125181227.ZM21172@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <13ed09c00801241017x1cd7c454lcbf9156b6bccd9bb@mail.gmail.com>
	<2d460de70801241209u63a33fe6ufb8f396bff440dc6@mail.gmail.com>
	<2d460de70801241254v52d8a9c4he75e450f2f2bd29e@mail.gmail.com>
	<13ed09c00801241354g306f5aaay4d9e6f22c1622ec7@mail.gmail.com>
	<2d460de70801241522y47611d27k2e60c132fea1f01d@mail.gmail.com>
	<13ed09c00801241857n2b1613f0m2d74fd12a90135cc@mail.gmail.com>
	<2d460de70801250132n1692f74cn78d3fdc40da88b9@mail.gmail.com>
	<080125095733.ZM20873@torch.brasslantern.com>
	<13ed09c00801251018l1007ac9an9c453651d5695c46@mail.gmail.com>
Comments: In reply to "Robert Knight" <robertknight@gmail.com>
 "Re: idea for new feature (was: Re: sticky-note and zle bindings)" (Jan 25,
 6:18pm)
X-Virus-Scanned: ClamAV 0.91.2/5554/Sat Jan 26 00:20:14 2008 on bifrost
X-Virus-Status: Clean

On Jan 25,  6:18pm, Robert Knight wrote:
}
} > Here's a slightly different suggestion:  Instead of SHELL_SESSION_ID,
} > how about SHELL_SESSION_FILE ?  The terminal creates a file and puts
} > the path to it in the environment.
} 
} That would work when the shell is running locally, but what if the
} shell is running on another system which the user is accessing via
} ssh?  The terminal emulator doesn't have direct access to the remote
} file system.

Well ... I can think of three cases.

(1) The emulator itself is running remotely and displaying on the local
desktop.  In this case the emulator *does* have access to the "remote"
filesystem, but the desktop manager can't restore such a window, so
there's nothing (special) for us to do.

(2) The emulator is local but the application is "ssh".  This is out of
our purview; ssh could propagate the SHELL_SESSION_* environment and it
would be up to sshd to do the right thing on the remote end as part of
its X11 protocol forwarding or whatever, but whether it does is not for
us to determine.

(3) The emulator is local and the shell is local, but within that shell
the user has started up "ssh" to somewhere.  Our responsibility ends
with making sure that the local shell can record its state, which may
include that it needs to start up an ssh process.  Beyond that point we
are back to case (2).

What other case do you envision where the emulator can usefully be
involved?
 
} Since the shell is the program which is storing the data, I think it
} makes sense for it to be responsible for deciding where to put it,
} rather than the terminal.

The shell DOES determine where to store the data.  The emulator (or the
desktop session) is just creating a semaphore file; think of it the same
way you'd think of .pid file in /var/run, except there's one for each
shell session.  Whether the shell uses it to stash data is secondary,
and up to the shell save-state implementation; I just threw that part
out as a suggestion because it avoids the shell itself needing to have
garbage-session collection code.

