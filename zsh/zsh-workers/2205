From zsh-workers-request@euclid.skiles.gatech.edu  Wed Oct  9 09:32:53 1996
Return-Path: zsh-workers-request@euclid.skiles.gatech.edu
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by coral.primenet.com.au (8.7.5/8.7.3) with ESMTP id JAA17957 for <mason@primenet.com.au>; Wed, 9 Oct 1996 09:32:49 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id TAA06177; Tue, 8 Oct 1996 19:25:27 -0400 (EDT)
Resent-Date: Tue, 8 Oct 1996 19:25:27 -0400 (EDT)
From: Zoltan Hidvegi <hzoli@cs.elte.hu>
Message-Id: <199610082311.BAA01963@hzoli.ppp.cs.elte.hu>
Subject: Re: two bugs in zsh 3.0.1-test3
To: jtv@cc.hut.fi (Jukka Virtanen)
Date: Wed, 9 Oct 1996 01:11:07 +0200 (MET DST)
Cc: zsh-workers@math.gatech.edu
In-Reply-To: <Pine.OSF.3.93.961008193221.6481T-100000@alpha.hut.fi> from Jukka Virtanen at "Oct 8, 96 07:41:12 pm"
X-Mailer: ELM [version 2.4ME+ PL17 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"aW8sY.0.QW1.cBkMo"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/2205
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

> Bug 1:
> 
> 	If zsh 3.0.1-test3 is compiled in a separate object directory,
> 	the compilation goes ok, but the install fails, because
> 	the info files are not found by the Make. Here is a fix
> 	to this problem:

The info files are generated from zsh.texi by makeinfo.  There are no info
files in $(srcdir).  Are you sure that you have makeinfo installed?  If
not, you need to get the procompiled onfo files from zsh-doc.tar.gz.  This
was not updated since zsh-3.0.0 but it will be updeted when zsh-3.0.1 is
released.  I always use a separate object directory and I never had such
problems.

> Bug 2:
> 
> 	In an Alpha host running Digital Unix V4.0:
> 
> narya dist 554 % uname -a
> OSF1 narya.hut.fi V4.0 386 alpha
> 
> 	The zsh prototypes.h file contains a prototype declaration
> 	for the ioctl routine:
> 
> int ioctl _((int d, unsigned long request, void *argp));
> 
> 	The declaration is inconsistent with the vendor supplied
> 	prototype declaration in /usr/include/sys/ioctl.h :
> 
> extern int 	ioctl __((int, int, ...));
> 
> 	I compiled zsh by commenting out the ioctl declaration
> 	from prototypes.h.

Please try this patch.  I ask everyone who has any version of OSF/1 or
Digital Unix and use gcc to test this patch.  You may need to touch
configure and stamp-h.in after applying the patch.

Zoltan


*** configure.in	1996/10/07 23:58:00	2.24
--- configure.in	1996/10/08 22:47:04
***************
*** 591,596 ****
--- 591,612 ----
    AC_DEFINE(HAVE_SBRK_PROTO)
  fi
  
+ dnl ------------------------
+ dnl ioctl prototypes for OSF
+ dnl ------------------------
+ 
+ if test "$ac_cv_prog_cc_stdc" != no; then
+   AC_CACHE_CHECK(for ioctl prototype in <sys/ioctl.h>,
+   zsh_cv_header_sys_ioctl_h_ioctl_proto,
+   [AC_TRY_COMPILE([#include <sys/ioctl.h>
+    int ioctl(double x);], [int i;],
+   zsh_cv_header_sys_ioctl_h_ioctl_proto=no,
+   zsh_cv_header_sys_ioctl_h_ioctl_proto=yes)])
+   if test $zsh_cv_header_sys_ioctl_h_ioctl_proto = yes; then
+     AC_DEFINE(HAVE_IOCTL_PROTO)
+   fi
+ fi
+ 
  dnl ---------------------
  dnl echo style of /bin/sh
  dnl ---------------------
*** acconfig.h	1996/08/12 03:52:50	2.8
--- acconfig.h	1996/10/08 22:50:34
***************
*** 156,163 ****
  /* Define to 1 if there is a prototype defined for brk() on your system */
  #undef HAVE_BRK_PROTO
  
! /* Define to 1 if there is a prototype defined for dbrk() on your system */
  #undef HAVE_SBRK_PROTO
  
  /* Define to 1 if /bin/sh does not interpret \ escape sequences */
  #undef SH_USE_BSD_ECHO
--- 156,166 ----
  /* Define to 1 if there is a prototype defined for brk() on your system */
  #undef HAVE_BRK_PROTO
  
! /* Define to 1 if there is a prototype defined for sbrk() on your system */
  #undef HAVE_SBRK_PROTO
+ 
+ /* Define to 1 if there is a prototype defined for ioctl() on your system */
+ #undef HAVE_IOCTL_PROTO
  
  /* Define to 1 if /bin/sh does not interpret \ escape sequences */
  #undef SH_USE_BSD_ECHO
*** Src/prototypes.h	1996/09/23 23:07:26	2.3
--- Src/prototypes.h	1996/07/20 14:56:19
***************
*** 103,109 ****
--- 103,111 ----
  
  #if defined(__osf__) && defined(__alpha) && defined(__GNUC__)
  /* Digital cc does not need these prototypes, gcc does need them */
+ # ifndef HAVE_IOCTL_PROTO
  int ioctl _((int d, unsigned long request, void *argp));
+ # endif
  int mknod _((const char *pathname, int mode, dev_t device));
  int nice _((int increment));
  int select _((int nfds, fd_set * readfds, fd_set * writefds, fd_set * exceptfds, struct timeval *timeout));
*** config.h.in	1996/09/07 15:19:40	2.10
--- config.h.in	1996/10/08 22:50:51
***************
*** 198,205 ****
  /* Define to 1 if there is a prototype defined for brk() on your system */
  #undef HAVE_BRK_PROTO
  
! /* Define to 1 if there is a prototype defined for dbrk() on your system */
  #undef HAVE_SBRK_PROTO
  
  /* Define to 1 if /bin/sh does not interpret \ escape sequences */
  #undef SH_USE_BSD_ECHO
--- 198,208 ----
  /* Define to 1 if there is a prototype defined for brk() on your system */
  #undef HAVE_BRK_PROTO
  
! /* Define to 1 if there is a prototype defined for sbrk() on your system */
  #undef HAVE_SBRK_PROTO
+ 
+ /* Define to 1 if there is a prototype defined for ioctl() on your system */
+ #undef HAVE_IOCTL_PROTO
  
  /* Define to 1 if /bin/sh does not interpret \ escape sequences */
  #undef SH_USE_BSD_ECHO
*** configure	1996/10/07 23:58:00	2.25
--- configure	1996/10/08 22:47:16
***************
*** 2941,2946 ****
--- 2941,2982 ----
  
  fi
  
+ 
+ if test "$ac_cv_prog_cc_stdc" != no; then
+   echo $ac_n "checking for ioctl prototype in <sys/ioctl.h>""... $ac_c" 1>&6
+ if eval "test \"`echo '$''{'zsh_cv_header_sys_ioctl_h_ioctl_proto'+set}'`\" = set"; then
+   echo $ac_n "(cached) $ac_c" 1>&6
+ else
+   cat > conftest.$ac_ext <<EOF
+ #line 2952 "configure"
+ #include "confdefs.h"
+ #include <sys/ioctl.h>
+    int ioctl(double x);
+ int main() { return 0; }
+ int t() {
+ int i;
+ ; return 0; }
+ EOF
+ if { (eval echo configure:2961: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+   rm -rf conftest*
+   zsh_cv_header_sys_ioctl_h_ioctl_proto=no
+ else
+   rm -rf conftest*
+   zsh_cv_header_sys_ioctl_h_ioctl_proto=yes
+ fi
+ rm -f conftest*
+ 
+ fi
+ 
+ echo "$ac_t""$zsh_cv_header_sys_ioctl_h_ioctl_proto" 1>&6
+   if test $zsh_cv_header_sys_ioctl_h_ioctl_proto = yes; then
+     cat >> confdefs.h <<\EOF
+ #define HAVE_IOCTL_PROTO 1
+ EOF
+ 
+   fi
+ fi
+ 
  echo $ac_n "checking if echo in /bin/sh interprets escape sequences""... $ac_c" 1>&6
  if test "`/bin/sh -c \"echo '\\n'\"`" = "\\n"; then
    cat >> confdefs.h <<\EOF

