From zsh-users-return-15307-mason-zsh=primenet.com.au@zsh.org Fri Aug 20 16:21:00 2010
Return-Path: <zsh-users-return-15307-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16032 invoked by alias); 20 Aug 2010 16:21:00 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15307
Received: (qmail 29922 invoked from network); 20 Aug 2010 16:20:55 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_LOW,
	SPF_HELO_PASS autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at csr.com does not designate permitted sender hosts)
Date: Fri, 20 Aug 2010 16:45:07 +0100
From: Peter Stephenson <Peter.Stephenson@csr.com>
To: zsh-users@zsh.org
Subject: Re: Synchronous vs. Asynchronous
Message-ID: <20100820164507.419dc0bc@csr.com>
In-Reply-To: <100820083501.ZM29362@torch.brasslantern.com>
References: <100820083501.ZM29362@torch.brasslantern.com>
Organization: Cambridge Silicon Radio
X-Mailer: Claws Mail 3.7.6 (GTK+ 2.18.9; i686-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 20 Aug 2010 15:45:07.0893 (UTC) FILETIME=[AA640650:01CB407E]
X-Scanned-By: MailControl A_09_40_00 (www.mailcontrol.com) on 10.71.0.132

On Fri, 20 Aug 2010 08:35:01 -0700
Bart Schaefer <schaefer@brasslantern.com> wrote:
> I just occured to me that when the zsh manual describes something as
> "asynchronous" it means not synchronous with respect to the parent
> zsh, e.g., that the shell will not wait for it.  That is distinct from
> whether it is [not] synchronous with respect to other commands in the
> same syntactic construct.
> 
> So if we're going to cause zsh to wait for >(...), we should change
> the description in the documentation to no longer say "asynchronous".

Actually, I think it already does that, except in the case of a builtin not
run inside { ... }, and that isn't one of the current set of changes (it's
hard because current-shell job processing is a mess, because it's hellish
difficult deciding what the job actually consists of), so the documentation
is already out of date.

The latest set of changes, which I need to review further, affect (i)
whether a signal is forwarded to the >(...) process (ii) whether that
process is attached to the foreground terminal so it gets a ^C.  There's no
extra waiting.

My big remaining worry is whether the >(...) could think it's in the
foreground when it's actually in the background after the patch in the
second subthread.

-- 
Peter Stephenson <pws@csr.com>            Software Engineer
Tel: +44 (0)1223 692070                   Cambridge Silicon Radio Limited
Churchill House, Cambridge Business Park, Cowley Road, Cambridge, CB4 0WZ, UK


Member of the CSR plc group of companies. CSR plc registered in England and Wales, registered number 4187346, registered office Churchill House, Cambridge Business Park, Cowley Road, Cambridge, CB4 0WZ, United Kingdom

