From zsh-workers-return-23141-mason-zsh=primenet.com.au@sunsite.dk Tue Jan 30 19:00:43 2007
Return-Path: <zsh-workers-return-23141-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 5321 invoked from network); 30 Jan 2007 19:00:36 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=BAYES_00,FORGED_RCVD_HELO 
	autolearn=ham version=3.1.7
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 30 Jan 2007 19:00:36 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 9392 invoked from network); 30 Jan 2007 19:00:30 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 30 Jan 2007 19:00:30 -0000
Received: (qmail 12105 invoked by alias); 30 Jan 2007 19:00:27 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 23141
Received: (qmail 12094 invoked from network); 30 Jan 2007 19:00:26 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 30 Jan 2007 19:00:26 -0000
Received: (qmail 9039 invoked from network); 30 Jan 2007 19:00:26 -0000
Received: from cluster-d.mailcontrol.com (217.69.20.190)
  by a.mx.sunsite.dk with SMTP; 30 Jan 2007 19:00:17 -0000
Received: from cameurexb01.EUROPE.ROOT.PRI ([62.189.241.200])
	by rly29d.srv.mailcontrol.com (MailControl) with ESMTP id l0UJ0EAA028231
	for <zsh-workers@sunsite.dk>; Tue, 30 Jan 2007 19:00:14 GMT
Received: from news01.csr.com ([10.103.143.38]) by cameurexb01.EUROPE.ROOT.PRI with Microsoft SMTPSVC(6.0.3790.1830);
	 Tue, 30 Jan 2007 19:00:14 +0000
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.13.8/8.13.4) with ESMTP id l0UJ0AXx028789
	for <zsh-workers@sunsite.dk>; Tue, 30 Jan 2007 19:00:10 GMT
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.13.8/8.13.8/Submit) with ESMTP id l0UJ09uW028786
	for <zsh-workers@sunsite.dk>; Tue, 30 Jan 2007 19:00:10 GMT
Message-Id: <200701301900.l0UJ09uW028786@news01.csr.com>
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: PATCH: don't redraw when not printing job info
Date: Tue, 30 Jan 2007 19:00:09 +0000
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 30 Jan 2007 19:00:14.0597 (UTC) FILETIME=[DFF1CB50:01C744A0]
Content-Type: text/plain
MIME-Version: 1.0
X-Scanned-By: MailControl A-06-00-00 (www.mailcontrol.com) on 10.68.0.139

It turns out that zrefresh() can be triggered by the job handler when it
thinks some information has been printed, even though it hasn't.
This redraws the ZLE line including the prompt.  Usually this goes
unnoticed.  I spotted it because at the point in question there was a
function running under sched, and the last status was 1, which appeared
on the display because of the redraw (since my prompt outputs non-zero
statuses).

This patch doesn't force the redraw when there's nothing printed.  This
is a simple and safe thing to do which fixes this symptom.  However, it
would presumably be sensible for prompts to be insensitive to contextual
information from functions not explicitly run by the user.  (This is
more than just the status: suppose we were at a PS2 which output the
parse status, for example.)  That's messier and a rather special case
you don't normally see, so I haven't attempted it.

Index: Src/jobs.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/jobs.c,v
retrieving revision 1.53
diff -u -r1.53 jobs.c
--- Src/jobs.c	21 Jan 2007 22:47:41 -0000	1.53
+++ Src/jobs.c	30 Jan 2007 18:52:18 -0000
@@ -448,8 +448,8 @@
 	curjob = job;
     }
     if ((isset(NOTIFY) || job == thisjob) && (jn->stat & STAT_LOCKED)) {
-	printjob(jn, !!isset(LONGLISTJOBS), 0);
-	if (zleactive)
+	if (printjob(jn, !!isset(LONGLISTJOBS), 0) &&
+	    zleactive)
 	    zrefreshptr();
     }
     if (sigtrapped[SIGCHLD] && job != thisjob)
@@ -804,19 +804,22 @@
  * synch = 0 means asynchronous
  * synch = 1 means synchronous
  * synch = 2 means called synchronously from jobs
+ *
+ * Returns 1 if some output was done.
 */
 
 /**/
-void
+int
 printjob(Job jn, int lng, int synch)
 {
     Process pn;
     int job, len = 9, sig, sflag = 0, llen;
     int conted = 0, lineleng = columns, skip = 0, doputnl = 0;
+    int doneprint = 0;
     FILE *fout = (synch == 2) ? stdout : shout;
 
     if (jn->stat & STAT_NOPRINT)
-	return;
+	return 0;
 
     /*
      * Wow, what a hack.  Did I really write this? --- pws
@@ -874,8 +877,10 @@
 
 	if (!synch)
 	    trashzleptr();
-	if (doputnl && !synch)
+	if (doputnl && !synch) {
+	    doneprint = 1;
 	    putc('\n', fout);
+	}
 	for (pn = jn->procs; pn;) {
 	    len2 = (thisfmt ? 5 : 10) + len;	/* 2 spaces */
 	    if (lng & 3)
@@ -888,6 +893,7 @@
 			break;
 		    len2 += strlen(qn->text) + 2;
 		}
+	    doneprint = 1;
 	    if (!thisfmt || lng) {
 		if (fline)
 		    fprintf(fout, "[%ld]  %c ",
@@ -944,6 +950,7 @@
 	}
 	fflush(fout);
     } else if (doputnl && interact && !synch) {
+	doneprint = 1;
 	putc('\n', fout);
 	fflush(fout);
     }
@@ -954,6 +961,7 @@
 
     if ((lng & 4) || (interact && job == thisjob &&
 		      jn->pwd && strcmp(jn->pwd, pwd))) {
+	doneprint = 1;
 	fprintf(fout, "(pwd %s: ", (lng & 4) ? "" : "now");
 	fprintdir(((lng & 4) && jn->pwd) ? jn->pwd : pwd, fout);
 	fprintf(fout, ")\n");
@@ -973,6 +981,8 @@
 	    setprevjob();
     } else
 	jn->stat &= ~STAT_CHANGED;
+
+    return doneprint;
 }
 
 /**/

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070


To access the latest news from CSR copy this link into a web browser:  http://www.csr.com/email_sig.php

To get further information regarding CSR, please visit our Investor Relations page at http://ir.csr.com/csr/about/overview

