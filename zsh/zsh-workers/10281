From zsh-workers-return-10281-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Mar 27 16:28:44 2000
Return-Path: <zsh-workers-return-10281-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 7418 invoked from network); 27 Mar 2000 16:28:43 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 27 Mar 2000 16:28:43 -0000
Received: (qmail 4003 invoked by alias); 27 Mar 2000 16:28:33 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 10281
Received: (qmail 3984 invoked from network); 27 Mar 2000 16:28:31 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1000327162820.ZM15657@candle.brasslantern.com>
Date: Mon, 27 Mar 2000 16:28:19 +0000
In-Reply-To: <200003271143.NAA05644@beta.informatik.hu-berlin.de>
Comments: In reply to Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
        "Re: endianness of wordcode" (Mar 27,  1:43pm)
References: <200003271143.NAA05644@beta.informatik.hu-berlin.de>
X-Mailer: Z-Mail (5.0.0 30July97)
To: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>,
        zsh-workers@sunsite.auc.dk
Subject: Re: endianness of wordcode
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Mar 27,  1:43pm, Sven Wischnowsky wrote:
} Subject: Re: endianness of wordcode
}
} Bart Schaefer wrote:
} 
} > In particular
} > I'm not sure how to explain what happens if you do
} > 
} > 	zcompile -c foo foo bar frob ding
} > 	fpath=($PWD)
} > 	autoload foo
} > 	foo
} 
} I don't understand what you mean here. If foo is already defined, the
} autoload won't change that and you just get that executed.  If foo is
} unfunction'ed before the autoload, it loads foo.zwc and executes foo
} just as expected. At least for me. What am I missing?

Sorry, I got in too much of a hurry there ... in each of these examples,
the zcompile line explains how the file foo.zwc was created; the other
three lines were then executed in a fresh "zsh -f" so that _none_ of the
functions (foo bar frob ding) are defined.

The question in this first case is:  `bar', `frob' and `ding' do not
become available when foo is autoloaded, but why not?  If I had a text
(not .zwc) file named `foo' inside a directory in $fpath, and that
file contained four functions, and I said to autoload foo and then I
executed foo, all four functions would become defined.

If I'd said `fpath=($PWD/foo)' so that foo.zwc was treated like a
directory, I'd expect only `foo' to be searched out of it; but since
`foo' is *inside* a directory in $fpath, I expected it to be treated
like a script.  (Well, *I* didn't, but I'm trying to think like a
newbie.)

} > And I'm even more confused by
} > 
} > 	zcompile -c foo -k foo bar frob ding
} > 	fpath=($PWD)
} > 	autoload foo
} > 	foo
} > 
} > which first executes "foo" successfully and then prints
} > 
} > 	foo:3: foo: function not defined by file
} > 
} > leaving "foo" as an undefined (but marked autoloaded) function.
} 
} Here at least `foo' was already defined, right.

No, again I messed up ... the zcompile was in a separate shell.

} This is a problem I
} hadn't thought about. If we save it to be loaded ksh-style, the init
} code originally surrounding the function definition (if there was any) 
} is, of course, already deleted. So, the best attempt we could do is to 
} put the body of the function in a `foo() { body }' and save that [...]
} Note also, that for ksh-style autoloaded function that aren't
} loaded yet, the whole contents of the definition file is put into the
} wordcode file (i.e. one gets different results depending on whether
} the function is already loaded or not).

Given this, I think we should just make -k not work at all with -c, and
ignore kshautoload on -c as well, i.e. -c always behaves as if -z.  If
-k is given, stop with an error, and if kshautoload is set, print an
informative warning message but write the file anyway.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

