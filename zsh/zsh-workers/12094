From zsh-workers-return-12094-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Jun 28 08:01:53 2000
Return-Path: <zsh-workers-return-12094-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 12453 invoked from network); 28 Jun 2000 08:01:52 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 28 Jun 2000 08:01:52 -0000
Received: (qmail 12647 invoked by alias); 28 Jun 2000 08:01:42 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 12094
Received: (qmail 12608 invoked from network); 28 Jun 2000 08:01:15 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer david.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: "ZSH workers mailing list" <zsh-workers@sunsite.auc.dk>
Subject: PATCH: small completion doc fix
Date: Wed, 28 Jun 2000 12:00:57 +0400
Message-ID: <000001bfe0d6$fe2b58a0$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary="----=_NextPart_000_0001_01BFE0F8.853E7F40"
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6700

This is a multi-part message in MIME format.

------=_NextPart_000_0001_01BFE0F8.853E7F40
Content-Type: text/plain;
	charset="koi8-r"
Content-Transfer-Encoding: 7bit

I believe, we do not rebind keys anymore, but redefine widgets. And
bindkey binds keys to widgets not commands or functions?

-andrej

Have a nice DOS!
B >>

------=_NextPart_000_0001_01BFE0F8.853E7F40
Content-Type: application/octet-stream;
	name="compsys.yo.diff"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="compsys.yo.diff"

--- Doc/Zsh/compsys.yo.org	Wed Jun 28 11:34:45 2000=0A=
+++ Doc/Zsh/compsys.yo	Wed Jun 28 11:57:39 2000=0A=
@@ -69,15 +69,15 @@=0A=
 (`tt(autoload -U compinit)' is recommended), and then run simply as=0A=
 `tt(compinit)'.  This will define a=0A=
 few utility functions, arrange for all the necessary shell functions to =
be=0A=
-autoloaded, and will then re-bind all keys that do completion to use the=0A=
+autoloaded, and will then re-define all widgets that do completion to =
use the=0A=
 new system.  If you use the tt(menu-select) widget, which is part of the=0A=
 tt(zsh/complist) module, you should make sure that that module is loaded=0A=
 before the call to tt(compinit) to make sure that that widget is also=0A=
-re-bound.=0A=
+re-defined.=0A=
 =0A=
 Should you need to use the original completion commands, you can still=0A=
-bind keys to the old functions by putting a `tt(.)' in front of the=0A=
-command name, e.g. `tt(.expand-or-complete)'.=0A=
+bind keys to the old widgets by putting a `tt(.)' in front of the=0A=
+widget name, e.g. `tt(.expand-or-complete)'.=0A=
 =0A=
 To speed up the running of tt(compinit), it can be made to produce a =
dumped=0A=
 configuration which will be read in on future invocations; this is the=0A=

------=_NextPart_000_0001_01BFE0F8.853E7F40--

