From zsh-workers-return-7447-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Aug 19 08:48:02 1999
Return-Path: <zsh-workers-return-7447-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 18223 invoked from network); 19 Aug 1999 08:48:01 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 19 Aug 1999 08:48:01 -0000
Received: (qmail 23787 invoked by alias); 19 Aug 1999 08:47:50 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 7447
Received: (qmail 23780 invoked from network); 19 Aug 1999 08:47:50 -0000
Subject: some notes on 3.1.6
To: zsh-workers@sunsite.auc.dk
Date: Thu, 19 Aug 1999 09:46:46 +0100 (BST)
X-Mailer: ELM [version 2.4ME+ PL48 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Message-Id: <E11HNqQ-0005YQ-00@crucigera.fysh.org>
From: Zefram <zefram@fysh.org>

Wow.

Those are some fairly dramatic changes in 3.1.6.  I very much like
the approximate completion.  Congratulations to all concerned.

Some problems/potential changes I note in passing:

----

When an autoloaded special parameter is not actually defined by the module
loaded, there is no error message (compare "autoload failed" when it's
a builtin).  Instead, the parameter remains in an autoloadable state.
Try, for example:

	zmodload -ap example foobar
	foobar=1
	foobar=2
	foobar=3

----

When autoloading of condition codes fails, there is a similar problem.
There is an error message ("unrecognized condition"), but the condition
code remains autoloadable.

----

Now that we have autoloadable parameters, the watch system (the watch
parameter and the log builtin) can be relegated to a loadable module
like sched.

getopts can probably go the same way.

----

We ought to have autoloadable builtin widgets (for the deltochar module).
This could be implemented in user space by defining the widget as a
user-defined widget which, when run, loads the module in question and
then calls the new definition.

----

#compdef -k tagged functions, when processed by compinit, add key bindings
to the current main keymap.  Unfortunately, all the key bindings are
appropriate for emacs, and cause real trouble if the vi key bindings
are being used.

----

zftp really ought to allow more than one concurrent open session.
One could refer to sessions by name, with a mechanism to generate unique
names; commands that don't specify which session they apply to use a
default name (either actually fixed or taken from a parameter).

----

The new parameters and condition codes in the example module are not
documented.

----

After doing a "compinit" (on a shell started with zsh -f), completion
of parameter names now adds a space suffix when it shouldn't (e.g.,
during menu completion).  AUTO_PARAM_SLASH then has no effect, and suffix
removal is partly broken; for example, after completing a parameter name
in braces, a typed close brace doesn't remove anything.

----

The documentation says that the parameter module provides a parameter
called "command".  Actually it's "commands".

----

-zefram (regular access but no spare time, for the moment)

