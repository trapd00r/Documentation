From zsh-workers-return-9023-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Dec 13 18:33:34 1999
Return-Path: <zsh-workers-return-9023-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 271 invoked from network); 13 Dec 1999 18:33:31 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 13 Dec 1999 18:33:31 -0000
Received: (qmail 18136 invoked by alias); 13 Dec 1999 18:33:26 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 9023
Received: (qmail 18129 invoked from network); 13 Dec 1999 18:33:24 -0000
Date: Mon, 13 Dec 1999 18:30:49 GMT
Message-Id: <199912131830.SAA10022@mango.dublin.iona.ie>
From: zefram@fysh.org
To: zsh-workers@sunsite.auc.dk
Subject: PATCH: easier per-module documentation

This patch makes the various module documentation lists be all
automatically generated from a single master list, in the Makefile.
The short description list, the two menus and the texinode()s are all
generated.  All that a new module documentation file needs now is to be
added to Doc/Zsh/.distfiles and to $(MODDOCSRC) in Doc/Makefile.in.

Incidentally, mod_zutil.yo wasn't in .distfiles.  This patch adds it.

-zefram

diff -crN ../zsh-/Doc/Makefile.in ./Doc/Makefile.in
*** ../zsh-/Doc/Makefile.in	Thu Dec  9 10:49:29 1999
--- ./Doc/Makefile.in	Mon Dec 13 18:20:24 1999
***************
*** 50,66 ****
  zshoptions.1 zshparam.1 zshzftpsys.1 zshzle.1 zshall.1
  
  # yodl documentation
  YODLDOC = $(MAN) zsh.texi
  YODLSRC = zmacros.yo zman.yo ztexi.yo Zsh/arith.yo Zsh/builtins.yo \
  Zsh/compat.yo Zsh/compctl.yo Zsh/compsys.yo Zsh/compwid.yo Zsh/cond.yo \
  Zsh/exec.yo Zsh/expn.yo \
  Zsh/filelist.yo Zsh/files.yo Zsh/func.yo Zsh/grammar.yo Zsh/manual.yo \
  Zsh/index.yo Zsh/intro.yo Zsh/invoke.yo Zsh/jobs.yo Zsh/metafaq.yo \
! Zsh/modules.yo Zsh/mod_cap.yo \
! Zsh/mod_clone.yo Zsh/mod_complete.yo Zsh/mod_compctl.yo Zsh/mod_complist.yo \
! Zsh/mod_deltochar.yo Zsh/mod_example.yo Zsh/mod_files.yo \
! Zsh/mod_mapfile.yo Zsh/mod_mathfunc.yo Zsh/mod_parameter.yo Zsh/mod_sched.yo \
! Zsh/mod_stat.yo Zsh/mod_zftp.yo Zsh/mod_zle.yo Zsh/mod_zleparameter.yo \
  Zsh/options.yo Zsh/params.yo Zsh/prompt.yo Zsh/redirect.yo Zsh/restricted.yo \
  Zsh/seealso.yo Zsh/zftpsys.yo Zsh/zle.yo
  
--- 50,73 ----
  zshoptions.1 zshparam.1 zshzftpsys.1 zshzle.1 zshall.1
  
  # yodl documentation
+ 
  YODLDOC = $(MAN) zsh.texi
+ 
+ MODDOCSRC = \
+ Zsh/mod_cap.yo Zsh/mod_clone.yo \
+ Zsh/mod_compctl.yo Zsh/mod_complete.yo Zsh/mod_complist.yo \
+ Zsh/mod_computil.yo \
+ Zsh/mod_deltochar.yo Zsh/mod_example.yo Zsh/mod_files.yo \
+ Zsh/mod_mapfile.yo Zsh/mod_mathfunc.yo Zsh/mod_parameter.yo Zsh/mod_sched.yo \
+ Zsh/mod_stat.yo Zsh/mod_zftp.yo Zsh/mod_zle.yo Zsh/mod_zleparameter.yo \
+ Zsh/mod_zutil.yo
+ 
  YODLSRC = zmacros.yo zman.yo ztexi.yo Zsh/arith.yo Zsh/builtins.yo \
  Zsh/compat.yo Zsh/compctl.yo Zsh/compsys.yo Zsh/compwid.yo Zsh/cond.yo \
  Zsh/exec.yo Zsh/expn.yo \
  Zsh/filelist.yo Zsh/files.yo Zsh/func.yo Zsh/grammar.yo Zsh/manual.yo \
  Zsh/index.yo Zsh/intro.yo Zsh/invoke.yo Zsh/jobs.yo Zsh/metafaq.yo \
! Zsh/modules.yo Zsh/modlist.yo Zsh/modmenu.yo $(MODDOCSRC) \
  Zsh/options.yo Zsh/params.yo Zsh/prompt.yo Zsh/redirect.yo Zsh/restricted.yo \
  Zsh/seealso.yo Zsh/zftpsys.yo Zsh/zle.yo
  
***************
*** 142,152 ****
             Zsh/jobs.yo Zsh/arith.yo Zsh/cond.yo Zsh/compat.yo \
             Zsh/prompt.yo Zsh/restricted.yo
  
! zshmodules.1: Zsh/modules.yo Zsh/mod_cap.yo Zsh/mod_clone.yo \
!               Zsh/mod_complete.yo Zsh/mod_complist.yo Zsh/mod_compctl.yo \
!               Zsh/mod_deltochar.yo Zsh/mod_example.yo Zsh/mod_files.yo \
!               Zsh/mod_mapfile.yo Zsh/mod_mathfunc.yo Zsh/mod_sched.yo \
!               Zsh/mod_stat.yo Zsh/mod_zftp.yo Zsh/mod_zle.yo
  
  zshoptions.1: Zsh/options.yo
  
--- 149,155 ----
             Zsh/jobs.yo Zsh/arith.yo Zsh/cond.yo Zsh/compat.yo \
             Zsh/prompt.yo Zsh/restricted.yo
  
! zshmodules.1: Zsh/modules.yo Zsh/modlist.yo Zsh/modmenu.yo $(MODDOCSRC)
  
  zshoptions.1: Zsh/options.yo
  
***************
*** 164,169 ****
--- 167,202 ----
  	  echo 'ENDDEF()#' | tr '#' '\\'; \
  	) > $(sdir)/version.yo
  
+ Zsh/modlist.yo: $(MODDOCSRC)
+ 	( \
+ 	    modules=`echo '' $(MODDOCSRC) '' | sed 's| Zsh/mod_| |g;s|\.yo | |g'`; \
+ 	    echo "startitem()"; \
+ 	    for mod in $$modules; do \
+ 		echo "item(tt($$mod))("; \
+ 		sed -n '1d;/^!MOD!)$$/q;p' < $(sdir)/Zsh/mod_$${mod}.yo; \
+ 		echo ")"; \
+ 	    done; \
+ 	    echo "enditem()"; \
+ 	    echo "startmenu()"; \
+ 	    echo "includefile(Zsh/modmenu.yo)"; \
+ 	    echo "endmenu()"; \
+ 	    set '' $$modules; \
+ 	    while test ".$$2" != .; do \
+ 		echo "texinode(The $$2 Module)($${3+The $$3 Module})($${1:+The $$1 Module})(Zsh Modules)"; \
+ 		echo "sect(The $$2 Module)"; \
+ 		echo "includefile(Zsh/mod_$${2}.yo)"; \
+ 		shift; \
+ 	    done \
+ 	) > $(sdir)/Zsh/modlist.yo
+ 
+ Zsh/modmenu.yo: $(MODDOCSRC)
+ 	( \
+ 	    modules=`echo '' $(MODDOCSRC) '' | sed 's| Zsh/mod_| |g;s|\.yo | |g'`; \
+ 	    for mod in $$modules; do \
+ 		echo "menu(The $$mod Module)"; \
+ 	    done \
+ 	) > $(sdir)/Zsh/modmenu.yo
+ 
  # ========== DEPENDENCIES FOR INSTALLING ==========
  
  # install just installs the manual pages
***************
*** 233,238 ****
--- 266,272 ----
  	rm -f Makefile
  
  realclean-here: distclean-here
+ 	cd $(sdir) && rm -f Zsh/modlist.yo Zsh/modmenu.yo
  	cd $(sdir) && rm -f version.yo ../META-FAQ zsh.texi $(MAN)
  
  @CLEAN_MK@
diff -crN ../zsh-/Doc/Zsh/.cvsignore ./Doc/Zsh/.cvsignore
*** ../zsh-/Doc/Zsh/.cvsignore	Thu Jan  1 01:00:00 1970
--- ./Doc/Zsh/.cvsignore	Mon Dec 13 18:08:18 1999
***************
*** 0 ****
--- 1,2 ----
+ modlist.yo
+ modmenu.yo
diff -crN ../zsh-/Doc/Zsh/.distfiles ./Doc/Zsh/.distfiles
*** ../zsh-/Doc/Zsh/.distfiles	Sun Nov 28 17:42:27 1999
--- ./Doc/Zsh/.distfiles	Mon Dec 13 18:19:22 1999
***************
*** 1,12 ****
  DISTFILES_SRC='
!     .distfiles
      arith.yo builtins.yo compat.yo compctl.yo compsys.yo compwid.yo
      cond.yo exec.yo expn.yo filelist.yo files.yo func.yo grammar.yo
      index.yo intro.yo invoke.yo jobs.yo manual.yo metafaq.yo mod_cap.yo
      mod_clone.yo mod_compctl.yo mod_complete.yo mod_complist.yo
      mod_computil.yo mod_deltochar.yo mod_example.yo mod_files.yo
      mod_mapfile.yo mod_mathfunc.yo mod_parameter.yo mod_sched.yo
!     mod_stat.yo mod_zftp.yo mod_zle.yo mod_zleparameter.yo modules.yo
      options.yo params.yo prompt.yo redirect.yo restricted.yo seealso.yo
      zftpsys.yo zle.yo
  '
--- 1,13 ----
  DISTFILES_SRC='
!     .cvsignore .distfiles
      arith.yo builtins.yo compat.yo compctl.yo compsys.yo compwid.yo
      cond.yo exec.yo expn.yo filelist.yo files.yo func.yo grammar.yo
      index.yo intro.yo invoke.yo jobs.yo manual.yo metafaq.yo mod_cap.yo
      mod_clone.yo mod_compctl.yo mod_complete.yo mod_complist.yo
      mod_computil.yo mod_deltochar.yo mod_example.yo mod_files.yo
      mod_mapfile.yo mod_mathfunc.yo mod_parameter.yo mod_sched.yo
!     mod_stat.yo mod_zftp.yo mod_zle.yo mod_zleparameter.yo mod_zutil.yo
!     modules.yo modlist.yo modmenu.yo
      options.yo params.yo prompt.yo redirect.yo restricted.yo seealso.yo
      zftpsys.yo zle.yo
  '
diff -crN ../zsh-/Doc/Zsh/manual.yo ./Doc/Zsh/manual.yo
*** ../zsh-/Doc/Zsh/manual.yo	Sun Nov 28 17:42:27 1999
--- ./Doc/Zsh/manual.yo	Mon Dec 13 18:07:54 1999
***************
*** 115,136 ****
  
  Zsh Modules
  
! menu(The cap Module)
! menu(The clone Module)
! menu(The complete Module)
! menu(The compctl Module)
! menu(The complist Module)
! menu(The deltochar Module)
! menu(The example Module)
! menu(The files Module)
! menu(The mapfile Module)
! menu(The mathfunc Module)
! menu(The parameter Module)
! menu(The sched Module)
! menu(The stat Module)
! menu(The zftp Module)
! menu(The zle Module)
! menu(The zleparameter Module)
  endmenu()
  texinode(The Z Shell Manual)(Introduction)(Top)(Top)
  chapter(The Z Shell Manual)
--- 115,121 ----
  
  Zsh Modules
  
! includefile(Zsh/modmenu.yo)
  endmenu()
  texinode(The Z Shell Manual)(Introduction)(Top)(Top)
  chapter(The Z Shell Manual)
diff -crN ../zsh-/Doc/Zsh/mod_cap.yo ./Doc/Zsh/mod_cap.yo
*** ../zsh-/Doc/Zsh/mod_cap.yo	Sun Nov 28 17:42:27 1999
--- ./Doc/Zsh/mod_cap.yo	Mon Dec 13 18:04:35 1999
***************
*** 1,5 ****
! texinode(The cap Module)(The clone Module)()(Zsh Modules)
! sect(The cap Module)
  The tt(cap) module is used for manipulating POSIX.1e (POSIX.6) capability
  sets.  If the operating system does not support this interface, the
  builtins defined by this module will do nothing.
--- 1,6 ----
! COMMENT(!MOD!
! Builtins for manipulating POSIX.1e (POSIX.6) capability (privilege) sets.
! !MOD!)
  The tt(cap) module is used for manipulating POSIX.1e (POSIX.6) capability
  sets.  If the operating system does not support this interface, the
  builtins defined by this module will do nothing.
diff -crN ../zsh-/Doc/Zsh/mod_clone.yo ./Doc/Zsh/mod_clone.yo
*** ../zsh-/Doc/Zsh/mod_clone.yo	Mon Dec 13 12:24:52 1999
--- ./Doc/Zsh/mod_clone.yo	Mon Dec 13 18:04:35 1999
***************
*** 1,5 ****
! texinode(The clone Module)(The zutil Module)(The cap Module)(Zsh Modules)
! sect(The clone Module)
  The tt(clone) module makes available one builtin command:
  
  startitem()
--- 1,6 ----
! COMMENT(!MOD!
! A builtin that can clone a running shell onto another terminal.
! !MOD!)
  The tt(clone) module makes available one builtin command:
  
  startitem()
diff -crN ../zsh-/Doc/Zsh/mod_compctl.yo ./Doc/Zsh/mod_compctl.yo
*** ../zsh-/Doc/Zsh/mod_compctl.yo	Sun Nov 28 17:42:27 1999
--- ./Doc/Zsh/mod_compctl.yo	Mon Dec 13 18:04:35 1999
***************
*** 1,5 ****
! texinode(The compctl Module)(The complist Module)(The complete Module)(Zsh Modules)
! sect(The compctl Module)
  The tt(compctl) module makes available two builtin commands. tt(compctl),
  is the old, deprecated way to control completions for ZLE.  See
  ifzman(zmanref(zshcompctl))\
--- 1,7 ----
! COMMENT(!MOD!
! The tt(compctl) builtin for controlling completion and the builtins for
! completion widgets.
! !MOD!)
  The tt(compctl) module makes available two builtin commands. tt(compctl),
  is the old, deprecated way to control completions for ZLE.  See
  ifzman(zmanref(zshcompctl))\
diff -crN ../zsh-/Doc/Zsh/mod_complete.yo ./Doc/Zsh/mod_complete.yo
*** ../zsh-/Doc/Zsh/mod_complete.yo	Mon Dec 13 12:24:52 1999
--- ./Doc/Zsh/mod_complete.yo	Mon Dec 13 18:04:35 1999
***************
*** 1,5 ****
! texinode(The complete Module)(The compctl Module)(The zutil Module)(Zsh Modules)
! sect(The complete Module)
  The tt(complete) module makes available several builtin commands which
  can be used in user-defined completion widgets, see
  ifzman(zmanref(zshcompwid))\
--- 1,6 ----
! COMMENT(!MOD!
! The basic completion code.
! !MOD!)
  The tt(complete) module makes available several builtin commands which
  can be used in user-defined completion widgets, see
  ifzman(zmanref(zshcompwid))\
diff -crN ../zsh-/Doc/Zsh/mod_complist.yo ./Doc/Zsh/mod_complist.yo
*** ../zsh-/Doc/Zsh/mod_complist.yo	Wed Dec  8 19:37:58 1999
--- ./Doc/Zsh/mod_complist.yo	Mon Dec 13 18:04:35 1999
***************
*** 1,5 ****
! texinode(The complist Module)(The computil Module)(The compctl Module)(Zsh Modules)
! sect(The complist Module)
  cindex(completion, listing)
  cindex(completion, coloured listings)
  The tt(complist) module offers two extensions to completion listings:
--- 1,6 ----
! COMMENT(!MOD!
! Completion listing extensions.
! !MOD!)
  cindex(completion, listing)
  cindex(completion, coloured listings)
  The tt(complist) module offers two extensions to completion listings:
diff -crN ../zsh-/Doc/Zsh/mod_computil.yo ./Doc/Zsh/mod_computil.yo
*** ../zsh-/Doc/Zsh/mod_computil.yo	Mon Dec 13 12:24:52 1999
--- ./Doc/Zsh/mod_computil.yo	Mon Dec 13 18:04:35 1999
***************
*** 1,5 ****
! texinode(The computil Module)(The deltochar Module)(The complist Module)(Zsh Modules)
! sect(The computil Module)
  cindex(completion, utility)
  The tt(computil) module adds several builtin commands that are used by
  some of the completion functions in the shell function based
--- 1,7 ----
! COMMENT(!MOD!
! A module with utility builtins needed for the shell function based
! completion system.
! !MOD!)
  cindex(completion, utility)
  The tt(computil) module adds several builtin commands that are used by
  some of the completion functions in the shell function based
diff -crN ../zsh-/Doc/Zsh/mod_deltochar.yo ./Doc/Zsh/mod_deltochar.yo
*** ../zsh-/Doc/Zsh/mod_deltochar.yo	Sun Nov 28 17:42:27 1999
--- ./Doc/Zsh/mod_deltochar.yo	Mon Dec 13 18:04:35 1999
***************
*** 1,5 ****
! texinode(The deltochar Module)(The example Module)(The computil Module)(Zsh Modules)
! sect(The deltochar Module)
  The tt(deltochar) module makes available two ZLE functions:
  
  startitem()
--- 1,6 ----
! COMMENT(!MOD!
! A ZLE function duplicating EMACS' tt(zap-to-char).
! !MOD!)
  The tt(deltochar) module makes available two ZLE functions:
  
  startitem()
diff -crN ../zsh-/Doc/Zsh/mod_example.yo ./Doc/Zsh/mod_example.yo
*** ../zsh-/Doc/Zsh/mod_example.yo	Sun Nov 28 17:42:27 1999
--- ./Doc/Zsh/mod_example.yo	Mon Dec 13 18:04:35 1999
***************
*** 1,5 ****
! texinode(The example Module)(The files Module)(The deltochar Module)(Zsh Modules)
! sect(The example Module)
  The tt(example) module makes available one builtin command:
  
  startitem()
--- 1,6 ----
! COMMENT(!MOD!
! An example of how to write a module.
! !MOD!)
  The tt(example) module makes available one builtin command:
  
  startitem()
diff -crN ../zsh-/Doc/Zsh/mod_files.yo ./Doc/Zsh/mod_files.yo
*** ../zsh-/Doc/Zsh/mod_files.yo	Mon Dec 13 12:25:47 1999
--- ./Doc/Zsh/mod_files.yo	Mon Dec 13 18:04:35 1999
***************
*** 1,5 ****
! texinode(The files Module)(The mapfile Module)(The example Module)(Zsh Modules)
! sect(The files Module)
  cindex(files, manipulating)
  The tt(files) module makes some standard commands available as builtins:
  
--- 1,6 ----
! COMMENT(!MOD!
! Some basic file manipulation commands as builtins.
! !MOD!)
  cindex(files, manipulating)
  The tt(files) module makes some standard commands available as builtins:
  
diff -crN ../zsh-/Doc/Zsh/mod_mapfile.yo ./Doc/Zsh/mod_mapfile.yo
*** ../zsh-/Doc/Zsh/mod_mapfile.yo	Sun Nov 28 17:42:27 1999
--- ./Doc/Zsh/mod_mapfile.yo	Mon Dec 13 18:04:35 1999
***************
*** 1,5 ****
! texinode(The mapfile Module)(The mathfunc Module)(The files Module)(Zsh Modules)
! sect(The mapfile Module)
  cindex(parameter, file access via)
  The tt(mapfile) module provides one special associative array parameter of
  the same name.
--- 1,6 ----
! COMMENT(!MOD!
! Access to external files via a special associative array.
! !MOD!)
  cindex(parameter, file access via)
  The tt(mapfile) module provides one special associative array parameter of
  the same name.
diff -crN ../zsh-/Doc/Zsh/mod_mathfunc.yo ./Doc/Zsh/mod_mathfunc.yo
*** ../zsh-/Doc/Zsh/mod_mathfunc.yo	Sun Nov 28 17:42:27 1999
--- ./Doc/Zsh/mod_mathfunc.yo	Mon Dec 13 18:04:35 1999
***************
*** 1,5 ****
! texinode(The mathfunc Module)(The parameter Module)(The mapfile Module)(Zsh Modules)
! sect(The mathfunc Module)
  cindex(functions, mathematical)
  cindex(mathematical functions)
  The tt(mathfunc) module provides standard mathematical functions for use when
--- 1,6 ----
! COMMENT(!MOD!
! Standard scientific functions for use in mathematical evaluations.
! !MOD!)
  cindex(functions, mathematical)
  cindex(mathematical functions)
  The tt(mathfunc) module provides standard mathematical functions for use when
diff -crN ../zsh-/Doc/Zsh/mod_parameter.yo ./Doc/Zsh/mod_parameter.yo
*** ../zsh-/Doc/Zsh/mod_parameter.yo	Mon Dec 13 12:25:41 1999
--- ./Doc/Zsh/mod_parameter.yo	Mon Dec 13 18:04:35 1999
***************
*** 1,5 ****
! texinode(The parameter Module)(The sched Module)(The mathfunc Module)(Zsh Modules)
! sect(The parameter Module)
  cindex(parameters, special)
  The tt(parameter) module gives access to some of the internal hash
  tables used by the shell by defining some special parameters.
--- 1,6 ----
! COMMENT(!MOD!
! Access to internal hash tables via special associative arrays.
! !MOD!)
  cindex(parameters, special)
  The tt(parameter) module gives access to some of the internal hash
  tables used by the shell by defining some special parameters.
diff -crN ../zsh-/Doc/Zsh/mod_sched.yo ./Doc/Zsh/mod_sched.yo
*** ../zsh-/Doc/Zsh/mod_sched.yo	Sun Nov 28 17:42:27 1999
--- ./Doc/Zsh/mod_sched.yo	Mon Dec 13 18:04:35 1999
***************
*** 1,5 ****
! texinode(The sched Module)(The stat Module)(The parameter Module)(Zsh Modules)
! sect(The sched Module)
  The tt(sched) module makes available one builtin command:
  
  startitem()
--- 1,6 ----
! COMMENT(!MOD!
! A builtin that provides a timed execution facility within the shell.
! !MOD!)
  The tt(sched) module makes available one builtin command:
  
  startitem()
diff -crN ../zsh-/Doc/Zsh/mod_stat.yo ./Doc/Zsh/mod_stat.yo
*** ../zsh-/Doc/Zsh/mod_stat.yo	Sun Nov 28 17:42:27 1999
--- ./Doc/Zsh/mod_stat.yo	Mon Dec 13 18:04:35 1999
***************
*** 1,5 ****
! texinode(The stat Module)(The zftp Module)(The sched Module)(Zsh Modules)
! sect(The stat Module)
  The tt(stat) module makes available one builtin command:
  
  startitem()
--- 1,6 ----
! COMMENT(!MOD!
! A builtin command interface to the tt(stat) system call.
! !MOD!)
  The tt(stat) module makes available one builtin command:
  
  startitem()
diff -crN ../zsh-/Doc/Zsh/mod_zftp.yo ./Doc/Zsh/mod_zftp.yo
*** ../zsh-/Doc/Zsh/mod_zftp.yo	Sun Nov 28 17:42:27 1999
--- ./Doc/Zsh/mod_zftp.yo	Mon Dec 13 18:04:35 1999
***************
*** 1,5 ****
! texinode(The zftp Module)(The zle Module)(The stat Module)(Zsh Modules)
! sect(The zftp Module)
  The tt(zftp) module makes available one builtin command:
  
  startitem()
--- 1,6 ----
! COMMENT(!MOD!
! A builtin FTP client.
! !MOD!)
  The tt(zftp) module makes available one builtin command:
  
  startitem()
diff -crN ../zsh-/Doc/Zsh/mod_zle.yo ./Doc/Zsh/mod_zle.yo
*** ../zsh-/Doc/Zsh/mod_zle.yo	Sun Nov 28 17:42:27 1999
--- ./Doc/Zsh/mod_zle.yo	Mon Dec 13 18:04:35 1999
***************
*** 1,5 ****
! texinode(The zle Module)(The zleparameter Module)(The zftp Module)(Zsh Modules)
! sect(The zle Module)
  The tt(zle) module contains the Zsh Line Editor.  See
  ifzman(zmanref(zshzle))\
  ifnzman(noderef(Zsh Line Editor))\
--- 1,6 ----
! COMMENT(!MOD!
! The Zsh Line Editor, including the tt(bindkey) and tt(vared) builtins.
! !MOD!)
  The tt(zle) module contains the Zsh Line Editor.  See
  ifzman(zmanref(zshzle))\
  ifnzman(noderef(Zsh Line Editor))\
diff -crN ../zsh-/Doc/Zsh/mod_zleparameter.yo ./Doc/Zsh/mod_zleparameter.yo
*** ../zsh-/Doc/Zsh/mod_zleparameter.yo	Sun Nov 28 17:42:27 1999
--- ./Doc/Zsh/mod_zleparameter.yo	Mon Dec 13 18:04:35 1999
***************
*** 1,5 ****
! texinode(The zleparameter Module)()(The zle Module)(Zsh Modules)
! sect(The zleparameter Module)
  cindex(parameters, special)
  The tt(zleparameter) module defines two special parameters that can be 
  used to access internal information of the Zsh Line Editor (see
--- 1,6 ----
! COMMENT(!MOD!
! Access to internals of the Zsh Line Editor via parameters.
! !MOD!)
  cindex(parameters, special)
  The tt(zleparameter) module defines two special parameters that can be 
  used to access internal information of the Zsh Line Editor (see
diff -crN ../zsh-/Doc/Zsh/mod_zutil.yo ./Doc/Zsh/mod_zutil.yo
*** ../zsh-/Doc/Zsh/mod_zutil.yo	Mon Dec 13 12:24:52 1999
--- ./Doc/Zsh/mod_zutil.yo	Mon Dec 13 18:04:35 1999
***************
*** 1,5 ****
! texinode(The zutil Module)(The complete Module)(The clone Module)(Zsh Modules)
! sect(The zutil Module)
  cindex(builtins, utility)
  The tt(zutil) module only adds some builtins:
  
--- 1,7 ----
! COMMENT(!MOD!
! Some utility builtins, e.g. the one for supporting configuration via 
! styles.
! !MOD!)
  cindex(builtins, utility)
  The tt(zutil) module only adds some builtins:
  
diff -crN ../zsh-/Doc/Zsh/modules.yo ./Doc/Zsh/modules.yo
*** ../zsh-/Doc/Zsh/modules.yo	Mon Dec 13 12:24:52 1999
--- ./Doc/Zsh/modules.yo	Mon Dec 13 18:06:13 1999
***************
*** 8,107 ****
  or can be dynamically linked while the shell is running
  if the installation supports this feature.  The modules available are:
  
! startitem()
! item(tt(cap))(
! Builtins for manipulating POSIX.1e (POSIX.6) capability (privilege) sets.
! )
! item(tt(clone))(
! A builtin that can clone a running shell onto another terminal.
! )
! item(tt(zutil))(
! Some utility builtins, e.g. the one for supporting configuration via 
! styles.
! )
! item(tt(complete))(
! The basic completion code.
! )
! item(tt(compctl))(
! The tt(compctl) builtin for controlling completion and the builtins for
! completion widgets.
! )
! item(tt(complist))(
! Completion listing extensions.
! )
! item(tt(computil))(
! A module with utility builtins needed for the shell function based
! completion system.
! )
! item(tt(deltochar))(
! A ZLE function duplicating EMACS' tt(zap-to-char).
! )
! item(tt(example))(
! An example of how to write a module.
! )
! item(tt(files))(
! Some basic file manipulation commands as builtins.
! )
! item(tt(mapfile))(
! Access to external files via a special associative array.
! )
! item(tt(mathfunc))(
! Standard scientific functions for use in mathematical evaluations.
! )
! item(tt(parameter))(
! Access to internal hash tables via special associative arrays.
! )
! item(tt(sched))(
! A builtin that provides a timed execution facility within the shell.
! )
! item(tt(stat))(
! A builtin command interface to the tt(stat) system call.
! )
! item(tt(zftp))(
! A builtin FTP client.
! )
! item(tt(zle))(
! The Zsh Line Editor, including the tt(bindkey) and tt(vared) builtins.
! )
! item(tt(zleparameter))(
! Access to internals of the Zsh Line Editor via parameters.
! )
! enditem()
! startmenu()
! menu(The cap Module)
! menu(The clone Module)
! menu(The zutil Module)
! menu(The complete Module)
! menu(The compctl Module)
! menu(The complist Module)
! menu(The computil Module)
! menu(The deltochar Module)
! menu(The example Module)
! menu(The files Module)
! menu(The mapfile Module)
! menu(The mathfunc Module)
! menu(The parameter Module)
! menu(The sched Module)
! menu(The stat Module)
! menu(The zftp Module)
! menu(The zle Module)
! menu(The zleparameter Module)
! endmenu()
! includefile(Zsh/mod_cap.yo)
! includefile(Zsh/mod_clone.yo)
! includefile(Zsh/mod_zutil.yo)
! includefile(Zsh/mod_complete.yo)
! includefile(Zsh/mod_compctl.yo)
! includefile(Zsh/mod_complist.yo)
! includefile(Zsh/mod_computil.yo)
! includefile(Zsh/mod_deltochar.yo)
! includefile(Zsh/mod_example.yo)
! includefile(Zsh/mod_files.yo)
! includefile(Zsh/mod_mapfile.yo)
! includefile(Zsh/mod_mathfunc.yo)
! includefile(Zsh/mod_parameter.yo)
! includefile(Zsh/mod_sched.yo)
! includefile(Zsh/mod_stat.yo)
! includefile(Zsh/mod_zftp.yo)
! includefile(Zsh/mod_zle.yo)
! includefile(Zsh/mod_zleparameter.yo)
--- 8,11 ----
  or can be dynamically linked while the shell is running
  if the installation supports this feature.  The modules available are:
  
! includefile(Zsh/modlist.yo)
END

