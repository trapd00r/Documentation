From zsh-users-return-12492-mason-zsh=primenet.com.au@sunsite.dk Sat Jan 26 23:32:26 2008
Return-Path: <zsh-users-return-12492-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 6356 invoked from network); 26 Jan 2008 23:32:24 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 26 Jan 2008 23:32:24 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 72856 invoked from network); 26 Jan 2008 23:32:06 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 26 Jan 2008 23:32:06 -0000
Received: (qmail 19285 invoked by alias); 26 Jan 2008 23:31:53 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12492
Received: (qmail 19270 invoked from network); 26 Jan 2008 23:31:53 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 26 Jan 2008 23:31:53 -0000
Received: from vms048pub.verizon.net (vms048pub.verizon.net [206.46.252.48])
	by bifrost.dotsrc.org (Postfix) with ESMTP id B859180190F6
	for <zsh-users@sunsite.dk>; Sun, 27 Jan 2008 00:31:48 +0100 (CET)
Received: from torch.brasslantern.com ([71.121.18.67])
 by vms048.mailsrvcs.net (Sun Java System Messaging Server 6.2-6.01 (built Apr
 3 2006)) with ESMTPA id <0JV900AWLYOXFLH4@vms048.mailsrvcs.net> for
 zsh-users@sunsite.dk; Sat, 26 Jan 2008 17:31:46 -0600 (CST)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id m0QNVhVL006175; Sat,
 26 Jan 2008 15:31:44 -0800
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id m0QNVhPU006174; Sat, 26 Jan 2008 15:31:43 -0800
Date: Sat, 26 Jan 2008 15:31:40 -0800
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: idea for new feature (was: Re: sticky-note and zle bindings)
In-reply-to: <2d460de70801260719h594ded7ey88ca32c20bae6fdd@mail.gmail.com>
In-reply-to: <2d460de70801260729q34fb7ed8o11446e63a320b2ad@mail.gmail.com>
In-reply-to: <2d460de70801260741q16e4f197he2307be6e4f81c82@mail.gmail.com>
To: zsh-users@sunsite.dk, "Bastian, Waldo" <waldo.bastian@intel.com>,
 "Richard Hartmann" <richih.mailinglist@gmail.com>
Cc: "Robert Knight" <robertknight@gmail.com>, bastian@kde.org
Message-id: <080126153143.ZM6173@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <13ed09c00801241017x1cd7c454lcbf9156b6bccd9bb@mail.gmail.com>
	<2d460de70801241209u63a33fe6ufb8f396bff440dc6@mail.gmail.com>
	<2d460de70801241254v52d8a9c4he75e450f2f2bd29e@mail.gmail.com>
	<13ed09c00801241354g306f5aaay4d9e6f22c1622ec7@mail.gmail.com>
	<2d460de70801241522y47611d27k2e60c132fea1f01d@mail.gmail.com>
	<13ed09c00801241857n2b1613f0m2d74fd12a90135cc@mail.gmail.com>
	<2d460de70801250132n1692f74cn78d3fdc40da88b9@mail.gmail.com>
	<080125095733.ZM20873@torch.brasslantern.com>
	<2d460de70801260719h594ded7ey88ca32c20bae6fdd@mail.gmail.com>
	<080124215848.ZM19758@torch.brasslantern.com>
	<2d460de70801250149t360f9938u18d458b03f464c72@mail.gmail.com>
	<1B47D24854C7BC4FA8DA28BEBB59B0BA02E64EAC@orsmsx419.amr.corp.intel.com>
	<2d460de70801260729q34fb7ed8o11446e63a320b2ad@mail.gmail.com>
	<13ed09c00801251018l1007ac9an9c453651d5695c46@mail.gmail.com>
	<080125181227.ZM21172@torch.brasslantern.com>
	<2d460de70801260741q16e4f197he2307be6e4f81c82@mail.gmail.com>
Comments: In reply to "Richard Hartmann" <richih.mailinglist@gmail.com>
 "Re: idea for new feature (was: Re: sticky-note and zle bindings)" (Jan 26,
 4:19pm)
Comments: In reply to "Richard Hartmann" <richih.mailinglist@gmail.com>
 "Re: idea for new feature (was: Re: sticky-note and zle bindings)" (Jan 26,
 4:29pm)
Comments: In reply to "Richard Hartmann" <richih.mailinglist@gmail.com>
 "Re: idea for new feature (was: Re: sticky-note and zle bindings)" (Jan 26,
 4:41pm)
X-Virus-Scanned: ClamAV 0.91.2/5563/Sat Jan 26 23:45:00 2008 on bifrost
X-Virus-Status: Clean

(How many of the people Cc'd on this want to continue to be Cc'd?)

On Jan 26,  4:19pm, Richard Hartmann wrote:
} Subject: Re: idea for new feature (was: Re: sticky-note and zle bindings)
}
} On Jan 25, 2008 6:57 PM, Bart Schaefer <schaefer@brasslantern.com> wrote:
} > Shells are slightly different beasts than other applications.  If I
} > explicitly exit from a shell, I'm done
} 
} That is only true for local shells. Remote shells should offer a way
} to resume.

There's certain state that the shell theoretically can save/restore,
independent of its display environment.  There's other state that
depends on interaction with the display environment.  In the case of
a remote shell, the display environment can only interact with the
shell to the extent that the remote connection protocol (e.g., ssh)
supports it, and it's highly unlikely that the local display manager
is going to be able (upon restart) to re-establish all the same
remote connections and start the correct remote applications.

The upshot of this, and of the three cases I outlined in my earlier
message, is that I think any further discussion of "remote" shells is
mostly just a diversion from the question of how the shell saves and
restores its state (and what state).  If you want to talk about how
Konsole should resolve what state to store in the event that it is
using a non-local display, discuss that elsewhere.

The most we should care about on this list is how the terminal (or
whatever starts up the shell, such as sshd) communicates to the shell
that a session is to be restored.

} Even if there is no HUP and I cleanly exit a remote session, I would
} probably want to restore session state, sometimes. A cheap way to
} emulate screen, so to say.
 
This is still not really related to whether the session is remote.  You
have some conditions under which you want the shell to keep its state.
If the shell can be scripted to detect those circumstances, you get
what you want.  There's no reason to give "remoteness" any special
consideration in this regard, except possibly to suggest that ssh[d]
treat shell session identity as part of X11 forwarding.

The idea that the local parent of ssh and the remote process that it
runs are somehow linked to the same session could be a useful one
even if (perhaps especially if) there is no X display involved.

} > It also implies that the shell needs a way to tell the GUI environment
} > NOT to attempt, independently, to restore current directory, etc.
} 
} [XDG_]SHELL_SESSION_HANDLER or some such?
} Could be 'shell', 'terminal', 'both' or a parseable list/an array?

I was thinking of a run-time communication (such as a control sequence
written to the psuedo-tty, though I don't really like that idea), but
I suppose it would be sufficient to tell the terminal in advance to
keep its fingers out of /proc/*/cwd.
 
On Jan 26,  4:29pm, Richard Hartmann wrote:
}
} Does anyone else have any thoughts about the relative
} merrits/disadvantages of enhancing XDG or don't people care either way
} as long as there is a 'standardized' way to do this?

I think that enough users run shells in situations completely divorced
from X desktops that it would be inappropriate to design a shell session
state mechanism with any direct dependence on, or reference to, XDG.

If XDG wants to incorporate such a shell session mechanism by reference,
that's up to them.

On Jan 26,  4:41pm, Richard Hartmann wrote:
} 
} Restoring the programs that ran is a very interesting idea. I like it :)

Not "the programs that ran".  The programs that *were running*; that is,
something the shell had to SIGHUP when it exited.  I'd be very leery of
automatically restarting anything other than the foreground job, though,
and maybe not even that if it was a pipeline.

} If the shell is a child of ssh, there is no terminal to help the shell
} with garbage collection

ssh[d] would have to take on that role.  Something has to tell the shell
*when* to garbage-collect.  *What* gets collected is up to the shell.

-- 

