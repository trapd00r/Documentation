From zsh-workers-return-16543-mason-zsh=primenet.com.au@sunsite.dk Sun Feb 03 23:00:05 2002
Return-Path: <zsh-workers-return-16543-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 19313 invoked from network); 3 Feb 2002 23:00:04 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 3 Feb 2002 23:00:04 -0000
Received: (qmail 18528 invoked by alias); 3 Feb 2002 22:59:52 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16543
Received: (qmail 18488 invoked from network); 3 Feb 2002 22:59:40 -0000
To: Zsh <zsh-workers@sunsite.dk>
Subject: Incompatibility when Zsh invoked as 'sh'
Message-Id: <E16XVpG-0006tm-00@DervishD.viadomus.com>
Date: Mon, 4 Feb 2002 00:13:34 +0100
From: DervishD <raul@viadomus.com>
Reply-To: DervishD <raul@viadomus.com>
Sender: DervishD <raul@viadomus.com>
X-Mailer: DervishD TWiSTiNG Mailer

    Hello zshworkers :))

    I don't know if this is an incompatibility or just bad scripting
;)), but when running the GNU libc (version 2.2.4) 'catchsegv'
script, Zsh complains. Zsh is being invoked as 'sh' here, I'm sure of
it, at least.

    The problem is a 'case' like this (abbreviated):

    case "$1" in
        [*)  ....
            ;;
        *)   ....
            ;;
    esac

    Well, the error is the '[*' pattern, which zsh says is a 'bat
pattern'. Bash treats it as the regex 'match an opening bracket and
anything after it', but zsh doesn't.

    Assuming that zsh is running in 'sh' compatibility mode (because
it is invoked 'sh'), it shouldn't treat '[' as an special character
(the problem is that the bracket must be quoted), should it?

    If Zsh is behaving well, the GNU libc people should be told about
quoting the offending char.

    Thanks a lot :)

    Raúl

