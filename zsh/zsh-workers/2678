From zsh-workers-request@euclid.skiles.gatech.edu Mon Dec 30 23:08:33 1996
Return-Path: <zsh-workers-request@euclid.skiles.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 1044 invoked from network); 30 Dec 1996 23:08:31 -0000
Received: from euclid.skiles.gatech.edu (list@130.207.146.50)
  by coral.primenet.com.au with SMTP; 30 Dec 1996 23:08:31 -0000
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id SAA29760; Mon, 30 Dec 1996 18:10:12 -0500 (EST)
Resent-Date: Mon, 30 Dec 1996 18:10:12 -0500 (EST)
From: Zoltan Hidvegi <hzoli@cs.elte.hu>
Message-Id: <199612302306.AAA00557@hzoli.ppp.cs.elte.hu>
Subject: zsh-3.1.0 fix for the Alpha
To: zsh-workers@math.gatech.edu (Zsh hacking and development)
Date: Tue, 31 Dec 1996 00:06:12 +0100 (MET)
X-Mailer: ELM [version 2.4ME+ PL17 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"TPVu5.0.uG7.Jl4oo"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/2678
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

This patch makes zsh-3.1.0 work on machines (such as the Alpha) where
sizeof(void*) != sizeof(int).

This patch can be applied to the plain unpatched zsh-3.1.0 release.

Zoltan


*** Src/utils.c	1996/12/29 01:53:45	3.1.1.5
--- Src/utils.c	1996/12/30 23:00:44
***************
*** 2038,2044 ****
      *nints = (type & ~NT_HEAP);
      if (useheap)
  	*nints |= NT_HEAP;
!     for (i = NT_NUM(type); i--; *++nints = *++oints);
      onodes = (void **) (oints + 1);
      nnodes = (void **) (nints + 1);
      heap = type & NT_HEAP;
--- 2038,2048 ----
      *nints = (type & ~NT_HEAP);
      if (useheap)
  	*nints |= NT_HEAP;
!     i = NT_NUM(type);
!     while ((i + 1) & (sizeof(void *)/sizeof(int) - 1))
! 	i++;
!     while (i--)
! 	*++nints = *++oints;
      onodes = (void **) (oints + 1);
      nnodes = (void **) (nints + 1);
      heap = type & NT_HEAP;
***************
*** 2103,2109 ****
  	return;
  
      type = * (int *) a;
!     nodes = (void **) ((int *) a + NT_NUM(type) + 1);
      size = sizetab[NT_TYPE(type)];
      for (type = (type & 0xffff00) >> 4; (type >>= 4);) {
  	if ((n = *nodes++)) {
--- 2107,2116 ----
  	return;
  
      type = * (int *) a;
!     size = NT_NUM(type);
!     while ((size + 1) & (sizeof(void *)/sizeof(int) - 1))
! 	size++;
!     nodes = (void **) ((int *) a + size + 1);
      size = sizetab[NT_TYPE(type)];
      for (type = (type & 0xffff00) >> 4; (type >>= 4);) {
  	if ((n = *nodes++)) {

