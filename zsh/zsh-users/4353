From zsh-users-return-4353-mason-zsh=primenet.com.au@sunsite.dk Mon Oct 08 17:39:42 2001
Return-Path: <zsh-users-return-4353-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 8711 invoked from network); 8 Oct 2001 17:39:41 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 8 Oct 2001 17:39:41 -0000
Received: (qmail 1446 invoked by alias); 8 Oct 2001 17:39:27 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 4353
Received: (qmail 1428 invoked from network); 8 Oct 2001 17:39:25 -0000
From: Bart Schaefer <schaefer@brasslantern.com>
Message-Id: <1011008173916.ZM5532@candle.brasslantern.com>
Date: Mon, 8 Oct 2001 17:39:15 +0000
In-Reply-To: <20011008161313.EC4ACD804@mail.cise.ufl.edu>
Comments: In reply to "James F. Hranicky" <jfh@cise.ufl.edu>
        "Wishlist for zsh: 3 tcsh features" (Oct  8, 12:13pm)
References: <20011008161313.EC4ACD804@mail.cise.ufl.edu> 
	<OF594BCCA9.4364E8B5-ON80256ADF.0059B87C@uk.jpmorgan.com> 
	<3BC1DDEE.FA306604@yahoo.co.uk>
In-Reply-To: <OF594BCCA9.4364E8B5-ON80256ADF.0059B87C@uk.jpmorgan.com>
Comments: In reply to martin.ebourne@arcordia.com
        "Re: Wishlist for zsh: 3 tcsh features" (Oct  8,  5:25pm)
In-Reply-To: <3BC1DDEE.FA306604@yahoo.co.uk>
Comments: In reply to Oliver Kiddle <okiddle@yahoo.co.uk>
        "Re: Wishlist for zsh: 3 tcsh features" (Oct  8,  6:10pm)
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-users@sunsite.dk
Subject: Re: Wishlist for zsh: 3 tcsh features
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Oct 8,  5:25pm, martin.ebourne@arcordia.com wrote:
}
}       1) <Meta-Del>: In tcsh, when deleting elements in a path,
}          <Meta-Del> generally deletes everything up to the next
}          "/" character, e.g.
} 
} In ZSH this is controlled with the WORDCHARS env var. Mine is set to:
} WORDCHARS='*?_-.[]~#'

You can also try using vi-backward-kill-word instead of backward-kill-word.

}       2) <Meta-p>, part 1 : In tcsh, <Meta-p>, when looking up history
}          elements that begin with the already-typed string, will return
}          a unique list of elements that match the string, e.g.:
} 
} One solution to this is prevent history lines from getting duplicated in
} the first place. Something like:
} setopt hist_find_no_dups

Just that one, should give what James wants.  If it doesn't, we need to
fix it.

}       3) <Meta-p>, part 2 : In tcsh, <Meta-p> will return the command that
}          matches exactly what's been typed already:
} 
} The ZLE widgets 'history-beginning-search-backward' and '
} history-beginning-search-forward' are probably what you are after.

On Oct 8,  6:10pm, Oliver Kiddle wrote:
} 
} Those two widgets annoyingly don't allow you to navigate up and down in
} multiple line commands so you may prefer to try `up-line-or-search' and
} `down-line-or-search' which are similar. They also have their faults
} though because they only use the first word on the current line in their
} search. Ideally, these will be replaced with more primitive widgets
} (e.g. just up-line) so that I can write one which works exactly as I
} like in a shell function.

I don't think it's possible to get more primitive than up-line-or-history,
which goes up one line in a multi-line buffer or up one history entry at
the beginning of the buffer.  Unless you're looking for a primitive that
won't move out of the multi-line buffer when it reaches the top?

Meanwhile, something like this should work:

    function up-line-or-beginning-search {
	if [[ $LASTWIDGET != $WIDGET ]]
	then
	    if [[ $BUFFER == *$'\n'* ]]
	    then
		__last_up_line=up-line-or-history
	    else
		__last_up_line=history-beginning-search-backward
	    fi
	fi
	zle .${__last_up_line:-beep}
    }

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

