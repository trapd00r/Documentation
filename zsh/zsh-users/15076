From zsh-users-return-15076-mason-zsh=primenet.com.au@zsh.org Sat May 22 20:36:16 2010
Return-Path: <zsh-users-return-15076-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 14708 invoked by alias); 22 May 2010 20:36:16 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15076
Received: (qmail 15126 invoked from network); 22 May 2010 20:36:04 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.3.1
Received-SPF: pass (ns1.primenet.com.au: SPF record at benizi.com designates 64.130.10.15 as permitted sender)
Date: Sat, 22 May 2010 16:28:10 -0400 (EDT)
From: "Benjamin R. Haskell" <zsh@benizi.com>
To: Zsh Users <zsh-users@zsh.org>
Subject: Re: Handling Double-quoted backslash
In-Reply-To: <AANLkTilsi-UtdCZJuv9hNNQs3XIQG_8MRilmXYQMfXaR@mail.gmail.com>
Message-ID: <alpine.LNX.2.01.1005221600590.5029@hp.internal>
References: <AANLkTineDxdmX6rYKFaq8MPMV-JM3skkSsJ69I7aNUfY@mail.gmail.com> <AANLkTilsi-UtdCZJuv9hNNQs3XIQG_8MRilmXYQMfXaR@mail.gmail.com>
User-Agent: Alpine 2.01 (LNX 1266 2009-07-14)
MIME-Version: 1.0
Content-Type: MULTIPART/MIXED; BOUNDARY="-1463810530-433422750-1274560090=:5029"

---1463810530-433422750-1274560090=:5029
Content-Type: TEXT/PLAIN; charset=US-ASCII

On Fri, 21 May 2010, Bart Schaefer wrote:

> On Fri, May 21, 2010 at 8:58 PM, EG Galano <eg.galano@gmail.com> wrote:
> > I'm not certain if this is a bug because many different shells 
> > handle the case differently. I started testing double-quoted 
> > backslashes with the newline character to see how the different 
> > shells handled the following commands. I'm no expert, but based on 
> > what I've learned about escaping charcters, I would think TCSH is 
> > the only one that handles it correctly. Is that not correct?
> 
> What  you've failed to account for is that shells also implement 
> "echo" differently, so the output is not determined solely by the 
> quoting.

Interestingly, the shells aren't consistent across the board regardless 
of how they implement 'echo'.  I don't think that makes one or the other 
"correct", per se (If anything, tcsh is in the minority, empirically).  
But I still thought it was worth sharing.

Printargs is just a stupid C program I whipped up to print out the 
arguments character-by-character with some [\r\n\t] handling. (gcc -Wall 
-o printargs{,.c})

zsh$ for l in bash zsh csh tcsh sh ksh fish psh dash mksh sash shish posh ; for s in 'a\nb' 'a\\nb' 'a\\\nb' ; printf "%s\t%s\t" $l $s && $l -c "printargs \"$s\"" 2>/dev/null
(The '2>/dev/null' kills a psh error under perl 5.12)

Results in the attached output.  ('sh' is a symlink to 'bash', and 'csh' 
is a symlink to 'tcsh')

So, with 1, 2, and 3 backslashes followed by an 'n':

bash, zsh, sh, ksh, fish, dash, mksh, sash, and posh keep 1, 1, and 2 
backslashes

csh, tcsh, and shish keep 1, 2, and 3 backslashes

Only psh interprets the '\n' as a newline, and adds: 0, 1, or 2 
preceding backslashes.

-- 
Best,
Ben
---1463810530-433422750-1274560090=:5029
Content-Type: TEXT/x-c; name=printargs.c
Content-Transfer-Encoding: BASE64
Content-ID: <alpine.LNX.2.01.1005221628100.5029@hp.internal>
Content-Description: 
Content-Disposition: attachment; filename=printargs.c

I2luY2x1ZGUgPHN0ZGlvLmg+DQojaW5jbHVkZSA8Y3R5cGUuaD4NCg0KaW50
IG1haW4oaW50IGFyZ2MsIGNoYXIgKiphcmd2KSB7DQoJaW50IGksIGo7DQoJ
Y2hhciBjOw0KCWZvciAoaSA9IDE7IGkgPCBhcmdjOyBpKyspIHsNCgkJaWYg
KGkgPiAxKSBwcmludGYoIlxuIik7DQoJCXByaW50ZigiYXJndlslZF06Iiwg
aSk7DQoJCWZvciAoaiA9IDA7IGFyZ3ZbaV1bal07IGorKykgew0KCQkJYyA9
IGFyZ3ZbaV1bal07DQoJCQlwcmludGYoIiAiKTsNCgkJCWlmICghaXNzcGFj
ZShjKSkgcHJpbnRmKCIlYyIsIGMpOw0KCQkJZWxzZSBpZiAoYyA9PSAnXG4n
KSBwcmludGYoIihcXG4pIik7DQoJCQllbHNlIGlmIChjID09ICdccicpIHBy
aW50ZigiKFxccikiKTsNCgkJCWVsc2UgaWYgKGMgPT0gJ1x0JykgcHJpbnRm
KCIoXFx0KSIpOw0KCQkJZWxzZSBwcmludGYoIiglMDJ4KSIsYyk7DQoJCX0N
CgkJcHJpbnRmKCJcbiIpOw0KCX0NCglyZXR1cm4gMDsNCn0NCg==

---1463810530-433422750-1274560090=:5029
Content-Type: TEXT/plain; name=shell-quoting.txt
Content-Transfer-Encoding: BASE64
Content-ID: <alpine.LNX.2.01.1005221628101.5029@hp.internal>
Content-Description: 
Content-Disposition: attachment; filename=shell-quoting.txt

YmFzaAlhXG5iCWFyZ3ZbMV06IGEgXCBuIGINCmJhc2gJYVxcbmIJYXJndlsx
XTogYSBcIG4gYg0KYmFzaAlhXFxcbmIJYXJndlsxXTogYSBcIFwgbiBiDQp6
c2gJYVxuYglhcmd2WzFdOiBhIFwgbiBiDQp6c2gJYVxcbmIJYXJndlsxXTog
YSBcIG4gYg0KenNoCWFcXFxuYglhcmd2WzFdOiBhIFwgXCBuIGINCmNzaAlh
XG5iCWFyZ3ZbMV06IGEgXCBuIGINCmNzaAlhXFxuYglhcmd2WzFdOiBhIFwg
XCBuIGINCmNzaAlhXFxcbmIJYXJndlsxXTogYSBcIFwgXCBuIGINCnRjc2gJ
YVxuYglhcmd2WzFdOiBhIFwgbiBiDQp0Y3NoCWFcXG5iCWFyZ3ZbMV06IGEg
XCBcIG4gYg0KdGNzaAlhXFxcbmIJYXJndlsxXTogYSBcIFwgXCBuIGINCnNo
CWFcbmIJYXJndlsxXTogYSBcIG4gYg0Kc2gJYVxcbmIJYXJndlsxXTogYSBc
IG4gYg0Kc2gJYVxcXG5iCWFyZ3ZbMV06IGEgXCBcIG4gYg0Ka3NoCWFcbmIJ
YXJndlsxXTogYSBcIG4gYg0Ka3NoCWFcXG5iCWFyZ3ZbMV06IGEgXCBuIGIN
CmtzaAlhXFxcbmIJYXJndlsxXTogYSBcIFwgbiBiDQpmaXNoCWFcbmIJYXJn
dlsxXTogYSBcIG4gYg0KZmlzaAlhXFxuYglhcmd2WzFdOiBhIFwgbiBiDQpm
aXNoCWFcXFxuYglhcmd2WzFdOiBhIFwgXCBuIGINCnBzaAlhXG5iCWFyZ3Zb
MV06IGEgKFxuKSBiDQpwc2gJYVxcbmIJYXJndlsxXTogYSBcIChcbikgYg0K
cHNoCWFcXFxuYglhcmd2WzFdOiBhIFwgKFxuKSBiDQpkYXNoCWFcbmIJYXJn
dlsxXTogYSBcIG4gYg0KZGFzaAlhXFxuYglhcmd2WzFdOiBhIFwgbiBiDQpk
YXNoCWFcXFxuYglhcmd2WzFdOiBhIFwgXCBuIGINCm1rc2gJYVxuYglhcmd2
WzFdOiBhIFwgbiBiDQpta3NoCWFcXG5iCWFyZ3ZbMV06IGEgXCBuIGINCm1r
c2gJYVxcXG5iCWFyZ3ZbMV06IGEgXCBcIG4gYg0Kc2FzaAlhXG5iCWFyZ3Zb
MV06IGEgXCBuIGINCnNhc2gJYVxcbmIJYXJndlsxXTogYSBcIG4gYg0Kc2Fz
aAlhXFxcbmIJYXJndlsxXTogYSBcIFwgbiBiDQpzaGlzaAlhXG5iCWFyZ3Zb
MV06IGEgXCBuIGINCnNoaXNoCWFcXG5iCWFyZ3ZbMV06IGEgXCBcIG4gYg0K
c2hpc2gJYVxcXG5iCWFyZ3ZbMV06IGEgXCBcIFwgbiBiDQpwb3NoCWFcbmIJ
YXJndlsxXTogYSBcIG4gYg0KcG9zaAlhXFxuYglhcmd2WzFdOiBhIFwgbiBi
DQpwb3NoCWFcXFxuYglhcmd2WzFdOiBhIFwgXCBuIGINCg==

---1463810530-433422750-1274560090=:5029--

