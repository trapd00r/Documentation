From zsh-workers-return-23021-mason-zsh=primenet.com.au@sunsite.dk Tue Nov 28 21:02:03 2006
Return-Path: <zsh-workers-return-23021-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16487 invoked from network); 28 Nov 2006 21:01:57 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.2 required=5.0 tests=BAYES_00,FORGED_RCVD_HELO,
	RCVD_ILLEGAL_IP autolearn=no version=3.1.7
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 28 Nov 2006 21:01:57 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 7396 invoked from network); 28 Nov 2006 21:01:51 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 28 Nov 2006 21:01:51 -0000
Received: (qmail 14969 invoked by alias); 28 Nov 2006 21:01:47 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 23021
Received: (qmail 14957 invoked from network); 28 Nov 2006 21:01:47 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 28 Nov 2006 21:01:47 -0000
Received: (qmail 7116 invoked from network); 28 Nov 2006 21:01:47 -0000
Received: from ixian.com (66.160.193.106)
  by a.mx.sunsite.dk with SMTP; 28 Nov 2006 21:01:43 -0000
Received: from bear.he.net ([127.0.0.9]) by ixian.com for <zsh-workers@sunsite.dk>; Tue, 28 Nov 2006 13:01:35 -0800
Message-Id: <1164747695.83@bear.he.net>
Date: Tue, 28 Nov 2006 13:01:35 -0800
To: zsh-workers@sunsite.dk
Subject: Re: (zsh-4.3.2) Y03 test failure under Slackware Linux 9.0.0 
From: Eric De Mund <ead@ixian.com>
Reply-To: Eric De Mund <ead@ixian.com>

Peter,

Eric De Mund wrote:
> I'm experiencing a "make check" failure in test Y03 when building
> zsh-4.3.2 under Slackware Linux 9.0.0 on a i686-pc-linux-gnu host, as I
> experienced back in March of this year (Message-ID:
> <17433.46602.590991.508063@bear.he.net>).

Peter Stephenson wrote:
] The failure is this:
] 
] *** /tmp/zsh.ztst.out.9272	Mon Nov 27 00:13:12 2006
] --- /tmp/zsh.ztst.tout.9272	Mon Nov 27 00:13:12 2006
] ***************
] *** 2,8 ****
]   line: {tst -o +o }{}
]   line: {tst -o +o }{}
]   MESSAGE:{no arguments}
] ! line: {tst +o }{}
] ! line: {tst +o -o }{}
] ! line: {tst +o -o }{}
]   MESSAGE:{no arguments}
] --- 2,10 ----
]   line: {tst -o +o }{}
]   line: {tst -o +o }{}
]   MESSAGE:{no arguments}
] ! line: {tst -+}{}
] ! MESSAGE:{no arguments}
] ! line: {tst -+}{}
] ! MESSAGE:{no arguments}
] ! line: {tst -+}{}
]   MESSAGE:{no arguments}
] Test ./Y03arguments.ztst failed: output differs from expected as shown above for:
]  tst_arguments -+o
]  comptest $'tst -\t\t\t\C-w\C-w+\t\t\t'
] Was testing: option beginning with + and -.
] ./Y03arguments.ztst: test failed.
]
] [...]
]
] My best guess is that the two \C-w's in the test aren't wiping the -
] from the previous line, "tst -o +o ". That suggests $WORDCHARS doesn't
] include "-" or it isn't having an effect for some reason. That would
] mean the test actually started the second set of completions with "tst
] -+" on the line, which then behaved the way you'd expect, so the
] failure isn't in the completion part at all. This seems more likely
] than the "-+" popping out of a failed completion.
]
] What happens if you start from "zsh -f" (and "bindkey -e" if neces-
] sary) and type:
]
] % tst -o +o\C-w\C-w
]
] does the - disappear (as it should)?  If not, what does "print -r
] $WORDCHARS" show?

On the Slackware 9.0.0 host in question:

    bear:~% cat /etc/slackware-version
    Slackware 9.0.0
    bear:~% ~/bin/config.guess
    i686-pc-linux-gnu
    bear:~% 

, the - (minus) does not disappear; I'm left with:

    bear:~% tst -

However, WORDCHARS consists solely of an _ (underscore):

    bear:~% print -r $WORDCHARS
    -
    bear:~% 

When I set WORDCHARS to that which it's set to on another host, my
cygwin host:

    cowberry:~% uname -s
    CYGWIN_NT-5.1
    cowberry:~% print -r $WORDCHARS
    *?_-.[]~=/&;!#$%^(){}<>

, then your requested test only leaves me with "tst ":

    bear:~% WORDCHARS='*?_-.[]~=/&;!#$%^(){}<>'
    bear:~% tst 
                ^---- cursor is here
    bear:~% print -r $WORDCHARS
    *?_-.[]~=/&;!#$%^(){}<>
    bear:~% 

So do I understand correctly that WORDCHARS should be set to more than _
(a lone underscore) in a "zsh -f" shell?

Let me know if you need me to perform any other tests.

[several minutes later]

Ok, I believe I've solved this. My build environment for zsh-4.3.2 was a
zsh-4.2.5 shell with my ~/.{zshenv,zshrc,zlogin} files invoked, which
includes this variable setting: WORDCHARS="_".

When I removed my WORDCHARS setting (and logged out and logged back in),
WORDCHARS reverted to what I presume is the default:

    bear:~% print -r $WORDCHARS
    *?_-.[]~=/&;!#$%^(){}<>
    bear:~% 

I then unpacked zsh-4.3.2.tar.bz into a brand new directory, configured
it, and performed a "make" and a "make check". All the tests in
zsh-4.3.2's "make check" passed.

It doesn't seem right that a "make" or "make check" of a new zsh, if
done from within the environment of an old zsh, should require a
"zsh -f" environment. However, that's your call. It seems to me that if
the Y03 test (or any other test) requires the environment to be set a
certain way, it should set it up itself. My sense here is that the
$WORDCHARS value is presumed set appropriately rather than being set
explicitly.

Thank you for helping me drill down on this problem; I appreciate it
very much.

Regards,
Eric
--
Eric De Mund              |      Ixian Systems      | 
email: <ead@ixian.com>    | 650 Castro St, #120-210 | ICQ: 811788
http://www.ixian.com/ead/ | Mountain View, CA 94041 | Y!M: ead0002

