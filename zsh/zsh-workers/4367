From zsh-workers-request@math.gatech.edu Thu Aug 27 10:00:41 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1182 invoked from network); 27 Aug 1998 10:00:40 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 27 Aug 1998 10:00:40 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.9.1/8.9.1) id FAA00987;
	Thu, 27 Aug 1998 05:51:29 -0400 (EDT)
Resent-Date: Thu, 27 Aug 1998 05:51:29 -0400 (EDT)
Sender: B.Stephens@isode.com
To: zsh-workers@math.gatech.edu
Subject: Re: Command alias in non-command position
References: <199808270855.KAA03297@beta.informatik.hu-berlin.de>
Mime-Version: 1.0 (generated by tm-edit 7.108)
Content-Type: text/plain; charset=US-ASCII
From: Bruce Stephens <b.stephens@isode.com>
Date: 27 Aug 1998 10:53:42 +0100
In-Reply-To: Sven Wischnowsky's message of "Thu, 27 Aug 1998 10:55:43 +0200 (MET DST)"
Message-ID: <vbvhnehhsp.fsf@snake.isode.com>
Lines: 35
X-Mailer: Gnus v5.6.27/XEmacs 20.4 - "Emerald"
Resent-Message-ID: <"he8_t2.0.MF.WmIvr"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4367
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Sven Wischnowsky <wischnow@informatik.hu-berlin.de> writes:

> I always liked to think about joining them. Make the completion code
> return a list of possible words for a certain situation and then let
> the corection code work with this list (instead of just
> filenames). Or, integrate the correction code in the completion code,
> turning it into some kind of general `find out what we can do here'-code 
> and let correction be just a different interface for that code.
> The quote from Bruce shows that joining them may require a few more
> possibilities in describing possible words (e.g. non-existent files).

I was only thinking of non-existent files for the cases like:

	mv makefile Makefile

and the like.  Actually, I just tried this and similar examples, and
it didn't offer autocorrection, but that turns out to be because I
have mv aliased to 'nocorrect mv', presumably because of this.

Probably these cases aren't much worth bothering about, though.

My original thought was a really cut-down sort of approach, where you
could say that certain words should not be autocorrected.  So it would
use compctl-like patterns to specify words, but the result for each
word would just be a boolean.

Your idea of tying it with completion is a better one than inventing a
new mechanism, though.  The two feel a bit different (completion gets
used in the middle of editing a line, whereas spell correction gets
done after the command is allegedly complete), but they're clearly
related, so maybe they can be combined neatly.

Maybe TAB (or some other key) could do autocorrection on things as
well as completion and expansion.  That might be cool.  More likely
irritating, I suspect, but I wouldn't rule it out entirely.

