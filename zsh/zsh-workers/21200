From zsh-workers-return-21200-mason-zsh=primenet.com.au@sunsite.dk Thu Apr 28 06:05:18 2005
Return-Path: <zsh-workers-return-21200-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 27555 invoked from network); 28 Apr 2005 06:05:17 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 28 Apr 2005 06:05:17 -0000
Received: (qmail 54035 invoked from network); 28 Apr 2005 06:05:11 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 28 Apr 2005 06:05:11 -0000
Received: (qmail 1388 invoked by alias); 28 Apr 2005 06:05:08 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 21200
Received: (qmail 1368 invoked from network); 28 Apr 2005 06:05:08 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 28 Apr 2005 06:05:08 -0000
Received: (qmail 53683 invoked from network); 28 Apr 2005 06:05:08 -0000
Received: from h34-aclarke.sv.meer.net (HELO ofb3.ofb.net) (205.217.153.34)
  by a.mx.sunsite.dk with SMTP; 28 Apr 2005 06:05:01 -0000
Received: from a5 (unknown [66.81.100.52])
	by ofb3.ofb.net (Postfix) with ESMTP id 08F8C20702EB;
	Wed, 27 Apr 2005 23:04:56 -0700 (PDT)
Received: from frederik by a5 with local (Exim 4.44)
	id 1DR242-0001h5-SH; Wed, 27 Apr 2005 22:59:54 -0700
Date: Wed, 27 Apr 2005 22:59:54 -0700
From: Frederik Eaton <frederik@a5.repetae.net>
To: Bart Schaefer <schaefer@brasslantern.com>
Cc: zsh-workers@sunsite.dk
Subject: Re: zle separability
Message-ID: <20050428055954.GB6338@a5.repetae.net>
Reply-To: frederik@ofb.net
References: <20050424193737.GA27777@a5.repetae.net> <20050424230816.GA78@DervishD> <20050425075146.GC28168@a5.repetae.net> <20050425104950.GA4108@DervishD> <20050425110410.GD28168@a5.repetae.net> <20050425113925.GA4578@DervishD> <20050425115849.GA17635@a5.repetae.net> <1050425160927.ZM24988@candle.brasslantern.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1050425160927.ZM24988@candle.brasslantern.com>
User-Agent: Mutt/1.5.8i
X-Spam-Checker-Version: SpamAssassin 3.0.2 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=6.0 tests=AWL,BAYES_00 autolearn=ham 
	version=3.0.2
X-Spam-Hits: -2.6

On Mon, Apr 25, 2005 at 04:09:27PM +0000, Bart Schaefer wrote:
> On Apr 25, 12:51am, Frederik Eaton wrote:
> }
> } Thanks. I guess there's always writing a zsh script to do the
> } interfacing, but that wouldn't be ideal.
> 
> The Functions/Misc/nslookup script in the zsh distribution is the
> classic example of doing this.  If your underlying command doesn't
> expect to print its own prompts on a terminal, you can even leave
> out the zpty stuff and just do a "while vared" loop.
>  
> } (... but, by the way, it would still be nice if such uses for zsh were
> } better supported, with for instance support for reading an arbitrary
> } config file or executing an arbitrary fragment before opening an
> } interactive shell, or for a function which can be defined to handle
> } all interactive commands)
> 
> Interactive shells are for interacting with the shell.  You don't need
> an interactive shell to interact with some other command.

Well on a computer you don't *need* anything to do anything. But it's
come up for me before that this would be a very convnient way of doing
certain things. If you want a command which will start a normal zsh
but with a certain environment, you can set the variables and hope the
user's .zshrc doesn't overwrite them. But this isn't ideal, and it
doesn't allow you to configure aliases or functions.

It's not a big deal, I don't know how many others would use it, but I
was surprised to find out that it wasn't a feature.

I have this at the end of my .zshrc, but the fact that it's not
standard (and I would choose a different variable name if it were)
means that there are drawbacks to relying on it in anything I
distribute to others.

if [ -n $RC_CMD ]; then
    eval "$RC_CMD"
    export RC_CMD=
fi

> E.g. to repeatedly read command-line arguments of "dig" and then
> call dig with those arguments:
>
> zsh -c 'while line=""; vared -e -p "$0: " line; do $0 $=line; done' dig
> 
> The use of $0 means you can replace "dig" above with any other command
> name and it'll work the same way.  It's a little trickier if you want
> to add history support, but not too bad.

Can you describe how history support might be added?

Thanks,

Frederik

