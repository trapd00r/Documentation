From zsh-workers-return-15951-mason-zsh=primenet.com.au@sunsite.dk Fri Oct 05 16:56:39 2001
Return-Path: <zsh-workers-return-15951-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 9408 invoked from network); 5 Oct 2001 16:56:39 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 5 Oct 2001 16:56:39 -0000
Received: (qmail 23954 invoked by alias); 5 Oct 2001 16:56:31 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 15951
Received: (qmail 23940 invoked from network); 5 Oct 2001 16:56:30 -0000
Date: Fri, 5 Oct 2001 17:56:29 +0100
To: Bart Schaefer <schaefer@brasslantern.com>
Cc: zsh-workers@sunsite.dk
Subject: Re: BARE_GLOB_QUAL
Message-ID: <20011005175629.J19300@fysh.org>
References: <20011003001256.B14675@astaroth.sweth.net> <1011003060441.ZM25764@candle.brasslantern.com> <20011003021524.A15356@astaroth.sweth.net> <1011003162422.ZM29481@candle.brasslantern.com> <20011003142330.A16765@astaroth.sweth.net> <1011004042305.ZM30162@candle.brasslantern.com> <20011004004307.C18930@astaroth.sweth.net> <1011005161336.ZM32521@candle.brasslantern.com> <20011005172343.A2872@fysh.org> <1011005164534.ZM32624@candle.brasslantern.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1011005164534.ZM32624@candle.brasslantern.com>
User-Agent: Mutt/1.3.22i
From: Zefram <zefram@fysh.org>

Bart Schaefer wrote:
>Hm.  We're using (#x) for various values of x to introduce things like
>approximate completion, case-insensitive matching, and backrefs.  How
>about (#q...) for qualifiers?

Ah, that only works when EXTENDED_GLOB is on -- AIR, we wanted a syntax
that would work without EXTENDED_GLOB.  However, on thinking about
it now, I don't see any pressing need for that.  It seems reasonable
to have a system where the BARE_GLOB_QUAL option provides access
to an EXTENDED_GLOB feature in non-EXTENDED_GLOB globbing syntaxes.
(#q...) looks like a good choice.

>                               Also (#Q-) could turn off BARE_GLOB_QUAL,
>and (#Q+) could turn it on.  (I can't decide which of those just (#Q)
>should do.)

That's silly.  "(#Q+)" is a lot more characters than just adding "#q"
at the beginning of the qualifiers group.  Similarly, "(#Q-)" is more
typing than adding an extra pair of parens around the non-qualifier group.

We should just have "(#q...)" for qualifiers, and encourage people to
turn off BARE_GLOB_QUAL.

>That would introduce the possibility of having different qualifiers for
>different parts of the glob pattern, e.g. `*(#qG)/*(#q.^G)' would list
>all plain files not owned by the current effective group that are in
>directories that are owned by the current effective group.

That's a neat idea, but, as you say, hairy.

>For now, all (#q...) should simply be gathered up and applied at the end
>as if they appeared in a single list.

No.  To retain upward compatibility with the hairy idea, qualifiers
embedded within a pattern should be an error.  We should require
qualifiers to appear at the end, where they'll still mean the same thing
when we do implement embedded qualifiers.

-zefram

