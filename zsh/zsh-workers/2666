From zsh-workers-request@euclid.skiles.gatech.edu Mon Dec 30 03:59:56 1996
Return-Path: <zsh-workers-request@euclid.skiles.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 347 invoked from network); 30 Dec 1996 03:59:53 -0000
Received: from euclid.skiles.gatech.edu (list@130.207.146.50)
  by coral.primenet.com.au with SMTP; 30 Dec 1996 03:59:53 -0000
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id WAA17226; Sun, 29 Dec 1996 22:45:38 -0500 (EST)
Resent-Date: Sun, 29 Dec 1996 22:45:38 -0500 (EST)
From: Zoltan Hidvegi <hzoli@cs.elte.hu>
Message-Id: <199612300332.EAA03934@hzoli.ppp.cs.elte.hu>
Subject: zgetcwd bug
To: zsh-workers@math.gatech.edu (Zsh hacking and development)
Date: Mon, 30 Dec 1996 04:32:26 +0100 (MET)
X-Mailer: ELM [version 2.4ME+ PL17 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"atW5k1.0.5D4.Xhpno"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/2666
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

My previous patch to zgetcwd introduced a bug.  Fix is included below.

Zoltan


*** Src/init.c	1996/12/28 00:04:58	3.1.1.6
--- Src/init.c	1996/12/30 02:27:03
***************
*** 505,511 ****
      else if ((ptr = zgetenv("PWD")) && ispwd(ptr))
  	pwd = ztrdup(ptr);
      else
! 	pwd = metafy(zgetcwd(), -1, META_REALLOC);
  
      oldpwd = ztrdup(pwd);  /* initialize `OLDPWD' = `PWD' */
  
--- 505,511 ----
      else if ((ptr = zgetenv("PWD")) && ispwd(ptr))
  	pwd = ztrdup(ptr);
      else
! 	pwd = metafy(zgetcwd(), -1, META_DUP);
  
      oldpwd = ztrdup(pwd);  /* initialize `OLDPWD' = `PWD' */
  
*** Src/builtin.c	1996/12/26 03:55:34	3.1.1.2
--- Src/builtin.c	1996/12/30 02:26:51
***************
*** 897,909 ****
  
      if (stat(unmeta(pwd), &st1) < 0) {
  	zsfree(pwd);
! 	pwd = metafy(zgetcwd(), -1, META_REALLOC);
      } else if (stat(".", &st2) < 0)
  	chdir(unmeta(pwd));
      else if (st1.st_ino != st2.st_ino || st1.st_dev != st2.st_dev) {
  	if (isset(CHASELINKS)) {
  	    zsfree(pwd);
! 	    pwd = metafy(zgetcwd(), -1, META_REALLOC);
  	} else {
  	    chdir(unmeta(pwd));
  	}
--- 897,909 ----
  
      if (stat(unmeta(pwd), &st1) < 0) {
  	zsfree(pwd);
! 	pwd = metafy(zgetcwd(), -1, META_DUP);
      } else if (stat(".", &st2) < 0)
  	chdir(unmeta(pwd));
      else if (st1.st_ino != st2.st_ino || st1.st_dev != st2.st_dev) {
  	if (isset(CHASELINKS)) {
  	    zsfree(pwd);
! 	    pwd = metafy(zgetcwd(), -1, META_DUP);
  	} else {
  	    chdir(unmeta(pwd));
  	}
*** Src/compat.c	1996/12/26 03:55:34	3.1.1.1
--- Src/compat.c	1996/12/30 02:25:17
***************
*** 118,135 ****
      ino_t ino, pino;
      dev_t dev, pdev;
  
-     if (stat(".", &sbuf) < 0)
- 	return(ztrdup("."));
- 
-     holdintr();
      buf = halloc(bufsiz = PATH_MAX);
      pos = bufsiz - 1;
      buf[pos] = '\0';
      strcpy(nbuf, "../");
  
      pino = sbuf.st_ino;
      pdev = sbuf.st_dev;
  
      for (;;) {
  	if (stat("..", &sbuf) < 0)
  	    break;
--- 118,137 ----
      ino_t ino, pino;
      dev_t dev, pdev;
  
      buf = halloc(bufsiz = PATH_MAX);
      pos = bufsiz - 1;
      buf[pos] = '\0';
      strcpy(nbuf, "../");
+     if (stat(".", &sbuf) < 0) {
+ 	buf[0] = ".";
+ 	buf[1] = '\0';
+ 	return buf;
+     }
  
      pino = sbuf.st_ino;
      pdev = sbuf.st_dev;
  
+     holdintr();
      for (;;) {
  	if (stat("..", &sbuf) < 0)
  	    break;
***************
*** 183,189 ****
      if (*buf)
  	zchdir(buf + pos + 1);
      noholdintr();
!     return ztrdup(".");
  }
  
  /* chdir with arbitrary long pathname */
--- 185,193 ----
      if (*buf)
  	zchdir(buf + pos + 1);
      noholdintr();
!     buf[0] = ".";
!     buf[1] = '\0';
!     return buf;
  }
  
  /* chdir with arbitrary long pathname */

