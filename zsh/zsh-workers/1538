From schaefer@candle.brasslantern.com Sun Jul  7 03:56:19 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by melb.werple.net.au (8.7.5/8.7.3/2) with ESMTP id DAA15757 for <mason@werple.mira.net.au>; Sun, 7 Jul 1996 03:56:16 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id NAA15952; Sat, 6 Jul 1996 13:49:35 -0400 (EDT)
Resent-Date: Sat, 6 Jul 1996 13:49:35 -0400 (EDT)
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <960706105029.ZM17352@candle.brasslantern.com>
Date: Sat, 6 Jul 1996 10:50:27 -0700
Reply-To: schaefer@nbn.com
X-Mailer: Z-Mail (4.0b.702 02jul96)
To: zsh-workers@math.gatech.edu
Subject: Default compctls
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-Message-ID: <"U061Y2.0.7v3.kSgtn"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/1538
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu
Content-Length: 1985
Status: OR

Recent changes to compctl and to some other zsh behaviors lead me to ask
whether we should revise the default compctls.  Here's the current set:

compctl -b bindkey
compctl -c builtin
compctl -v export
compctl -o setopt
compctl -v typeset
compctl -v unset
compctl -o unsetopt
compctl -v vared
compctl -c which
compctl -C -c
compctl -D -f
compctl -T

First question:  Shouldn't that be `compctl -B builtin`?  If not, why not?

Next, an observation and (possibly) a bug:  The change to make `command',
`exec', `noglob', and `-' into builtins (rather than keywords) has caused
command completion for those words to stop working.  This would seem to
call for some new default compctls:

compctl -c -		# BUG!  `-' has special meaning to `compctl'!
compctl -m command
compctl -c exec
compctl -c noglob

Is there any workaround for the bug noted above?

Further, there doesn't seem to be any reason not to include the following
additional defaults:

compctl -j bg disown fg jobs kill wait
compctl -v declare integer local
compctl -aBFw disable
compctl -daBFw enable
compctl -F functions
compctl -Nv getln read
compctl -pv readonly
compctl -c sched
compctl -a unalias
compctl -F unfunction
compctl -cn unhash
compctl -p unset
compctl -c whence where

Particularly those last; why should `which' get a default completion, but
not `whence' or `where'?

As a final remark, it would be nice if `emulate', `limit', `trap' and
`ulimit' had some built-in equivalents of `compctl -k "(...)"' because
there's no obvious way to generate the lists of emulations or limits;
and `compctl -k "($(kill -l))" trap' is just re-using a list that was
already generated at compile time, so it might as well get compiled in
as a completion as well.

Comments?

-- 
Bart Schaefer                             Brass Lantern Enterprises
http://www.well.com/user/barts            http://www.nbn.com/people/lantern

New male in /home/schaefer:
>N  2 Justin William Schaefer  Sat May 11 03:43  53/4040  "Happy Birthday"


