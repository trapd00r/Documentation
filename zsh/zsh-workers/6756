From zsh-workers-return-6756-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Jun 21 11:29:41 1999
Return-Path: <zsh-workers-return-6756-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1629 invoked from network); 21 Jun 1999 11:29:40 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 21 Jun 1999 11:29:40 -0000
Received: (qmail 12589 invoked by alias); 21 Jun 1999 11:29:24 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 6756
Received: (qmail 12582 invoked from network); 21 Jun 1999 11:29:23 -0000
Date: Mon, 21 Jun 1999 13:29:20 +0200 (MET DST)
Message-Id: <199906211129.NAA22754@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: "Bart Schaefer"'s message of Fri, 18 Jun 1999 16:44:43 +0000
Subject: Re: pws-22: killing the ZSH loops problem


Bart Schaefer wrote:

> On Jun 18, 10:55am, Sven Wischnowsky wrote:
> } Subject: Re: pws-22: killing the ZSH loops problem
> }
> } Unless I'm missing something obvious, we can't simply execute
> } processes in a loop (or other shell construct) in the same pgrp as the 
> } shell. Sure, this would give us the SIGINT, but it would also give us
> } the SIGSTOP -- suspending the shell.
> 
> Strictly speaking, it would give us SIGTSTP -- ^Z does not generate STOP.
> Since TSTP is catchable (unlike STOP), the parent shell simply has to have
> a TSTP handler or ignore TSTP -- which zsh already does.

Oh, yes. Oops. I had tried implementing that and got a SIGSTOP --
without further thinking I wrote the above. Seems like the stuff I had 
hacked together caused update_job() to send a SIGSTOP to the parent
shell.
Hm. So there might be a way...

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

