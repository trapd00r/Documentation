From zsh-workers-return-15195-mason-zsh=primenet.com.au@sunsite.dk Sun Jul 01 05:35:37 2001
Return-Path: <zsh-workers-return-15195-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 3266 invoked from network); 1 Jul 2001 05:35:35 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 1 Jul 2001 05:35:35 -0000
Received: (qmail 29555 invoked by alias); 1 Jul 2001 05:34:40 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 15195
Received: (qmail 29543 invoked from network); 1 Jul 2001 05:34:39 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1010701053403.ZM634@candle.brasslantern.com>
Date: Sun, 1 Jul 2001 05:34:02 +0000
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-workers@sunsite.dk
Subject: Minor annoyance with new `for' syntax
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

zsh$ for key val in ${(kv)options}
zsh: correct 'val' to 'cal' [nyae]? 

I don't think correction should apply there ... but it gets worse; answer
`a' to `abort' and:

zsh$ for key val in ${(kv)options}
zsh: correct 'val' to 'cal' [nyae]? 
for> 

Anything that you type at the `for> ' prompt will be ignored when zsh
finally reacts to the abort request, but it lets you enter the entire
do ... done body before it finally does abort.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

