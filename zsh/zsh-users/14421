From zsh-users-return-14421-mason-zsh=primenet.com.au@sunsite.dk Mon Sep 21 15:02:41 2009
Return-Path: <zsh-users-return-14421-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 22975 invoked from network); 21 Sep 2009 15:02:28 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from new-brage.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.254.104)
  by ns1.primenet.com.au with SMTP; 21 Sep 2009 15:02:28 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 46499 invoked from network); 21 Sep 2009 15:02:17 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 21 Sep 2009 15:02:17 -0000
Received: (qmail 21756 invoked by alias); 21 Sep 2009 15:02:08 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 14421
Received: (qmail 21743 invoked from network); 21 Sep 2009 15:02:08 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 21 Sep 2009 15:02:08 -0000
Received: from smtprelay04.ispgateway.de (smtprelay04.ispgateway.de [80.67.31.38])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 06AD4801E2BF
	for <zsh-users@sunsite.dk>; Mon, 21 Sep 2009 17:02:01 +0200 (CEST)
Received: from [212.117.84.69] (helo=fsst.voodoo.lan)
	by smtprelay04.ispgateway.de with esmtpsa (TLSv1:AES256-SHA:256)
	(Exim 4.68)
	(envelope-from <ft@bewatermyfriend.org>)
	id 1MpkN3-0001it-Nj
	for zsh-users@sunsite.dk; Mon, 21 Sep 2009 17:00:06 +0200
Received: from hawk by fsst.voodoo.lan with local (Exim 4.69)
	(envelope-from <ft@bewatermyfriend.org>)
	id 1MpkOk-0001Gv-WE
	for zsh-users@sunsite.dk; Mon, 21 Sep 2009 17:01:51 +0200
Date: Mon, 21 Sep 2009 17:01:50 +0200
From: Frank Terbeck <ft@bewatermyfriend.org>
To: zsh-users@sunsite.dk
Subject: Re: _expand completer and hashed dirs
Message-ID: <20090921150150.GD10174@fsst.voodoo.lan>
Mail-Followup-To: zsh-users@sunsite.dk
References: <20090921134728.GA10174@fsst.voodoo.lan> <090921074027.ZM4381@torch.brasslantern.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
In-Reply-To: <090921074027.ZM4381@torch.brasslantern.com>
User-Agent: Mutt/1.5.18 (2008-05-17)
X-Df-Sender: 430444
X-Virus-Scanned: ClamAV 0.94.2/9819/Mon Sep 21 16:06:33 2009 on bifrost
X-Virus-Status: Clean

Bart Schaefer <schaefer@brasslantern.com>:
> On Sep 21,  3:47pm, Frank Terbeck wrote:
> } While this works fine:
> } 
> }     % ls ~vi<tab>
> }     % ls ~vim/
> } 
> } This doesn't:
> } 
> }     % ls ~vim<tab>
> }     - all expansions -
> }     /home/hawk/.vim
> }     - original -
> }     ~vim
> } 
> } I would much rather like to get 'ls ~vim/' out of it.
> 
> To the extent that there's an intention involved here, it's that the
> presumption is that completion is supposed to save keystrokes; so if
> you hit TAB at a position where exactly one other keystroke (in this
> case a slash) would remove the ambiguity, you get offered the longer
> possibility ... because if you meant the shorter one you would have
> just typed that other key in the first place.

Yes, that's true.
However on a keyboard with german layout, typing a slash requires you
to hit shift-7, which I find *very* awkward to type. I commonly use
tab to generate slashes for me; that's also the reason why I do:
  zstyle ':completion:*' special-dirs ..

That's just so that I don't have to hit shift-7 when I want to get to
'../' from '..'.

> That said ...
> 
> } I've been playing with a number of styles, but they don't seem to
> } have any impact on the situation.
> 
>     zstyle ':completion:*:expand:*' accept-exact true
> 
> would seem to be *supposed* to produce the effect you want, but the
> definition of "words beginning with a tilde or parameter expansion"
> is implemented so as to exclude words that have no suffix beyond the 
> parameter or nameddir -- that is, as I noted above, it's making the
> presumption that you wouldn't have used TAB at that position if your
> intent was not to expand the word.
> 
> Here's a patch that implements accept-exact strict, which applies
> in the way that you want.  I'll not commit this, for the following
> reasons:
> 
> (1) "setopt rec_exact" behaves like strict rather than like true
> 
> (2) a better word than "strict" might be found
> 
> (3) a better (but changed from historical) behavior might be to
>     extend yes/true/on/1 to behave as this makes strict, and have
>     a different value ("prefix"?) to mean the current behavior
> 
> (4) I haven't had a chance to document it
> 
> Patch is bigger than would seem necessary because the "tmp" local
> is clobbered after it's initially used to test accept-exact.

I applied the patch locally, and changed my test zshrc to this:

[snip]
bindkey -e
hash -d vim=${HOME}/.vim
autoload -Uz compinit
compinit
bindkey '^i' complete-word
zstyle ':completion:*:descriptions' format "- %d -"
zstyle ':completion:*' group-name ''
zstyle ':completion:*' completer _expand _complete _ignored _approximate
zstyle ':completion:*:expand:*' accept-exact strict
[snap]

While that does fix this:
    % ls ~vim<tab>

This now doesn't:
    % print $HISTSIZE<tab>

_expand used to offer me to expand to the value of the variable. Now
it just adds a space.

Am I missing something?

Regards, Frank

