From zsh-workers-request@euclid.skiles.gatech.edu Sat Nov 30 18:36:57 1996
Return-Path: <zsh-workers-request@euclid.skiles.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 10128 invoked from network); 30 Nov 1996 18:36:56 -0000
Received: from euclid.skiles.gatech.edu (list@130.207.146.50)
  by coral.primenet.com.au with SMTP; 30 Nov 1996 18:36:55 -0000
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id NAA19440; Sat, 30 Nov 1996 13:10:28 -0500 (EST)
Resent-Date: Sat, 30 Nov 1996 13:10:28 -0500 (EST)
From: Zefram <zefram@dcs.warwick.ac.uk>
Message-Id: <12037.199611301811@stone.dcs.warwick.ac.uk>
Subject: bug: EOF at a continuation prompt
To: zsh-workers@math.gatech.edu (Z Shell workers mailing list)
Date: Sat, 30 Nov 1996 18:11:00 +0000 (GMT)
X-Loop: zefram@dcs.warwick.ac.uk
X-Stardate: [-31]8503.78
X-US-Congress: Moronic fuckers
Content-Type: text
Resent-Message-ID: <"OY_vy3.0.hl4.JY7eo"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/2501
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

% (
subsh> ^D
zsh: parse error near `\n'
> 

That bare ">" prompt shouldn't appear.  We should go back to the ZLE
prompt.  The culprit seems to be in input.c:

	/*
	 * Otherwise, see if we have reached the end of input
	 * (due to an error, or to reading from a single string).
	 */
	if (strin || errflag) {
	    lexstop = 1;
	    return lastc = ' ';
	}
	/* As a last resort, get some more input */
	if (inputline())
	    return lastc = ' ';

It looks like the first if() here should be used, but errflag is zero.
Consequently inputline() gets called.

And look what happens if you type at that extra prompt:

> ls
zsh: command not found: s

Huh?

-zefram

