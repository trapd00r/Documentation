From zsh-workers-return-8536-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Nov 04 13:27:11 1999
Return-Path: <zsh-workers-return-8536-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4682 invoked from network); 4 Nov 1999 13:27:10 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 4 Nov 1999 13:27:10 -0000
Received: (qmail 14334 invoked by alias); 4 Nov 1999 13:27:03 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 8536
Received: (qmail 14327 invoked from network); 4 Nov 1999 13:27:03 -0000
Date: Thu, 4 Nov 1999 14:26:57 +0100 (MET)
Message-Id: <199911041326.OAA01336@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
Subject: PATCH: lexer bug


See:

  beta% (( ${#a[(R)[^[]]} ))
  zsh: command not found: 0
  beta%

Due to the unbalanced brackets this is parsed as `( ( ... ) )'.

The patch turns off counting opening/closing parens and brackets in
math expressions when we are inside a parameter expression. Can anyone 
think of a case where this is dangerous/wrong?

Bye
 Sven

diff -u oldsrc/lex.c Src/lex.c
--- oldsrc/lex.c	Wed Nov  3 11:47:53 1999
+++ Src/lex.c	Thu Nov  4 14:22:07 1999
@@ -1299,16 +1299,20 @@
 		intick = 1, ALLOWHIST
 	    break;
 	case '(':
-	    pct++;
+	    if (!math || !bct)
+		pct++;
 	    break;
 	case ')':
-	    err = (!pct-- && math);
+	    if (!math || !bct)
+		err = (!pct-- && math);
 	    break;
 	case '[':
-	    brct++;
+	    if (!math || !bct)
+		brct++;
 	    break;
 	case ']':
-	    err = (!brct-- && math);
+	    if (!math || !bct)
+		err = (!brct-- && math);
 	    break;
 	case '"':
 	    if (intick || (!endchar && !bct))

--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

