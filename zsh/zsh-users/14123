From zsh-users-return-14123-mason-zsh=primenet.com.au@sunsite.dk Sat May 16 00:26:44 2009
Return-Path: <zsh-users-return-14123-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 17722 invoked from network); 16 May 2009 00:26:31 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 16 May 2009 00:26:31 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 62468 invoked from network); 16 May 2009 00:26:19 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 16 May 2009 00:26:19 -0000
Received: (qmail 26875 invoked by alias); 16 May 2009 00:26:01 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 14123
Received: (qmail 26848 invoked from network); 16 May 2009 00:26:00 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 16 May 2009 00:26:00 -0000
Received: from atom.smasher.org (atom.smasher.org [69.55.237.145])
	by bifrost.dotsrc.org (Postfix) with SMTP id C617A8027106
	for <zsh-users@sunsite.dk>; Sat, 16 May 2009 02:25:55 +0200 (CEST)
Received: (qmail 91143 invoked by uid 1000); 16 May 2009 00:25:54 -0000
Message-ID: <20090516002553.91142.qmail@smasher.org>
Content-Type: TEXT/PLAIN; charset=US-ASCII
Date: Sat, 16 May 2009 12:25:50 +1200 (NZST)
From: Atom Smasher <atom@smasher.org>
In-Reply-To: <4A0DD7D7.40500@skepticism.us>
MIME-Version: 1.0
OpenPGP: id=0xB88D52E4D9F57808; algo=1 (RSA); size=4096; url=http://atom.smasher.org/pgp.txt
References: <20090514104908.98556.qmail@smasher.org>
 <691a5d910905140904p538d5343md0712590db983853@mail.gmail.com>
 <20090515114736.33891.qmail@smasher.org> <4A0DD7D7.40500@skepticism.us>
Subject: coloring stderr - was Re: piping stderr
To: zsh-users@sunsite.dk
X-POM: The Moon is Waning Gibbous (63% of Full)
X-Hashcash: 1:20:0905160025:zsh-users@sunsite.dk::YvEc2SAkZCxSM020:0000000000000
	0000000000000000000000003g3o
X-Virus-Scanned: ClamAV 0.94.2/9364/Fri May 15 22:45:00 2009 on bifrost
X-Virus-Status: Clean

this has me thinking about an old problem... coloring stderr. the two 
problems i've found previously are (1) keeping stdout and stderr in sync, 
and (2) stderr that doesn't end with a newline, such as messages from "rm 
-i".

this [below] fixes the second problem, but it's still got some unintended 
consequences... the problem i'm having now with it is that if i start bash 
as a child of zsh, bash is a bit messed up. if i start a bourne shell 
(which doesn't actually exist on most/all linux distros, so don't bother 
testing it there) i can see that PS1 is going through stderr, as it's 
being piped the zsh's "color_err" function. if i start a few levels of zsh 
children all with this function, i'm not even sure i want to know how ugly 
things are under the hood. of course all children of the process will have 
their stderr going through this, but with interactive applications that 
can result in some weird stuff...

## colorize std_err
zmodload zsh/terminfo zsh/system
autoload colors is-at-least
if [[ "${terminfo[colors]}" -ge 8 ]] { colors }
color_err () {
   ## sysread & syswrite are part of zsh/system
    while sysread std_err_color
    do
      syswrite -o 2 "${fg_bold[red]}${std_err_color}${terminfo[sgr0]}"
    done
}
## i'm not sure exactly how far back it's safe to go with this
## 4.3.4 works; 4.2.1 hangs.
is-at-least 4.3.4 && exec 2> >( color_err )


-- 
         ...atom

  ________________________
  http://atom.smasher.org/
  762A 3B98 A3C3 96C9 C6B7 582A B88D 52E4 D9F5 7808
  -------------------------------------------------

 	"I believe that banking institutions are more dangerous
 	 to our liberties than standing armies."
 		-- Thomas Jefferson

