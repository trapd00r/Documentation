From zsh-workers-return-16102-mason-zsh=primenet.com.au@sunsite.dk Mon Oct 22 11:01:38 2001
Return-Path: <zsh-workers-return-16102-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 13418 invoked from network); 22 Oct 2001 11:01:34 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 22 Oct 2001 11:01:34 -0000
Received: (qmail 21307 invoked by alias); 22 Oct 2001 11:01:26 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16102
Received: (qmail 21289 invoked from network); 22 Oct 2001 11:01:24 -0000
Content-Type: text/plain;
  charset="iso-8859-1"
From: Steven Farrier <webmaster@xke.com>
To: zsh-workers@sunsite.dk
Subject: Make error on Mac OS X 10.1
Date: Mon, 22 Oct 2001 04:00:35 -0700
X-Mailer: KMail [version 1.3.2]
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

I have been attempting to build zsh on Mac OS X 10.1

I installed dlcompat like the MACHINE file suggested. That failed so I then 
tried disabling dynamic modules that didn't seem to help.

Below is the build process. I used the latest 4.1.0 snapshot.

[localhost:~/source/zsh-4.1-20011022] tachys% ./Util/preconfig
cd . && ./.preconfig
[localhost:~/source/zsh-4.1-20011022] tachys% ./configure
creating cache ./config.cache
configuring for zsh 4.1.0-dev-2
checking host system type... powerpc-apple-darwin1.4
checking for gcc... no
checking for cc... cc
checking whether the C compiler (cc  ) works... yes
checking whether the C compiler (cc  ) is a cross-compiler... no
checking whether we are using GNU C... yes
checking whether cc accepts -g... yes
checking whether large file support needs explicit enabling... no
checking how to run the C preprocessor... cc -E -traditional-cpp
checking whether cc needs -traditional... no
checking for working const... yes
checking for Cygwin environment... no
checking for mingw32 environment... no
checking for executable suffix... no
checking for cc option to accept ANSI C...
checking whether to use prototypes... yes
checking for working alloca.h... no
checking for alloca... yes
checking if the compiler supports union initialisation... yes
checking if signed to unsigned casting is broken... no
checking if the compiler supports variable-length arrays... yes
checking what to set MAXJOB to... 50
checking whether make sets ${MAKE}... yes
checking for a BSD compatible install... /usr/bin/install -c
checking for mawk... no
checking for gawk... no
checking for nawk... no
checking for awk... awk
checking whether ln works... yes
checking for yodl... no
checking for dirent.h that defines DIR... yes
checking for opendir in -ldir... no
checking for ANSI C header files... yes
checking whether time.h and sys/time.h may both be included... yes
checking whether stat file-mode macros are broken... no
checking for sys/wait.h that is POSIX.1 compatible... yes
checking for sys/time.h... yes
checking for sys/times.h... yes
checking for sys/select.h... yes
checking for termcap.h... no
checking for termio.h... no
checking for termios.h... yes
checking for sys/param.h... yes
checking for sys/filio.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for limits.h... yes
checking for fcntl.h... yes
checking for libc.h... yes
checking for sys/utsname.h... yes
checking for sys/resource.h... yes
checking for locale.h... yes
checking for errno.h... yes
checking for stdlib.h... yes
checking for unistd.h... yes
checking for sys/capability.h... no
checking for utmp.h... yes
checking for utmpx.h... no
checking for sys/types.h... yes
checking for pwd.h... yes
checking for grp.h... yes
checking for poll.h... no
checking for sys/mman.h... yes
checking for netinet/in_systm.h... yes
checking for pcre.h... no
checking for dlfcn.h... no
checking for dl.h... no
checking for conflicts in sys/time.h and sys/select.h... no
checking POSIX termios... yes
checking TIOCGWINSZ in termios.h... yes
checking for sys/ptem.h... no
checking for printf in -lc... yes
checking for pow in -lm... yes
checking for library containing tgetent... none required
checking for library containing yp_all... none required
checking for dlopen in -ldl... no
checking for cap_get_proc in -lcap... no
checking for socket in -lsocket... no
checking for library containing pcre_compile... no
checking if an include file defines ospeed... no
checking if you must define ospeed... yes
checking return type of signal handlers... void
checking for pid_t... yes
checking for off_t... yes
checking for ino_t... yes
checking for mode_t... yes
checking for uid_t in sys/types.h... yes
checking for size_t... yes
checking if long is 64 bits... no
checking if off_t is 64 bit... yes
checking if ino_t is 64 bit... no
checking if compiler has a 64 bit type... long long
checking for a corresponding unsigned 64 bit type... unsigned long long
checking for sigset_t... yes
checking for struct timezone... yes
checking for struct utmp... yes
checking for struct utmpx... no
checking for ut_host in struct utmp... yes
checking for ut_host in struct utmpx... no
checking for ut_xtime in struct utmpx... no
checking for ut_tv in struct utmpx... no
checking for d_ino in struct dirent... yes
checking for d_stat in struct dirent... no
checking for d_ino in struct direct... no
checking for d_stat in struct direct... no
checking for sin6_scope_id in struct sockaddr_in6... yes
checking if we need our own h_errno... no
checking for strftime... yes
checking for difftime... yes
checking for gettimeofday... yes
checking for select... yes
checking for poll... no
checking for readlink... yes
checking for faccessx... no
checking for fchdir... yes
checking for ftruncate... yes
checking for fstat... yes
checking for lstat... yes
checking for lchown... no
checking for fseeko... yes
checking for ftello... yes
checking for mkfifo... yes
checking for _mktemp... no
checking for mkstemp... yes
checking for waitpid... yes
checking for wait3... yes
checking for sigaction... yes
checking for sigblock... yes
checking for sighold... no
checking for sigrelse... no
checking for sigsetmask... yes
checking for sigprocmask... yes
checking for killpg... yes
checking for setpgid... yes
checking for setpgrp... yes
checking for tcsetpgrp... yes
checking for tcgetattr... yes
checking for nice... yes
checking for gethostname... yes
checking for gethostbyname2... yes
checking for getipnodebyname... no
checking for inet_aton... yes
checking for inet_pton... no
checking for inet_ntop... no
checking for getlogin... yes
checking for getpwent... yes
checking for getpwnam... yes
checking for getpwuid... yes
checking for getgrgid... yes
checking for getgrnam... yes
checking for initgroups... yes
checking for nis_list... no
checking for setuid... yes
checking for seteuid... yes
checking for setreuid... yes
checking for setresuid... no
checking for setsid... yes
checking for memcpy... yes
checking for memmove... yes
checking for strstr... yes
checking for strerror... yes
checking for cap_get_proc... no
checking for getrlimit... yes
checking for setlocale... yes
checking for uname... yes
checking for signgam... yes
checking for putenv... yes
checking for getenv... yes
checking for brk... yes
checking for sbrk... yes
checking for pathconf... yes
checking for sysconf... yes
checking for tgetent... yes
checking for tigetflag... no
checking for tigetnum... no
checking for tigetstr... no
checking for setupterm... no
checking for pcre_compile... no
checking for pcre_study... no
checking for pcre_exec... no
checking for working strcoll... yes
checking if tgetent accepts NULL... yes
checking for unistd.h... (cached) yes
checking for getpagesize... yes
checking for working mmap... yes
checking for munmap... yes
checking for msync... yes
checking whether getpgrp takes no argument... yes
checking for dlopen... no
checking for dlerror... no
checking for dlsym... no
checking for dlclose... no
checking for load... no
checking for loadquery... no
checking for loadbind... no
checking for unload... no
checking for shl_load... no
checking for shl_unload... no
checking for shl_findsym... no
checking what style of signals to use... POSIX_SIGNALS
checking where signal.h is located... /usr/include/sys/signal.h
checking where the RLIMIT macros are located... 
/usr/include/sys/resource.h
checking if rlim_t is longer than a long... yes
checking if rlim_t is a quad... yes
checking for rlim_t... yes
checking for /dev/fd filesystem... /dev/fd
checking for RFS superroot directory... no
checking whether we should use the native getcwd... no
checking for NIS... no
checking for NIS+... no
checking for utmp file... /var/run/utmp
checking for wtmp file... /var/log/wtmp
checking for utmpx file... no
checking for wtmpx file... no
checking for brk() prototype in <unistd.h>... yes
checking for sbrk() prototype in <unistd.h>... yes
checking for ioctl prototype in <sys/ioctl.h>... yes
checking for mknod prototype in <sys/stat.h>... no
checking if named FIFOs work... yes
checking if echo in /bin/sh interprets escape sequences... no
checking if link() works... yes
checking if kill(pid, 0) returns ESRCH correctly... yes
checking if POSIX sigsuspend() works... yes
checking if tcsetpgrp() actually works... yes
checking if getpwnam() is faked... no
checking base type of the third argument to accept... int
creating ./config.modules
updating cache ./config.cache
creating ./config.status

zsh configuration
-----------------
zsh version               : 4.1.0-dev-2
host operating system     : powerpc-apple-darwin1.4
source code location      : .
compiler                  : cc
preprocessor flags        :
executable compiler flags :  -Wall -Wno-implicit -Wmissing-prototypes -O2
executable linker flags   : -Wl,-x
library flags             : -lm  -lc
installation basename     : zsh
binary install path       : /usr/local/bin
man page install path     : /usr/local/man
info install path         : /usr/local/info
functions install path    : /usr/local/share/zsh/4.1.0-dev-2/functions
See config.modules for installed modules and functions.

creating Config/defs.mk
creating Makefile
creating Doc/Makefile
creating Etc/Makefile
creating Src/Makefile
creating Test/Makefile
creating config.h
[localhost:~/source/zsh-4.1-20011022] tachys% make
cd .. && /bin/sh $top_srcdir/Src/mkmakemod.sh Src Makemod
creating Src/Makemod.in
creating Src/Makemod
echo 'timestamp for *.mdd files' > ../Src/modules.stamp
creating Src/Builtins/Makefile.in
creating Src/Builtins/Makefile
creating Src/Modules/Makefile.in
creating Src/Modules/Makefile
creating Src/Zle/Makefile.in
creating Src/Zle/Makefile
awk -f ./signames1.awk /usr/include/sys/signal.h >sigtmp.c
cc -E -traditional-cpp sigtmp.c >sigtmp.out
awk -f ./signames2.awk sigtmp.out > signames.c
rm -f sigtmp.c sigtmp.out
grep 'define.*SIGCOUNT' signames.c > sigcount.h
Updated `zsh.mdh'.
echo 'timestamp for zsh.mdh against zsh.mdd' > zsh.mdhs
awk -f ../Src/makepro.awk builtin.c Src > builtin.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
builtin.syms) \
         > builtin.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
builtin.syms) \
         > `echo builtin.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk compat.c Src > compat.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
compat.syms) \
         > compat.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
compat.syms) \
         > `echo compat.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk cond.c Src > cond.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
cond.syms) \
         > cond.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
cond.syms) \
         > `echo cond.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk exec.c Src > exec.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
exec.syms) \
         > exec.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
exec.syms) \
         > `echo exec.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk glob.c Src > glob.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
glob.syms) \
         > glob.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
glob.syms) \
         > `echo glob.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk hashtable.c Src > hashtable.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
hashtable.syms) \
         > hashtable.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
hashtable.syms) \
         > `echo hashtable.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk hist.c Src > hist.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
hist.syms) \
         > hist.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
hist.syms) \
         > `echo hist.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk init.c Src > init.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
init.syms) \
         > init.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
init.syms) \
         > `echo init.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk input.c Src > input.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
input.syms) \
         > input.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
input.syms) \
         > `echo input.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk jobs.c Src > jobs.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
jobs.syms) \
         > jobs.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
jobs.syms) \
         > `echo jobs.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk lex.c Src > lex.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
lex.syms) \
         > lex.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
lex.syms) \
         > `echo lex.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk linklist.c Src > linklist.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
linklist.syms) \
         > linklist.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
linklist.syms) \
         > `echo linklist.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk loop.c Src > loop.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
loop.syms) \
         > loop.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
loop.syms) \
         > `echo loop.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk math.c Src > math.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
math.syms) \
         > math.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
math.syms) \
         > `echo math.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk mem.c Src > mem.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
mem.syms) \
         > mem.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
mem.syms) \
         > `echo mem.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk module.c Src > module.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
module.syms) \
         > module.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
module.syms) \
         > `echo module.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk options.c Src > options.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
options.syms) \
         > options.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
options.syms) \
         > `echo options.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk params.c Src > params.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
params.syms) \
         > params.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
params.syms) \
         > `echo params.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk parse.c Src > parse.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
parse.syms) \
         > parse.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
parse.syms) \
         > `echo parse.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk pattern.c Src > pattern.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
pattern.syms) \
         > pattern.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
pattern.syms) \
         > `echo pattern.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk prompt.c Src > prompt.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
prompt.syms) \
         > prompt.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
prompt.syms) \
         > `echo prompt.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk signals.c Src > signals.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
signals.syms) \
         > signals.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
signals.syms) \
         > `echo signals.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk signames.c Src > signames.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
signames.syms) \
         > signames.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
signames.syms) \
         > `echo signames.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk string.c Src > string.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
string.syms) \
         > string.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
string.syms) \
         > `echo string.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk subst.c Src > subst.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
subst.syms) \
         > subst.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
subst.syms) \
         > `echo subst.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk text.c Src > text.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
text.syms) \
         > text.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
text.syms) \
         > `echo text.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk utils.c Src > utils.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
utils.syms) \
         > utils.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
utils.syms) \
         > `echo utils.epro | sed 's/\.epro$/.pro/'`
awk -f ../Src/makepro.awk watch.c Src > watch.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
watch.syms) \
         > watch.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
watch.syms) \
         > `echo watch.epro | sed 's/\.epro$/.pro/'`
Updated `zsh.mdh'.
Updated `rlimits.mdh'.
echo 'timestamp for rlimits.mdh against rlimits.mdd' > rlimits.mdhs
awk -f ../../Src/makepro.awk rlimits.c Src/Builtins > rlimits.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
rlimits.syms) \
         > rlimits.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
rlimits.syms) \
         > `echo rlimits.epro | sed 's/\.epro$/.pro/'`
Updated `rlimits.mdh'.
Updated `sched.mdh'.
echo 'timestamp for sched.mdh against sched.mdd' > sched.mdhs
awk -f ../../Src/makepro.awk sched.c Src/Builtins > sched.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
sched.syms) \
         > sched.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
sched.syms) \
         > `echo sched.epro | sed 's/\.epro$/.pro/'`
Updated `sched.mdh'.
Updated `parameter.mdh'.
echo 'timestamp for parameter.mdh against parameter.mdd' > parameter.mdhs
awk -f ../../Src/makepro.awk parameter.c Src/Modules > parameter.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
parameter.syms) \
         > parameter.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
parameter.syms) \
         > `echo parameter.epro | sed 's/\.epro$/.pro/'`
Updated `parameter.mdh'.
Updated `termcap.mdh'.
echo 'timestamp for termcap.mdh against termcap.mdd' > termcap.mdhs
awk -f ../../Src/makepro.awk termcap.c Src/Modules > termcap.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
termcap.syms) \
         > termcap.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
termcap.syms) \
         > `echo termcap.epro | sed 's/\.epro$/.pro/'`
Updated `termcap.mdh'.
Updated `terminfo.mdh'.
echo 'timestamp for terminfo.mdh against terminfo.mdd' > terminfo.mdhs
awk -f ../../Src/makepro.awk terminfo.c Src/Modules > terminfo.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
terminfo.syms) \
         > terminfo.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
terminfo.syms) \
         > `echo terminfo.epro | sed 's/\.epro$/.pro/'`
Updated `terminfo.mdh'.
( \
     echo '/** thingies.list                            **/'; \
     echo '/** thingy structures for the known thingies **/'; \
     echo; \
     echo '/* format: T("name", TH_FLAGS, w_widget, t_nextthingy) */'; \
     echo; \
     sed -e 's/#.*//; /^$/d; s/" *,.*/"/' \
         -e 's/^"/T("/; s/$/, 0,/; h' \
         -e 's/-//g; s/^.*"\(.*\)".*/w_\1, t_D\1)/' \
         -e 'H; g; s/\n/ /' \
         < ./iwidgets.list; \
     sed -e 's/#.*//; /^$/d; s/" *,.*/"/' \
         -e 's/^"/T("./; s/$/, TH_IMMORTAL,/; h' \
         -e 's/-//g; s/^.*"\.\(.*\)".*/w_\1, t_\1)/' \
         -e 'H; g; s/\n/ /' \
         < ./iwidgets.list; \
) > thingies.list
( \
     echo '/** zle_things.h                              **/'; \
     echo '/** indices of and pointers to known thingies **/'; \
     echo; \
     echo 'enum {'; \
     sed -n -f ./zle_things.sed < thingies.list; \
     echo '    ZLE_BUILTIN_THINGY_COUNT'; \
     echo '};'; \
) > zle_things.h
Updated `zle.mdh'.
echo 'timestamp for zle.mdh against zle.mdd' > zle.mdhs
awk -f ../../Src/makepro.awk zle_bindings.c Src/Zle > zle_bindings.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
zle_bindings.syms) \
         > zle_bindings.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
zle_bindings.syms) \
         > `echo zle_bindings.epro | sed 's/\.epro$/.pro/'`
awk -f ../../Src/makepro.awk zle_hist.c Src/Zle > zle_hist.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
zle_hist.syms) \
         > zle_hist.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
zle_hist.syms) \
         > `echo zle_hist.epro | sed 's/\.epro$/.pro/'`
awk -f ../../Src/makepro.awk zle_keymap.c Src/Zle > zle_keymap.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
zle_keymap.syms) \
         > zle_keymap.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
zle_keymap.syms) \
         > `echo zle_keymap.epro | sed 's/\.epro$/.pro/'`
awk -f ../../Src/makepro.awk zle_main.c Src/Zle > zle_main.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
zle_main.syms) \
         > zle_main.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
zle_main.syms) \
         > `echo zle_main.epro | sed 's/\.epro$/.pro/'`
awk -f ../../Src/makepro.awk zle_misc.c Src/Zle > zle_misc.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
zle_misc.syms) \
         > zle_misc.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
zle_misc.syms) \
         > `echo zle_misc.epro | sed 's/\.epro$/.pro/'`
awk -f ../../Src/makepro.awk zle_move.c Src/Zle > zle_move.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
zle_move.syms) \
         > zle_move.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
zle_move.syms) \
         > `echo zle_move.epro | sed 's/\.epro$/.pro/'`
awk -f ../../Src/makepro.awk zle_params.c Src/Zle > zle_params.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
zle_params.syms) \
         > zle_params.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
zle_params.syms) \
         > `echo zle_params.epro | sed 's/\.epro$/.pro/'`
awk -f ../../Src/makepro.awk zle_refresh.c Src/Zle > zle_refresh.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
zle_refresh.syms) \
         > zle_refresh.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
zle_refresh.syms) \
         > `echo zle_refresh.epro | sed 's/\.epro$/.pro/'`
awk -f ../../Src/makepro.awk zle_thingy.c Src/Zle > zle_thingy.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
zle_thingy.syms) \
         > zle_thingy.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
zle_thingy.syms) \
         > `echo zle_thingy.epro | sed 's/\.epro$/.pro/'`
awk -f ../../Src/makepro.awk zle_tricky.c Src/Zle > zle_tricky.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
zle_tricky.syms) \
         > zle_tricky.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
zle_tricky.syms) \
         > `echo zle_tricky.epro | sed 's/\.epro$/.pro/'`
awk -f ../../Src/makepro.awk zle_utils.c Src/Zle > zle_utils.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
zle_utils.syms) \
         > zle_utils.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
zle_utils.syms) \
         > `echo zle_utils.epro | sed 's/\.epro$/.pro/'`
awk -f ../../Src/makepro.awk zle_vi.c Src/Zle > zle_vi.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
zle_vi.syms) \
         > zle_vi.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
zle_vi.syms) \
         > `echo zle_vi.epro | sed 's/\.epro$/.pro/'`
awk -f ../../Src/makepro.awk zle_word.c Src/Zle > zle_word.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
zle_word.syms) \
         > zle_word.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
zle_word.syms) \
         > `echo zle_word.epro | sed 's/\.epro$/.pro/'`
Updated `zle.mdh'.
Updated `complete.mdh'.
echo 'timestamp for complete.mdh against complete.mdd' > complete.mdhs
awk -f ../../Src/makepro.awk complete.c Src/Zle > complete.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
complete.syms) \
         > complete.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
complete.syms) \
         > `echo complete.epro | sed 's/\.epro$/.pro/'`
awk -f ../../Src/makepro.awk compcore.c Src/Zle > compcore.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
compcore.syms) \
         > compcore.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
compcore.syms) \
         > `echo compcore.epro | sed 's/\.epro$/.pro/'`
awk -f ../../Src/makepro.awk compmatch.c Src/Zle > compmatch.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
compmatch.syms) \
         > compmatch.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
compmatch.syms) \
         > `echo compmatch.epro | sed 's/\.epro$/.pro/'`
awk -f ../../Src/makepro.awk compresult.c Src/Zle > compresult.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
compresult.syms) \
         > compresult.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
compresult.syms) \
         > `echo compresult.epro | sed 's/\.epro$/.pro/'`
Updated `complete.mdh'.
Updated `zutil.mdh'.
echo 'timestamp for zutil.mdh against zutil.mdd' > zutil.mdhs
awk -f ../../Src/makepro.awk zutil.c Src/Modules > zutil.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
zutil.syms) \
         > zutil.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
zutil.syms) \
         > `echo zutil.epro | sed 's/\.epro$/.pro/'`
Updated `zutil.mdh'.
Updated `compctl.mdh'.
echo 'timestamp for compctl.mdh against compctl.mdd' > compctl.mdhs
awk -f ../../Src/makepro.awk compctl.c Src/Zle > compctl.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
compctl.syms) \
         > compctl.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
compctl.syms) \
         > `echo compctl.epro | sed 's/\.epro$/.pro/'`
Updated `compctl.mdh'.
Updated `complist.mdh'.
echo 'timestamp for complist.mdh against complist.mdd' > complist.mdhs
awk -f ../../Src/makepro.awk complist.c Src/Zle > complist.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
complist.syms) \
         > complist.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
complist.syms) \
         > `echo complist.epro | sed 's/\.epro$/.pro/'`
Updated `complist.mdh'.
Updated `computil.mdh'.
echo 'timestamp for computil.mdh against computil.mdd' > computil.mdhs
awk -f ../../Src/makepro.awk computil.c Src/Zle > computil.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
computil.syms) \
         > computil.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
computil.syms) \
         > `echo computil.epro | sed 's/\.epro$/.pro/'`
Updated `computil.mdh'.
Updated `zleparameter.mdh'.
echo 'timestamp for zleparameter.mdh against zleparameter.mdd' > 
zleparameter.mdhs
awk -f ../../Src/makepro.awk zleparameter.c Src/Zle > zleparameter.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
zleparameter.syms) \
         > zleparameter.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
zleparameter.syms) \
         > `echo zleparameter.epro | sed 's/\.epro$/.pro/'`
Updated `zleparameter.mdh'.
rm -f stamp-modobjs.tmp
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o builtin.o builtin.c
builtin.c: In function `bin_print':
builtin.c:2899: warning: `save' might be used uninitialized in this 
function
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o compat.o compat.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o cond.o cond.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o exec.o exec.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o glob.o glob.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o hashtable.o hashtable.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o hist.o hist.c
srcdir='.' CFMOD='../config.modules' \
   /bin/sh ./mkbltnmlst.sh bltinmods.list
Updated `zshpaths.h'.
Creating `zshxmods.h'.
echo '#define ZSH_VERSION "'4.1.0-dev-2'"' > version.h
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o init.o init.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o input.o input.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o jobs.o jobs.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o lex.o lex.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o linklist.o linklist.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o loop.o loop.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o math.o math.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o mem.o mem.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o module.o module.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o options.o options.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o params.o params.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o parse.o parse.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o pattern.o pattern.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o prompt.o prompt.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o signals.o signals.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o signames.o signames.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o string.o string.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o subst.o subst.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o text.o text.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o utils.o utils.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o watch.o watch.c
echo '' builtin.o compat.o cond.o exec.o glob.o hashtable.o hist.o 
init.o input.o jobs.o lex.o linklist.o loop.o math.o mem.o module.o 
options.o params.o parse.o pattern.o prompt.o signals.o signames.o 
string.o subst.o text.o utils.o watch.o >> ../Src/stamp-modobjs.tmp
awk -f ./rlimits.awk /usr/include/sys/resource.h /dev/null > rlimits.h
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o rlimits.o rlimits.c
echo '' rlimits.o | sed 's" " Builtins/"g' >> ../../Src/stamp-modobjs.tmp
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o sched.o sched.c
echo '' sched.o | sed 's" " Builtins/"g' >> ../../Src/stamp-modobjs.tmp
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o parameter.o parameter.c
echo '' parameter.o | sed 's" " Modules/"g' >> ../../Src/stamp-
modobjs.tmp
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o termcap.o termcap.c
echo '' termcap.o | sed 's" " Modules/"g' >> ../../Src/stamp-modobjs.tmp
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o terminfo.o terminfo.c
echo '' terminfo.o | sed 's" " Modules/"g' >> ../../Src/stamp-modobjs.tmp
make[4]: `complete.mdh' is up to date.
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o zutil.o zutil.c
echo '' zutil.o | sed 's" " Modules/"g' >> ../../Src/stamp-modobjs.tmp
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o compctl.o compctl.c
echo '' compctl.o | sed 's" " Zle/"g' >> ../../Src/stamp-modobjs.tmp
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o complete.o complete.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o compcore.o compcore.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o compmatch.o compmatch.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o compresult.o compresult.c
echo '' complete.o compcore.o compmatch.o compresult.o | sed 's" " 
Zle/"g' >> ../../Src/stamp-modobjs.tmp
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o complist.o complist.c
echo '' complist.o | sed 's" " Zle/"g' >> ../../Src/stamp-modobjs.tmp
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o computil.o computil.c
echo '' computil.o | sed 's" " Zle/"g' >> ../../Src/stamp-modobjs.tmp
( \
     echo '/** widgets.list                               **/'; \
     echo '/** widget structures for the internal widgets **/'; \
     echo; \
     echo '/* format: W(ZLE_FLAGS, t_firstname, functionname) */'; \
     echo; \
     sed -e 's/#.*//; /^$/d; s/-//g' \
         -e 's/^"\(.*\)" *, *\([^ ]*\) *, *\(.*\)/W(\3, t_\1, \2)/' \
         < ./iwidgets.list; \
) > widgets.list
( \
     echo '/** zle_widget.h                                **/'; \
     echo '/** indices of and pointers to internal widgets **/'; \
     echo; \
     echo 'enum {'; \
     sed -n -f ./zle_widget.sed < widgets.list; \
     echo '    ZLE_BUILTIN_WIDGET_COUNT'; \
     echo '};'; \
) > zle_widget.h
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o zle_bindings.o zle_bindings.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o zle_hist.o zle_hist.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o zle_keymap.o zle_keymap.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o zle_main.o zle_main.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o zle_misc.o zle_misc.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o zle_move.o zle_move.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o zle_params.o zle_params.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o zle_refresh.o zle_refresh.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o zle_thingy.o zle_thingy.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o zle_tricky.o zle_tricky.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o zle_utils.o zle_utils.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o zle_vi.o zle_vi.c
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o zle_word.o zle_word.c
echo '' zle_bindings.o zle_hist.o zle_keymap.o zle_main.o zle_misc.o 
zle_move.o zle_params.o zle_refresh.o zle_thingy.o zle_tricky.o 
zle_utils.o zle_vi.o zle_word.o | sed 's" " Zle/"g' >> 
../../Src/stamp-modobjs.tmp
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  
-o zleparameter.o zleparameter.c
echo '' zleparameter.o | sed 's" " Zle/"g' >> ../../Src/stamp-modobjs.tmp
Updated `stamp-modobjs'.
awk -f ../Src/makepro.awk main.c Src > main.syms
(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < 
main.syms) \
         > main.epro
(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < 
main.syms) \
         > `echo main.epro | sed 's/\.epro$/.pro/'`
cc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2 
-o main.o ./main.c
( echo '#!'; cat builtin.syms compat.syms cond.syms exec.syms glob.syms 
hashtable.syms hist.syms init.syms input.syms jobs.syms lex.syms 
linklist.syms loop.syms math.syms mem.syms module.syms options.syms 
params.syms parse.syms pattern.syms prompt.syms signals.syms 
signames.syms string.syms subst.syms text.syms utils.syms watch.syms  | 
sed -n '/^X/{s/^X//;p;}' | sort -u ) > zsh.export
rm -f zsh
cc -Wl,-x   -o zsh main.o  `cat stamp-modobjs`   -lm  -lc
( \
   echo 'STARTDEF()'; \
   echo 'def(version)(0)('4.1.0-dev-2')'; \
   echo 'def(date)(0)(''September 27, 2001'')'; \
   echo 'ENDDEF()#' | tr '#' '\\'; \
) > ./version.yo
case zsh.1 in \
   */*) target=zsh.1 ;; \
   *) target=./zsh.1 ;; \
esac; \
case ': yodl' in :*) ;; *) \
     : yodl -I. -w zman.yo version.yo zsh.yo | sed -e '1s/\\-/-/g' -e 
'/^\.'\''/d' > $target \
;; esac; \
test -f $target
make[1]: *** [zsh.1] Error 1
make: *** [all] Error 1
[localhost:~/source/zsh-4.1-20011022] tachys%

