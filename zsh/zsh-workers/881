From hzoli@cs.elte.hu Sun Mar 31 10:00:04 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by melb.werple.net.au (8.7.5/8.7.3) with ESMTP id KAA09205 for <mason@werple.mira.net.au>; Sun, 31 Mar 1996 10:00:01 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id SAA16625; Sat, 30 Mar 1996 18:48:17 -0500 (EST)
Resent-Date: Sat, 30 Mar 1996 18:48:17 -0500 (EST)
From: Zoltan Hidvegi <hzoli@cs.elte.hu>
Message-Id: <199603302303.AAA01450@hzoli.ppp.cs.elte.hu>
Subject: A security fix
To: zsh-workers@math.gatech.edu (Zsh hacking and development)
Date: Sun, 31 Mar 1996 00:03:06 +0100 (MET)
X-Mailer: ELM [version 2.4ME+ PL11 (25)]
MIME-Version: 1.0
Content-Type: application/pgp; format=text; x-action=sign
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"x7NOn3.0.f34._WSNn"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/881
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu
Content-Length: 2819
Status: O

-----BEGIN PGP SIGNED MESSAGE-----

zsh did not use the O_EXCL flag when creating temporary files.  This means
that if someone created a symlink with the same name as the file to be
created, the contents of the file the link points to will be overwritten.
Fortunately it is not trivial to exploit this since zsh use the result from
tempnam() to create a temp file.  On some systems the result of tempnam()
is partially predictable from the pid of the calling process and from the
parameter passed to tempnam().  This means that a process continuously
creating and removing symlinks with names that could be used by tempnam()
there is a chance that such a link will be created after tempnam() returned
but before open is called.  As zsh may be used by some sripts running as
root, this can be quite dangerous.

beta13-hzoli13 already contains the patch included below.

Bye,

Zoltan

 rcsdiff -qc -kk -r1.20 -r1.21 Src/builtin.c
 *** Src/builtin.c
 --- Src/builtin.c	1996/03/04 00:58:54	1.21
 ***************
 *** 2449,2455 ****
   
   	retval = 1;
   	fil = gettempname();
 ! 	if (((tempfd = creat(fil, 0600)) == -1) ||
   		((out = fdopen(tempfd, "w")) == NULL)) {
   	    zwarnnam("fc", "can't open temp file: %e", NULL, errno);
   	} else {
 --- 2449,2455 ----
   
   	retval = 1;
   	fil = gettempname();
 ! 	if (((tempfd = open(fil, O_WRONLY | O_CREAT | O_EXCL, 0600)) == -1) ||
   		((out = fdopen(tempfd, "w")) == NULL)) {
   	    zwarnnam("fc", "can't open temp file: %e", NULL, errno);
   	} else {
 rcsdiff -qc -kk -r1.12 -r1.13 Src/exec.c
 *** Src/exec.c
 --- Src/exec.c	1996/03/04 00:58:54	1.13
 ***************
 *** 1862,1868 ****
       prefork(fake, 4);
       if (errflag)
   	return -1;
 !     if ((fd = open(s, O_CREAT | O_WRONLY, 0600)) == -1)
   	return -1;
       while ((t = (char *)ugetnode(fake))) {
   	untokenize(t);
 --- 1862,1868 ----
       prefork(fake, 4);
       if (errflag)
   	return -1;
 !     if ((fd = open(s, O_CREAT | O_WRONLY | O_EXCL, 0600)) == -1)
   	return -1;
       while ((t = (char *)ugetnode(fake))) {
   	untokenize(t);
 ***************
 *** 2064,2070 ****
       close(1);
       entersubsh(Z_SYNC, 1, 0);
       signal_ignore(SIGTSTP);
 !     (void)creat(nam, 0600);
       execlist(list, 1);
       close(1);
       _exit(lastval);
 --- 2064,2070 ----
       close(1);
       entersubsh(Z_SYNC, 1, 0);
       signal_ignore(SIGTSTP);
 !     (void)open(nam, O_WRONLY | O_CREAT | O_EXCL, 0600);
       execlist(list, 1);
       close(1);
       _exit(lastval);

-----BEGIN PGP SIGNATURE-----
Version: 2.6.3i
Charset: noconv

iQCVAwUBMV29oQupSCiLN749AQFyrgQAoMSZ1ig8PC4wCkOZQIaenCX/VC/nOaN7
GUZYsVt4HQs4K5zky7zGyufTCuBUOrGHuLzYar7vaeANo/k+7Nj0oy2FywAlls5x
B8rB8zLmz4Z8RJYK9qA5wL0o7XdGEQnrlxya8Urvzx7NBF9LIzfjKU4ardEBchxf
XzLeKx1VUXE=
=NmhI
-----END PGP SIGNATURE-----
