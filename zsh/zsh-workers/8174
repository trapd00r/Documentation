From zsh-workers-return-8174-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Oct 07 18:57:25 1999
Return-Path: <zsh-workers-return-8174-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 404 invoked from network); 7 Oct 1999 18:57:23 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 7 Oct 1999 18:57:23 -0000
Received: (qmail 10790 invoked by alias); 7 Oct 1999 18:57:16 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 8174
Received: (qmail 10781 invoked from network); 7 Oct 1999 18:57:14 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <991007185650.ZM27319@candle.brasslantern.com>
Date: Thu, 7 Oct 1999 18:56:50 +0000
In-Reply-To: <E11ZHMN-0002mM-00@crucigera.fysh.org>
Comments: In reply to Zefram <zefram@fysh.org>
        "Re: PATCH: emulate (Re: Prompt fun)" (Oct  7,  6:29pm)
References: <E11ZHMN-0002mM-00@crucigera.fysh.org>
X-Mailer: Z-Mail Lite (5.0.0 30July97)
To: Zefram <zefram@fysh.org>
Subject: Re: PATCH: emulate (Re: Prompt fun)
Cc: zsh-workers@sunsite.auc.dk
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Oct 7,  6:29pm, Zefram wrote:
> Subject: Re: PATCH: emulate (Re: Prompt fun)
> emulate without -R is supposed to
> emulate (hence the name) the specified shell, as much as necessary for
> scripts to be able to run unchanged

Yes; the question is, when "the specified shell" is zsh, what does it mean
to emulate it?  After all, zsh is already zsh ... by definition, any option
not specifically intended for emulation of some other shell is already
being emulated "as if zsh," no matter what its setting.

However, this is mostly thinking about things from an interactive-shell
viewpoint, not from a function/script viewpoint.  So how about this:

> >[I'm] loathe to make "silent" changes to the option semantics.  I'd much
> >rather see an additional flag to "emulate" that catches these additional
> >problem cases.
> 
> So when would we use this additional flag?  It would have to be used
> essentially all the time, with plain emulate left just for backward
> compatibility.

We already have to use the -L option essentially all the time, and it makes
little sense to use -L in an interactive context.  Why not overload -L with
this semantics, and leave plain "emulate" as it was?

