From zsh-users-return-3005-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Apr 03 14:30:14 2000
Return-Path: <zsh-users-return-3005-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 25386 invoked from network); 3 Apr 2000 14:30:12 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 3 Apr 2000 14:30:12 -0000
Received: (qmail 21324 invoked by alias); 3 Apr 2000 14:29:06 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 3005
Received: (qmail 21306 invoked from network); 3 Apr 2000 14:29:04 -0000
Message-ID: <000501bf9d78$ec3313f0$3e525f83@otr.usm.edu>
From: "Allen Belk" <allen.belk@usm.edu>
To: <zsh-users@sunsite.auc.dk>
Subject: Splitting $foo on delimiter value
Date: Mon, 3 Apr 2000 09:28:47 -0500
Organization: University of Southern Mississippi
MIME-Version: 1.0
Content-Type: text/plain;
	charset="Windows-1252"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.00.2919.6600
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6600

Zsh-users,
    I am looking for the appropriate method of splitting a string at a set
delimiter.

foo=red:white:blue

I want to seperate these into 3 fields much the way the unix cut command
would as in:

$ echo $foo | cut -d : -f 1
red
$ echo $foo | cut -d : -f 2
white
$ echo $foo | cut -d : -f 3
blue

I want to exploit zsh's internal features without having to use external
commands.  Any suggestions will be greatly appreciated.

Thanks,

Allen Belk

 | Allen Belk, Systems Manager
 | Office of Technology Resources
 | University of Southern Mississippi
 | allen.belk@usm.edu  601.266.6013



