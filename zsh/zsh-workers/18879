From zsh-workers-return-18879-mason-zsh=primenet.com.au@sunsite.dk Mon Jul 21 16:10:51 2003
Return-Path: <zsh-workers-return-18879-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 22160 invoked from network); 21 Jul 2003 16:10:50 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 21 Jul 2003 16:10:50 -0000
Received: (qmail 2160 invoked by alias); 21 Jul 2003 16:10:24 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 18879
Received: (qmail 1451 invoked from network); 21 Jul 2003 16:08:43 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 21 Jul 2003 16:08:43 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [216.127.237.130] by sunsite.dk (MessageWall 1.0.8) with SMTP; 21 Jul 2003 16:8:42 -0000
Received: (from kfogel@localhost)
	by newton.ch.collab.net (8.11.6/8.11.6) id h6LFFLK40773;
	Mon, 21 Jul 2003 10:15:21 -0500 (CDT)
	(envelope-from kfogel@newton.ch.collab.net)
Sender: kfogel@newton.ch.collab.net
To: Clint Adams <clint@zsh.org>
Cc: dev@subversion.tigris.org, zsh-workers@sunsite.dk
Subject: Re: subversion and programmable completion
References: <20030720162723.GA26506@acolyte.scowler.net>
From: kfogel@collab.net
Reply-To: kfogel@collab.net
Emacs: the answer to the world surplus of CPU cycles.
Date: 21 Jul 2003 10:15:17 -0500
In-Reply-To: <20030720162723.GA26506@acolyte.scowler.net>
Message-ID: <85fzkznc6y.fsf@newton.ch.collab.net>
Lines: 10
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.1.50
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

Clint Adams <clint@zsh.org> writes:
> The zsh completion function for subversion currently parses the output
> of svn help <subcommand>, attempting to complete based on the contents
> of the usage: and Valid options: sections.
> 
> How does the subversion team feel about providing this and additional
> information in a more-machine-parseable format?  I imagine that that
> would lead to the bash completion becoming more intelligent as well.

What's not machine parseable about the current output?

