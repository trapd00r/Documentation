From zsh-users-return-12722-mason-zsh=primenet.com.au@sunsite.dk Tue Mar 25 14:44:40 2008
Return-Path: <zsh-users-return-12722-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 3588 invoked from network); 25 Mar 2008 14:44:28 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00,HTML_MESSAGE
	autolearn=ham version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 25 Mar 2008 14:44:28 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 58327 invoked from network); 25 Mar 2008 14:44:01 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 25 Mar 2008 14:44:01 -0000
Received: (qmail 1093 invoked by alias); 25 Mar 2008 14:43:51 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12722
Received: (qmail 1076 invoked from network); 25 Mar 2008 14:43:51 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 25 Mar 2008 14:43:51 -0000
Received: from hu-out-0506.google.com (hu-out-0506.google.com [72.14.214.224])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 2EF218097826
	for <zsh-users@sunsite.dk>; Tue, 25 Mar 2008 15:43:46 +0100 (CET)
Received: by hu-out-0506.google.com with SMTP id 28so1835199hug.11
        for <zsh-users@sunsite.dk>; Tue, 25 Mar 2008 07:43:46 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:mime-version:content-type;
        bh=hMi/r+rIFJs+MddXDcloLtQuzPh2Q9tuyXu8Q3rIvsw=;
        b=OT9l3z50JEJ9JaEMu72ZqSWoXJIMYPS763aac0tv6x3PQyOITw+FFGGN+C5kbot4DqAGdZtwFWit1j8d3GGE41nP5YiWutnFEuduats54uU6Th5obRf6dRwOk4MZsmHCKZur1wXjMhPw7SAP8aRtReajpnArDZBqlajrAMFJp9w=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=message-id:date:from:to:subject:cc:mime-version:content-type;
        b=AQoSS+oy9OUtni4K4dd269l4mBdycCqpg6n4XLNZsd7EtXAod6xPxh7ZEgd6fqxGyUODw084rk5ZtZOdBAh4uzoFeb9q3YyPKgjru0ul7PYEjB/3Vl0Stl/VThxOBRAMOLsrpIcmFGGvAI9+8A+HF49x19fzl3qeVyU/IKXOZEU=
Received: by 10.86.25.17 with SMTP id 17mr5538965fgy.1.1206456225190;
        Tue, 25 Mar 2008 07:43:45 -0700 (PDT)
Received: by 10.86.60.12 with HTTP; Tue, 25 Mar 2008 07:43:45 -0700 (PDT)
Message-ID: <5fb1c7f40803250743u24479110v42bc00de2c2b22c9@mail.gmail.com>
Date: Tue, 25 Mar 2008 20:13:45 +0530
From: "Sharad Pratap" <sh4r4d@gmail.com>
To: zsh-users@sunsite.dk
Subject: how to get verbatim output in command substitution
Cc: sharad.pratap@sasken.com
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_8191_33033797.1206456225200"
X-Virus-Scanned: ClamAV 0.91.2/6392/Tue Mar 25 13:44:02 2008 on bifrost
X-Virus-Status: Clean

------=_Part_8191_33033797.1206456225200
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Hi,
I wanted to use command substitution to assign to $mailpath array.
but both of   `...`  and $(...)   , failed to do so.
I have checked about the usage of command substitution in section
5.1.5: Backquotes at http://zsh.sunsite.dk/Guide/zshguide05.html

In short in command substitution any quote single, doule, or back not
printed verbatim,
but escaped to print by echo/print, while I need to execute verbatim output.

so my question is how to get verbatim output, in zsh using command
substitution.

Any help appreciated.

This is the command whoes output I wanted to assign to $mailpath array,
which from .mutt/muttrc
takes the mailbox command's argument and print in a way I wanted to assign
to $mailpath.
(so I need to change only at one place.)
=======================\/=========================
% sed -n
"s/^[[:space:]]\+mailboxes[[:space:]]\+\(.*\)[[:space:]]*$/\1"\''?new mail
in $_, try mutt -f $_'\'"/p" .mutt/muttrc
/var/spool/mail/c_sharad'?new mail in $_, try mutt -f $_'
~/Mail/allusers'?new mail in $_, try mutt -f $_'
~/Mail/dust'?new mail in $_, try mutt -f $_'
...
=======================/\=========================

when I assign it array mailpath like
=======================\/=========================
% mailpath=( `sed -n
"s/^[[:space:]]\+mailboxes[[:space:]]\+\(.*\)[[:space:]]*$/\1"\''?new mail
in $_, try mutt -f $_'\'"/p" .mutt/muttrc ` )
% echo ${mailpath[3]}
in
% echo ${mailpath[2]}
mail
=======================/\=========================
While I wanted ${mailpath[3]} to be ~/Mail/dust'?new mail in $_, try mutt -f
$_'
${mailpath[2]} to be ~/Mail/allusers'?new mail in $_, try mutt -f $_'
${mailpath[1]} to be ${mailpath[2]} to be ~/Mail/allusers'?new mail in $_,
try mutt -f $_'
-- 
Regard
Sharad

------=_Part_8191_33033797.1206456225200
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Hi,<br>
I wanted to use command substitution to assign to $mailpath array.<br>
but both of&nbsp;&nbsp; `...`&nbsp; and $(...)&nbsp;&nbsp; , failed to do so.<br>
I have checked about the usage of command substitution in section<font size="2"> <br>
5.1.5: Backquotes at </font><a href="http://zsh.sunsite.dk/Guide/zshguide05.html">http://zsh.sunsite.dk/Guide/zshguide05.html</a><br>
<br>
In short in command substitution any quote single, doule, or back not printed verbatim,<br>
but escaped to print by echo/print, while I need to execute verbatim output.<br>
<br>
so my question is how to get verbatim output, in zsh using command substitution.<br>
<br>
Any help appreciated.<br>
<br>
This is the command whoes output I wanted to assign to $mailpath array, which from .mutt/muttrc<br>
takes the mailbox command&#39;s argument and print in a way I wanted to assign to $mailpath.<br>
(so I need to change only at one place.)<br>
=======================\/=========================<br>
% sed -n&nbsp;
&quot;s/^[[:space:]]\+mailboxes[[:space:]]\+\(.*\)[[:space:]]*$/\1&quot;\&#39;&#39;?new
mail in $_, try mutt -f $_&#39;\&#39;&quot;/p&quot; .mutt/muttrc<br>
/var/spool/mail/c_sharad&#39;?new mail in $_, try mutt -f $_&#39;<br>
~/Mail/allusers&#39;?new mail in $_, try mutt -f $_&#39;<br>
~/Mail/dust&#39;?new mail in $_, try mutt -f $_&#39;<br>...<br>
=======================/\=========================<br>
<br>
when I assign it array mailpath like<br>

=======================\/=========================<br>
% mailpath=( `sed -n&nbsp;
&quot;s/^[[:space:]]\+mailboxes[[:space:]]\+\(.*\)[[:space:]]*$/\1&quot;\&#39;&#39;?new
mail in $_, try mutt -f $_&#39;\&#39;&quot;/p&quot; .mutt/muttrc ` )<br>
% echo ${mailpath[3]}<br>
in<br>
% echo ${mailpath[2]}<br>
mail<br clear="all">
=======================/\=========================<br>
While I wanted ${mailpath[3]} to be 
~/Mail/dust&#39;?new mail in $_, try mutt -f $_&#39;<br>
${mailpath[2]} to be 
~/Mail/allusers&#39;?new mail in $_, try mutt -f $_&#39;<br>
${mailpath[1]} to be ${mailpath[2]} to be 
~/Mail/allusers&#39;?new mail in $_, try mutt -f $_&#39;<br>-- <br>Regard<br>Sharad

------=_Part_8191_33033797.1206456225200--

