From zsh-users-return-6654-mason-zsh=primenet.com.au@sunsite.dk Mon Oct 06 17:20:00 2003
Return-Path: <zsh-users-return-6654-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 11211 invoked from network); 6 Oct 2003 17:19:58 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 6 Oct 2003 17:19:58 -0000
Received: (qmail 18177 invoked by alias); 6 Oct 2003 17:19:41 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 6654
Received: (qmail 18163 invoked from network); 6 Oct 2003 17:19:41 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 6 Oct 2003 17:19:41 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [216.27.138.216] by sunsite.dk (MessageWall 1.0.8) with SMTP; 6 Oct 2003 17:19:40 -0000
Received: from home.acholado.net (localhost.localdomain [127.0.0.1])
	by home.acholado.net (8.12.8/8.12.8) with ESMTP id h96HJeWp014677
	for <zsh-users@sunsite.dk>; Mon, 6 Oct 2003 13:19:40 -0400
Received: (from ljz@localhost)
	by home.acholado.net (8.12.8/8.12.8/Submit) id h96HJe6N014675;
	Mon, 6 Oct 2003 13:19:40 -0400
X-Authentication-Warning: home.acholado.net: ljz set sender to ljz@asfast.com using -f
To: zsh-users@sunsite.dk
Subject: Re: Something like noglob to inhibit brace expansion?
References: <m3wubkmv0y.fsf@asfast.com>
	<1031005162121.ZM2735@candle.brasslantern.com>
	<m3y8vy8nfr.fsf@asfast.com>
	<1031006170134.ZM4707@candle.brasslantern.com>
From: Lloyd Zusman <ljz@asfast.com>
Reply-To: ljz@asfast.com
Date: Mon, 06 Oct 2003 13:19:40 -0400
In-Reply-To: <1031006170134.ZM4707@candle.brasslantern.com> (Bart Schaefer's
 message of "Mon, 6 Oct 2003 17:01:34 +0000")
Message-ID: <m3n0ce707n.fsf@asfast.com>
User-Agent: Gnus/5.1003 (Gnus v5.10.3) Emacs/21.2 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: Lloyd Zusman <ljz@asfast.com>

Bart Schaefer <schaefer@brasslantern.com> writes:

> On Oct 6, 10:12am, Lloyd Zusman wrote:
> }
> } Hmm ... or what about this as an even uglier alternative (one long
> } line in real life)?
> } 
> }   alias pr='eval "preexec() { setopt braceexpand; preexec(){} }" && 
> }             setopt ignorebraces && noglob print'
>
> No, this won't work -- preexec is executed once before each interactive
> command _line_ is executed, not before every individual command in any
> pipeline or list.  So in that example, preexec won't be defined until
> after it would have executed.  It'll execute before the _next_ command,
> but by that time it's too late -- parsing of that next command is over,
> and won't have used braceexpand.

That's the idea.  I want it to execute before the _next_ command (in
other words, _after_ the specified command executes), because it turns
braceexpand back _on_ after it was turned off for that one, single
command.


> You could do it with precmd instead of preexec.
>
> } There's even probably some sort of way to make a generic alias or
> } function for this, which can then be applied to any command
>
> [ ... etc. ... ]

Thank you.  I'm going to play with this.  Fun!


> [ ... ]
>
> } Feature suggestion: how about adding [...] an 'ignore' precommand
> } modifier which takes options that can be grouped together, such as -b
> } for braces, -g for glob, -v for variable expansion, etc.?
>
> That's an interesting idea, though it may be very difficult to manage
> it for those expansions that don't already have options.  Expansions
> introduced with '$' in particular are tied to parsing at several levels,
> because the presence of '${' or '$(' changes the parse of everything
> that follows, up to the matching '}' or ')'.
>
> [ ... ]

I understand your cogent explanation.  So maybe we could just have a
precommand modifier called 'raw' or something similar, which just passes
in the command line with no expansions whatsoever.  The program or
function could do its own parsing in that case.

Hmm ... isn't one of the three arguments passed to preexec already the
raw, unexpanded command?  If so, is there a way to use preexec to modify
the command line that is about to be executed?


-- 
 Lloyd Zusman
 ljz@asfast.com

