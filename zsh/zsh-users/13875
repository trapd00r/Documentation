From zsh-users-return-13875-mason-zsh=primenet.com.au@sunsite.dk Wed Feb 25 01:42:46 2009
Return-Path: <zsh-users-return-13875-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 14778 invoked from network); 25 Feb 2009 01:42:42 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 25 Feb 2009 01:42:42 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 12940 invoked from network); 25 Feb 2009 01:42:33 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 25 Feb 2009 01:42:33 -0000
Received: (qmail 4710 invoked by alias); 25 Feb 2009 01:42:17 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13875
Received: (qmail 4701 invoked from network); 25 Feb 2009 01:42:16 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 25 Feb 2009 01:42:16 -0000
Received: from vms173001pub.verizon.net (vms173001pub.verizon.net [206.46.173.1])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 6C186805905D
	for <zsh-users@sunsite.dk>; Wed, 25 Feb 2009 02:42:01 +0100 (CET)
Received: from torch.brasslantern.com ([173.67.122.60])
 by vms173001.mailsrvcs.net
 (Sun Java(tm) System Messaging Server 6.3-7.04 (built Sep 26 2008; 32bit))
 with ESMTPA id <0KFL000G9M1PHP6C@vms173001.mailsrvcs.net> for
 zsh-users@sunsite.dk; Tue, 24 Feb 2009 19:41:55 -0600 (CST)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id n1P1fmmn008154	for
 <zsh-users@sunsite.dk>; Tue, 24 Feb 2009 17:41:49 -0800
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id n1P1flCm008153	for zsh-users@sunsite.dk; Tue,
 24 Feb 2009 17:41:47 -0800
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <090224174147.ZM8152@torch.brasslantern.com>
Date: Tue, 24 Feb 2009 17:41:47 -0800
In-reply-to: <go20an$4p6$1@ger.gmane.org>
Comments: In reply to Thorsten Kampe <thorsten@thorstenkampe.de>
 "Expanding global aliases on key press" (Feb 25, 12:36am)
References: <go20an$4p6$1@ger.gmane.org>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-users@sunsite.dk
Subject: Re: Expanding global aliases on key press
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
X-Virus-Scanned: ClamAV 0.92.1/9041/Tue Feb 24 17:21:07 2009 on bifrost
X-Virus-Status: Clean

On Feb 25, 12:36am, Thorsten Kampe wrote:
} #
} global-alias-space()
}     { local ga="$LBUFFER[(w)-1]"
}       [[ -n $ga ]] && LBUFFER[(w)-1]="${${galiases[$ga]}:-$ga}"
}       zle self-insert;}
} 
} zle -N global-alias-space
} bindkey ' ' global-alias-space
} #
} 
} Can anyone comment on the code, please?

It wouldn't have occurred to me to use (w) on the left side of an
assignment like that, so that's worth some points for creativity.
The parsing rules for (w) are not the same as for global aliases,
though, so take away some for accuracy.  ${${(z)LBUFFER}[-1]} is
more correct but requires a more complicated assignment to replace
the word with its alias.

I'd probably do this:

    autoload -Uz match-words-by-style
    global-alias-space() {
      emulate -LR zsh
      match-words-by-style -w shell
      local ga=$matched_words[2]
      if [[ -n $ga ]]; then
	matched_words[2]="${${galiases[$ga]}:-$ga}"
	LBUFFER="${(j::)matched_words[1,3]}"
      fi
      zle .self-insert
    }

To observe what I suspect is a bug, try using execute-named-command
to invoke either version of global-alias-space and note that extra
whitespace ends up in the tail of LBUFFER.
 
} Additionally I've adapted this widget to be bound to the Enter key:
} 
} #
} accept-line()
}     { local ga="$LBUFFER[(w)-1]"
}       [[ -n $ga ]] && LBUFFER[(w)-1]="${${galiases[$ga]}:-$ga}"
}       zle .accept-line;}
} 
} zle -N accept-line
} #
} 
} I'd also like to hear your comments on that...

I was going to ask "why?" since you can't do anything with the expanded
alias after accepting the line, whereas with global-alias-space you
can at least edit it.  However ...

Presumably this (along with the other) is intended to store the line
into the history with global aliases expanded.  Perhaps this would be
more interesting:

    # Skip adding the raw line to the history
    zshaddhistory() { return 1 }
    # Now add the fully expanded line instead
    preexec() { print -sr -- "$3" }

Of course that expands normal aliases as well as global ones.

