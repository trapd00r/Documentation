From zsh-users-return-13873-mason-zsh=primenet.com.au@sunsite.dk Sat Feb 21 04:47:49 2009
Return-Path: <zsh-users-return-13873-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 19366 invoked from network); 21 Feb 2009 04:47:37 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 21 Feb 2009 04:47:37 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 28551 invoked from network); 21 Feb 2009 04:47:26 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 21 Feb 2009 04:47:26 -0000
Received: (qmail 21319 invoked by alias); 21 Feb 2009 04:47:06 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13873
Received: (qmail 21306 invoked from network); 21 Feb 2009 04:47:05 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 21 Feb 2009 04:47:05 -0000
Received: from vms173017pub.verizon.net (vms173017pub.verizon.net [206.46.173.17])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 42466802720F
	for <zsh-users@sunsite.dk>; Sat, 21 Feb 2009 05:47:02 +0100 (CET)
Received: from torch.brasslantern.com ([173.67.122.60])
 by vms173017.mailsrvcs.net
 (Sun Java(tm) System Messaging Server 6.3-7.04 (built Sep 26 2008; 32bit))
 with ESMTPA id <0KFE00KCNFXYX2BQ@vms173017.mailsrvcs.net> for
 zsh-users@sunsite.dk; Fri, 20 Feb 2009 22:46:51 -0600 (CST)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id n1L4kiZi011894	for
 <zsh-users@sunsite.dk>; Fri, 20 Feb 2009 20:46:46 -0800
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id n1L4ki96011893	for zsh-users@sunsite.dk; Fri,
 20 Feb 2009 20:46:44 -0800
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <090220204644.ZM11892@torch.brasslantern.com>
Date: Fri, 20 Feb 2009 20:46:44 -0800
In-reply-to: <b2e43f8f0902200614l6cce1febh784827765976ba62@mail.gmail.com>
Comments: In reply to Allan Caffee <allan.caffee@gmail.com>
 "Tab completion of multiple files using curly braces" (Feb 20,  9:14am)
References: <b2e43f8f0902200614l6cce1febh784827765976ba62@mail.gmail.com>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: Zsh Users <zsh-users@sunsite.dk>
Subject: Re: Tab completion of multiple files using curly braces
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
X-Virus-Scanned: ClamAV 0.92.1/9018/Fri Feb 20 20:07:43 2009 on bifrost
X-Virus-Status: Clean

On Feb 20,  9:14am, Allan Caffee wrote:
}
} With my current setup tab completion of a word with curly braces in it
} (e.g. foo{bar,biz}) Zsh expands it.  For example:
} 
} % diff ./{old,new}/obnoxiously_long_f<TAB>
} 
} I'd really like to have the shell avoid expansion and instead look for
} possible completions using the union of the file names under all
} expansions.

This is unfortunately quite difficult.  Completion is really designed
to resolve one argument to one matching string; what you're in effect
asking for here is to simultaneously complete two arguments at once.
This doesn't even work with glob completion; e.g. if instead you try

% diff ./(old|new)/ob<TAB>

or even

% diff ./*/ob<TAB>

it'll first insist that you resolve the pattern part down to one or
the other of old or new before proceeding to complete path tails.

You can't do this by adding another completer like _expand or _match.
Those are invoked at too high a level.  To make this work you'd have
to hijack file completion somewhere down in the guts of _path_files,
and pass "{old,new}' directly to compadd -Q so the brace expression
(or pattern in the glob case) becomes part of the completion result;
and *then* when completing the later portions of the path I believe
you'd need to do the comparisons yourself to assure that the full
result really does match all branches of the brace expression.

However, you might almost be able to get what you want from the
_expand completer by simply appending a "*" to the argument before
you complete, and then accept the all-expansions group of matches.
E.g.:

% diff ./{old,new}/obnoxiously_long_f*<TAB>

should offer something like (among other stuff):

Completing all expansions
./old/obnoxiously_long_file_name.c ./new/obnoxiously_long_file_name.c

and it wouldn't be so difficult to whip up something to automatically
insert that "*" before attempting the expansion.

