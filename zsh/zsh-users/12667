From zsh-users-return-12667-mason-zsh=primenet.com.au@sunsite.dk Sat Mar 01 22:38:31 2008
Return-Path: <zsh-users-return-12667-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1196 invoked from network); 1 Mar 2008 22:38:29 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 1 Mar 2008 22:38:29 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 68776 invoked from network); 1 Mar 2008 22:38:12 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 1 Mar 2008 22:38:12 -0000
Received: (qmail 24443 invoked by alias); 1 Mar 2008 22:38:00 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12667
Received: (qmail 24421 invoked from network); 1 Mar 2008 22:37:59 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 1 Mar 2008 22:37:59 -0000
Received: from vms042pub.verizon.net (vms042pub.verizon.net [206.46.252.42])
	by bifrost.dotsrc.org (Postfix) with ESMTP id AD1498028C4C
	for <zsh-users@sunsite.dk>; Sat,  1 Mar 2008 23:37:55 +0100 (CET)
Received: from torch.brasslantern.com ([71.121.18.67])
 by vms042.mailsrvcs.net (Sun Java System Messaging Server 6.2-6.01 (built Apr
 3 2006)) with ESMTPA id <0JX2003HZPIGVR01@vms042.mailsrvcs.net> for
 zsh-users@sunsite.dk; Sat, 01 Mar 2008 16:37:29 -0600 (CST)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id m21MbR7b020111; Sat,
 01 Mar 2008 14:37:27 -0800
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id m21MbQ1n020110; Sat, 01 Mar 2008 14:37:26 -0800
Date: Sat, 01 Mar 2008 14:37:26 -0800
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: Completion questions (kill, appending)
In-reply-to: <80e78b060803011156k1d4fc6b8va2d27a2238078065@mail.gmail.com>
To: "David Besen" <dbesen@gmail.com>, zsh-users@sunsite.dk
Message-id: <080301143726.ZM20109@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <80e78b060803011156k1d4fc6b8va2d27a2238078065@mail.gmail.com>
Comments: In reply to "David Besen" <dbesen@gmail.com>
 "Completion questions (kill, appending)" (Mar  1, 12:56pm)
X-Virus-Scanned: ClamAV 0.91.2/6074/Sat Mar  1 22:59:36 2008 on bifrost
X-Virus-Status: Clean

On Mar 1, 12:56pm, David Besen wrote:
}
} First, can I make the kill completion show all the jobs that I can
} kill?  It seems strange to me that it only shows the jobs for the
} current session.

It shows whatever PIDs are in the output of "ps" (with no arguments).
You can change that with, for example,

    zstyle ':completion:*:kill:*:processes' command "ps x"

(change "ps" options as needed, but keep the PID in the first column
if you fiddle with output formats).

} Second, I'm coming from bash, and so I hate menu completion.  I have
} it turned off (unsetopt automenu and unsetopt menucomplete), and that
} seems to work for most things.  However, if you attempt to complete a
} pid to kill by using the process name, it reverts to menu completion.

In that specific case, the _pids function deliberately turns on menu
completion if you haven't explicitly told it not to with

    zstyle ':completion:*:kill:*:processes' insert-ids single

(It appears that if you have menu completion turned on by default, then
menu completion will start here no matter what insert-ids says.  The doc
is not clear on this point.)

} Can I turn off all menu completion everywhere somehow?

Not easily.  There are about a dozen completion functions that could
force menu completion on, in various circumstances.  However, _pids is
the only one you're likely to encounter very often.
 
} Third, how do you append specific things to a completion list?

Generically, you can't, because you have to know what the style means
(how it's going to be interpreted) in order to set it correctly.  It
would be like trying to append something to a variable without knowing
whether it was a scalar, array, or associative array.  On top of that
there are potentially multiple styles that match a particular context.

There's no way to fetch a style without using pattern-matching, so

    zstyle -a ':completion:*:(ssh|scp):*' users array_variable

does not retrieve the string set with

    zstyle ':completion:*:(ssh|scp):*' users <usernames>

} I'm using:
} zstyle ':completion:*:(ssh|scp):*' users <usernames>
} 
} and that replaces the list instead of appending to it.

This is actually a deliberate special case; the doc says:

  users
     This may be set to a list of usernames to be completed.  If it is
     not set all usernames will be completed.  Note that if it is set
     only that list of users will be completed; this is because on some
     systems querying all users can take a prohibitive amount of time.

The default to which you are trying to append is to invoke the function
"_users", which is equivalent to putting ${(k)userdirs} in your style.

