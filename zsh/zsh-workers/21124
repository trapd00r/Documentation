From zsh-workers-return-21124-mason-zsh=primenet.com.au@sunsite.dk Fri Apr 08 16:39:21 2005
Return-Path: <zsh-workers-return-21124-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 13638 invoked from network); 8 Apr 2005 16:39:20 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 8 Apr 2005 16:39:20 -0000
Received: (qmail 75304 invoked from network); 8 Apr 2005 16:39:14 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 8 Apr 2005 16:39:14 -0000
Received: (qmail 10185 invoked by alias); 8 Apr 2005 16:39:11 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 21124
Received: (qmail 10171 invoked from network); 8 Apr 2005 16:39:10 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 8 Apr 2005 16:39:10 -0000
Received: (qmail 74974 invoked from network); 8 Apr 2005 16:39:10 -0000
Received: from acolyte.scowler.net (216.254.112.45)
  by a.mx.sunsite.dk with SMTP; 8 Apr 2005 16:39:06 -0000
Received: by acolyte.scowler.net (Postfix, from userid 1000)
	id 20DC77004A; Fri,  8 Apr 2005 12:39:05 -0400 (EDT)
Date: Fri, 8 Apr 2005 12:39:05 -0400
From: Clint Adams <clint@zsh.org>
To: zsh-workers@sunsite.dk
Subject: PATCH: zle wide wordchars
Message-ID: <20050408163905.GA7518@scowler.net>
Mail-Followup-To: zsh-workers@sunsite.dk
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.6+20040907i
X-Spam-Checker-Version: SpamAssassin 3.0.2 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=6.0 tests=AWL,BAYES_00 autolearn=ham 
	version=3.0.2
X-Spam-Hits: -2.6

Well, I'm committing this one.

M  Src/Zle/zle_main.c
M  Src/init.c
M  Src/params.c

* modified files

--- orig/Src/Zle/zle_main.c
+++ mod/Src/Zle/zle_main.c
@@ -101,6 +101,11 @@
 /**/
 mod_export int
 lastchar_wide_valid;
+
+/**/
+mod_export ZLE_STRING_T zle_wordchars;
+#else
+# define zle_wordchars wordchars;
 #endif
 
 /* the bindings for the previous and for this key */
@@ -1507,6 +1512,17 @@
 	kungetct = 0;
 }
 
+/**/
+mod_export void
+wordcharstrigger(void)
+{
+#ifdef ZLE_UNICODE_SUPPORT
+    zrealloc(zle_wordchars, strlen(wordchars)*MB_CUR_MAX);
+    mbsrtowcs(zle_wordchars, &wordchars, strlen(wordchars), NULL);
+    /* TODO: error handling here */
+#endif
+}
+
 /* Hook functions. Used to allow access to zle parameters if zle is
  * active. */
 
@@ -1572,6 +1588,7 @@
     kungetbuf = (char *) zalloc(kungetsz = 32);
     comprecursive = 0;
     rdstrs = NULL;
+    wordcharstriggerptr = wordcharstrigger;
 
     /* initialise the keymap system */
     init_keymaps();
@@ -1645,6 +1662,7 @@
     zlegetlineptr = NULL;
     zlereadptr = fallback_zleread;
     zlesetkeymapptr= noop_function_int;
+    wordcharstriggerptr = noop_function;
 
     getkeyptr = NULL;
 


--- orig/Src/init.c
+++ mod/Src/init.c
@@ -1152,6 +1152,9 @@
 #endif /* !LINKED_XMOD_zshQszle */
 
 /**/
+mod_export ZleVoidFn wordcharstriggerptr = noop_function;
+
+/**/
 unsigned char *
 autoload_zleread(char **lp, char **rp, int ha, int con)
 {


--- orig/Src/params.c
+++ mod/Src/params.c
@@ -3316,6 +3316,7 @@
     zsfree(wordchars);
     wordchars = x;
     inittyptab();
+    wordcharstriggerptr();
 }
 
 /* Function to get value for special parameter `_' */

