From hzoli@cs.elte.hu Wed Mar 13 10:32:14 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by melb.werple.net.au (8.7.4/8.7.3) with ESMTP id KAA00623 for <mason@werple.mira.net.au>; Wed, 13 Mar 1996 10:32:12 +1100 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id SAA14827; Tue, 12 Mar 1996 18:17:37 -0500 (EST)
Resent-Date: Tue, 12 Mar 1996 18:17:37 -0500 (EST)
From: Zoltan Hidvegi <hzoli@cs.elte.hu>
Message-Id: <199603122317.AAA10871@bolyai.cs.elte.hu>
Subject: Re: Buffered stderr on Linux
To: schaefer@nbn.com
Date: Wed, 13 Mar 1996 00:17:17 +0100 (MET)
Cc: zsh-workers@math.gatech.edu
In-Reply-To: <9603121124.ZM2604@candle.brasslantern.com> from "Bart Schaefer" at Mar 12, 96 11:24:25 am
Organization: Dept. of Comp. Sci., Eotvos University, Budapest, Hungary
Phone: (36 1)2669833 ext: 2667, home phone: (36 1) 2752368
X-Mailer: ELM [version 2.4 PL25 ME8b+]
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"XvuC43.0.bd3.GOWHn"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/816
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu
Content-Length: 946
Status: OR

Bart Schaefer wrote:
> On Mar 12,  8:03pm, Zoltan Hidvegi wrote:
> } Subject: Buffered stderr on Linux
> }
> } Now I wander why is it
> } necessary to use malloc to allocate these buffers.  Is there anything
> } against using static char[BUFSIZ] buffers?
> 
> Stdio will call free() on the buffer at fclose().  That means you should
> always pass malloc'd buffers, and never call free() yourself on a buffer
> that's been passed to any of the setbuf() variants!

Well I've just checked it on Solaris and Linux and it seems that you are
wrong.

Try this:

#include <stdio.h>
#include <stdlib.h>

void
main(void)
{
    FILE *fp;
    char *buf;

    for (;;) {
	fp = fopen("/tmp/test_setvbuf", "w");
	buf = malloc(BUFSIZ);
	setvbuf(fp, buf, _IOFBF, BUFSIZ);
	fclose(fp);
    }
}

It will eat all memory you have.  But if you insert a free(buf); after the
fclose() it will run happily.

It means that static buffer can be used with setvbuf.

Zoltan


