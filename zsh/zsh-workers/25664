From zsh-workers-return-25664-mason-zsh=primenet.com.au@sunsite.dk Sun Sep 14 01:32:27 2008
Return-Path: <zsh-workers-return-25664-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4791 invoked from network); 14 Sep 2008 01:32:24 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 14 Sep 2008 01:32:24 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 38059 invoked from network); 14 Sep 2008 01:32:14 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 14 Sep 2008 01:32:14 -0000
Received: (qmail 10549 invoked by alias); 14 Sep 2008 01:32:04 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 25664
Received: (qmail 10527 invoked from network); 14 Sep 2008 01:32:01 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 14 Sep 2008 01:32:01 -0000
Received: from nf-out-0910.google.com (nf-out-0910.google.com [64.233.182.186])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 1DFBC802710A
	for <zsh-workers@sunsite.dk>; Sun, 14 Sep 2008 03:31:57 +0200 (CEST)
Received: by nf-out-0910.google.com with SMTP id g13so836102nfb.11
        for <zsh-workers@sunsite.dk>; Sat, 13 Sep 2008 18:31:57 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlemail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:user-agent
         :mime-version:to:subject:content-type:content-transfer-encoding:from;
        bh=mt29NFo7sJNZjDRz4j/RNx3Hpm4qvLmA11eDRgyUqek=;
        b=jEKHj0ZAByNI21qUc6Uk9Q2mFbMIXR0PgPcqVlQKAZr+jt3/LThhMUNV6dTDf/SvT9
         Rel8DeIL5VkKpbo9/pMLEYLzXf7pQA/9je5NHnSrQ63iUhr1qCk6OTs43eyDfMvLm89s
         nZapaqoEx0pGhTq4GHlTzaP3fdZaGQfVeURWg=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlemail.com; s=gamma;
        h=message-id:date:user-agent:mime-version:to:subject:content-type
         :content-transfer-encoding:from;
        b=EalgV1ty+w0kKqdwcoU8SujHWkP3XWXa5VOyzZ522ogoxbNvxwhbiIwUr361JGCjTU
         jgxqqvbEuJmdWrtclZD79K0lANkVy5lGcycyfNawlFqyMCaYGCV2iHXvQCkdVj9nwFnw
         G8Hn9a+MxF4xVhvO732lg8ftMCZaB8/AusRbo=
Received: by 10.103.223.20 with SMTP id a20mr4241833mur.86.1221355917507;
        Sat, 13 Sep 2008 18:31:57 -0700 (PDT)
Received: from ?192.168.1.3? ( [87.123.210.167])
        by mx.google.com with ESMTPS id u26sm23224954mug.5.2008.09.13.18.31.55
        (version=TLSv1/SSLv3 cipher=RC4-MD5);
        Sat, 13 Sep 2008 18:31:56 -0700 (PDT)
Message-ID: <48CC6994.8090505@gmail.com>
Date: Sun, 14 Sep 2008 03:32:04 +0200
User-Agent: Thunderbird 2.0.0.16 (X11/20080811)
MIME-Version: 1.0
To: zsh-workers@sunsite.dk
Subject: [PATCH] OpenSolaris IPS completion 2.0 (complete rewrite/almost complete)
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 8bit
From: =?ISO-8859-1?Q?=22xRaich=5Bo=5D=B2x=22?= <raichoo@googlemail.com>
X-Virus-Scanned: ClamAV 0.92.1/8235/Sun Sep 14 02:29:31 2008 on bifrost
X-Virus-Status: Clean

Hi,

I rewrote the script i sent yesterday. This one is almost complete and 
uses more of the compsys abilities. Would be cool if someone could help 
me on the other options.

Regards,
Björn

#compdef pkg

local state
ret=1

_arguments -s '-R[image]:image:_directories' '*::command:->command' && ret=0

#TODO use pkg interface
function all_packages
{
    compadd $(awk '{print $3}' $(find /var/pkg/catalog -name catalog 
-type f) | sort -u)
}

function installed_packages
{
    compadd $(/usr/bin/ls /var/pkg/state/installed | cut -d@ -f1)
}

function get_auth
{
    compadd $(find /var/pkg/catalog/ -type d | sed 1d | cut -d/ -f5) && 
ret=0
}

while [[ -n "$state" ]]; do
    tmp=$state
    state=
    case $tmp in
    command)
        if (( CURRENT == 1 )); then
            state=subcommands
        else
            echo ${words[1]} ${tmp} > /dev/pts/6
            cmd="$words[1]"
            curcontext="${curcontext%:*:*}:pkg-${cmd}:"
            case $cmd in
                install)
                    _arguments -s \
                        '-n[no changes]::all_packages' \
                        '-v[verbose]::all_packages' \
                        '-q[quiet]::all_packages' \
                        '*::command:all_packages' && ret=0
                    ;;
                uninstall)
                    _arguments -s \
                        '-n[no changes]::installed_packages' \
                        '-v[verbose]::installed_packages' \
                        '-q[quiet]::installed_packages' \
                        '-r[recursive]::installed_packages' \
                        '*::command:installed_packages' && ret=0
                    ;;
                search)
                    _arguments -s \
                        '-l[local search]' \
                        '-r[remote search]' \
                        '-I[case sensitive]'  && ret=0
                    ;;
                info)
                    _arguments  \
                        '-l[local package]::installed_packages' \
                        '-r[remote package]::all_packages' \
                        '*::command:installed_packages' && ret=0
                    #TODO --license
                    ;;
                verify)
                    _arguments \
                        '-v[verbose]::installed_packages' \
                        '-H[omit headers]::installed_packages' \
                        '-q[quiet]::installed_packages' \
                        '*::command:installed_packages' && ret=0
                    ;;
                contents)
                    _arguments -s \
                        '-r[remote package]::all_packages' \
                        '-H[omit headers]::installed_packages' \
                        '-m[bla]::installed_packages' \
                        '*::command:installed_packages' && ret=0
                    #TODO rest of options
                    ;;
                list)
                    _arguments -s \
                        '-a[all]::all_packages' \
                        '-H[omit header]::all_packages' \
                        '-s[display short-form]::all_packages' \
                        '-u[display only newer packages]::all_packages' \
                        '-v[display full FMRI]::all_packages' \
                        '*::command:all_packages' && ret=0
                    ;;
                image-update)
                    _arguments -s \
                        '-n[no changes]' \
                        '-v[verbose]' \
                        '-q[quite]' && ret=0
                    ;;
                authority)
                    _arguments -s \
                        '-H[omit header]::get_auth' \
                        '-P[]::get_auth' \
                        '*::command:get_auth' && ret=0
                    ;;
                unset-authority)
                    get_auth && ret=0
                    ;;
                refresh)
                    _arguments -s \
                        '--full[full refresh]::get_auth' \
                        '*::command:get_auth' && ret=0
                    ;;
                image-create)
                    #TODO options
                    ;;
                set-authority)
                    _arguments '-O[origin URL]'
                    #TODO rest of options
                    ;;
                rebuild-index|version|help)
                    ;;
            esac
        fi
        ;;
    subcommands)
        cmds=(
         'install:install a package'
         'uninstall:uninstall a package'
         'verify:verify a package'
         'info:fetch package info'
         'contents:show package contents'
         'list:list installed packages'
         'search:search for a package'
         'refresh:refresh catalogues'
         'image-create:create new image'
         'image-update:update an image'
         'set-authority:set an authority'
         'unset-authority:unset an authority'
         'authority:list authorities'
         'rebuild-index:rebuild index'
        )
        _describe 'pkg command' cmds -- && ret=0    
        ;;
    esac
done

#clean up
unfunction installed_packages
unfunction all_packages
unfunction get_auth

return ret

