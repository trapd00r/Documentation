From zsh-workers-return-17182-mason-zsh=primenet.com.au@sunsite.dk Sat May 18 11:25:18 2002
Return-Path: <zsh-workers-return-17182-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2106 invoked from network); 18 May 2002 11:25:18 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 18 May 2002 11:25:18 -0000
Received: (qmail 10605 invoked by alias); 18 May 2002 11:25:10 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 17182
Received: (qmail 10588 invoked from network); 18 May 2002 11:25:09 -0000
From: Borsenkow Andrej <Andrej.Borsenkow@mow.siemens.ru>
To: "'Bart Schaefer'" <schaefer@brasslantern.com>,
   "'Zsh hackers list'"
	 <zsh-workers@sunsite.dk>
Subject: RE: _call_program (and possibly other hooks) or opt_args quoting prob lem.
Date: Sat, 18 May 2002 15:24:55 +0400
Message-ID: <6134254DE87BD411908B00A0C99B044F02E89AE4@mowd019a.mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook, Build 10.0.3416
In-Reply-To: <1020517183916.ZM20203@candle.brasslantern.com>
X-MIMEOLE: Produced By Microsoft MimeOLE V6.00.2600.0000
Importance: Normal

> 
> On May 16,  8:32pm, Borsenkow Andrej wrote:
> }
> } _call_program evals its argument(s). It creates very interesting
problem -
> } we want to quote word separator _but_ we do not want to quote
possible
> } parameter expansions ...
> 
> What about this?
> 
> Index: Completion/Base/Utility/_call_program
> ===================================================================
> retrieving revision 1.1.1.1
> diff -c -r1.1.1.1 _call_program
> --- Completion/Base/Utility/_call_program	2001/04/09 20:14:08
1.1.1.1
> +++ Completion/Base/Utility/_call_program	2002/05/17 18:38:04
> @@ -4,7 +4,7 @@
> 
>  if zstyle -s ":completion:${curcontext}:${1}" command tmp; then
>    if [[ "$tmp" = -* ]]; then
> -    eval "$tmp[2,-1]" "$argv[2,-1]"
> +    eval "$tmp[2,-1]" "${(qqq)argv[2,-1]}"
>    else
>      eval "$tmp"
>    fi
> 

It won't work in this form; it needs at least ${(@qqq)... and in other
branch. Still even with the following:

if zstyle -s ":completion:${curcontext}:${1}" command tmp; then
  if [[ "$tmp" = -* ]]; then
    eval "$tmp[2,-1]" "${(qqq)argv[2,-1]}"
  else
    eval "$tmp"
  fi
else
  eval "${(@qqq)argv[2,-1]}"
fi


I get 

+_info:27> info=( _call_program info info -d $PWD/a b ) 
+_info:29> items=+_info:1> _call_program info info -d $PWD/a b --output
-
+_call_program:3> local tmp
+_call_program:5> zstyle -s :completion::complete:info::info command tmp
+_call_program:12> eval "info" "-d" "\$PWD/a b" "--output" "-"

Remember, (qqq) _quotes_ arguments (using different rules but it does
not matter).

Actually I begin to feel that _arguments should eval parameter value
before storing it. Can anybody give example when parameter value as it
appears on command line is useful? 

-andrej

