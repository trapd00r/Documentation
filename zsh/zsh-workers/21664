From zsh-workers-return-21664-mason-zsh=primenet.com.au@sunsite.dk Thu Aug 18 16:49:15 2005
Return-Path: <zsh-workers-return-21664-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 12012 invoked from network); 18 Aug 2005 16:49:12 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 18 Aug 2005 16:49:12 -0000
Received: (qmail 22348 invoked from network); 18 Aug 2005 16:49:06 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 18 Aug 2005 16:49:06 -0000
Received: (qmail 8683 invoked by alias); 18 Aug 2005 16:49:02 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 21664
Received: (qmail 8673 invoked from network); 18 Aug 2005 16:49:01 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 18 Aug 2005 16:49:01 -0000
Received: (qmail 21996 invoked from network); 18 Aug 2005 16:49:01 -0000
Received: from flock1.newmail.ru (212.48.140.157)
  by a.mx.sunsite.dk with SMTP; 18 Aug 2005 16:48:57 -0000
Received: (qmail 10335 invoked from network); 18 Aug 2005 16:41:17 -0000
Received: from unknown (HELO ?10.0.0.53?) (arvidjaar@newmail.ru@83.237.195.65)
  by smtpd.newmail.ru with SMTP; 18 Aug 2005 16:41:17 -0000
From: Andrey Borzenkov <arvidjaar@newmail.ru>
To: zsh-workers@sunsite.dk
Subject: Re: crash fixed, other minor issue though was: crash in completing code with unicode support
Date: Thu, 18 Aug 2005 20:48:41 +0400
User-Agent: KMail/1.8.2
Cc: Mikael Magnusson <mikachu@gmail.com>
References: <237967ef05081518376385563e@mail.gmail.com> <20050816214959.GB5904@blorf.net> <237967ef0508161722348cc312@mail.gmail.com>
In-Reply-To: <237967ef0508161722348cc312@mail.gmail.com>
MIME-Version: 1.0
Content-Type: multipart/signed;
  boundary="nextPart2110269.5dDAPNhBgt";
  protocol="application/pgp-signature";
  micalg=pgp-sha1
Content-Transfer-Encoding: 7bit
Message-Id: <200508182048.42159.arvidjaar@newmail.ru>
X-Spam-Checker-Version: SpamAssassin 3.0.4 (2005-06-05) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham 
	version=3.0.4

--nextPart2110269.5dDAPNhBgt
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

On Wednesday 17 August 2005 04:22, Mikael Magnusson wrote:
> However, when
> i make these things directories instead of files, cd <tab><tab>
> doesn't add any trailing slashes. If i mkdir =D8a =D8b aa ab, then cd
> <tab><tab><tab> and so on adds trailing slashes after aa and ab, but
> not the first two. (with the same zsh -f sequence as earlier)

This makes ztat() unmetafy its argument; it effectively reverts 21631 (ztat=
()=20
was called in several places). This fixes this issue for me (also some othe=
rs=20
like zstyle ignore-parents parent).

Index: Src/Zle/compcore.c
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
RCS file: /cvsroot/zsh/zsh/Src/Zle/compcore.c,v
retrieving revision 1.75
diff -u -p -r1.75 compcore.c
=2D-- Src/Zle/compcore.c  16 Aug 2005 17:25:49 -0000      1.75
+++ Src/Zle/compcore.c  18 Aug 2005 16:44:07 -0000
@@ -2471,24 +2471,17 @@ add_match_data(int alt, char *str, char
     cm->modec =3D '\0';
     if ((flags & CMF_FILE) && orig[0] && orig[strlen(orig) - 1] !=3D '/') {
         struct stat buf;
=2D       char *pb, *blah;
=2D       int blahl;
+       char *pb;

         pb =3D (char *) zhalloc((cm->prpre ? strlen(cm->prpre) : 0) +
                               3 + strlen(orig));
         sprintf(pb, "%s%s", (cm->prpre ? cm->prpre : "./"), orig);

=2D       blah =3D ztrdup(pb);
=2D
=2D       unmetafy(blah, &blahl);
=2D
=2D        if (!ztat(blah, &buf, 1)) {
+        if (!ztat(pb, &buf, 1)) {
             cm->mode =3D buf.st_mode;
             if ((cm->modec =3D file_type(buf.st_mode)) =3D=3D ' ')
                 cm->modec =3D '\0';
         }
=2D
=2D       free(blah);
     }
     if ((*compqstack =3D=3D '\\' && compqstack[1]) ||
        (autoq && *compqstack && compqstack[1] =3D=3D '\\'))
Index: Src/Zle/compresult.c
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
RCS file: /cvsroot/zsh/zsh/Src/Zle/compresult.c,v
retrieving revision 1.56
diff -u -p -r1.56 compresult.c
=2D-- Src/Zle/compresult.c        10 Aug 2005 19:51:30 -0000      1.56
+++ Src/Zle/compresult.c        18 Aug 2005 16:44:08 -0000
@@ -849,27 +849,33 @@ do_ambiguous(void)
  * parameter says if we have to do lstat() or stat().  I think this   *
  * should instead be done by use of a general function to expand a    *
  * filename (stripping backslashes), combined with the actual         *
=2D * (l)stat().                                                         */
+ * (l)stat().                                                         *
+ * Make sure input is unmetafied                                      */

 /**/
 mod_export int
 ztat(char *nam, struct stat *buf, int ls)
 {
=2D    if (!(ls ? lstat(nam, buf) : stat(nam, buf)))
=2D       return 0;
=2D    else {
=2D       char *p;
=2D       VARARR(char, b, strlen(nam) + 1);
+    int ret;

=2D       for (p =3D b; *nam; nam++)
=2D           if (*nam =3D=3D '\\' && nam[1])
=2D               *p++ =3D *++nam;
+    nam =3D unmeta(nam);
+    if (!nam)
+       return -1;
+
+    if ((ret =3D ls ? lstat(nam, buf) : stat(nam, buf))) {
+       char *p, *q;
+
+       for (p =3D q =3D nam; *q; q++)
+           if (*q =3D=3D '\\' && q[1])
+               *p++ =3D *++q;
            else
=2D               *p++ =3D *nam;
+               *p++ =3D *q;
        *p =3D '\0';

=2D       return ls ? lstat(b, buf) : stat(b, buf);
+       ret =3D ls ? lstat(nam, buf) : stat(nam, buf);
     }
+
+    return ret;
 }

 /* Insert all matches in the command line. */

--nextPart2110269.5dDAPNhBgt
Content-Type: application/pgp-signature

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.0 (GNU/Linux)

iD8DBQBDBLvqR6LMutpd94wRAl6IAJ0R2x3VhRYCuSi0u3cWcPZBH6j6gACfeCuc
6Xcq0uGEp/AMQA7+J7X62Jc=
=uQIU
-----END PGP SIGNATURE-----

--nextPart2110269.5dDAPNhBgt--

