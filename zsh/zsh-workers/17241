From zsh-workers-return-17241-mason-zsh=primenet.com.au@sunsite.dk Tue May 28 11:24:34 2002
Return-Path: <zsh-workers-return-17241-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 14034 invoked from network); 28 May 2002 11:24:34 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 28 May 2002 11:24:34 -0000
Received: (qmail 1842 invoked by alias); 28 May 2002 11:24:24 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 17241
Received: (qmail 1829 invoked from network); 28 May 2002 11:24:24 -0000
From: Sven Wischnowsky <wischnow@berkom.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <15603.26862.864037.496791@wischnow.berkom.de>
Date: Tue, 28 May 2002 13:24:30 +0200
To: zsh-workers@sunsite.dk
Subject: Re: Menu selection
In-Reply-To: <E17CeSv-0008Jc-00@bimbo.logica.co.uk>
References: <15603.16487.588260.866988@wischnow.berkom.de>
	<E17CeSv-0008Jc-00@bimbo.logica.co.uk>
X-Mailer: VM 7.03 under 21.5 (patch 5) "beets" XEmacs Lucid


Oliver Kiddle wrote:

> ...
> 
> It is an interesting idea. I'm not sure whether or not I'd use it
> or not. With this toggle key for the final patch, we might want to
> have a key which invokes this direct from the command line (as opposed
> to from menu selection).

Hm, yes, hadn't thought about that. (I hadn't thought much anyway, it
just occured to me how simple this is to implement ;-)

> Also, the interactive: prompt should perhaps
> be always displayed when this behaviour is active and not only after
> the first character is added. In fact, I think it would be better to
> use the real prompt for these characters or move the cursor down instead
> of using `[]'.

Yes, but this is problematic. We can't move the cursor into the
statusline (without changes to the zle display code). And on the
command line we have the currently inserted match. One might think
about messing with the command line buffer and restoring it when menu
selection is left, but that didn't seem like a good idea either.

Maybe we should make that modal, in the same way a incremental search
would be modal in menu selection. I.e., if this mode is selected, the
command line is changed to display the string as it is changed. A
non-inserting key would then leave this mode (again, as in isearch)
and display changes to the current match on the line and match
highlighting in the list again.

That would also make it more like isearch in general. It could
probably be viewed as a different kind of `isearch'.

> > Also, the behaviour of send-break (^G) after one has inserted some
> > more characters is arguable. Currently it leaves the additional
> > characters on the line. Maybe the line should go back to the state
> > when menu selection was entered. Or maybe a undo should remove all
> > characters added during menu selection.
> 
> I think the best would be if undo removed all the characters as you
> suggest and backspace could be used to do what undo currently does.
> It'd be nice if backspace worked that way regardless of what undo does.
> Additionally, tab might fill in any further characters common to all
> the remaining matches.

That would probably really look best with the changed command line
display. And, btw.:

  bindkey -M menuselect '^H' undo

works for me.


Bye
  Sven

-- 
Sven Wischnowsky                          wischnow@berkom.de

