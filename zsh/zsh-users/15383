From zsh-users-return-15383-mason-zsh=primenet.com.au@zsh.org Fri Sep 10 06:35:50 2010
Return-Path: <zsh-users-return-15383-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 7865 invoked by alias); 10 Sep 2010 06:35:50 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15383
Received: (qmail 24762 invoked from network); 10 Sep 2010 06:35:48 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,FREEMAIL_FROM,
	RCVD_IN_DNSWL_NONE,T_TO_NO_BRKTS_FREEMAIL autolearn=ham version=3.3.1
Received-SPF: pass (ns1.primenet.com.au: SPF record at gmx.de designates 213.165.64.22 as permitted sender)
Content-Type: text/plain; charset="utf-8"
Date: Fri, 10 Sep 2010 08:35:44 +0200
From: "Dominik Vogt" <dominik.vogt@gmx.de>
Message-ID: <20100910063544.45240@gmx.net>
MIME-Version: 1.0
Subject: Tesing a fifo without opening it?
To: zsh-users@zsh.org
X-Authenticated: #885628
X-Flags: 0001
X-Mailer: WWW-Mail 6100 (Global Message Exchange)
X-Priority: 3
X-Provags-ID: V01U2FsdGVkX18+QWBxn3Q+ZXy1OpaDQvLRcEmpuwvKD2SFMdnr8i
 ljSNlWwVK4tZJItwsnMB3Bly1XqELaliQ/kw== 
Content-Transfer-Encoding: 8bit
X-GMX-UID: 8+a7fZg5IydmAlnmeWdrqyxSa2FkZtVu
X-FuHaFi: 0.56000000000000005

I'm writing a multi process scripting system in zsh:

---- main script
mkfifo in1
mkdifo out1
(sub-script in1 out1)&
echo command > in1
read ANSWER < out1

mkfifo in2
mkdifo out2
(sub-script in2 out2)&
echo command > in1
read ANSWER < out1

...
----

---- sub script
read REQUEST < "$1"
echo answer > "$2"
# do something
----

So far, this works very well.  Note that reading from an writing to the pipes blocks (in the open() call) until the other end has also opened the pipe.  Also note that the main script may start many concurrent sub scripts and communicate with them through many different fifos.

Now I want to improve the scripts so that the main script can send the string "exit" to the sub scripts at any time and the sub script then exits:

---- main script
...
echo exit > in1
read ANSWER < out1
echo exit > in2
read ANSWER < out1
----

---- sub script
01 read REQUEST < "$1"
02 echo answer > "$2"
03 # do something
04 while true; do
05   if read -t REQUEST < "$1"; then
06     echo answer > $2
07     test x"$REQUEST" = xexit && exit
08   else
09     # do something else
10     ...
11   fi
12 done
----

Now, the problem is that input redirection in line 5 blocks until the main script also opens the fifo.  So the -t flag of read does not "work" here (because read is not even executed until the fifo can be opened).  I want to check if data is available in the fifo without blocking, but I can't find a way around blocking in the input redirection.

Ciao

Dominik ^_^  ^_^
-- 
Achtung Sicherheitswarnung: GMX warnt vor Phishing-Attacken!
http://portal.gmx.net/de/go/sicherheitspaket

