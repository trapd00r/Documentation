From zsh-workers-return-9813-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Feb 21 10:39:42 2000
Return-Path: <zsh-workers-return-9813-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 15945 invoked from network); 21 Feb 2000 10:39:37 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 21 Feb 2000 10:39:37 -0000
Received: (qmail 12467 invoked by alias); 21 Feb 2000 10:39:29 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 9813
Received: (qmail 12458 invoked from network); 21 Feb 2000 10:39:28 -0000
Date: Mon, 21 Feb 2000 10:39:23 +0000
From: Adam Spiers <adam@spiers.net>
To: zsh workers mailing list <zsh-workers@sunsite.auc.dk>
Subject: Re: PATCH: Re: duplicate targets in Makefile rule
Message-ID: <20000221103923.A11977@thelonious.new.ox.ac.uk>
Reply-To: Adam Spiers <adam@spiers.net>
Mail-Followup-To: zsh workers mailing list <zsh-workers@sunsite.auc.dk>
References: <20000221021201.A27957@thelonious.new.ox.ac.uk> <E12Mpkr-00069S-00@crucigera.fysh.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0.1i
In-Reply-To: <E12Mpkr-00069S-00@crucigera.fysh.org>; from zefram@fysh.org on Mon, Feb 21, 2000 at 10:07:49AM +0000
X-Home-Page: http://www.new.ox.ac.uk/~adam/
X-OS: Linux 2.2.12 i686

Zefram (zefram@fysh.org) wrote:
> Adam Spiers wrote:
> >> Not portable: $< does not portably exist
> >
> >*sigh* You learn something every day.  Why is it not meaningful
> >though, out of curiosity?
> 
> There may be many (or no) dependencies in an explicit rule, whereas $<
> is defined (for an implicit rule) to expand to the exactly one dependency.

I see.  I've only ever used GNU make, so I'd unconsciously assumed
that what the info pages say would be true for most makes:

  `$<'
       The name of the first dependency.  If the target got its commands
       from an implicit rule, this will be the first dependency added by
       the implicit rule (*note Implicit Rules::.).

