From zsh-workers-return-20876-mason-zsh=primenet.com.au@sunsite.dk Sat Feb 26 17:50:49 2005
Return-Path: <zsh-workers-return-20876-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 7678 invoked from network); 26 Feb 2005 17:50:48 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 26 Feb 2005 17:50:48 -0000
Received: (qmail 18312 invoked from network); 26 Feb 2005 17:50:42 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 26 Feb 2005 17:50:42 -0000
Received: (qmail 7730 invoked by alias); 26 Feb 2005 17:50:36 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 20876
Received: (qmail 7717 invoked from network); 26 Feb 2005 17:50:35 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 26 Feb 2005 17:50:35 -0000
Received: (qmail 17976 invoked from network); 26 Feb 2005 17:50:35 -0000
Received: from smtp-out5.blueyonder.co.uk (195.188.213.8)
  by a.mx.sunsite.dk with SMTP; 26 Feb 2005 17:50:31 -0000
Received: from sc ([82.41.212.48]) by smtp-out5.blueyonder.co.uk with Microsoft SMTPSVC(5.0.2195.6713);
	 Sat, 26 Feb 2005 17:51:06 +0000
Received: from chazelas by sc with local (Exim 3.36 #1 (Debian))
	id 1D567p-0001Sv-00
	for <zsh-workers@sunsite.dk>; Sat, 26 Feb 2005 17:53:09 +0000
Date: Sat, 26 Feb 2005 17:53:09 +0000
From: Stephane Chazelas <Stephane_Chazelas@yahoo.fr>
To: Zsh hackers list <zsh-workers@sunsite.dk>
Subject: yank-pop and user widgets
Message-ID: <20050226175309.GA4656@sc>
Mail-Followup-To: Zsh hackers list <zsh-workers@sunsite.dk>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-15
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
User-Agent: Mutt/1.5.6i
Sender: Stephane Chazelas <stephane_chazelas@yahoo.fr>
X-OriginalArrivalTime: 26 Feb 2005 17:51:07.0034 (UTC) FILETIME=[BF67A7A0:01C51C2B]
X-Spam-Checker-Version: SpamAssassin 3.0.2 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=6.0 tests=AWL,BAYES_00 autolearn=ham 
	version=3.0.2
X-Spam-Hits: -2.5

Hello,

In my mouse.zsh xterm and X clipboard extension for zsh, I
wanted to redefine the yank-like widgets so that they paste the
X clipboard.

I first thought of something like:

yank() {
  get-x-selection
  zle .yank
}
zle -N yank

But the problem is that yank-pop then stops to work because it
checks that the last invoked widget was a yank-type one (and my
user defined one is not).

Then, I thought of something like:

bindkey -s '^Y' '<key1><key2>'
where <key1> is mapped to "get-x-selection" and <key2> to yank.
It worked but then, the numeric arguments stop working (it
applies to <key1> but not to <key2>, so not to the yanking).

I finally came to the solution below, but I wonder if there's
not anything simpler (see http://stchaz.free.fr/mouse.zsh for
details):

[...]
      # hardcode ^[[2;5~ which is sent by <Ctrl-Insert> on xterm
      bindkey -M emacs '\e[2;5~' get-x-selection
      bindkey -M viins '\e[2;5~' get-x-selection
      bindkey -M vicmd '\e[2;5~' get-x-selection

      # the convoluted stuff below is to work around two problems:
      #  1- we can't just redefine the widgets as then yank-pop would
      #  stop working
      #  2- we can't just rebind the keys to <Ctrl-Insert><other-key> as
      #  then we'll loose the numeric argument
      propagate-numeric() {
        # next key (\e[0-dum) is mapped to <Ctrl-Insert>, plus the
	# targeted widget with NUMERIC restored.
	case $KEYMAP in
	  vicmd)
	    bindkey -M vicmd -s '\e[0-dum' $'\e[2;5~'$NUMERIC${KEYS/x/};;
	  *)
	    bindkey -M $KEYMAP -s '\e[0-dum' $'\e[2;5~'${NUMERIC//(#m)?/$'\e'$MATCH}${KEYS/x/};;
	esac
      }
      zle -N propagate-numeric
      bindkey -M emacs '\e[1-dum' yank
      bindkey -M emacs '\e[1-xdum' propagate-numeric
      bindkey -M emacs -s '^Y' $'\e[1-xdum\e[0-dum'
      bindkey -M vicmd '\e[2-dum' vi-put-before
      bindkey -M vicmd '\e[2-xdum' propagate-numeric
      bindkey -M vicmd -s 'P' $'\e[2-xdum\e[0-dum'
      bindkey -M vicmd '\e[3-dum' vi-put-after
      bindkey -M vicmd '\e[3-xdum' propagate-numeric
      bindkey -M vicmd -s 'p' $'\e[3-xdum\e[0-dum'
[...]

Best regards,
Stéphane

