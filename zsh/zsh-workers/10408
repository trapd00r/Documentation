From zsh-workers-return-10408-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Apr 03 11:08:03 2000
Return-Path: <zsh-workers-return-10408-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 22777 invoked from network); 3 Apr 2000 11:07:58 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 3 Apr 2000 11:07:58 -0000
Received: (qmail 15374 invoked by alias); 3 Apr 2000 11:07:24 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 10408
Received: (qmail 15362 invoked from network); 3 Apr 2000 11:07:23 -0000
Date: Mon, 3 Apr 2000 13:07:17 +0200 (MET DST)
Message-Id: <200004031107.NAA31539@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: Clint Adams's message of Sun, 2 Apr 2000 11:04:44 -0400
Subject: Re: cannot complete contents of space-containing directories


Clint Adams wrote:

> [This is SourceForge Bug #103798]
> 
> Something changed between dev-19 and dev-20 wherein directories containing
> spaces will be completed, but any attempts to complete their contents will
> be met with inaction. 

Oh, this is ugly. It's a result of 10226: completion in a directory
named `a\#'. There we need the `#' in quoted form, but we don't need
it before the spaces because they are not special to the matching
code.

We could get away with adding a remnulargs() in getarg() if tokenize() 
would turn `\ ' into `<Bnull> '. But it doesn't do that.


Hm, committing this to the CVS seems to have worked.

Bye
 Sven

Index: Completion/Core/_path_files
===================================================================
RCS file: /cvsroot/zsh/zsh/Completion/Core/_path_files,v
retrieving revision 1.2
diff -u -r1.2 _path_files
--- Completion/Core/_path_files	2000/04/01 20:43:43	1.2
+++ Completion/Core/_path_files	2000/04/03 10:53:31
@@ -418,9 +418,9 @@
     # Next we see if this component is ambiguous.
 
     if [[ "$tmp3" = */* ]]; then
-       tmp4=$tmp1[(I)^${(q)tmp1[1]%%/*}/*]
+       tmp4=$tmp1[(I)^${${tmp1[1]%%/*}//(#b)([][\\<>(|)^#~*?])/\\$match[1]}/*]
     else
-       tmp4=$tmp1[(I)^${(q)tmp1[1]}]
+       tmp4=$tmp1[(I)^${tmp1[1]//(#b)([][\\<>(|)^#~*?])/\\$match[1]}]
     fi
 
     if [[ "$tpre" = */* ]]; then

--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

