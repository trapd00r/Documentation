From zsh-workers-request@euclid.skiles.gatech.edu  Thu Nov 14 04:33:53 1996
Return-Path: zsh-workers-request@euclid.skiles.gatech.edu
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by coral.primenet.com.au (8.7.6/8.7.3) with ESMTP id EAA05400 for <mason@primenet.com.au>; Thu, 14 Nov 1996 04:33:50 +1100 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id MAA04310; Wed, 13 Nov 1996 12:23:14 -0500 (EST)
Resent-Date: Wed, 13 Nov 1996 12:23:14 -0500 (EST)
Message-Id: <9611131723.AA14148@dbank>
To: zsh-workers@math.gatech.edu
Subject: more problems w/ irix
Date: Wed, 13 Nov 1996 10:23:08 -0700
From: Ray Jones <rjones@ptc.com>
Resent-Message-ID: <"y9OE4.0.G31.1GWYo"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/2393
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

i applied pws's patch, and it fixed the fdtable problems for the cases
that i was seeing a crash before.  

to test it further and see how it responds when given more files than
OPEN_MAX, i tried the "cat < * > /dev/null" in a directory w/ about
4000 files (OPEN_MAX is 2500).  now i'm getting a crash in halloc(),
or (if i turn enable zsh_mem) malloc().  the call stack for the second
case is:

   0 malloc(size = 8188) ["zsh-3.0.1/Src/mem.c":613, 0x45fd04]
   1 zalloc(size = 8188) ["zsh-3.0.1/Src/mem.c":315, 0x45f500]
   2 halloc(size = 12) ["zsh-3.0.1/Src/mem.c":259, 0x45f178]
   3 hcalloc(size = 12) ["zsh-3.0.1/Src/mem.c":289, 0x45f3f4]
   4 insertlinknode(list = 0x1007d924, node = 0x1007d924, dat = 0x1001f028) 
	["zsh-3.0.1/Src/linklist.c":57, 0x458ec8]
   5 xpandredir(fn = 0x10054eec, tab = 0x1001de18) 
	["zsh-3.0.1/Src/glob.c":870, 0x438278]
[...]

this is 3.0.1 out of the box, with the aforementioned patch, on irix
5.3.  it might be the case that there's already been a patch that
fixes this.  if so, i apologize.

thanks,
ray jones

