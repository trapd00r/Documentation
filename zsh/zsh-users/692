From zsh-workers-request@euclid.skiles.gatech.edu Fri Feb 21 15:08:09 1997
Return-Path: <zsh-workers-request@euclid.skiles.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 2109 invoked from network); 21 Feb 1997 15:08:08 -0000
Received: from euclid.skiles.gatech.edu (list@130.207.146.50)
  by coral.primenet.com.au with SMTP; 21 Feb 1997 15:08:08 -0000
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id JAA04212; Fri, 21 Feb 1997 09:56:46 -0500 (EST)
Resent-Date: Fri, 21 Feb 1997 09:47:51 -0500 (EST)
Message-ID: <19970221224826.13870@ucc.gu.uwa.edu.au>
Date: Fri, 21 Feb 1997 22:48:26 +0800
From: Duncan Sargeant <dunc@ucc.gu.uwa.edu.au>
To: zsh-users@math.gatech.edu
Subject: Re: 2 more questions
References: <9702211128.AA08309@tallowcross.uni-frankfurt.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 0.61.1e
X-Distribution: This message may not reproduce, be stored in a retrieval system, or transmit disease in any form without the permissiveness of the author.
Organisation: Rather poor, my room is a mess.
In-Reply-To: <9702211128.AA08309@tallowcross.uni-frankfurt.de>; from Uli Zappe on Feb 02, 1997 at 12:28:36PM +0100
Resent-Message-ID: <"hf1jN.0.Wu.MMR3p"@euclid>
Resent-From: zsh-users@math.gatech.edu
X-Mailing-List: <zsh-users@math.gatech.edu> archive/latest/692
X-Loop: zsh-users@math.gatech.edu
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

uli (Uli Zappe) scandalously alleged:                          (on Feb 21, 1997)
> Hi,
> 
> sorry I have to bother you yet again, but I have two more problems  
> left that I couldn't solve with the zsh documentation:
> 
> 1. Is there a way in zsh to pass the standard output to a parameter 
>    instead of the standard input of a command? I.e. I have
> 
>       command1 | command2 parameter
>
>    and need the output of command1 as the parameter for command2

command2 `command1`

I can see how you were probably looking in the wrong place :)

> 
> 2. How do I pipe the elements of an array into a command? If I do a
> 
>       echo $ARRAY | command
> 
>    the elements are separated only by whitespace instead of newlines 
>    which will not work correctly especially if the elements possibly
>    contain whitespace themselves. It works, of course, with a for-do
>    loop but that's not efficient enough.

echo ${(j:\n:)ARRAY} | command

umm, there may be a way to pipe the variable to stdin of command
without the use of echo ... I'd be interested to know what it is.

again you were probably looking in the wrong places for this answer
:)

I learnt these tricks and a whole lot more, or at least worked out
where to look for info in the man pages when I did a 
man -T ps zshall > zshdocs.ps (I think? from memory, anyway), to
create the man page as a postscript file, which I then printed, and
read like a book, making notes on all those cool features.  Its a
great way to more fully appreciate zsh, if you can afford the
paper.

,dunc

-- 
Duncan Sargeant, keraunothnetophobic.   WWW: http://www.ucc.gu.uwa.edu.au/~dunc/
Orr would be crazy to fly more missions and sane if he didnt, but if he was sane
he had to fly them.  If he flew then he was crazy and didn't have to; but if he
didn't want to he was sane and had to.  Yossarian was moved deeply and let out a
respectful whistle at the absolute simplicity of this clause of Catch-22. --jh

