From zsh-workers-request@math.gatech.edu Tue Jun 02 15:56:06 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 3694 invoked from network); 2 Jun 1998 15:56:05 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 2 Jun 1998 15:56:05 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.8.5/8.8.5) id LAA07056;
	Tue, 2 Jun 1998 11:50:39 -0400 (EDT)
Resent-Date: Tue, 2 Jun 1998 11:50:39 -0400 (EDT)
Message-Id: <9806021550.AA30252@ibmth.df.unipi.it>
To: zsh-workers@math.gatech.edu (Zsh hackers list)
Cc: Torsten Hilbrich <Torsten.Hilbrich@gmx.net>
Subject: Re: Bugreport zsh 3.1.2: Shell exits prematurely after aborting history-incremental-search-backward 
In-Reply-To: "Torsten Hilbrich"'s message of "01 Jun 1998 21:57:50 DFT."
             <877m30ki81.fsf@marvin.bln.de> 
Date: Tue, 02 Jun 1998 17:49:56 +0200
From: Peter Stephenson <pws@ibmth.df.unipi.it>
Resent-Message-ID: <"yzT9d1.0.Bk1.Ez1Tr"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4035
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Torsten Hilbrich wrote:
> 
> Sorry, if that bug is already known, but I haven't found any
> mentioning in the BUGS file and the FAQ.

It wasn't known to me.

> If I startup the zsh I immediatly history-incremental-search-backward
> (^R) in the history.  Instead of executing the found command I simply
> abort using ^C.  Then the next return with or without any command
> given will immediatly exit the shell.  It also happens if there is no
> match found in the backward search.

It turns out to be in the input code, which is a part of the shell
last seriously modified by me.  However, there is a flag 'lastc'
containing the last character read which I didn't touch.  For some
reason I haven't quite traced, inputline() fails and sets lastc to
space just in this one case; inerrflush() is called to flush the
input, and since there isn't any this sets lexstop; this is propagated
back to the lexerr when isearch exits, which thinks it marks the end
of input, so the shell exits.

However, its only utility is as a flag that is '\n' after end of line
has been reached; it is never necessary when lexstop is also set,
since that gets checked at the same time, and also the code has no
business setting it to ' ' when inputline() fails since then there's
no line to flush.

So call me adventurous, but I think the code can be simplified so that
lastc is only modified when a real character is returned.  That's what
this does.

*** Src/input.c.inerr	Tue Jun  2 17:16:03 1998
--- Src/input.c	Tue Jun  2 17:27:31 1998
***************
*** 179,185 ****
  ingetc(void)
  {
      if (lexstop)
! 	return lastc = ' ';
      for (;;) {
  	if (inbufleft) {
  	    inbufleft--;
--- 179,185 ----
  ingetc(void)
  {
      if (lexstop)
! 	return ' ';
      for (;;) {
  	if (inbufleft) {
  	    inbufleft--;
***************
*** 202,212 ****
  	 */
  	if (strin || errflag) {
  	    lexstop = 1;
! 	    return lastc = ' ';
  	}
  	/* As a last resort, get some more input */
  	if (inputline())
! 	    return lastc = ' ';
      }
  }
  
--- 202,212 ----
  	 */
  	if (strin || errflag) {
  	    lexstop = 1;
! 	    return ' ';
  	}
  	/* As a last resort, get some more input */
  	if (inputline())
! 	    return ' ';
      }
  }
  

-- 
Peter Stephenson <pws@ibmth.df.unipi.it>       Tel: +39 50 844536
WWW:  http://www.ifh.de/~pws/
Gruppo Teorico, Dipartimento di Fisica
Piazza Torricelli 2, 56100 Pisa, Italy

