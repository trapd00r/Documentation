From mason@werple.net.au Mon Jul 15 01:47:10 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by melb.werple.net.au (8.7.5/8.7.3/2) with ESMTP id BAA29729 for <mason@werple.mira.net.au>; Mon, 15 Jul 1996 01:47:08 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id LAA02614; Sun, 14 Jul 1996 11:35:09 -0400 (EDT)
Resent-Date: Sun, 14 Jul 1996 11:35:09 -0400 (EDT)
From: Geoff Wing <mason@werple.net.au>
Message-Id: <199607141534.PAA29590@werple.net.au>
Subject: Second zle_refresh.c patch
To: zsh-workers@math.gatech.edu (zsh-list)
Date: Mon, 15 Jul 1996 01:34:16 +1000 (EST)
X-Mailer: ELM [version 2.4 PL25]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"Hfcu_2.0.ie.iEHwn"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/1642
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu
Content-Length: 5233
Status: O

Heyla,
  and here's patch number 2.  Changes are:
* match of only one character doesn't have it use termcap RIGHT or non-
   destructive space (don't output three or more characters to save one).
* a much nicer handling of automargin stuff (especially for those who
   want to cut and paste multiple lines from their prompt in an xterm)
* got rid of a bogus warning Bart Schaefer's compiler throws out.
* fixed an insert bug causing bad displays when termcap INSERT is used
   followed by DELETE (characters pushed off the right are dead)



*** zle_refresh.c.~1~	Sun Jul 14 01:50:22 1996
--- zle_refresh.c	Mon Jul 15 01:16:23 1996
***************
*** 110,116 ****
  }
  
  /*
!  * Jul 96: changed to single line scroll for higher speed terminals - mason
   *  I've seperated the loops for readability (and it's slightly faster)
   *  Returns line number to be used next
   */
--- 110,116 ----
  }
  
  /*
!  * Jul 96: <mason> changed to single line scroll for higher speed terminals
   *  I've seperated the loops for readability (and it's slightly faster)
   *  Returns line number to be used next
   */
***************
*** 196,202 ****
      int ln = 0,			/* current line we're working on	     */
  	nvcs = 0, nvln = -1,	/* video cursor column and line		     */
  	t0 = -1,		/* tmp					     */
! 	tosln;			/* tmp in statusline stuff		     */
      unsigned char *s,		/* pointer into the video buffer	     */
  	*t,			/* pointer into the real buffer		     */
  	*sen,			/* pointer to end of the video buffer (eol)  */
--- 196,202 ----
      int ln = 0,			/* current line we're working on	     */
  	nvcs = 0, nvln = -1,	/* video cursor column and line		     */
  	t0 = -1,		/* tmp					     */
! 	tosln = 0;		/* tmp in statusline stuff		     */
      unsigned char *s,		/* pointer into the video buffer	     */
  	*t,			/* pointer into the real buffer		     */
  	*sen,			/* pointer to end of the video buffer (eol)  */
***************
*** 541,551 ****
  	}
      }
  
  /* 3: main display loop - write out the buffer using whatever tricks we can */
  
      for (;;) {
!     /* skip past all matching characters */
! 	for (; *nl && (*nl == *ol); nl++, ol++, ccs++) ;
  
  	if (!*nl) {
  	    if ((char_ins <= 0)	|| (ccs >= winw))    /* written everything */
--- 541,563 ----
  	}
      }
  
+ /* 2b: first a new trick for automargin niceness - good for cut and paste */
+ 
+     if (hasam && vcs == winw) {
+ 	vln++, vcs = 1;
+ 	putc(*nbuf[vln], shout);
+ 	nl++;
+ 	if (*ol)
+ 	    ol++;
+ 	ccs = 1;
+     }
+ 
  /* 3: main display loop - write out the buffer using whatever tricks we can */
  
      for (;;) {
! 	if (*nl && nl[1] == ol[1])	/* skip only if second chars match */
! 	/* skip past all matching characters */
! 	    for (; *nl && (*nl == *ol); nl++, ol++, ccs++) ;
  
  	if (!*nl) {
  	    if ((char_ins <= 0)	|| (ccs >= winw))    /* written everything */
***************
*** 595,608 ****
  	}
  
      /* inserting & deleting chars: we can if there's no right-prompt */
! 	if ((ln || !put_rpmpt || !oput_rpmpt)) {
  
  	/* deleting characters - see if we can find a match series that
  	   makes it cheaper to delete intermediate characters
  	   eg. oldline: hifoobar } hopefully cheaper here to delete two
  	       newline: foobar	 } characters, then we have six matches */
! 
! 	    if (tccan(TCDEL) && nl[1] && ol[1] && (ol[1] != nl[1])) {
  		for (i = 0, p1 = ol; *p1; p1++, i++)
  		    if (tcdelcost(i) < pfxlen(p1, nl)) {
  			tc_delchars(i);
--- 607,620 ----
  	}
  
      /* inserting & deleting chars: we can if there's no right-prompt */
! 	if ((ln || !put_rpmpt || !oput_rpmpt) 
! 	    && (nl[1] && ol[1] && nl[1] != ol[1])) { 
  
  	/* deleting characters - see if we can find a match series that
  	   makes it cheaper to delete intermediate characters
  	   eg. oldline: hifoobar } hopefully cheaper here to delete two
  	       newline: foobar	 } characters, then we have six matches */
! 	    if (tccan(TCDEL)) {
  		for (i = 0, p1 = ol; *p1; p1++, i++)
  		    if (tcdelcost(i) < pfxlen(p1, nl)) {
  			tc_delchars(i);
***************
*** 618,625 ****
  	   annihilated, but we don't do this if we're on the last line lest
  	   undesired scrolling occurs due to `illegal' characters on screen */
  
! 	    if ((vln != lines - 1) &&	/* not on last line */
! 		tccan(TCINS) && nl[1] && ol[1] && (ol[1] != nl[1])) {
  		for (i = 0, p1 = nl; *p1; p1++, i++)
  		    if (tcinscost(i) < pfxlen(p1, ol)) {
  			tc_inschars(i);
--- 630,636 ----
  	   annihilated, but we don't do this if we're on the last line lest
  	   undesired scrolling occurs due to `illegal' characters on screen */
  
! 	    if (tccan(TCINS) && (vln != lines - 1)) {	/* not on last line */
  		for (i = 0, p1 = nl; *p1; p1++, i++)
  		    if (tcinscost(i) < pfxlen(p1, ol)) {
  			tc_inschars(i);
***************
*** 628,633 ****
--- 639,650 ----
  			ccs = (vcs += i);
  			nl = p1;
  			char_ins += i;
+ 		    /* if we've pushed off the right, trucate oldline */
+ 			for (j = ccs, p1 = ol; *p1 && j + char_ins < winw;
+ 			     p1++, j++);
+ 			if (j + char_ins == winw)
+ 			    *p1 = '\0';
+ 			p1 = ol;
  			break;
  		    }
  		if (*p1)




-- 
Mason [G.C.W]  mason@werple.mira.net.au    "Hurt...Agony...Pain...LOVE-IT"


