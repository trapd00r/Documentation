From zsh-workers-return-16244-mason-zsh=primenet.com.au@sunsite.dk Tue Nov 13 18:21:50 2001
Return-Path: <zsh-workers-return-16244-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 15006 invoked from network); 13 Nov 2001 18:21:50 -0000
Received: from ns2.primenet.com.au (HELO primenet.com.au) (?Mj8L+TM77S7E/M4oe1l2r6l3fYu+ctyp?@203.24.36.3)
  by ns1.primenet.com.au with SMTP; 13 Nov 2001 18:21:50 -0000
Received: (qmail 2062 invoked from network); 13 Nov 2001 18:21:48 -0000
Received: from sunsite.dk (130.225.247.90)
  by proxy.melb.primenet.com.au with SMTP; 13 Nov 2001 18:21:48 -0000
Received: (qmail 28838 invoked by alias); 13 Nov 2001 18:21:42 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16244
Received: (qmail 28819 invoked from network); 13 Nov 2001 18:21:40 -0000
From: Bart Schaefer <schaefer@brasslantern.com>
Message-Id: <1011113182115.ZM20682@candle.brasslantern.com>
Date: Tue, 13 Nov 2001 18:21:14 +0000
In-Reply-To: <1011112185944.ZM19128@candle.brasslantern.com>
Comments: In reply to Bart Schaefer <schaefer@brasslantern.com>
        "Re: Core dump bug in ZSH version 3.0.7" (Nov 12,  6:59pm)
References: <3BF014DD.4060508@abinitio.com> 
	<1011112185944.ZM19128@candle.brasslantern.com>
X-Mailer: Z-Mail (5.0.0 30July97)
To: Carl Feynman <carlf@abinitio.com>, zsh-workers@sunsite.dk
Subject: PATCH (4.0.x, 4.1.x): Re: Core dump bug in ZSH version 3.0.7
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Nov 12,  6:59pm, Bart Schaefer wrote:
} Subject: Re: Core dump bug in ZSH version 3.0.7
}
} It doesn't crash 4.0.x/4.1.x, but it does get into a rather strange state,
} trying to read a here-document whose start/end string is a single space,
} which of course is impossible (so you're trapped in the here-document until
} you interrupt somehow).
} 
} zagzig% mask = (1 << string.atoi(sys.argv[1])) - 1
} zsh: parse error near `)'

At this point we've parsed this as the command "mask" with arguments "="
and "(1" and with here-document ending at "string.atoi(sys.argv[1])"; the
parse error is at the second parenthesis.

However, when zsh bailed out with the parse error, it failed to pop the
pending here-document off the queue of such documents.  So then when it
begins parsing this:

} zagzig% key = string.atoi(sys.argv[2])
} heredoc>  

Zsh now believes it is accepting input for the here-document started at
the previous command line.  4.0+ doesn't crash because it re-uses the
memory at which the here-document's name is pointing, so the document
merely seems to have a bogus name; 3.0.x crashes because the name pointer
in the here-document structure has become garbage.

The solution seems to be the following; I haven't checked whether it will
apply directly to 3.0.x, as this patch is based on 4.1.0-dev-2:

Index: Src/parse.c
===================================================================
--- Src/parse.c	2001/09/05 15:22:33	1.10
+++ Src/parse.c	2001/11/13 18:10:10
@@ -481,6 +481,11 @@
 	    return 0;
 	}
 	yyerror(1);
+	while (hdocs) {
+	    struct heredocs *next = hdocs->next;
+	    zfree(hdocs, sizeof(struct heredocs));
+	    hdocs = next;
+	}
 	herrflush();
 	if (noerrs != 2)
 	    errflag = 1;

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

