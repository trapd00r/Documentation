From hzoli@cs.elte.hu Mon Jul  8 11:11:36 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by melb.werple.net.au (8.7.5/8.7.3/2) with ESMTP id LAA09383 for <mason@werple.mira.net.au>; Mon, 8 Jul 1996 11:11:33 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id UAA29415; Sun, 7 Jul 1996 20:58:21 -0400 (EDT)
Resent-Date: Sun, 7 Jul 1996 20:58:21 -0400 (EDT)
From: Zoltan Hidvegi <hzoli@cs.elte.hu>
Message-Id: <199607080057.CAA05655@hzoli.ppp.cs.elte.hu>
Subject: Re: zsh-3.0-pre2 cores on irix 5.3 (?)
To: schaefer@nbn.com
Date: Mon, 8 Jul 1996 02:57:47 +0200 (MET DST)
Cc: andreas.koenig@franz.ww.tu-berlin.de, zsh-workers@math.gatech.edu
In-Reply-To: <960707091640.ZM4171@candle.brasslantern.com> from Bart Schaefer at "Jul 7, 96 09:16:34 am"
X-Mailer: ELM [version 2.4ME+ PL17 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"9F4WQ2.0.XB7.iq5un"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/1556
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu
Content-Length: 1266
Status: OR

> Turns out that "source" or "." inside any shell function will trigger
> that BUG warning, which isn't really a bug at all -- it's doshfunc()
> calling loop() recursively, so the allocation stack depth reflects the
> depth of recursion.

The allocation stack can be deeper than locallevel in loop() when source
is used inside a command substitution or when source is called from a
trap.  So the patch below is more correct that Bart's patch.  Note that
in the main top level loop alloc_stackp should always be zero.

Zoltan

rcsdiff -qc -kk -r2.23 -r2.24 Src/init.c
*** Src/init.c
--- Src/init.c	1996/07/07 16:03:48	2.24
***************
*** 101,106 ****
--- 101,109 ----
  loop(int toplevel)
  {
      List list;
+ #ifdef DEBUG
+     int oasp = toplevel ? 0 : alloc_stackp;
+ #endif
  
      pushheap();
      for (;;) {
***************
*** 128,134 ****
  	    if (toplevel)
  		noexitct = 0;
  	}
! 	DPUTS(alloc_stackp, "BUG: alloc_stackp != 0 in loop()");
  	if (ferror(stderr)) {
  	    zerr("write error", NULL, 0);
  	    clearerr(stderr);
--- 131,137 ----
  	    if (toplevel)
  		noexitct = 0;
  	}
! 	DPUTS(alloc_stackp != oasp, "BUG: alloc_stackp changed in loop()");
  	if (ferror(stderr)) {
  	    zerr("write error", NULL, 0);
  	    clearerr(stderr);


