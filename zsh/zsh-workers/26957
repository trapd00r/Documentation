From zsh-workers-return-26957-mason-zsh=primenet.com.au@sunsite.dk Tue May 12 11:05:48 2009
Return-Path: <zsh-workers-return-26957-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2569 invoked from network); 12 May 2009 11:05:44 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.4 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 12 May 2009 11:05:44 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 67446 invoked from network); 12 May 2009 11:05:37 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 12 May 2009 11:05:37 -0000
Received: (qmail 2444 invoked by alias); 12 May 2009 11:05:33 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 26957
Received: (qmail 2433 invoked from network); 12 May 2009 11:05:32 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 12 May 2009 11:05:32 -0000
Received: from cluster-g.mailcontrol.com (cluster-g.mailcontrol.com [208.87.233.190])
	by bifrost.dotsrc.org (Postfix) with ESMTPS id 9FA0782D4B6B
	for <zsh-workers@sunsite.dk>; Tue, 12 May 2009 13:05:28 +0200 (CEST)
Received: from cameurexb01.EUROPE.ROOT.PRI ([193.128.72.68])
	by rly11g.srv.mailcontrol.com (MailControl) with ESMTP id n4CB5AuF009158
	for <zsh-workers@sunsite.dk>; Tue, 12 May 2009 12:05:25 +0100
Received: from news01.csr.com ([10.99.50.25]) by cameurexb01.EUROPE.ROOT.PRI with Microsoft SMTPSVC(6.0.3790.3959);
	 Tue, 12 May 2009 12:05:12 +0100
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.14.2/8.13.4) with ESMTP id n4CB5Chq029062
	for <zsh-workers@sunsite.dk>; Tue, 12 May 2009 12:05:12 +0100
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.14.2/8.14.2/Submit) with ESMTP id n4CB5Bw0029058
	for <zsh-workers@sunsite.dk>; Tue, 12 May 2009 12:05:12 +0100
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: Memory usage in read
X-Mailer: MH-E 8.0.3; nmh 1.3; GNU Emacs 22.1.1
Date: Tue, 12 May 2009 12:05:11 +0100
Message-ID: <29057.1242126311@csr.com>
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 12 May 2009 11:05:12.0597 (UTC) FILETIME=[85877C50:01C9D2F1]
X-Scanned-By: MailControl A-06-00-00 (www.mailcontrol.com) on 10.71.0.121
X-Virus-Scanned: ClamAV 0.92.1/9354/Tue May 12 04:26:05 2009 on bifrost
X-Virus-Status: Clean

Playing with valgrind using my start-up files revealed the following.
The first hunk prevents one variable masking another (it's just cosmetic
but good practice); the second copies existing code from below (the
recent patch so read doesn't skip incomplete bits of multibyte
characters at the end of input); the final one addresses the error.
I don't think this error would actually have caused grief in real life,
since the variable set by the dodgy "if" would always have been set by
the code I've now moved into the chain of tests.

==23610== Conditional jump or move depends on uninitialised value(s)
==23610==    at 0x805FC05: bin_read (builtin.c:5467)
==23610==    by 0x805BC56: execbuiltin (builtin.c:439)
==23610==    by 0x80695FA: execcmd (exec.c:3067)
==23610==    by 0x806A717: execpline2 (exec.c:1561)
==23610==    by 0x806AAF6: execpline (exec.c:1347)
==23610==    by 0x806BA6D: execlist (exec.c:1144)
==23610==    by 0x8087B46: execwhile (loop.c:398)
==23610==    by 0x806912F: execcmd (exec.c:3008)
==23610==    by 0x806A717: execpline2 (exec.c:1561)
==23610==    by 0x806AAF6: execpline (exec.c:1347)
==23610==    by 0x806BA6D: execlist (exec.c:1144)
==23610==    by 0x8087883: execif (loop.c:515)

Index: Src/builtin.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/builtin.c,v
retrieving revision 1.225
diff -u -r1.225 builtin.c
--- Src/builtin.c	7 May 2009 16:04:34 -0000	1.225
+++ Src/builtin.c	12 May 2009 10:58:41 -0000
@@ -5085,16 +5085,16 @@
     if (OPT_ISSET(ops,'d')) {
 	char *delimstr = OPT_ARG(ops,'d');
 #ifdef MULTIBYTE_SUPPORT
-	wint_t wc;
+	wint_t wi;
 
 	if (isset(MULTIBYTE)) {
 	    mb_metacharinit();
-	    (void)mb_metacharlenconv(delimstr, &wc);
+	    (void)mb_metacharlenconv(delimstr, &wi);
 	}
 	else
-	    wc = WEOF;
-	if (wc != WEOF)
-	    delim = (wchar_t)wc;
+	    wi = WEOF;
+	if (wi != WEOF)
+	    delim = (wchar_t)wi;
 	else
 	    delim = (wchar_t)((delimstr[0] == Meta) ?
 			      delimstr[1] ^ 32 : delimstr[0]);
@@ -5358,8 +5358,12 @@
 		wc = (wchar_t)c;
 	    }
 	    if (ret != MB_INCOMPLETE) {
-		if (ret == MB_INVALID)
+		if (ret == MB_INVALID) {
 		    memset(&mbs, 0, sizeof(mbs));
+		    /* Treat this as a single character */
+		    wc = (wchar_t)c;
+		    laststart = bptr;
+		}
 		if (bslash && wc == delim) {
 		    bslash = 0;
 		    continue;
@@ -5450,9 +5454,10 @@
 	}
 	signal_setmask(s);
 #ifdef MULTIBYTE_SUPPORT
-	if (c == EOF)
+	if (c == EOF) {
 	    gotnl = 1;
-	if (ret == MB_INCOMPLETE) {
+	    *bptr = '\0';	/* see below */
+	} else if (ret == MB_INCOMPLETE) {
 	    /*
 	     * We can only get here if there is an EOF in the
 	     * middle of a character... safest to keep the debris,


-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070

