From zsh-users-return-6394-mason-zsh=primenet.com.au@sunsite.dk Fri Jul 11 16:22:06 2003
Return-Path: <zsh-users-return-6394-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 17892 invoked from network); 11 Jul 2003 16:22:06 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 11 Jul 2003 16:22:06 -0000
Received: (qmail 1174 invoked by alias); 11 Jul 2003 16:21:55 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 6394
Received: (qmail 1100 invoked from network); 11 Jul 2003 16:21:54 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 11 Jul 2003 16:21:54 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [4.64.233.9] by sunsite.dk (MessageWall 1.0.8) with SMTP; 11 Jul 2003 16:21:54 -0000
Received: (from schaefer@localhost)
	by candle.brasslantern.com (8.11.6/8.11.6) id h6BGLqM28442
	for zsh-users@sunsite.dk; Fri, 11 Jul 2003 09:21:52 -0700
From: Bart Schaefer <schaefer@brasslantern.com>
Message-Id: <1030711162152.ZM28441@candle.brasslantern.com>
Date: Fri, 11 Jul 2003 16:21:52 +0000
In-Reply-To: <3F0EDC61.50001@odys.com>
Comments: In reply to Joe Gainey <joe.gainey@odys.com>
        "information about feature availability" (Jul 11, 11:48am)
References: <3F0EDC61.50001@odys.com>
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-users@sunsite.dk
Subject: Re: information about feature availability
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Jul 11, 11:48am, Joe Gainey wrote:
} 
} Can anyone tell me if any of the following can be done with zsh?
} 
} 1.  assignments of the form:
}       varname[word]=( [word]=word [word]=word ... )

No.  Assignments of the form

	varname=( key1 value1 key2 value2 ... )

are supported where varname has previously been declared as an associative
array, but an associative array cannot be the value of an array field (as
is implied by "varname[word]=( ... )"), and the [key]=value syntax inside
the parens is not yet supported.

} 2.  validating variable assigment using predetermined function.

No, zsh does not yet support discipline functions.
 
} 3.  I would also like to be able to use reference variables.

True namerefs in the ksh sense are also not yet supported.  However, you
can get a very similar effect by using ${(P)varname}.

}       [namerefs are] a little less important since it seams that zsh
}       has scoping capabilities (local vs. global).

Yes, zsh supports function-scoped variables with "local"; this works a
bit like Perl's "local" in that the names are dynamically scoped (not
like "my" static scoping) but function-level is the only local scope.

