From zsh-workers-return-7010-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Jul 07 13:24:02 1999
Return-Path: <zsh-workers-return-7010-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 11733 invoked from network); 7 Jul 1999 13:24:00 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 7 Jul 1999 13:24:00 -0000
Received: (qmail 20128 invoked by alias); 7 Jul 1999 13:23:50 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 7010
Received: (qmail 20120 invoked from network); 7 Jul 1999 13:23:50 -0000
Date: Wed, 7 Jul 1999 15:23:48 +0200 (MET DST)
Message-Id: <199907071323.PAA10724@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: Peter Stephenson's message of Wed, 07 Jul 1999 14:29:34 +0200
Subject: Re: PATCH: Enhancing math expressions a bit


Peter Stephenson wrote:

> I changed them a bit to make them presentable, so here's what I actually
> put in Functions/Zle.  I hope I've deciphered the behaviour OK --- does the
> incremental_completer really work yet?

I had planned to add some comments when they are stored in files
anyway.
The incremental completer does work for me and the completion
configuration I have. Due to Andrej's comment I also tried it with
`zsh -f' and the new completion system and there it worked,
too. However, I haven't tested everything (of course) and did only
very cursory testing without the new completion system. Also there may 
be other things we might want to make configurable... (this started as 
a play, after all).

Btw. if we once make auto-autoloading generic, we probably want to do
the same for configuration? With online-documentation a la run-help?
With registration of configuration keys (so that we can complete them)?

> Comments on behaviour:
> 
> - <TAB> in i-c-w should probably cause the function to exit if it
>   gets a unique completion.  (Note menucompletion is now explicitly
>   turned off inside the function.)

Yes, maybe. We'll then need a way to find that out, though. And we
probably should make it user-configurable since now you can just
happily go on typing multiple words and from time to time hit TAB when 
the list says that it may be interesting. This also suggests another
enhancement: let it play together with the new completion system so
that that gives i-c-w information about the unambiguous string. i-c-w
could then display that in the prompt or something (and draw attention 
toward it if there is something the code could insert automatically).

> - a left parenthesis typed in insert-files is causing the whole function to
>   crash; probably also nobadpattern needs to be set inside (I have it
>   set all the time).

Yes, I used this only to test the list-display-stuff. I've no idea if
and when this may be interesting to have.

> #   incremental_completer  Name of completion widget to call to get choices

Nay, it's the list of completers to give to _main_complete.


Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

