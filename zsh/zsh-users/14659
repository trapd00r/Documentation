From zsh-users-return-14659-mason-zsh=primenet.com.au@zsh.org Thu Dec 17 20:07:35 2009
Return-Path: <zsh-users-return-14659-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 754 invoked by alias); 17 Dec 2009 20:07:35 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14659
Received: (qmail 18296 invoked from network); 17 Dec 2009 20:07:32 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00,HTML_MESSAGE
	autolearn=ham version=3.2.5
Received-SPF: pass (ns1.primenet.com.au: SPF record at _spf.google.com designates 209.85.160.41 as permitted sender)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:sender:received:in-reply-to
         :references:date:x-google-sender-auth:message-id:subject:from:to:cc
         :content-type;
        bh=agFycr0YTj3C8GPMoLT3caaskbaYfw6Lq7SrNh5tP3E=;
        b=YNOpKHTMbb6NVLLCyd+erFez2qQH3Yfl/AkeLUd0RWo4j7ef/mgjCACZSsPPSi6vqV
         Ldaw+DoIZY5mkxcie6b+bk0s17vNzedAgE5MD37rdHa6VtfVf6Sn61ENNGQ0rXA06GiC
         aKWLPnnwNA8LZeA6L+BPS2nq6HYinDsG+DbnE=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:sender:in-reply-to:references:date
         :x-google-sender-auth:message-id:subject:from:to:cc:content-type;
        b=VwsTBUzEMbkf2WH5xKsp0GDSNYVtIujyqqbnXWQo2MjKFgx3R3Pa1IA2jTeMFO4p8y
         g4XqzTigyYpuCLgcMWWTmgUxGs2Gdu7+bWxW9LjXEOs3noLMA8TkkDu/AiGAdnHfujWn
         IKaRekm2WMAcCKPB9hcpuo7eJmlOw1iRjSCcI=
MIME-Version: 1.0
Sender: 4wayned@gmail.com
In-Reply-To: <733654e30912160754q5e505cabo4a2510b41bf1d892@mail.gmail.com>
References: <1260800369.32429.1350005931@webmail.messagingengine.com>
	 <733654e30912160754q5e505cabo4a2510b41bf1d892@mail.gmail.com>
Date: Thu, 17 Dec 2009 12:00:25 -0800
X-Google-Sender-Auth: 7b68b5f875eda899
Message-ID: <733654e30912171200g1f135030j5d3f978648caca70@mail.gmail.com>
Subject: Re: Unable to read history on latest Cygwin
From: Wayne Davison <wayned@users.sourceforge.net>
To: Thorsten Kampe <thorsten@thorstenkampe.de>
Cc: zsh-users@zsh.org
Content-Type: multipart/mixed; boundary=000e0cd116f0fc0a60047af21284

--000e0cd116f0fc0a60047af21284
Content-Type: multipart/alternative; boundary=000e0cd116f0fc0a55047af21282

--000e0cd116f0fc0a55047af21282
Content-Type: text/plain; charset=UTF-8

On Wed, Dec 16, 2009 at 7:54 AM, Wayne Davison <4wayned@gmail.com> wrote:

> According to various web docs, symlinks are atomic on NFS, so that might be
> a good thing to use in general (replacing the use of link()).
>

Attached is my patch for adding preferential use of a symlink as the locking
mechanism.  This should interoperate just fine with a hard-link creating
locker, but sadly, will have issues if another locker is using open with
O_EXCL.  I've made the symlink name "/pid-$PID/host-$HOST" in an attempt to
make a create (open) over an existing symlink fail with an error (unless the
/pid-$PID dir happens to exist and is writable).  We could try to add
O_NOFOLLOW (when available) to the O_EXCL-open as well.  However, hopefully
no system will exist where one zsh locker is trying to use open-locking and
another is trying to use a link-locking idiom.

What do you think?  Dangerous?  Useful?

..wayne..

--000e0cd116f0fc0a55047af21282
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div class=3D"gmail_quote">On Wed, Dec 16, 2009 at 7:54 AM, Wayne Davison <=
span dir=3D"ltr">&lt;<a href=3D"mailto:4wayned@gmail.com">4wayned@gmail.com=
</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin=
:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;">
<div class=3D"im"><div class=3D"gmail_quote">According to various web docs,=
 symlinks are atomic on NFS, so that might be a good thing to use in genera=
l (replacing the use of link()).</div></div></blockquote></div><br clear=3D=
"all">
Attached is my patch for adding preferential use of a symlink as the lockin=
g mechanism. =C2=A0This should interoperate just fine with a hard-link crea=
ting locker, but sadly, will have issues if another locker is using open wi=
th O_EXCL. =C2=A0I&#39;ve made the symlink name &quot;/pid-$PID/host-$HOST&=
quot; in an attempt to make a create (open) over an existing symlink fail w=
ith an error (unless the /pid-$PID dir happens to exist and is writable). =
=C2=A0We could try to add O_NOFOLLOW (when available) to the O_EXCL-open as=
 well. =C2=A0However, hopefully no system will exist where one zsh locker i=
s trying to use open-locking and another is trying to use a link-locking id=
iom.<div>
<br></div><div><div>What do you think? =C2=A0Dangerous? =C2=A0Useful?<br><d=
iv><br>..wayne..<br>
</div></div></div>

--000e0cd116f0fc0a55047af21282--
--000e0cd116f0fc0a60047af21284
Content-Type: text/x-patch; charset=US-ASCII; name="symlink-lock.patch"
Content-Disposition: attachment; filename="symlink-lock.patch"
Content-Transfer-Encoding: base64
X-Attachment-Id: f_g3byar1g0

aW5kZXggODZiMDhiZC4uODFiODdjNSAxMDA2NDQKLS0tIGEvU3JjL2hpc3QuYworKysgYi9TcmMv
aGlzdC5jCkBAIC0yNTk5LDExICsyNTk5LDM2IEBAIGxvY2toaXN0ZmlsZShjaGFyICpmbiwgaW50
IGtlZXBfdHJ5aW5nKQogCXN0cnVjdCBzdGF0IHNiOwogCWludCBmZDsKIAljaGFyICpsb2NrZmls
ZTsKKyNpZmRlZiBIQVZFX1NZTUxJTksKKwljaGFyIHBpZGJ1ZlszMl0sICpsbms7CisjZWxzZQog
I2lmZGVmIEhBVkVfTElOSwogCWNoYXIgKnRtcGZpbGU7CiAjZW5kaWYKKyNlbmRpZgogCiAJbG9j
a2ZpbGUgPSBiaWNhdCh1bm1ldGEoZm4pLCAiLkxPQ0siKTsKKyNpZmRlZiBIQVZFX1NZTUxJTksK
KwlzcHJpbnRmKHBpZGJ1ZiwgIi9waWQtJWxkL2hvc3QtIiwgKGxvbmcpbXlwaWQpOworCWxuayA9
IGJpY2F0KHBpZGJ1ZiwgZ2V0c3BhcmFtKCJIT1NUIikpOworCS8qIFdlJ2xsIGFidXNlIGZkIGFz
IG91ciBzdWNjZXNzIGZsYWcuICovCisJd2hpbGUgKChmZCA9IHN5bWxpbmsobG5rLCBsb2NrZmls
ZSkpIDwgMCkgeworCSAgICBpZiAoZXJybm8gIT0gRUVYSVNUIHx8ICFrZWVwX3RyeWluZykKKwkJ
YnJlYWs7CisJICAgIGlmIChsc3RhdChsb2NrZmlsZSwgJnNiKSA8IDApIHsKKwkJaWYgKGVycm5v
ID09IEVOT0VOVCkKKwkJICAgIGNvbnRpbnVlOworCQlicmVhazsKKwkgICAgfQorCSAgICBpZiAo
dGltZShOVUxMKSAtIHNiLnN0X210aW1lIDwgMTApCisJCXNsZWVwKDEpOworCSAgICBlbHNlCisJ
CXVubGluayhsb2NrZmlsZSk7CisJfQorCWlmIChmZCA8IDApCisJICAgIGxvY2toaXN0Y3QtLTsK
KwlmcmVlKGxuayk7CisjZWxzZSAvKiBub3QgSEFWRV9TWU1MSU5LICovCiAjaWZkZWYgSEFWRV9M
SU5LCiAJaWYgKChmZCA9IGdldHRlbXBmaWxlKGZuLCAwLCAmdG1wZmlsZSkpID49IDApIHsKIAkg
ICAgRklMRSAqb3V0ID0gZmRvcGVuKGZkLCAidyIpOwpAQCAtMjY2MCw2ICsyNjg1LDcgQEAgbG9j
a2hpc3RmaWxlKGNoYXIgKmZuLCBpbnQga2VlcF90cnlpbmcpCiAJCWNsb3NlKGZkKTsKIAl9CiAj
ZW5kaWYgLyogbm90IEhBVkVfTElOSyAqLworI2VuZGlmIC8qIG5vdCBIQVZFX1NZTUxJTksgKi8K
IAlmcmVlKGxvY2tmaWxlKTsKICAgICB9CiAKaW5kZXggNTY5MzAwNy4uMjYyZmU1ZCAxMDA2NDQK
LS0tIGEvY29uZmlndXJlLmFjCisrKyBiL2NvbmZpZ3VyZS5hYwpAQCAtMTE2OSw3ICsxMTY5LDgg
QEAgQUNfQ0hFQ0tfRlVOQ1Moc3RyZnRpbWUgc3RycHRpbWUgbWt0aW1lIHRpbWVsb2NhbCBcCiAJ
ICAgICAgIGh0b25zIG50b2hzIFwKIAkgICAgICAgcmVnY29tcCByZWdleGVjIHJlZ2Vycm9yIHJl
Z2ZyZWUgXAogCSAgICAgICBnZGJtX29wZW4gZ2V0eGF0dHIgXAotCSAgICAgICByZWFscGF0aCBj
YW5vbmljYWxpemVfZmlsZV9uYW1lKQorCSAgICAgICByZWFscGF0aCBjYW5vbmljYWxpemVfZmls
ZV9uYW1lIFwKKwkgICAgICAgc3ltbGluaykKIEFDX0ZVTkNfU1RSQ09MTAogCiBpZiB0ZXN0IHgk
ZW5hYmxlX2NhcCA9IHh5ZXM7IHRoZW4K
--000e0cd116f0fc0a60047af21284--

