From zsh-workers-return-24795-mason-zsh=primenet.com.au@sunsite.dk Sat Apr 05 23:48:03 2008
Return-Path: <zsh-workers-return-24795-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 10507 invoked from network); 5 Apr 2008 23:47:51 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 5 Apr 2008 23:47:51 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 87890 invoked from network); 5 Apr 2008 23:47:45 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 5 Apr 2008 23:47:45 -0000
Received: (qmail 9691 invoked by alias); 5 Apr 2008 23:47:41 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 24795
Received: (qmail 9673 invoked from network); 5 Apr 2008 23:47:40 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 5 Apr 2008 23:47:40 -0000
Received: from vms046pub.verizon.net (vms046pub.verizon.net [206.46.252.46])
	by bifrost.dotsrc.org (Postfix) with ESMTP id DDDDE82DC561
	for <zsh-workers@sunsite.dk>; Sun,  6 Apr 2008 01:47:35 +0200 (CEST)
Received: from torch.brasslantern.com ([71.116.79.77])
 by vms046.mailsrvcs.net (Sun Java System Messaging Server 6.2-6.01 (built Apr
 3 2006)) with ESMTPA id <0JYV006YTM38W780@vms046.mailsrvcs.net> for
 zsh-workers@sunsite.dk; Sat, 05 Apr 2008 18:47:33 -0500 (CDT)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id m35NlVaw006506	for
 <zsh-workers@sunsite.dk>; Sat, 05 Apr 2008 16:47:32 -0700
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id m35NlVuX006505	for zsh-workers@sunsite.dk; Sat,
 05 Apr 2008 16:47:31 -0700
Date: Sat, 05 Apr 2008 16:47:31 -0700
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: xpath
In-reply-to: <20080405220346.2901bf45@pws-pc>
To: zsh-workers@sunsite.dk
Message-id: <080405164731.ZM6504@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <1207324882.20538.38.camel@ket.lat>	<20080405220346.2901bf45@pws-pc>
Comments: In reply to Peter Stephenson <p.w.stephenson@ntlworld.com>
 "Re: xpath" (Apr  5, 10:03pm)
X-Virus-Scanned: ClamAV 0.91.2/6626/Sun Apr  6 00:36:18 2008 on bifrost
X-Virus-Status: Clean

On Apr 5, 10:03pm, Peter Stephenson wrote:
} Subject: Re: xpath
}
} On Fri, 04 Apr 2008 09:01:22 -0700
} Jack Bates <ms419@freezone.co.uk> wrote:
} > I have a content repository mounted on my filesystem. Attributes are
} > mapped to filesystem extended attributes. I want to use XPath
} > expressions like: /myrepo/subdir/*[@user.repository_id = a16]
} 
} Just to be clear: do you need *exactly* xpath syntax, as given above?

That's not a very representative sample of xpath syntax.  Inside the
[ ] can be an arbitrarily complex expression, with parentheses for
grouping, function calls with their argument lists in parentheses,
logical operators, etc.  (If you enjoy attempting to make sense of
impenetrable descriptive prose, try <http://www.w3.org/TR/xpath>.
It can't be any harder than, say, understanding Sven's C code in the
completion modules.)

} If so, then the answer is no: this conflicts with ordinary shell syntax
} where [...] specifies a character class and since any set of characters
} can appear within it there's no way of interpreting it any other way.

It's worse than that, isn't it?  Spaces inside the [ ] would cause the
parts of the pattern to be interpreted as separate words.  Anyway, the
application of the predicate inside the [ ] is dependent on the syntax
of the path that precedes it; it's applied as a filter, quite like zsh's
(e[...]) glob qualifier, really.

} Or are you happy with something that looks a bit like xpath syntax, and
} can be converted (possibly automatically) into it?  If the latter, we
} could probably come up with something using shell functions and glob
} qualifiers.

Indeed, given an external program that interprets the predicate syntax,
I think it'd be fairly easy to write something with (e) to apply it.
It'd look something like

/myrepo/subdir/*(e{'reply=($(xpred $REPLY "[@user.repository_id = a16]"))'})

assuming xpred takes a filename and a predicate and outputs the list of
whatever it is from the file.

