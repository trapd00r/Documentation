From zsh-workers-return-16843-mason-zsh=primenet.com.au@sunsite.dk Fri Mar 15 16:39:23 2002
Return-Path: <zsh-workers-return-16843-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 8944 invoked from network); 15 Mar 2002 16:39:23 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 15 Mar 2002 16:39:23 -0000
Received: (qmail 17834 invoked by alias); 15 Mar 2002 16:39:17 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16843
Received: (qmail 17822 invoked from network); 15 Mar 2002 16:39:15 -0000
From: "Bart Schaefer" <schaefer@brasslantern.com>
Message-Id: <1020315163900.ZM2296@candle.brasslantern.com>
Date: Fri, 15 Mar 2002 16:39:00 +0000
In-Reply-To: <m2zo1996ga.fsf_-_@linux3.maruska.tin.it>
Comments: In reply to  mmc@maruska.dyndns.org (Michal Marus<ka)
        "Re: (backward-)kill-argument     (1/2 thanks  1/2 problem re-statement)" (Mar 15,  4:49pm)
References: <m2zo1cxvvl.fsf@linux3.maruska.tin.it> 
	<15505.46831.979708.369781@wischnow.berkom.de> 
	<m2ofhsw728.fsf_-_@linux3.maruska.tin.it> 
	<1020315153147.ZM2228@candle.brasslantern.com> 
	<m2zo1996ga.fsf_-_@linux3.maruska.tin.it>
X-Mailer: Z-Mail (5.0.0 30July97)
To: mmc@maruska.dyndns.org (Michal Marus<ka), zsh-workers@sunsite.dk
Subject: Re: (backward-)kill-argument     (1/2 thanks  1/2 problem re-statement)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Mar 15,  4:49pm, Michal Marus<ka wrote:
}
} I immagine Zsh keeps a database (roughly) like:

No, zsh keeps no database.  The syntax of every command is described by
a "completion function" which is written for that specific command.
There are a few other functions that describe generic types of syntax
that can be shared by many commands, but ultimately the only "database"
that zsh uses is a hash mapping a context (either a command name, or
something like -redirect- for what follows a redirection operator) to
a function that computes the completions for that context.

There is nothing that describes the syntax to the editor for purposes of
reversing this mapping, so the editor can't use the "knowledge" that the
completion system has of individual command contexts to perform syntactic
analysis of the edited text.  It only has access to the generic parsing
rules of the (extended) Bourne shell scripting language used by the shell
itself.

Something like what you describe could be created in the same way that
the completion system itself was created -- built up one function at a time
for all the possible contexts that you want to recognize and operate on --
but it does not currently exist.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

