From zsh-users-return-15770-mason-zsh=primenet.com.au@zsh.org Sat Feb 05 07:34:41 2011
Return-Path: <zsh-users-return-15770-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 11058 invoked by alias); 5 Feb 2011 07:34:41 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15770
Received: (qmail 9290 invoked from network); 5 Feb 2011 07:34:19 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,SPF_HELO_PASS
	autolearn=ham version=3.3.1
Received-SPF: none (ns2.melb.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <110204080640.ZM23735@torch.brasslantern.com>
Date: Fri, 04 Feb 2011 08:06:40 -0800
In-reply-to: <AANLkTin4=wW730zAtecJH6oZjBzHVCPf7zi4MEKHoFaU@mail.gmail.com>
Comments: In reply to Nikolai Weibull <now@bitwi.se>
 "hashdirs in non-interactive shell" (Feb  3,  6:14pm)
References: <AANLkTin4=wW730zAtecJH6oZjBzHVCPf7zi4MEKHoFaU@mail.gmail.com>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: Zsh Users <zsh-users@zsh.org>
Subject: Re: hashdirs in non-interactive shell
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Feb 3,  6:14pm, Nikolai Weibull wrote:
}
} Why is hashdirs on by default in a non-interactive shell?  This option
} can increase start-up time quite a bit on systems were stat() isn't
} unnecessarily fast.

The short answer is that it's on by default because the state of most
options is determined only by what emulation mode is in effect, and
it didn't occur to anyone to make an exception of HASH_DIRS.

The longer answer is that there are so many options that we long ago
gave up trying to manage implicit dependencies among them, so there
are a large number of what might be considered nonsense combinations.
After considerable argument, the default set ended up being those
that seemed likely to be most attractive to a new interactive user.

Still, at the risk of descending onto the slippery slope, we could
handle this the way MONITOR is now handled.  The slippery part is
that this likely applies to CORRECT, all the completion and history
options, and so on, and off we go ...

Index: init.c
===================================================================
RCS file: /extra/cvsroot/zsh/zsh-4.0/Src/init.c,v
retrieving revision 1.34
diff -c -r1.34 init.c
--- init.c	21 Dec 2010 16:41:16 -0000	1.34
+++ init.c	4 Feb 2011 15:55:49 -0000
@@ -243,6 +243,7 @@
      * still 2 at the end, we set it to the value of INTERACTIVE.
      */
     opts[MONITOR] = 2;   /* may be unset in init_io() */
+    opts[HASHDIRS] = 2;  /* same relationship to INTERACTIVE */
     opts[SHINSTDIN] = 0;
     opts[SINGLECOMMAND] = 0;
 
@@ -351,6 +352,8 @@
     opts[INTERACTIVE] = !!opts[INTERACTIVE];
     if (opts[MONITOR] == 2)
 	opts[MONITOR] = opts[INTERACTIVE];
+    if (opts[HASHDIRS] == 2)
+	opts[HASHDIRS] = opts[INTERACTIVE];
     pparams = x = (char **) zshcalloc((countlinknodes(paramlist) + 1) *
sizeof(char *));
 
     while ((*x++ = (char *)getlinknode(paramlist)));

