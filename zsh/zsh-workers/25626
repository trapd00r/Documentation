From zsh-workers-return-25626-mason-zsh=primenet.com.au@sunsite.dk Fri Sep 05 19:55:51 2008
Return-Path: <zsh-workers-return-25626-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 7114 invoked from network); 5 Sep 2008 19:55:48 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00,HTML_MESSAGE
	autolearn=ham version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 5 Sep 2008 19:55:48 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 65223 invoked from network); 5 Sep 2008 19:55:43 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 5 Sep 2008 19:55:43 -0000
Received: (qmail 8537 invoked by alias); 5 Sep 2008 19:55:37 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 25626
Received: (qmail 8523 invoked from network); 5 Sep 2008 19:55:36 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 5 Sep 2008 19:55:36 -0000
Received: from yw-out-2324.google.com (yw-out-2324.google.com [74.125.46.30])
	by bifrost.dotsrc.org (Postfix) with ESMTP id BAEA5802710B
	for <zsh-workers@sunsite.dk>; Fri,  5 Sep 2008 21:55:07 +0200 (CEST)
Received: by yw-out-2324.google.com with SMTP id 5so50139ywb.81
        for <zsh-workers@sunsite.dk>; Fri, 05 Sep 2008 12:55:09 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:to
         :subject:in-reply-to:mime-version:content-type:references;
        bh=0dq7IAbJdjwhISu77L6RvvtAICVkfv/Xzxad4rFzowk=;
        b=NJIvB6MIojyt9jEQFzhnuyNAcQSOzaN2dapLszNQlPzMF2pwHBcPi/rvWklShloXrd
         absaCe931qSBPbJ5HTHu3xoVwRKZvQYRzB3aV+y9ORR9C1ML4rAsdHGed25qf8rCm4Ou
         neSgrM5iDS6hSr5vJJeHg+ihfG6dPvvUUzk6w=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:to:subject:in-reply-to:mime-version
         :content-type:references;
        b=Pk4GExoyQdCc3MG9WIebyrIBWPnupqbSG79MA5GJnDjN2FLv46wmA6jGvp+LSEitoV
         tl+mm/fF6az8Y2aNxwtQnGuFpdO+Iu5GnSUiPg1fi9+BrhIIFdCm/TY4Ks7cnGO7ZVj/
         qoS/SkH8/lO4uPCA+dNcbT/IvpMeE/71paeII=
Received: by 10.114.95.1 with SMTP id s1mr10530859wab.13.1220644508537;
        Fri, 05 Sep 2008 12:55:08 -0700 (PDT)
Received: by 10.114.159.2 with HTTP; Fri, 5 Sep 2008 12:55:08 -0700 (PDT)
Message-ID: <6cd6de210809051255k168ce8d0v35f0280c5b28d4dc@mail.gmail.com>
Date: Fri, 5 Sep 2008 15:55:08 -0400
From: "Rocky Bernstein" <rocky.bernstein@gmail.com>
To: "Rocky Bernstein" <rocky.bernstein@gmail.com>, 
	"Zsh hackers list" <zsh-workers@sunsite.dk>
Subject: Re: Request: a way to get the subshell level nesting
In-Reply-To: <20080905194912.GA80349@redoubt.spodhuis.org>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_52949_16763470.1220644508529"
References: <6cd6de210809050711h4811efei413630fb514333ae@mail.gmail.com>
	 <20080905194912.GA80349@redoubt.spodhuis.org>
X-Virus-Scanned: ClamAV 0.92.1/8168/Fri Sep  5 20:38:03 2008 on bifrost
X-Virus-Status: Clean

------=_Part_52949_16763470.1220644508529
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Thanks for the information. Alas, I don't believe this is does what is
needed.

Here is output from no subshell nesting, one subshell, and then two:

$ for i in 1; do if [[ x == x ]]; then print -P %_ ; fi; done
for then
$ (for i in 1; do if [[ x == x ]]; then print -P %_ ; fi; done)
for then
$ ( (for i in 1; do if [[ x == x ]]; then print -P %_ ; fi; done) )
for then

In all cases I get the same output with no indication in the last two cases
that they are inside one or two subshells.



On Fri, Sep 5, 2008 at 3:49 PM, Phil Pennock <
zsh-workers+phil.pennock@spodhuis.org<zsh-workers%2Bphil.pennock@spodhuis.org>
> wrote:

> On 2008-09-05 at 10:11 -0400, Rocky Bernstein wrote:
> > It would be great if there were a way to get the subshell level nesting.
> ksh
> > uses .sh.level and bash BASH_SUBSHELL.
>
> I don't think zsh has that directly as a variable, but it does have %_
> for prompt substitution, producing on stdout a list of words identifying
> the nested parser states.  It's output text, not a data structure
> internal to the shell (so not an array).
>
> zsh% for i in 1; do if [[ x == x ]]; then print -P %_ ; fi; done
> for then
> zsh%
>
> Of course, capturing that in $(...) will add a cmdsubst to the end.
>
> -Phil
>

------=_Part_52949_16763470.1220644508529
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

<div dir="ltr">Thanks for the information. Alas, I don&#39;t believe this is does what is needed. <br><br>Here is output from no subshell nesting, one subshell, and then two: <br><br>$ for i in 1; do if [[ x == x ]]; then print -P %_ ; fi; done<br>
for then<br>$ (for i in 1; do if [[ x == x ]]; then print -P %_ ; fi; done)<br>for then<br>$ ( (for i in 1; do if [[ x == x ]]; then print -P %_ ; fi; done) )<br>for then<br>&nbsp;<br>In all cases I get the same output with no indication in the last two cases that they are inside one or two subshells. <br>
<br><br><br><div class="gmail_quote">On Fri, Sep 5, 2008 at 3:49 PM, Phil Pennock <span dir="ltr">&lt;<a href="mailto:zsh-workers%2Bphil.pennock@spodhuis.org">zsh-workers+phil.pennock@spodhuis.org</a>&gt;</span> wrote:<br>
<blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;"><div class="Ih2E3d">On 2008-09-05 at 10:11 -0400, Rocky Bernstein wrote:<br>
&gt; It would be great if there were a way to get the subshell level nesting. ksh<br>
&gt; uses .sh.level and bash BASH_SUBSHELL.<br>
<br>
</div>I don&#39;t think zsh has that directly as a variable, but it does have %_<br>
for prompt substitution, producing on stdout a list of words identifying<br>
the nested parser states. &nbsp;It&#39;s output text, not a data structure<br>
internal to the shell (so not an array).<br>
<br>
zsh% for i in 1; do if [[ x == x ]]; then print -P %_ ; fi; done<br>
for then<br>
zsh%<br>
<br>
Of course, capturing that in $(...) will add a cmdsubst to the end.<br>
<font color="#888888"><br>
-Phil<br>
</font></blockquote></div><br></div>

------=_Part_52949_16763470.1220644508529--

