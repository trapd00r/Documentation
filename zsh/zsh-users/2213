From zsh-users-return-2213-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Mar 11 15:55:36 1999
Return-Path: <zsh-users-return-2213-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 22473 invoked from network); 11 Mar 1999 15:55:34 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 11 Mar 1999 15:55:34 -0000
Received: (qmail 21744 invoked by alias); 11 Mar 1999 15:51:36 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 2213
Received: (qmail 21721 invoked from network); 11 Mar 1999 15:51:31 -0000
X-Authentication-Warning: awayteam.zanshin.com: schaefer set sender to schaefer@tiny.zanshin.com using -f
From: Bart Schaefer <schaefer@tiny.zanshin.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <14055.58882.513014.144480@awayteam.zanshin.com>
Date: Thu, 11 Mar 1999 07:49:22 -0800 (PST)
To: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
Cc: zsh-users@sunsite.auc.dk
Subject: Re: how does setopt -m work?
In-Reply-To: <199903110832.JAA17980@beta.informatik.hu-berlin.de>
References: <199903110832.JAA17980@beta.informatik.hu-berlin.de>
X-Mailer: VM 6.68a under Emacs 20.3.5.1
Reply-To: Bart Schaefer <schaefer@zanshin.com>

Sven Wischnowsky writes:
 > 
 > > It's probably a bug that it doesn't rip out the underscores when
 > > doing its matching.  ``setopt -m "autor*"'' will work.  The other
 > > thing to check would be case sensitivity.
 > 
 > Maybe, yes.
 > 
 > Bye
 >  Sven
 > 
 > --- os/options.c	Mon Mar  8 09:06:26 1999
 > +++ Src/options.c	Thu Mar 11 09:29:20 1999
 > @@ -522,11 +522,20 @@
 >  	/* Globbing option (-m) set. */
 >  	while (*args) {
 >  	    Comp com;
 > +	    char *s, *t;
 > +
 > +	    t = p = dupstring(*args);

Is this really the whole patch?  After applying this, I get

../../zsh-3.1.5/Src/options.c: In function `bin_setopt':
../../zsh-3.1.5/Src/options.c:527: `p' undeclared (first use this function)
../../zsh-3.1.5/Src/options.c:527: (Each undeclared identifier is reported only once
../../zsh-3.1.5/Src/options.c:527: for each function it appears in.)
../../zsh-3.1.5/Src/options.c:525: warning: `s' might be used uninitialized in this function
../../zsh-3.1.5/Src/options.c:525: warning: `t' might be used uninitialized in this function

 > +	    while (*t)
 > +		if (*t == '_')
 > +		    chuck(t);
 > +		else {
 > +		    *t = tulower(*t);
 > +		    t++;
 > +		}
 >  
 >  	    /* Expand the current arg. */
 > -	    tokenize(*args);
 > -	    if (!(com = parsereg(*args))) {
 > -		untokenize(*args);
 > +	    tokenize(s);
 > +	    if (!(com = parsereg(s))) {
 >  		zwarnnam(nam, "bad pattern: %s", *args, 0);
 >  		continue;
 >  	    }

