From zsh-workers-return-7354-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Aug 04 08:18:49 1999
Return-Path: <zsh-workers-return-7354-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 27657 invoked from network); 4 Aug 1999 08:18:47 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 4 Aug 1999 08:18:47 -0000
Received: (qmail 5632 invoked by alias); 4 Aug 1999 08:18:31 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 7354
Received: (qmail 5625 invoked from network); 4 Aug 1999 08:18:30 -0000
Message-Id: <9908040747.AA12481@ibmth.df.unipi.it>
To: zsh-workers@sunsite.auc.dk (Zsh list)
Subject: Re: TRAPEXIT question 
In-Reply-To: ""Bart Schaefer""'s message of "Wed, 04 Aug 1999 04:40:26 DFT."
             <990804044026.ZM12690@candle.brasslantern.com> 
Date: Wed, 04 Aug 1999 09:47:31 +0200
From: Peter Stephenson <pws@ibmth.df.unipi.it>

"Bart Schaefer" wrote:
> This has an interesting side-effect in the case of the EXIT trap.  If you
> use the `TRAPEXIT() { ... }' function form, then other traps set within the
> trap itself have the context of the TRAPEXIT function; but if you use the
> `trap "..." EXIT' form, traps set within the trap have as their context a
> function that has already exited -- and as a consequence they get set in
> the next context up, which can even be the top-level shell.
> 
> (I don't know if any other shell behaves this way; I know bash does *not*.
> The new LOCAL_TRAPS option in 3.1.6 doesn't appear to affect it.)

ksh works this way, as far as the trap builtin is concerned, which is why
zsh does.  bash doesn't seem to regard EXIT traps as applying to functions
at all.  Neither of them have TRAP functions, which were presumably
introduced to avoid the messy quoting syntax, although as you pointed out
you can have the real function defined somewhere else (but then you still
lose the effect of being in the surrounding context).  In the early days
zsh called them both with a separate function environment, and this is
different from any other shell; only the trap builtin was fixed, however,
since if you define a function trap it's natural that it should have a
function environment.

-- 
Peter Stephenson <pws@ibmth.df.unipi.it>       Tel: +39 050 844536
WWW:  http://www.ifh.de/~pws/
Dipartimento di Fisica, Via Buonarroti 2, 56127 Pisa, Italy

