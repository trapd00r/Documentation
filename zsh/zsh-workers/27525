From zsh-workers-return-27525-mason-zsh=primenet.com.au@zsh.org Wed Dec 16 17:31:12 2009
Return-Path: <zsh-workers-return-27525-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 29057 invoked by alias); 16 Dec 2009 17:31:12 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 27525
Received: (qmail 22865 invoked from network); 16 Dec 2009 17:31:09 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received-SPF: none (proxy.melb.primenet.com.au: domain at klanderman.net does not designate permitted sender hosts)
From: Greg Klanderman <gak@klanderman.net>
To: Zsh list <zsh-workers@zsh.org>
Subject: Re: the function to show a digit argument while it is being typed
Reply-To: gak@klanderman.net
Date: Wed, 16 Dec 2009 12:31:01 -0500
In-Reply-To: <m3r5s35on8.fsf@klanderman.net> (Greg Klanderman's message of "Thu, 12 Nov 2009 18:06:35 -0500")
Message-ID: <m33a3au8q2.fsf@klanderman.net>
User-Agent: Gnus/5.1008 (Gnus v5.10.8) XEmacs/21.4.17 (linux)
References: <10081257897632@webmail89.yandex.ru>
	<237967ef0911101822g5bfcf4fao25fc33ba0a2e8604@mail.gmail.com>
	<091110204748.ZM28704@torch.brasslantern.com>
	<237967ef0911102217m1325dc59y8d7388e9f6f21c7b@mail.gmail.com>
	<091111001419.ZM28852@torch.brasslantern.com>
	<m3eio56o4i.fsf@klanderman.net>
	<091111094507.ZM30174@torch.brasslantern.com>
	<m3r5s35on8.fsf@klanderman.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii


[moved from zsh-users]

>>>>> On November 12, 2009 Greg Klanderman <gak@klanderman.net> wrote:

> So I hacked up a proof of concept in C for showing the argument in the
> universal-argument code.. let me know what you think.

Is there any interest in including a cleaned up version of this patch?
Has been working well for me..

Greg

Index: Src/Zle/zle_misc.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/Zle/zle_misc.c,v
retrieving revision 1.58
diff -u -r1.58 zle_misc.c
--- Src/Zle/zle_misc.c	24 Apr 2009 09:00:38 -0000	1.58
+++ Src/Zle/zle_misc.c	16 Dec 2009 17:24:03 -0000
@@ -709,16 +709,81 @@
     return 0;
 }
 
+static char *
+baseprefix(char *buf, int base)
+{
+    if (base == 10)
+        buf[0] = (char)0;
+    else if (base == 2)
+        strcpy(buf, "0b");
+    else if (base == 8)
+        strcpy(buf, "0o");
+    else if (base == 16)
+        strcpy(buf, "0x");
+    else
+        sprintf(buf, "%d#", base);
+    return buf;
+}
+
+static char *
+int2string(char *buf, int i, int base)
+{
+    char *b = buf;
+    int p, v;
+
+    if (i < 0) {
+        *b++ = '-';
+        i = -i;
+    }
+
+    baseprefix(b, base);
+    b += strlen(b);
+
+    for (p = 1; p <= i; p *= base)
+        ;
+
+    while (p > 1) {
+        p /= base;
+        v = i / p;
+        i -= v * p;
+        *b++ = (v < 10) ? v+'0' : v-10+'A';
+    }
+
+    *b = (char)0;
+    return buf;
+}
+
+static void
+showarg(int digcnt, int pref, int minus)
+{
+    char msg[100], buf[100], buf2[10];
+
+    if (!digcnt)
+        /* implicit multiplier; will be replaced if digits are entered */
+        sprintf(msg, "arg: (%s)", int2string(buf, 4*zmod.tmult, zmod.base));
+    else if (minus < 0 && digcnt <= 1)
+        /* no digits, just a '-' has been entered so far */
+        sprintf(msg, "arg: -%s", baseprefix(buf2, zmod.base));
+    else
+        /* digits have been entered */
+        sprintf(msg, "arg: %s", int2string(buf, minus * (pref ? pref : 1), zmod.base));
+
+    showmsg(msg);
+    zrefresh();
+}
+
 /**/
 int
 universalargument(char **args)
 {
     int digcnt = 0, pref = 0, minus = 1, gotk;
+
     if (*args) {
 	zmod.mult = atoi(*args);
 	zmod.flags |= MOD_MULT;
 	return 0;
     }
+
     /*
      * TODO: this is quite tricky to do when trying to maintain
      * compatibility between the old input system and Unicode.
@@ -734,16 +799,19 @@
      *
      * Hence for now this remains byte-by-byte.
      */
+    showarg(digcnt, pref, minus);
     while ((gotk = getbyte(0L, NULL)) != EOF) {
 	if (gotk == '-' && !digcnt) {
 	    minus = -1;
 	    digcnt++;
+            showarg(digcnt, pref, minus);
 	} else {
 	    int newdigit = parsedigit(gotk);
 
 	    if (newdigit >= 0) {
 		pref = pref * zmod.base + newdigit;
 		digcnt++;
+                showarg(digcnt, pref, minus);
 	    } else {
 		ungetbyte(gotk);
 		break;
@@ -756,6 +824,8 @@
 	zmod.tmult *= 4;
     zmod.flags |= MOD_TMULT;
     prefixflag = 1;
+    showmsg("");
+    zrefresh();
     return 0;
 }
 

