From zsh-workers-return-16482-mason-zsh=primenet.com.au@sunsite.dk Tue Jan 22 02:35:32 2002
Return-Path: <zsh-workers-return-16482-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 606 invoked from network); 22 Jan 2002 02:35:31 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 22 Jan 2002 02:35:31 -0000
Received: (qmail 29713 invoked by alias); 22 Jan 2002 02:35:18 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16482
Received: (qmail 29664 invoked from network); 22 Jan 2002 02:35:17 -0000
X-Now-Playing: Suede's _Coming up (limited edition)_: "she"
To: "Bart Schaefer" <schaefer@brasslantern.com>
Cc: zsh-workers@sunsite.dk
Subject: Re: Problem inputting Japanese using XIM
References: <b78fa9d0-c9c9-434a-8cd4-ca248c08bbd8@deisui.bug.org>
 <020121152432.ZM27716@candle.brasslantern.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
From: Daiki Ueno <ueno@unixuser.org>
Date: Tue, 22 Jan 2002 11:35:12 +0900
In-Reply-To: <020121152432.ZM27716@candle.brasslantern.com>
 (Bart Schaefer's message of "Mon, 21 Jan 2002 15:24:32 -0800")
Message-ID: <c8899158-bf43-4067-ada4-ace3133ed74d@deisui.bug.org>
Lines: 33

>>>>> In <020121152432.ZM27716@candle.brasslantern.com> 
>>>>>	"Bart Schaefer" <schaefer@brasslantern.com> wrote:

> > I'm wondering why zsh considers characters in the [0x80, 0xa0] range
> > as control characters?

> Zsh does not handle multibyte character sets, in general.  Internally it
> always treats a single byte as a single character.  The characters with
> ASCII values above 128 are meta-characters, and those in the range 128-
> 159 are control-meta-characters (just as 0-31 are control without meta).

Thank you for the response, I understood that.

By the way, the control-character formatting routines can be found here
and there in Src/Zle/*.c.  While they convert 0x0a into the form of "^J"
and so on, it seems that which is only helpful in displaying C0
characters, not C1 characters.  Is this expected?

The actual code is as follows:

(snipped off Src/Zle/zle_refresh.c:1122 ...)
	} else if (line[t0] == 0x7f) {
	    *vp++ = '^';
	    *vp++ = '?';
	} else if (icntrl(line[t0])) {
	    *vp++ = '^';
	    *vp++ = line[t0] | '@';
	} else
	    *vp++ = line[t0];

Regards,
-- 
Daiki Ueno

