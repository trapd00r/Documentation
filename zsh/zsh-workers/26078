From zsh-workers-return-26078-mason-zsh=primenet.com.au@sunsite.dk Fri Nov 21 04:08:39 2008
Return-Path: <zsh-workers-return-26078-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16995 invoked from network); 21 Nov 2008 04:08:25 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 21 Nov 2008 04:08:25 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 75010 invoked from network); 21 Nov 2008 04:08:18 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 21 Nov 2008 04:08:18 -0000
Received: (qmail 25364 invoked by alias); 21 Nov 2008 04:08:12 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 26078
Received: (qmail 25351 invoked from network); 21 Nov 2008 04:08:11 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 21 Nov 2008 04:08:11 -0000
Received: from yw-out-2324.google.com (yw-out-2324.google.com [74.125.46.29])
	by bifrost.dotsrc.org (Postfix) with ESMTP id D88E780525B4
	for <zsh-workers@sunsite.dk>; Fri, 21 Nov 2008 05:08:06 +0100 (CET)
Received: by yw-out-2324.google.com with SMTP id 5so343144ywb.81
        for <zsh-workers@sunsite.dk>; Thu, 20 Nov 2008 20:08:05 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:sender
         :to:subject:mime-version:content-type:content-transfer-encoding
         :content-disposition:x-google-sender-auth;
        bh=CoBAMmGlsmLEB0PZ2Dy0YZGGCO5gve5/N4MkYrmXwyY=;
        b=aRqKZ6JF0Cpvoc3cpIgMMoLX4GVyfoQSysCvaCQjocEvuipjMwnYxw5xLMUKuCWEH0
         qy8ffGYwIfAOqjyEwQqPkK1l8P65qYd5n3O8E0cVfz6inLiABsTpWSFLeiaRK4JWcJfr
         s+pMC9H3NH/p6zbmDFPs7WUKxSav2+BgGx98E=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:sender:to:subject:mime-version:content-type
         :content-transfer-encoding:content-disposition:x-google-sender-auth;
        b=kVbg/ixnuvf0Uk/ZxlGmMzfCllVKZYz8Q08fqsyKw5XMLRObitYphWKaqrNCkAMbNr
         umvKEmSc81O2wpY/rbmyo25PFTsxLUNHlx+HU/Uzijdyq4LWQXPxxeJwx1dABtA/AMoD
         UxjMyQSeE0p9zpK3trRZ7JkIVzSYI/Ix3F3aE=
Received: by 10.65.218.13 with SMTP id v13mr55174qbq.69.1227240485323;
        Thu, 20 Nov 2008 20:08:05 -0800 (PST)
Received: by 10.65.110.15 with HTTP; Thu, 20 Nov 2008 20:08:05 -0800 (PST)
Message-ID: <20a807210811202008o34865319qe1840896992ac48d@mail.gmail.com>
Date: Thu, 20 Nov 2008 23:08:05 -0500
From: "Vin Shelton" <acs@alumni.princeton.edu>
Sender: ethersoft@gmail.com
To: zsh-workers@sunsite.dk
Subject: D03 test hang on cygwin with latest sources
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
X-Google-Sender-Auth: 3392e8f543fd39a3
X-Virus-Scanned: ClamAV 0.92.1/8656/Thu Nov 20 23:12:54 2008 on bifrost
X-Virus-Status: Clean

Peter -

It looks like something bad happened with your process redirection
changes.  After building from the latest CVS sources, I ran the
testsuite and got a hang in D03.  A ZTST_verbose=2 trace follows.

ZTST_verbose=2 make TESTNUM=D03
if test -n "/usr/bin/gcc-4"; then \
          cd .. && DESTDIR= \
          make MODDIR=`pwd`/Test/Modules install.modules > /dev/null; \
        fi
if ZTST_testlist="`for f in /usr/local/src/zsh-2008-11-20/Test/D03*.ztst; \
           do echo $f; done`" \
         ZTST_srcdir="/usr/local/src/zsh-2008-11-20/Test" \
         ZTST_exe=../Src/zsh.exe \
         ../Src/zsh.exe +Z -f
/usr/local/src/zsh-2008-11-20/Test/runtests.zsh; then \
         stat=0; \
        else \
         stat=1; \
        fi; \
        rm -rf Modules .zcompdump; \
        exit $stat
/usr/local/src/zsh-2008-11-20/Test/D03procsubst.ztst: starting.
ZTST_getsect: read section name: prep
ZTST_getchunk: read code chunk:
  if grep '#define PATH_DEV_FD' $ZTST_testdir/../config.h > /dev/null 2>&1 ||
     grep '#define HAVE_FIFOS' $ZTST_testdir/../config.h > /dev/null 2>&1; then
    mkdir procsubst.tmp
    cd procsubst.tmp
    print 'First\tSecond\tThird\tFourth' >FILE1
    print 'Erste\tZweite\tDritte\tVierte' >FILE2
  else
    ZTST_unimplemented="process substitution is not supported"
    true
  fi
ZTST_execchunk: status 0
ZTST_getchunk: read code chunk:
  function copycat { cat "$@" }
ZTST_execchunk: status 0
ZTST_getchunk: read code chunk:

ZTST_getsect: read section name: test
ZTST_test: looking for new test
ZTST_test: examining line:
  paste <(cut -f1 FILE1) <(cut -f3 FILE2)
ZTST_getchunk: read code chunk:
  paste <(cut -f1 FILE1) <(cut -f3 FILE2)
ZTST_test: examining line:
>First  Dritte
ZTST_getredir: read redir for '>':
First   Dritte
ZTST_test: examining line:

Running test: <(...) substitution
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.1164, output: /tmp/zsh.ztst.out.1164, error:
/tmp/zsh.ztst.terr.1164
ZTST_execchunk: status 0
ZTST_test: test produced standard output:
First   Dritte
ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:
  { paste <(cut -f2 FILE1) <(cut -f4 FILE2) } > >(sed 's/e/E/g' >OUTFILE)
ZTST_getchunk: read code chunk:
  { paste <(cut -f2 FILE1) <(cut -f4 FILE2) } > >(sed 's/e/E/g' >OUTFILE)
  cat OUTFILE
ZTST_test: examining line:
>SEcond ViErtE
ZTST_getredir: read redir for '>':
SEcond  ViErtE
ZTST_test: examining line:

Running test: >(...) substitution
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.1164, output: /tmp/zsh.ztst.out.1164, error:
/tmp/zsh.ztst.terr.1164
ZTST_execchunk: status 0
ZTST_test: test produced standard output:
SEcond  ViErtE
ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:
  diff =(cat FILE1) =(cat FILE2)
ZTST_getchunk: read code chunk:
  diff =(cat FILE1) =(cat FILE2)
ZTST_test: examining line:
>1c1
ZTST_getredir: read redir for '>':
1c1
< First Second  Third   Fourth
---
> Erste Zweite  Dritte  Vierte
ZTST_test: examining line:

Running test: =(...) substituion
ZTST_test: expecting status: 1
Input: /tmp/zsh.ztst.in.1164, output: /tmp/zsh.ztst.out.1164, error:
/tmp/zsh.ztst.terr.1164
ZTST_execchunk: status 1
ZTST_test: test produced standard output:
1c1
< First Second  Third   Fourth
---
> Erste Zweite  Dritte  Vierte
ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:
  copycat <(print First) <(print Zweite)
ZTST_getchunk: read code chunk:
  copycat <(print First) <(print Zweite)
ZTST_test: examining line:
>First
ZTST_getredir: read redir for '>':
First
Zweite
ZTST_test: examining line:

Running test: FDs remain open for external commands called from functions
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.1164, output: /tmp/zsh.ztst.out.1164, error:
/tmp/zsh.ztst.terr.1164
ZTST_execchunk: status 0
ZTST_test: test produced standard output:
First
Zweite
ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:
  catfield2() {
ZTST_getchunk: read code chunk:
  catfield2() {
    local -a args
    args=(${(s.,.)1})
    print $args[1]
    cat $args[2]
    print $args[3]
  }
  catfield2 up,<(print $'\x64'own),sideways
ZTST_test: examining line:
>up
ZTST_getredir: read redir for '>':
up
down
sideways
ZTST_test: examining line:

Running test: <(...) when embedded within an argument
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.1164, output: /tmp/zsh.ztst.out.1164, error:
/tmp/zsh.ztst.terr.1164
ZTST_execchunk: status 0
ZTST_test: test produced standard output:
up
down
sideways
ZTST_test: and standard error:

Test successful.
ZTST_test: looking for new test
ZTST_test: examining line:

ZTST_test: examining line:
  outputfield2() {
ZTST_getchunk: read code chunk:
  outputfield2() {
    local -a args
    args=(${(s.,.)1})
    print $args[1]
    echo 'How sweet the moonlight sits upon the bank' >$args[2]
    print $args[3]
  }
  outputfield2 muddy,>(sed -e s/s/th/g >outputfield2.txt),vesture
  # yuk
  while [[ ! -e outputfield2.txt || ! -s outputfield2.txt ]]; do :; done
  cat outputfield2.txt
ZTST_test: examining line:
>muddy
ZTST_getredir: read redir for '>':
muddy
vesture
How thweet the moonlight thitth upon the bank
ZTST_test: examining line:

Running test: >(...) when embedded within an argument
ZTST_test: expecting status: 0
Input: /tmp/zsh.ztst.in.1164, output: /tmp/zsh.ztst.out.1164, error:
/tmp/zsh.ztst.terr.1164
make: *** [check] Interrupt


The last time I built the shell on this platform, 2008-10-12, this test passed.

Please let me know if you need any further diagnosis.

Regards,
  Vin

