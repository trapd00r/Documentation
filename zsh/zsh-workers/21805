From zsh-workers-return-21805-mason-zsh=primenet.com.au@sunsite.dk Sun Oct 02 23:00:18 2005
Return-Path: <zsh-workers-return-21805-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 9115 invoked from network); 2 Oct 2005 23:00:14 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 2 Oct 2005 23:00:14 -0000
Received: (qmail 31262 invoked from network); 2 Oct 2005 23:00:07 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 2 Oct 2005 23:00:07 -0000
Received: (qmail 4283 invoked by alias); 2 Oct 2005 23:00:04 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 21805
Received: (qmail 4267 invoked from network); 2 Oct 2005 23:00:02 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 2 Oct 2005 23:00:02 -0000
Received: (qmail 30674 invoked from network); 2 Oct 2005 23:00:02 -0000
Received: from ns9.hostinglmi.net (213.194.149.146)
  by a.mx.sunsite.dk with SMTP; 2 Oct 2005 23:00:00 -0000
Received: from 212.red-80-35-44.staticip.rima-tde.net ([80.35.44.212] helo=localhost)
	by ns9.hostinglmi.net with esmtpa (Exim 4.52)
	id 1EMCoJ-00048J-2v; Mon, 03 Oct 2005 00:59:59 +0200
Date: Mon, 3 Oct 2005 01:00:27 +0200
From: DervishD <zsh@dervishd.net>
To: Bart Schaefer <schaefer@brasslantern.com>
Cc: zsh-workers@sunsite.dk
Subject: Re: Exception handling and "trap" vs. TRAPNAL()
Message-ID: <20051002230027.GA194@DervishD>
Mail-Followup-To: Bart Schaefer <schaefer@brasslantern.com>,
	zsh-workers@sunsite.dk
References: <20050929200741.GA1156@DervishD> <20050930124130.45eb0463.pws@csr.com> <20051001153756.GA12183@DervishD> <1051001183818.ZM27904@candle.brasslantern.com> <20051001202856.GA134@DervishD> <1051002044052.ZM28373@candle.brasslantern.com> <20051002190940.437F9866F@pwstephenson.fsnet.co.uk> <1051002195518.ZM2163@candle.brasslantern.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <1051002195518.ZM2163@candle.brasslantern.com>
User-Agent: Mutt/1.4.2.1i
Organization: DervishD
X-AntiAbuse: This header was added to track abuse, please include it with any abuse report
X-AntiAbuse: Primary Hostname - ns9.hostinglmi.net
X-AntiAbuse: Original Domain - sunsite.dk
X-AntiAbuse: Originator/Caller UID/GID - [0 0] / [47 12]
X-AntiAbuse: Sender Address Domain - dervishd.net
X-Source: 
X-Source-Args: 
X-Source-Dir: 
X-Spam-Checker-Version: SpamAssassin 3.0.4 (2005-06-05) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham 
	version=3.0.4

    Hi Bart :)

 * Bart Schaefer <schaefer@brasslantern.com> dixit:
> If we want to propagate errors that occur inside traps, and thereby
> make it possible for inline traps to "throw exceptions" in "always"
> blocks, we do this instead (more discussion below patch):
[...]

    I insist: while ZERR may not be the place for throwing exceptions
(I think it's a perfect place, but that's another matter), signals
like SIGTERM, SIGINT, etc. or even SIGALRM, are very good candidates
to do exception handling. The best point about EH is that it allows
to do better error handling and cleanup, and traps are mostly used
exactly for that, so using the two things together is not as weird as
it may look.

    Propagating "errflag" may break current code only if that code is
using an inline trap which "returns" a value and that error value is
ignored on purpose. Weird behaviour, to return a value you are going
to ignore as if it never existed. Moreover, simulating a "return"
from an inline trap is something difficult to do accidentally. It
would require messing with "$?" directly or something like that.

    Of course, there are other code that may break: inline traps
which generate syntax errors (due to "eval" or the like, so the error
cannot be picked up always because it is produced only when the
"eval" parameters are ill formed or something like that) that
previously didn't cause any problem except maybe print an error
message and now will jump into the "always" block. But I don't think
there is much code out there using "always" blocks that can break.

    I cannot think about any other code that may break due to the
last change you're proposing, but anyway your first patch seems
reasonable too: if inline traps cannot throw exceptions, do not let
function traps do it and document the problem (not about exceptions,
but about return values and syntax errors).

    Raúl Núñez de Arenas Coronado

-- 
Linux Registered User 88736 | http://www.dervishd.net
http://www.pleyades.net & http://www.gotesdelluna.net
It's my PC and I'll cry if I want to...

