From zsh-users-return-10244-mason-zsh=primenet.com.au@sunsite.dk Thu May 11 10:00:13 2006
Return-Path: <zsh-users-return-10244-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2244 invoked from network); 11 May 2006 10:00:09 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.1 (2006-03-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00,
	FORGED_RCVD_HELO autolearn=ham version=3.1.1
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 11 May 2006 10:00:09 -0000
Received: (qmail 5045 invoked from network); 11 May 2006 09:59:56 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 11 May 2006 09:59:56 -0000
Received: (qmail 26743 invoked by alias); 11 May 2006 09:59:49 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 10244
Received: (qmail 26734 invoked from network); 11 May 2006 09:59:48 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 11 May 2006 09:59:48 -0000
Received: (qmail 3989 invoked from network); 11 May 2006 09:59:48 -0000
Received: from smtp.eu.citrix.com (195.153.38.115)
  by a.mx.sunsite.dk with SMTP; 11 May 2006 09:59:46 -0000
Received: from lonpexchmx01.citrite.net ([10.30.224.191])
  by SMTP.EU.CITRIX.COM with ESMTP; 11 May 2006 10:59:30 +0100
X-IronPort-AV: i="4.05,113,1146438000"; 
   d="scan'208"; a="5095008:sNHT62235124"
Received: from lonpexch01.citrite.net ([10.30.224.136]) by lonpexchmx01.citrite.net with Microsoft SMTPSVC(6.0.3790.1830);
	 Thu, 11 May 2006 10:59:29 +0100
X-MimeOLE: Produced By Microsoft Exchange V6.5
Content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: quoted-printable
Subject: RE: Parameter expansion flags question
Date: Thu, 11 May 2006 10:59:29 +0100
Message-ID: <DD74FBB8EE28D441903D56487861CD9D09717293@lonpexch01.citrite.net>
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Thread-Topic: Parameter expansion flags question
Thread-Index: AcZ0V0aIxJ4OeQMOS+6h5AnbpczpgAAhfsaQ
From: "John Cooper" <john.cooper@eu.citrix.com>
To: "Bart Schaefer" <schaefer@brasslantern.com>,
	<zsh-users@sunsite.dk>
X-OriginalArrivalTime: 11 May 2006 09:59:29.0809 (UTC) FILETIME=[984A0810:01C674E1]

Bart,

Thanks for the detailed reply - it seems using "read" is the most
straightforward approach. However, in the interests of learning more
about expansions, I've been trying your suggestions and they don't seem
to work as expected.

$ $SITEMGR -i
1:/Citrix/Pres  WI      http://RA.eng.citrite.net/Citrix/Pres
4.5.5.1159      c:\inetpub\wwwroot\Citrix\Pres =20
1:/Citrix/Pres2 WI      http://RA.eng.citrite.net/Citrix/Pres2
4.5.5.1159      c:\inetpub\wwwroot\Citrix\Pres2=20

(not sure if Outlook will wrap the above, but the output is actually 2
lines, each starting "1:/Citrix")

My original function correctly finds the first word of both lines:

$ type delsites2
delsites2 () {
        for site in "${(f)$($SITEMGR -i)}"
        do
                sitepath=3D${${=3Dsite}[1]}=20
                echo "sitepath is $sitepath"
        done
}
$ delsites2
sitepath is 1:/Citrix/Pres
sitepath is 1:/Citrix/Pres2
$

However, when the expansions are combined, it only finds the first word
of the first line:

$ type delsites3
delsites3 () {
        for sitepath in ${${=3D${(f)"$($SITEMGR -i)"}}[1]}
        do
                echo "sitepath is $sitepath"
        done
}
$ delsites3
sitepath is 1:/Citrix/Pres
$

If I add the ":#pattern" operator to the original function, the "for"
loop is still executed once in the case where $SITEMGR produces no
output:

$ type delsites4
delsites4 () {
        for site in "${(f)$($SITEMGR -i):#}"
        do
                sitepath=3D${${=3Dsite}[1]}=20
                echo sitepath is "$sitepath"
        done
}

$ delsites
$ $SITEMGR -i
$
$ delsites4
sitepath is=20
$               =20

One final thing - when I entered the "read" example into the shell as
stated I got syntax errors. These were resolved by using "do" and "done"
instead of braces - is this to be expected?

$ $SITEMGR -i
1:/Citrix/Pres  WI      http://RA.eng.citrite.net/Citrix/Pres
4.5.5.1159      c:\inetpub\wwwroot\Citrix\Pres =20
$ $SITEMGR -i | while read -A site; {
pipe while cursh> echo $site  =20
pipe while cursh> }
pipe while> }
zsh: parse error near `}'
$
$ $SITEMGR -i | while read -A site; do
pipe while> echo $site
pipe while> done
1:/Citrix/Pres WI http://RA.eng.citrite.net/Citrix/Pres 4.5.5.1159
c:inetpubwwwrootCitrixPres=20
$

I'm using zsh 4.2.6 on cygwin/WinXP.

    --- John

-----Original Message-----
From: Bart Schaefer [mailto:schaefer@brasslantern.com]=20
Sent: 10 May 2006 18:28
To: zsh-users@sunsite.dk
Subject: Re: Parameter expansion flags question

On May 10, 10:22am, John Cooper wrote:
}
}	delsites() {
} 	    for site in "${(f)$($SITEMGR -i)}" ; {
} 		sitepath=3D${${=3Dsite}[1]}
} 		[[ -n "$sitepath" ]] && $SITEMGR -r
"WICurrent=3D$sitepath"
} 	    }
} 	}
}=20
} I'm new to the zsh parameter expansion flags, but I've gathered the
} ${(f) will take the command's output a line at a time, and the
${=3Dsite}
} will then split each line into words, allowing me to grab the first
word
} of each line.

Right so far.

} Is there a better (or simpler!) way to do this?

You might consider using the "read" builtin:

    $SITEMGR -i | while read -A site; {
      $SITEMGR -r "WICurrent=3D${site[1]}"
    }

Or:

    $SITEMGR -i | while read sitepath stuff_to_discard; {
      $SITEMGR -r "WICurrent=3D$sitepath"
    }

If you still want to use expansion, you can combine the expansions:

    for sitepath in ${${=3D${(f)"$($SITEMGR -i)"}}[1]}

Be warned, however, that ${=3Dvar} is not guaranteed to produce an =
array;
if any line in the $SITEMGR output has only one word in it, the result
of the above will be the first *character* of the line, not the first
*word*.  The solutions with "read" do not have this problem.

} When the command has no output, the `for' loop is still executed once
} (seemingly because the command is within double-quotes) and is the
} reason for checking that the length of $sitepath is non-zero. Is there
} a way to avoid the loop being entered when the command has no output
} and avoid the need for this check?

Change the expansion to have it discard all empty array elements by
using the ":#pattern" operator with an empty pattern:

    for sitepath in ${${=3D${(f)"$($SITEMGR -i)":#}}[1]}

} (btw, is there a good set of examples of using parameter expansion
} flags? The zsh guide seemed a bit sparse in this area)

Other than in the archives of this list, not that I'm aware of.  Did
you look around on zshwiki.org?

