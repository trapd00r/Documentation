From zsh-workers-return-25232-mason-zsh=primenet.com.au@sunsite.dk Sat Jun 21 21:50:01 2008
Return-Path: <zsh-workers-return-25232-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 555 invoked from network); 21 Jun 2008 21:49:49 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 21 Jun 2008 21:49:49 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 14780 invoked from network); 21 Jun 2008 21:49:44 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 21 Jun 2008 21:49:44 -0000
Received: (qmail 28728 invoked by alias); 21 Jun 2008 21:49:41 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 25232
Received: (qmail 28716 invoked from network); 21 Jun 2008 21:49:41 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 21 Jun 2008 21:49:41 -0000
Received: from mtaout02-winn.ispmail.ntl.com (mtaout02-winn.ispmail.ntl.com [81.103.221.48])
	by bifrost.dotsrc.org (Postfix) with ESMTP id C3C238084FA0
	for <zsh-workers@sunsite.dk>; Sat, 21 Jun 2008 23:49:27 +0200 (CEST)
Received: from aamtaout01-winn.ispmail.ntl.com ([81.103.221.35])
          by mtaout02-winn.ispmail.ntl.com with ESMTP
          id <20080621215406.PQIS7070.mtaout02-winn.ispmail.ntl.com@aamtaout01-winn.ispmail.ntl.com>
          for <zsh-workers@sunsite.dk>; Sat, 21 Jun 2008 22:54:06 +0100
Received: from pws-pc.ntlworld.com ([81.107.40.67])
          by aamtaout01-winn.ispmail.ntl.com with ESMTP
          id <20080621215519.OJGM16854.aamtaout01-winn.ispmail.ntl.com@pws-pc.ntlworld.com>
          for <zsh-workers@sunsite.dk>; Sat, 21 Jun 2008 22:55:19 +0100
Received: from pws-pc (pws-pc [127.0.0.1])
	by pws-pc.ntlworld.com (8.14.2/8.14.2) with ESMTP id m5LLn8Nx005122
	for <zsh-workers@sunsite.dk>; Sat, 21 Jun 2008 22:49:09 +0100
Message-Id: <200806212149.m5LLn8Nx005122@pws-pc.ntlworld.com>
From: Peter Stephenson <p.w.stephenson@ntlworld.com>
To: zsh-workers@sunsite.dk
Subject: Re: scope of variables in loops
In-Reply-To: Message from "Joey Mingrone" <joey@mingrone.org>
   of "Sat, 21 Jun 2008 17:57:55 -0300." <f5b896260806211357r6d95026exf47a4a8ba68ec074@mail.gmail.com>
Date: Sat, 21 Jun 2008 22:49:08 +0100
X-Virus-Scanned: ClamAV 0.92.1/7529/Sat Jun 21 21:13:43 2008 on bifrost
X-Virus-Status: Clean

"Joey Mingrone" wrote:
> Unlike bash, parameters that are set in loops on the command line
> stick around.  It's not a big deal once you figure out what's going
> on, but the code below can cause some head-scratching.  Is this
> intended?  Is it controllable (is there a way to turn it off)?
>
> zsh 4.3.6 (i386-portbld-freebsd7.0)% for ((x=0; x<=10; x++)) do echo "$x"; do
...
> zsh 4.3.6 (i386-portbld-freebsd7.0)% for x in `ls *`; do echo $x; done
> zsh: bad floating point constant

There's nothing to turn off, as such, but as you say it does cause
head-scratching.

If you haven't declared a variable, and its first use is in a
mathematical context, then it's implicitly type, in this case as an
integer, as if you'd typed "integer x" before the first loop.  (Yes,
even despite the message about the bad floating point constant: that's
probably because it encountered a dot when looking at what it thought
was a formula, even before it tried to turn the formula into an
integer.)  So when you try to use it as a scalar the shell tells you
about it.

You can avoid this by explicitly typing the x as a scalar with "typeset
x" before the first use.  If it's become an integer you can use "typeset
+i x": that's a better bet than just unsetting it, because it means it
won't implicitly become an integer again.  It'll still be able to hold
integers, except it'll hold them as the string you see rather than in
the internal integer format.

By the way, you should write "for x in *", not "for x in `ls *`", unless
you're really relying on obscure effects such as getting names of
directories with a trailing colon together with the directory contents
or having the file names split on spaces.  (Presumably you're not
expecting such problems but it's a good habit to get into anyway.)
There are probably better ways of getting any special effects in zsh,
too.

-- 
Peter Stephenson <p.w.stephenson@ntlworld.com>
Web page now at http://homepage.ntlworld.com/p.w.stephenson/

