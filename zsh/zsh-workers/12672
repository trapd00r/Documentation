From zsh-workers-return-12672-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Aug 17 17:55:34 2000
Return-Path: <zsh-workers-return-12672-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 25468 invoked from network); 17 Aug 2000 17:55:32 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 17 Aug 2000 17:55:32 -0000
Received: (qmail 21000 invoked by alias); 17 Aug 2000 17:54:57 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 12672
Received: (qmail 20993 invoked from network); 17 Aug 2000 17:54:56 -0000
Date: Thu, 17 Aug 2000 12:54:41 -0500
From: Dan Nelson <dnelson@emsphone.com>
To: zsh-workers@sunsite.auc.dk
Subject: 3.0.8 math bug?
Message-ID: <20000817125441.A20946@dan.emsphone.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
User-Agent: Mutt/1.3.7i
X-OS: FreeBSD 5.0-CURRENT


Why does evaluating a non-numeric variable cause 3.0.8 to consume all
available RAM and then exit to the parent shell?  At least 3.1.9
doesn't completely exit, but I would expect invalid variables to
evaluate to 0 just like unset variables do.

(dan@dan)/tmp> zsh -f
dan% echo $ZSH_VERSION
3.0.8
dan% a=a
dan% (( a ))
zsh: fatal error: out of memory
(dan@dan)/tmp>

(dan@dan)/tmp> zsh31 -f
dan% echo $ZSH_VERSION
3.1.9
dan% a=a
dan% (( a ))
zsh: math recursion limit exceeded
dan%



-- 
	Dan Nelson
	dnelson@emsphone.com

