From zsh-workers-return-5382-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Feb 15 09:53:34 1999
Return-Path: <zsh-workers-return-5382-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16815 invoked from network); 15 Feb 1999 09:53:32 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 15 Feb 1999 09:53:32 -0000
Received: (qmail 58 invoked by alias); 15 Feb 1999 09:52:41 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 5382
Received: (qmail 51 invoked from network); 15 Feb 1999 09:52:37 -0000
Date: Mon, 15 Feb 1999 10:51:56 +0100 (MET)
Message-Id: <199902150951.KAA23758@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: "Bart Schaefer"'s message of Sun, 14 Feb 1999 13:26:09 -0800
Subject: Re: Completion suggestions


Bart Schaefer wrote:

> ...
>
> You first have to figure out that the words are within quotes; see the
> multiline remarks above.  Tcsh doesn't have to deal with that, because
> csh quotes may not be unmatched across multiple input lines.

I'm thinking about making the CONTEXT parameter in the new style
completion stuff an array giving mor information. It could then
contain information about the quoting zsh thinks is currently
used. However this would not solve `ls "a f<TAB>' since that would
require a change in the completion parsing, as Bart already said. To
model it after tcsh we would have to make the code take the whole
quoted (or half-quoted) string as the string to work upon, and add the 
closing quote automatically. But personally I don't like this, maybe
it's just a question of getting used to the way zsh works?
Also, I'm not too sure about adding a new `-x' test/modifier for this -
can one be sure to find all the places where one wants the whole
quoted string instead of only a part of it. And this would make
compctl's even more complicated. And finding out what to do in quoted
strings that contain quotes and backslashes and quoted quotes and so
on may get pretty complicated.

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

