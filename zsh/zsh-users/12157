From zsh-users-return-12157-mason-zsh=primenet.com.au@sunsite.dk Thu Nov 01 01:42:28 2007
Return-Path: <zsh-users-return-12157-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 5956 invoked from network); 1 Nov 2007 01:42:19 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.3 (2007-08-08) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.1 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.3
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 1 Nov 2007 01:42:19 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 58270 invoked from network); 1 Nov 2007 01:42:10 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 1 Nov 2007 01:42:10 -0000
Received: (qmail 12190 invoked by alias); 1 Nov 2007 01:42:02 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12157
Received: (qmail 12166 invoked from network); 1 Nov 2007 01:42:01 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 1 Nov 2007 01:42:01 -0000
Received: (qmail 57177 invoked from network); 1 Nov 2007 01:42:01 -0000
Received: from rv-out-0910.google.com (209.85.198.187)
  by a.mx.sunsite.dk with SMTP; 1 Nov 2007 01:41:54 -0000
Received: by rv-out-0910.google.com with SMTP id b22so250367rvf
        for <zsh-users@sunsite.dk>; Wed, 31 Oct 2007 18:41:53 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        bh=RzkqmYOjCkLR0fI7b6/NMFih207YN6UYx/zrAYBuVsQ=;
        b=gWHsE9dcppnyEyIpqBjSkheKddrygjSdD1f8xtlKKNwCWTevgph7+rGiS1ggiCYFmdVITiFKi1Mc22y6x5zxYvt/Cl8n0X7kxc2zDGhsPWPV4gWHR7247LfuO6RnmJL2zynwYBCDOazMw3230KGkdX1FMXaMeKE4Gpg1Kd6q1fc=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=FpFqsc9+YuoY6uVAlaN/6cT8FE23Qzu4BAsf8r3WKqMul+wMjLALJKkeoP9jYNgsy8Ccs3MSYYVW6P/aL5xGTuYijpWtRT54FP6qs1zAbFsgOQPHE8+5BhabVmqG6U7aGLfrC/RRmnsKCcX2Edq8HuS39IyiRfxLk6fejAOqLM4=
Received: by 10.141.4.3 with SMTP id g3mr20227rvi.1193881313041;
        Wed, 31 Oct 2007 18:41:53 -0700 (PDT)
Received: by 10.141.29.2 with HTTP; Wed, 31 Oct 2007 18:41:53 -0700 (PDT)
Message-ID: <d6d6637f0710311841q12f8e2bem1ca8ee166289dfe0@mail.gmail.com>
Date: Wed, 31 Oct 2007 21:41:53 -0400
From: "Christopher Browne" <cbbrowne@gmail.com>
To: "sam reckoner" <sam.reckoner@gmail.com>
Subject: Re: copying a million small files between disks?
Cc: zsh-users@sunsite.dk
In-Reply-To: <6a42eec70710311440u52556985wda68ce326f4a0417@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <6a42eec70710311440u52556985wda68ce326f4a0417@mail.gmail.com>

On 10/31/07, sam reckoner <sam.reckoner@gmail.com> wrote:
> I'm not exaggerating. I have over one million small files that like to
> move between disks. The problem is that even getting a directory
> listing takes forever.
>
> Is there a best practice for this?
>
> I don't really need the directory listing, I just need to move all the
> files. I have been using rsync, but that takes a very long time to
> generate the list of files to be moved.
>
> Any alternatives?

Yeah, I'd use find.

The fundamental problem with ls, which you're clearly running into, is
that when there are a million files, not only do you:

a) Have to read the directory entries, but

b) They will all have to be read into memory (in some form of array), and

c) Then they get sorted (presumably generating a *second* array,
though possibly not).

You're getting your lunch eaten by b) and c).

You might try:
   "find /path/where/all/the/files/are | xargs cp -I {}
/path/that/is/destination"

That will skip steps b and c.
-- 
http://linuxfinances.info/info/linuxdistributions.html
"...  memory leaks  are  quite acceptable  in  many applications  ..."
(Bjarne Stroustrup, The Design and Evolution of C++, page 220)

