From zsh-users-return-8702-mason-zsh=primenet.com.au@sunsite.dk Tue Apr 19 15:26:28 2005
Return-Path: <zsh-users-return-8702-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 27928 invoked from network); 19 Apr 2005 15:26:27 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 19 Apr 2005 15:26:27 -0000
Received: (qmail 95971 invoked from network); 19 Apr 2005 15:26:20 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 19 Apr 2005 15:26:20 -0000
Received: (qmail 16604 invoked by alias); 19 Apr 2005 15:26:11 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 8702
Received: (qmail 16590 invoked from network); 19 Apr 2005 15:26:10 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 19 Apr 2005 15:26:10 -0000
Received: (qmail 94750 invoked from network); 19 Apr 2005 15:26:10 -0000
Received: from vms042pub.verizon.net (206.46.252.42)
  by a.mx.sunsite.dk with SMTP; 19 Apr 2005 15:25:59 -0000
Received: from candle.brasslantern.com ([4.11.1.68])
 by vms042.mailsrvcs.net (Sun Java System Messaging Server 6.2 HotFix 0.04
 (built Dec 24 2004)) with ESMTPA id <0IF700KFS9J9SB85@vms042.mailsrvcs.net> for
 zsh-users@sunsite.dk; Tue, 19 Apr 2005 10:25:58 -0500 (CDT)
Received: from candle.brasslantern.com (IDENT:schaefer@localhost [127.0.0.1])
	by candle.brasslantern.com (8.12.11/8.12.11) with ESMTP id j3JFPseW031926	for
 <zsh-users@sunsite.dk>; Tue, 19 Apr 2005 08:25:55 -0700
Received: (from schaefer@localhost)	by candle.brasslantern.com
 (8.12.11/8.12.11/Submit) id j3JFPsAa031925	for zsh-users@sunsite.dk; Tue,
 19 Apr 2005 08:25:54 -0700
Date: Tue, 19 Apr 2005 15:25:54 +0000
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: globbing with interposition
In-reply-to: <20050419072115.GA15936@fruitcom.com>
In-reply-to: <fb6be96e05041901223a87e20e@mail.gmail.com>
To: Zsh Users <zsh-users@sunsite.dk>
Message-id: <1050419152554.ZM31922@candle.brasslantern.com>
MIME-version: 1.0
X-Mailer: Z-Mail (5.0.0 30July97)
Content-type: text/plain; charset=iso-8859-1
Content-transfer-encoding: quoted-printable
References: <20050419072115.GA15936@fruitcom.com>
	<fb6be96e05041901223a87e20e@mail.gmail.com>
Comments: In reply to Eric Smith <es@fruitcom.com>
 "globbing with interposition" (Apr 19,  9:21am)
Comments: In reply to J <jean.chalard@gmail.com>
 "Re: globbing with interposition" (Apr 19, 10:22am)
X-Spam-Checker-Version: SpamAssassin 3.0.2 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=6.0 tests=AWL,BAYES_00 autolearn=ham 
	version=3.0.2
X-Spam-Hits: -2.6

On Apr 19,  9:21am, Eric Smith wrote:
}
} mutt eric -a fotos* -s "all images attached" </dev/null

It would be really nice if this worked:

    mutt eric fotos*(e:'reply=3D(-a $REPLY)':) -s "all images attached"

However, there's no way tell zsh NOT to sort the results of globbing.
I mention this so that I can propose a new key for the 'o' and 'O' glob
qualifiers, a key meaning "don't sort this glob at all."

For bizarre reasons I don't immediately understand, the following does
what you want, but probably isn't guaranteed to keep working in future
releases:

    mutt eric fotos*(e:'reply=3D($REPLY -a)':od) -s "all images attached"=


(and no, using Od instead of od doesn't change anything).  That is, the
'od' qualifier prevents zsh from sorting the full list, but for some
reason zsh reverses the $reply array; e.g.:

    touch frobnitz flobozz
    print f*z(e:'reply=3D(1 2 $REPLY 3 4)':od)

will output something like

    4 3 flobozz 2 1 4 3 frobnitz 2 1

This happens for 'oa', 'oc', and 'om' as well.

On Apr 19, 10:22am, J wrote:
} Subject: Re: globbing with interposition
}
} a=3D(fotos*) mutt eric '-a '${^a} -s "all images attached" </dev/null

That doesn't work because the order of assignment and expansion is not
what you expect.  That is, the ${^a} is expanded at parse time, but
the assignment prefixes are handled at execute time.  You'd have to do

a=3D(fotos*) eval 'mutt eric "-a "${^a} -s "all images attached" </dev/nu=
ll'

but that suffers from the same problems as this:

} mutt eric '-a '${^$(print *)} -s "all images attached" </dev/null

That one fails if there are spaces in any of the file names, and on
top of that the space character after the -a is quoted, so mutt will
see '-a somefile' all as one string, not as '-a' and 'somefile'.

The only sure-fire way I can see to do it (without a loop similar to
Ra=FAl's first suggestion) is like this:

    a=3D()
    : fotos*(e:'a+=3D(-a $REPLY)':)
    mutt eric $a -s "all images attached" </dev/null

