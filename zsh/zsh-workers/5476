From zsh-workers-return-5476-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Feb 22 15:36:49 1999
Return-Path: <zsh-workers-return-5476-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 26562 invoked from network); 22 Feb 1999 15:36:48 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 22 Feb 1999 15:36:48 -0000
Received: (qmail 28850 invoked by alias); 22 Feb 1999 15:36:23 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 5476
Received: (qmail 28841 invoked from network); 22 Feb 1999 15:36:21 -0000
Date: Mon, 22 Feb 1999 16:34:27 +0100 (MET)
Message-Id: <199902221534.QAA22441@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
Subject: Fix for _path_files


I just noticed that the quoting of the line-string in _path_files made 
completion of strings starting with `~' fail. The tilde was quoted,
too (of course). The second hunk puts a `$line' in the place where it
is needed, I guess that this stopped working when I changed the names
of the locals.

Bye
 Sven

--- of/Completion/_path_files	Mon Feb 22 12:01:45 1999
+++ Functions/Completion/_path_files	Mon Feb 22 16:31:41 1999
@@ -56,6 +56,11 @@
 
 str="${PREFIX:q}*${SUFFIX:q}"
 
+# If the string began with a `~', the quoting turned this into `\~',
+# remove the slash.
+
+[[ "$str" = \\\~* ]] && str="$str[2,-1]"
+
 # We will first try normal completion called with `complist', but only if we
 # weren't given a `-F' option.
 
@@ -109,7 +114,7 @@
   # prefix path by setting `prepaths'.
   
   linepath="${str%%/*}/"
-  eval realpath\=path
+  eval realpath\=$linepath
   str="${str#*/}"
   donepath=''
   prepaths=( '' )

--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

