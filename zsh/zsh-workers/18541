From zsh-workers-return-18541-mason-zsh=primenet.com.au@sunsite.dk Thu May 15 09:49:19 2003
Return-Path: <zsh-workers-return-18541-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 14700 invoked from network); 15 May 2003 09:49:18 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 15 May 2003 09:49:18 -0000
Received: (qmail 4757 invoked by alias); 15 May 2003 09:49:12 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 18541
Received: (qmail 4745 invoked from network); 15 May 2003 09:49:12 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 15 May 2003 09:49:12 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [62.189.183.235] by sunsite.dk (MessageWall 1.0.8) with SMTP; 15 May 2003 9:49:12 -0000
Received: from exchange01.csr.com (unverified) by 
 (Content Technologies SMTPRS 4.2.1) with ESMTP id <T6237e1e02bc0a88d01138@> for <zsh-workers@sunsite.dk>;
 Thu, 15 May 2003 10:59:04 +0100
Received: from csr.com (tinky-winky.csr.com [192.168.144.127]) by exchange01.csr.com with SMTP (Microsoft Exchange Internet Mail Service Version 5.5.2650.21)
	id JWCPZZ19; Thu, 15 May 2003 10:47:00 +0100
To: zsh-workers@sunsite.dk
Subject: Re: Bug#190948: Violation against The Single UNIX ? Specification, Version 2 
In-reply-to: "Zefram"'s message of "Thu, 15 May 2003 10:37:15 BST."
             <20030515093715.GC16886@fysh.org> 
Date: Thu, 15 May 2003 10:49:09 +0100
Message-ID: <28272.1052992149@csr.com>
From: Peter Stephenson <pws@csr.com>

Zefram wrote:
> Peter Stephenson wrote:
> >/* ZLE entry point pointers.  They are defined here because the initial *
> > * values depend on whether ZLE is linked in or not -- if it is, we     *
> > * avoid wasting space with the fallback functions.  No other source    *
> > * file needs to know which modules are linked in.                      */
> 
> I wrote that comment.  The intent was as described, and I have a mental
> image of the fallback functions being in an appropriate conditional
> section.

The autoload version of zleread (now) sets the pointer to the fallback
version in case it fails.  So the only gain would seem to be you can
eliminate the autoload versions if zle is already linked.  However, the
standard mechanism at the moment is to use the dynamic link routines
even if zle is built into the shell (or at least zmodload acts the same
however the library is linked, I haven't checked further).  Plus if zle
is built into the shell removing the autoload functions to save space is
rather laughable.  So I don't think I'll change anything, except maybe
update the comment.

OK, it's back to Bluetooth scatter mode...

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR Ltd., Science Park, Milton Road,
Cambridge, CB4 0WH, UK                          Tel: +44 (0)1223 692070


**********************************************************************
The information transmitted is intended only for the person or
entity to which it is addressed and may contain confidential 
and/or privileged material. 
Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by 
persons or entities other than the intended recipient is 
prohibited.  
If you received this in error, please contact the sender and 
delete the material from any computer.
**********************************************************************

