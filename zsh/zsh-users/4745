From zsh-users-return-4745-mason-zsh=primenet.com.au@sunsite.dk Sat Mar 09 08:19:18 2002
Return-Path: <zsh-users-return-4745-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 18570 invoked from network); 9 Mar 2002 08:19:17 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 9 Mar 2002 08:19:17 -0000
Received: (qmail 20279 invoked by alias); 9 Mar 2002 08:19:04 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 4745
Received: (qmail 20266 invoked from network); 9 Mar 2002 08:19:03 -0000
Date: Sat, 9 Mar 2002 00:29:33 -0800
From: John Beppu <beppu@ax9.org>
To: zsh-users@sunsite.dk
Subject: nesting data structures
Message-ID: <20020309082933.GA14730@Ax9.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.3.27i


I've been playing w/ zsh, and I was wondering
whether zsh allowed you to arbitrarily nest
data structures.  For example, is it possible
to have an array of hashes of arrays?  If so,
I can't figure out the syntax for it.

Any help is appreciated.  

Thanks in advance.

[jsb]


-- 
package wuv'apqvjgt;($_=join('',(*PgtnHcemgt))) # print map "beppu\@$_\n", qw(
=~ s/([HaP])(?!e)/ \U>$1/g;s/^.|:| (?=A)|>//g;y # cpan.org  lbox.org  binq.org
/c-z/a-u/;print"J$_\n";#$^%$^X@.^ <!-- japh --> # oss.lineo.com codepoet.org);

