From zsh-workers-return-15027-mason-zsh=primenet.com.au@sunsite.dk Thu Jun 21 10:36:16 2001
Return-Path: <zsh-workers-return-15027-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 29825 invoked from network); 21 Jun 2001 10:36:15 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 21 Jun 2001 10:36:15 -0000
Received: (qmail 6271 invoked by alias); 21 Jun 2001 10:35:35 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 15027
Received: (qmail 6250 invoked from network); 21 Jun 2001 10:35:34 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1010621103439.ZM9814@candle.brasslantern.com>
Date: Thu, 21 Jun 2001 10:34:39 +0000
In-Reply-To: <Tc0a88d0154470c687b@mailsweeper01.cambridgesiliconradio.com>
Comments: In reply to Peter Stephenson <pws@csr.com>
        "Re: PATCH: 4.1: multi-parameter for loop" (Jun 21, 10:52am)
References: <Tc0a88d0154470c687b@mailsweeper01.cambridgesiliconradio.com>
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: PATCH (redux): POSIX `for' syntax
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Jun 21, 10:52am, Peter Stephenson wrote:
} Subject: Re: PATCH: 4.1: multi-parameter for loop
}
} > I guess, Bart suggestion (use foreach) is better. And more Perlish :-)
} 
} I'm not so convinced, since `for' and `foreach' currently do the same
} thing, and I don't really like dividing the syntax to make people use the
} non-standard variant just for one use.  foreach is automatically handled at
} the moment, as well as for, by the way.

Hrm.  The patch I just sent makes

	for x
	(a b c)

behave as `for x (a b c)' used to, but

	foreach x
	(a b c)

is taken as a short-loop to run the command "a b c" in a subshell once for
each positional parameter.  I think they should both behave that way; so
the change to parse.c has to be fractionally more complicated.

This goes on top of the last one.

--- zsh-forge/current/Src/parse.c	Thu Jun 21 03:06:36 2001
+++ zsh-4.0/Src/parse.c	Thu Jun 21 03:31:04 2001
@@ -903,13 +903,15 @@
 	yylex();
 	type = WC_FOR_COND;
     } else {
+	int posix_in;
 	infor = 0;
 	if (tok != STRING || !isident(tokstr))
 	    YYERRORV(oecused);
 	ecstr(tokstr);
 	incmdpos = 1;
 	yylex();
-	while (isnewlin && !csh)
+	posix_in = isnewlin;
+	while (isnewlin)
 	  yylex();
 	if (tok == STRING && !strcmp(tokstr, "in")) {
 	    int np, n;
@@ -922,7 +924,7 @@
 		YYERRORV(oecused);
 	    ecbuf[np] = n;
 	    type = (sel ? WC_SELECT_LIST : WC_FOR_LIST);
-	} else if (tok == INPAR) {
+	} else if (!posix_in && tok == INPAR) {
 	    int np, n;
 
 	    incmdpos = 0;

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

