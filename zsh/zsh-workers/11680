From zsh-workers-return-11680-mason-zsh=primenet.com.au@sunsite.auc.dk Wed May 31 06:12:38 2000
Return-Path: <zsh-workers-return-11680-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 8925 invoked from network); 31 May 2000 06:12:37 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 31 May 2000 06:12:37 -0000
Received: (qmail 8205 invoked by alias); 31 May 2000 06:12:29 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 11680
Received: (qmail 8180 invoked from network); 31 May 2000 06:12:28 -0000
Date: Tue, 30 May 2000 23:12:25 -0700 (PDT)
From: Wayne Davison <wayne@clari.net>
To: Zsh Workers <zsh-workers@sunsite.auc.dk>
Subject: Re: PATCH: fix for $var[1,0] expansion
In-Reply-To: <Pine.GSO.4.21.0005302220580.10370-100000@house.clari.net>
Message-ID: <Pine.GSO.4.21.0005302254050.10370-100000@house.clari.net>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

One thing I just noticed is that the two "subscript too small/big"
error messages have never output the correct array value for one-
relative arrays.  My just-released patch accidentally split the
difference so that it was only half right in 1-relative mode, but
also half right in ksh (0-relative) mode.  This patch should fix it
so that it works right all the time.

Index: params.c
@@ -1312,13 +1312,13 @@
     if (v->start > MAX_ARRLEN ||
 	v->start < -MAX_ARRLEN) {
 	zerr("subscript too %s: %d", (v->start < 0) ? "small" : "big",
-	     v->start);
+	     v->start + !isset(KSHARRAYS));
 	return NULL;
     }
     if (v->start + v->len > MAX_ARRLEN ||
 	v->start + v->len < -MAX_ARRLEN) {
 	zerr("subscript too %s: %d", (v->len < 0) ? "small" : "big",
-	     v->start + v->len);
+	     v->start + v->len - !!isset(KSHARRAYS));
 	return NULL;
     }
     return v;

..wayne..

