From zsh-workers-request@math.gatech.edu  Thu May 25 18:21:41 1995
Received: from gatech.edu (gatech.edu [130.207.244.244]) by werple.mira.net.au (8.6.10/8.6.9) with SMTP id SAA27278 for <mason@werple.mira.net.au>; Thu, 25 May 1995 18:21:36 +1000
Received: from math (math.skiles.gatech.edu) by gatech.edu with SMTP id AA04161
  (5.65c/Gatech-10.0-IDA for <mason@werple.mira.net.au>); Thu, 25 May 1995 04:12:15 -0400
Received: by math (5.x/SMI-SVR4)
	id AA20915; Thu, 25 May 1995 04:09:12 -0400
Resent-Date: Thu, 25 May 1995 09:09:45 +0100 (BST)
Old-Return-Path: <zefram@dcs.warwick.ac.uk>
From: Zefram <A.Main@dcs.warwick.ac.uk>
Message-Id: <9413.199505250809@stone.dcs.warwick.ac.uk>
Subject: Redirection bug -- fixed!
To: zsh-workers@math.gatech.edu (Z Shell workers mailing list)
Date: Thu, 25 May 1995 09:09:45 +0100 (BST)
X-Stardate: [-31]5726.70
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-Id: <"GeJJU.0.j65.di3nl"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/31
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

-----BEGIN PGP SIGNED MESSAGE-----

I've fixed the redirection bug.  The problem is that subsh_close is set up in
exec.c to indicate which file descriptor a subshell should close.  In some
cases, such as when "true | true" is being executed, this cleanup is never
needed, so it is not done.  The variable remains set, however, and the next
time a shell function is executed the fd is refers to is closed.  The fd had
already been closed, without a reference to subsh_close, and without resetting
subsh_close to -1 -- and then that fd was reused for redirection.  The result
is that the saved stream gets rudely closed, the redup() after the redirection
fails, and the redirection is effectively permanent.

The fix is to reset subsh_close to -1 when the fd it refers to is closed.
That's a one-line addition to exec.c.  The patch below also adds some "can't
happen" error checking to movefd() and redup(), that is triggered by the bug.

 -zefram

      *** Src/exec.c.old	Thu May 25 05:23:19 1995
      --- Src/exec.c	Thu May 25 08:51:54 1995
      ***************
      *** 765,770 ****
      --- 765,771 ----
        	    execpline2(pline->right, how, pipes[0], output, last1);
        	    list_pipe = old_list_pipe;
        	    close(pipes[0]);
      + 	    subsh_close = -1;
        	}
            }
        
      *** Src/utils.c.old	Thu May 25 05:47:47 1995
      --- Src/utils.c	Thu May 25 08:57:21 1995
      ***************
      *** 1005,1011 ****
            if ((fe = dup(fd)) < 10)
        	fe = movefd(fe);
        #endif
      !     close(fd);
            return fe;
        }
        
      --- 1005,1014 ----
            if ((fe = dup(fd)) < 10)
        	fe = movefd(fe);
        #endif
      !     if (close(fd) == -1) {
      ! 	zerr("internal fd mixup!", NULL, 0);
      ! 	exit(13);
      !     }
            return fe;
        }
        
      ***************
      *** 1017,1023 ****
        {
            if (x != y) {
        	dup2(x, y);
      ! 	close(x);
            }
        }
        
      --- 1020,1029 ----
        {
            if (x != y) {
        	dup2(x, y);
      ! 	if (close(x) == -1) {
      ! 	    zerr("internal fd mixup!", NULL, 0);
      ! 	    exit(13);
      ! 	}
            }
        }
        

-----BEGIN PGP SIGNATURE-----
Version: 2.6.i

iQBVAgUBL8Q7MmWJ8JfKi+e9AQG1RwH/YHmSu3sSsqoLdmo+AnltRf4lnm+8cZdu
LiOs4Bg1odcDTSqOO1QPNG/CBcaXgl1YzFlBcwxt5E5zJRpyJPQeqQ==
=fBVS
-----END PGP SIGNATURE-----

