From zsh-users-return-13140-mason-zsh=primenet.com.au@sunsite.dk Thu Aug 14 19:03:40 2008
Return-Path: <zsh-users-return-13140-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1467 invoked from network); 14 Aug 2008 19:03:38 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00,HTML_MESSAGE
	autolearn=ham version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 14 Aug 2008 19:03:38 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 12210 invoked from network); 14 Aug 2008 19:03:17 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 14 Aug 2008 19:03:17 -0000
Received: (qmail 20216 invoked by alias); 14 Aug 2008 19:02:40 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13140
Received: (qmail 20191 invoked from network); 14 Aug 2008 19:02:36 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 14 Aug 2008 19:02:36 -0000
Received: from asmtpout022.mac.com (asmtpout022.mac.com [17.148.16.97])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 6968E806FC94
	for <zsh-users@sunsite.dk>; Thu, 14 Aug 2008 21:02:31 +0200 (CEST)
MIME-version: 1.0
Content-type: multipart/alternative;
 boundary="Boundary_(ID_e4BhnHeMUHJsmPuFsTt5lg)"
Received: from macmini.hfriedman.rdsl.lmi.net ([66.117.137.114])
 by asmtp022.mac.com
 (Sun Java(tm) System Messaging Server 6.3-6.03 (built Mar 14 2008; 32bit))
 with ESMTPA id <0K5L00GB2U7JHCL5@asmtp022.mac.com> for zsh-users@sunsite.dk;
 Thu, 14 Aug 2008 12:02:09 -0700 (PDT)
Cc: Richard Hartmann <richih.mailinglist@gmail.com>,
 Dan Nelson <dnelson@allantgroup.com>, Aaron Davies <aaron.davies@gmail.com>,
 "Benjamin R. Haskell" <zsh@benizi.com>, Zsh Users <zsh-users@sunsite.dk>
Message-id: <BEB7DDC0-C189-4BCE-9B1A-C79F85C4E15B@mac.com>
From: "Eric D. Friedman" <eric_friedman@mac.com>
To: Phil Pennock <zsh-workers+phil.pennock@spodhuis.org>
In-reply-to: <20080814183726.GA2407@redoubt.spodhuis.org>
Subject: Re: Multi-Minute Startup?
Date: Thu, 14 Aug 2008 12:02:07 -0700
References: <alpine.LNX.1.10.0808070327310.26055@elation.Princeton.EDU>
 <c4e763ac0808070152k2846913dn4b637fe9ea275ef2@mail.gmail.com>
 <alpine.LNX.1.10.0808070509320.26055@elation.Princeton.EDU>
 <c4e763ac0808071832j6f7393fay158c7a2485ca41c9@mail.gmail.com>
 <20080808025823.GB68181@dan.emsphone.com>
 <c4e763ac0808072340l398c5209o1cd6ccd77ec08a7f@mail.gmail.com>
 <alpine.LNX.1.10.0808081201180.26055@elation.Princeton.EDU>
 <c4e763ac0808110248g7dedabb9kbe6af57fcb0b8d68@mail.gmail.com>
 <20080811152909.GA61872@dan.emsphone.com>
 <2d460de70808140608t7cc8ca48v4117feb57c97ca3b@mail.gmail.com>
 <20080814183726.GA2407@redoubt.spodhuis.org>
X-Mailer: Apple Mail (2.928.1)
X-Virus-Scanned: ClamAV 0.92.1/8038/Thu Aug 14 17:43:34 2008 on bifrost
X-Virus-Status: Clean


--Boundary_(ID_e4BhnHeMUHJsmPuFsTt5lg)
Content-type: text/plain; charset=US-ASCII; format=flowed; delsp=yes
Content-transfer-encoding: 7BIT

Using a prime number to size a hashtable is a way of getting a good  
distribution across buckets in the table if one is using division  
(modulo) by the table size to identify the bucket to use for some  
key.  You can get a refresher in Knuth v3, p. 515-516.

Another, faster approach that you will also see a lot of these days  
(the java hashtables use this one as of a few releases back), is to  
set hashtable sizes to one-less-than-some-power-of two. You then  
assign keys to buckets by doing a bitwise and of the key and that  
size.  This saves the time involved in doing division (still very  
expensive, even on modern processors) and also removes the need to  
find a new prime number every time the table grows.

On Aug 14, 2008, at 11:37 AM, Phil Pennock wrote:

> On 2008-08-14 at 15:08 +0200, Richard Hartmann wrote:
>> On Mon, Aug 11, 2008 at 17:29, Dan Nelson <dnelson@allantgroup.com>  
>> wrote:
>>> Raise suggested-size to 1601 (a prime number larger than your  
>>> current
>>> list size with some room to grow).
>>
>> Using a prime hints at an interesting reason. What is it?
>
> General hashing algorithm theory.  I forget the math (if I ever knew
> it); also, there's a lot of heuristics in there ("that seems to work,
> let's go with that").
>
> You tend to not be hashing completely random data and in the absence  
> of
> distribution information about the input data, bucketing into a prime
> number of slots tends to cause the least pain.
>
> You'll find prime number requirements for many hash bucketing schemes.
>
> -Phil, who should have made more effort to stay awake that lecture


--Boundary_(ID_e4BhnHeMUHJsmPuFsTt5lg)
Content-type: text/html; charset=US-ASCII
Content-transfer-encoding: quoted-printable

<html><body style=3D"word-wrap: break-word; -webkit-nbsp-mode: space; =
-webkit-line-break: after-white-space; ">Using a prime number to size a =
hashtable is a way of getting a good distribution across buckets in the =
table if one is using division (modulo) by the table size to identify =
the bucket to use for some key. &nbsp;You can get a refresher =
in&nbsp;Knuth v3, p. 515-516.<div><br></div><div>Another, faster =
approach that you will also see a lot of these days (the java hashtables =
use this one as of a few releases back), is to set hashtable sizes to =
one-less-than-some-power-of two. You then assign keys to buckets by =
doing a bitwise and of the key and that size. &nbsp;This saves the time =
involved in doing division (still very expensive, even on modern =
processors) and also removes the need to find a new prime number every =
time the table grows.</div><div><br><div><div>On Aug 14, 2008, at 11:37 =
AM, Phil Pennock wrote:</div><br =
class=3D"Apple-interchange-newline"><blockquote type=3D"cite"><span =
class=3D"Apple-style-span" style=3D"border-collapse: separate; color: =
rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: =
normal; font-variant: normal; font-weight: normal; letter-spacing: =
normal; line-height: normal; orphans: 2; text-align: auto; text-indent: =
0px; text-transform: none; white-space: normal; widows: 2; word-spacing: =
0px; -webkit-border-horizontal-spacing: 0px; =
-webkit-border-vertical-spacing: 0px; =
-webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: =
auto; -webkit-text-stroke-width: 0; ">On 2008-08-14 at 15:08 +0200, =
Richard Hartmann wrote:<br><blockquote type=3D"cite">On Mon, Aug 11, =
2008 at 17:29, Dan Nelson &lt;<a =
href=3D"mailto:dnelson@allantgroup.com">dnelson@allantgroup.com</a>> =
wrote:<br></blockquote><blockquote type=3D"cite"><blockquote =
type=3D"cite">Raise suggested-size to 1601 (a prime number larger than =
your current<br></blockquote></blockquote><blockquote =
type=3D"cite"><blockquote type=3D"cite">list size with some room to =
grow).<br></blockquote></blockquote><blockquote =
type=3D"cite"><br></blockquote><blockquote type=3D"cite">Using a prime =
hints at an interesting reason. What is it?<br></blockquote><br>General =
hashing algorithm theory. &nbsp;I forget the math (if I ever =
knew<br>it); also, there's a lot of heuristics in there ("that seems to =
work,<br>let's go with that").<br><br>You tend to not be hashing =
completely random data and in the absence of<br>distribution information =
about the input data, bucketing into a prime<br>number of slots tends to =
cause the least pain.<br><br>You'll find prime number requirements for =
many hash bucketing schemes.<br><br>-Phil, who should have made more =
effort to stay awake that =
lecture</span></blockquote></div><br></div></body></html>=

--Boundary_(ID_e4BhnHeMUHJsmPuFsTt5lg)--

