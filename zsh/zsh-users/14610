From zsh-users-return-14610-mason-zsh=primenet.com.au@zsh.org Wed Nov 25 17:04:22 2009
Return-Path: <zsh-users-return-14610-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4599 invoked by alias); 25 Nov 2009 17:04:22 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14610
Received: (qmail 11626 invoked from network); 25 Nov 2009 17:04:20 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.0 required=5.0 tests=AWL,BAYES_00,MISSING_HEADERS
	autolearn=no version=3.2.5
Received-SPF: none (ns1.primenet.com.au: domain at wordbank.com does not designate permitted sender hosts)
X-Virus-Scanned: Debian amavisd-new at assassin.wordbank.com
Message-ID: <4B0D638B.7040507@wordbank.com>
Date: Wed, 25 Nov 2009 17:04:11 +0000
From: john_oshea@wordbank.com
User-Agent: Thunderbird 2.0.0.23 (Macintosh/20090812)
MIME-Version: 1.0
CC: zsh-users@zsh.org
Subject: Re: Best way to test for zsh features?
References: <4B0D5E30.7010505@wordbank.com> <200911251700.nAPH0WQJ009499@news01.csr.com>
In-Reply-To: <200911251700.nAPH0WQJ009499@news01.csr.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-Server: VPOP3 V1.5.4 - Registered

Peter Stephenson wrote:
> john_oshea@wordbank.com wrote:
>> What's the best/cleanest/most "correct" way of checking for zsh features
>> in an .zshrc? I've started to use vcs_info as part of my prompt, which
>> works wonderfully in zsh's new enough to have that available, but gives
>> me "function definition file not found" on machines with older zsh
>> installations (that I'm unable to upgrade).
> 
> If the feature you're testing for is a function, it's quite easy to
> define a function to look for the corresponding file.
> 
>   function_exists () {
>     local -a files
>     # This expands occurrences of $1 anywhere in $fpath,
>     # removing files that don't exist.
>     files=(${^fpath}/$1(N))
>     # Success if any files exist.
>     (( ${#files} ))
>   }
> 
> You can now use this in tests:
> 
>   if function_exists vcs_info; then
>     ...
>   fi

Wonderful - thanks very much for that  :-)

-- 
John O'Shea
Wordbank Limited
33 Charlotte Street, London W1T 1RR
Direct line: +44 (0) 20 7903 8829
Fax: +44 (0) 20 7903 8888
<http://www.wordbank.com/>

