From zsh-workers-return-13512-mason-zsh=primenet.com.au@sunsite.dk Wed Feb 21 08:19:25 2001
Return-Path: <zsh-workers-return-13512-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 9806 invoked from network); 21 Feb 2001 08:19:24 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 21 Feb 2001 08:19:24 -0000
Received: (qmail 5088 invoked by alias); 21 Feb 2001 08:19:17 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 13512
Received: (qmail 5075 invoked from network); 21 Feb 2001 08:19:16 -0000
Date: Wed, 21 Feb 2001 09:19:14 +0100 (MET)
Message-Id: <200102210819.JAA17470@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.dk
In-reply-to: Oliver Kiddle's message of Tue, 20 Feb 2001 18:54:16 +0000
Subject: Re: Expanding interactively aliases


Oliver Kiddle wrote:

> ...
> 
> My real point is that the existing _expand appears to be expanding global
> aliases already. I wouldn't have expected this because -U is used when
> autoloading _expand. A quick check reveals that this is with the
> substitute style and is due to the fact that the aliases are expanded
> within eval.

Now that you say that... I seem to have a very faint memory of a
discussion about this (not in _expand, I think, we had the problem
somewhere else). I think we found a solution which I can't think of
now and I don't know where to search for it either.

And the maling list archive seems to be defunct -- I always get zero
metches no matter what I'm searching for.

Hm. Anyone else remember this?

> I don't think it is ideal that autoload -U functions are subject to
> aliases within eval and you could probably break a few bits of completion
> with certain global aliases. Would it be easy to avoid this somehow? The
> other solution would be a -U argument to eval which probably isn't a great
> idea because eval currently takes no options.

That aliases-inside--U-functions isn't that easy, I think (and there
may be cases where the function wants to have them expanded but the
user loaded it with -U, without thinking about this side-effect).

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

