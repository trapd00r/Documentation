From zsh-workers-return-8505-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Nov 03 08:04:12 1999
Return-Path: <zsh-workers-return-8505-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 18274 invoked from network); 3 Nov 1999 08:04:12 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 3 Nov 1999 08:04:12 -0000
Received: (qmail 5065 invoked by alias); 3 Nov 1999 08:04:06 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 8505
Received: (qmail 5058 invoked from network); 3 Nov 1999 08:04:06 -0000
Date: Wed, 3 Nov 1999 09:04:04 +0100 (MET)
Message-Id: <199911030804.JAA00408@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: "Bart Schaefer"'s message of Tue, 2 Nov 1999 17:44:27 +0000
Subject: Re: PATCH: completion cleanup


Bart Schaefer wrote:

> On Nov 1,  8:50am, Sven Wischnowsky wrote:
> } Subject: Re: PATCH: completion cleanup
> }
> } Ohhh, noooo!
> } 
> } I sent the wrong uu-file. I'm so sorry. And ashamed. Ahem.
> 
> The wrong diff (8475) contained a hunk to have compinit call zmodload on
> the parameter and zleparameter modules.  This latest one (8478) does not
> include that hunk.  Is it needed or not?

It is not needed since 8440 made them be autoloaded.

However, after adding the `funcstack' parameter, I made the parameter
module be loaded in `compinit' because I wanted to make sure that this 
parameter is always correct (if the module is loaded when there are
already functions currently being executed, these functions will be
missing from `funcstack').

So, Felix Rosencrantz wrote:

> I started pulling zsh from Tanaka's CVS repository, and was seeing a few
> undefined functions due to the separation of all the completion code.
> So I started compiling without dynamic loading support, to find these
> problems at link time rather than run time.

I hope 8490 already fixed these...

> Once I got a good build, I found that the compinit function fails
> because it calls "zmodload -i parameter".  Zsh reports "bad option:-i".
> In builtin.c, there is an #ifdef that controls what command line options
> are valid for zmodload depending on whether or not dynamic loading is
> enabled.

Ouch, hadn't thought of that.

> What is the proper solution to this problem?
> 
> Should compinit (and any other functions) be changed to check if it
> is in a dynamic loading situation before calling zmodload?  Or should
> zmodload be modified to ignore "-i" (and other flags) in non-dyanmic
> loading situations?

I think the static linked version of `zmodload' should be quiet (and
do nothing) if the module we attempt to load is linked in and should
barf otherwise.

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

