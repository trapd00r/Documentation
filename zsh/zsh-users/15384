From zsh-users-return-15384-mason-zsh=primenet.com.au@zsh.org Fri Sep 10 08:42:12 2010
Return-Path: <zsh-users-return-15384-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 9570 invoked by alias); 10 Sep 2010 08:42:11 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15384
Received: (qmail 14461 invoked from network); 10 Sep 2010 08:42:08 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_LOW,
	SPF_HELO_PASS autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at csr.com does not designate permitted sender hosts)
Date: Fri, 10 Sep 2010 09:41:57 +0100
From: Peter Stephenson <Peter.Stephenson@csr.com>
To: zsh-users@zsh.org
Subject: Re: Refering to overlaid variable from within a function
Message-ID: <20100910094157.3f128d4d@pwslap01u.europe.root.pri>
In-Reply-To: <20100910061319.GA73504@redoubt.spodhuis.org>
References: <20100910061319.GA73504@redoubt.spodhuis.org>
Organization: Cambridge Silicon Radio
X-Mailer: Claws Mail 3.7.6 (GTK+ 2.18.9; i686-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 10 Sep 2010 08:41:58.0266 (UTC) FILETIME=[07AB25A0:01CB50C4]
X-Scanned-By: MailControl A-06-00-00 (www.mailcontrol.com) on 10.71.0.127

On Fri, 10 Sep 2010 02:13:20 -0400
Phil Pennock <zsh-workers+phil.pennock@spodhuis.org> wrote:
> The problem I have is that I just noticed that I can't use sets named
> "a", "b", "c", "name" because those are variables local in the suite
> of set manipulation functions.
> 
> Is there a way to refer to variables as they exist in the context of
> the caller of a function, so that you can use a name but not have to
> worry about the caller's names?
> 
> Otherwise, my options are to not name the sets inside the functions,
> which gets even harder to read, or to use __setmanip_<varname>s and
> just rely on that not conflicting, but I'm wondering if there's a
> cleaner way of doing this?

I don't think there is a clean way of doing this.  The variable code is one
of the parts that could do with a complete overhaul to make it maintainable
but without breaking its current functionality, which is a bit like
completely replacing the jam layer in a sponge cake with marmalade without
breaking the cake.

In the past I've used _-names and sometimes (yuk) positional parameters.

I'm not sure how hard it is to add a parameter flag to ensure any parameter
retrieved has a local level less than that of the current function.
Without looking I think it's one of those things where it's easy to do the
basic cases and very hard to do completely consistently.

pws

P.S. except of course the cake is a lie.


Member of the CSR plc group of companies. CSR plc registered in England and Wales, registered number 4187346, registered office Churchill House, Cambridge Business Park, Cowley Road, Cambridge, CB4 0WZ, United Kingdom

