From zsh-workers-return-11726-mason-zsh=primenet.com.au@sunsite.auc.dk Fri Jun 02 14:11:53 2000
Return-Path: <zsh-workers-return-11726-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 21685 invoked from network); 2 Jun 2000 14:11:52 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 2 Jun 2000 14:11:52 -0000
Received: (qmail 12022 invoked by alias); 2 Jun 2000 14:11:21 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 11726
Received: (qmail 11984 invoked from network); 2 Jun 2000 14:11:18 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer david.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: "Peter Stephenson" <pws@cambridgesiliconradio.com>,
   "Zsh hackers list" <zsh-workers@sunsite.auc.dk>
Subject: Use and abuse of dynamic loading RE: Getting dynamic loading to work on cygwin
Date: Fri, 2 Jun 2000 18:11:14 +0400
Message-ID: <000001bfcc9c$697939a0$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6700
In-reply-to: <0FVI00DP2XD5AS@la-la.cambridgesiliconradio.com>
Importance: Normal


This is not directly related to Cygwin; I just use the occasion.

What are plans for dynamic loading future in Zsh? This feature as it
currently is may be interesting, but ...

- it does not save disk space. Modules take up at least the same amount
of disk space (and even more due to symbol tables).

- it does not save memory at runtime. Most modern systems share code in
any case; actually, dynamic loading requires slightly more memory for
houskeeping (and then, this memory really per process)

- it is usually slower because of indirection.

So, the sole advantage IMHO is the ability to extend main program
on-the-fly. Consider Perl or Tcl where you compile and install modules
independently of main program. But this is exactly what Zsh lacks (just
think about autoloading - all information is compiled into main
executable, so if I want another module be autoloaded I need to
recompile zsh).

Sorry, if it obvious, but I thought I ask anyway.

-andrej

