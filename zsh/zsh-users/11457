From zsh-users-return-11457-mason-zsh=primenet.com.au@sunsite.dk Fri Apr 27 01:07:49 2007
Return-Path: <zsh-users-return-11457-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 11121 invoked from network); 27 Apr 2007 01:07:48 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=BAYES_00,FORGED_RCVD_HELO
	autolearn=ham version=3.1.8
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 27 Apr 2007 01:07:48 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 97140 invoked from network); 27 Apr 2007 01:07:42 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 27 Apr 2007 01:07:42 -0000
Received: (qmail 6864 invoked by alias); 27 Apr 2007 01:07:30 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 11457
Received: (qmail 6854 invoked from network); 27 Apr 2007 01:07:29 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 27 Apr 2007 01:07:29 -0000
Received: (qmail 95862 invoked from network); 27 Apr 2007 01:07:29 -0000
Received: from ug-out-1314.google.com (66.249.92.170)
  by a.mx.sunsite.dk with SMTP; 27 Apr 2007 01:07:26 -0000
Received: by ug-out-1314.google.com with SMTP id k3so618996ugf
        for <zsh-users@sunsite.dk>; Thu, 26 Apr 2007 18:07:25 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
        b=Ipb5iyyKnBShCoqCK8irEezZ9Mqs+YZl4+DTGypk4QFaXtZA7gRAwvQTwZndfSngVxPfJqqsJphwzJIHwIaABimjeJdBL3NBSIxajPZ+6Ulb4FV2cNYJDGyWE9XUvlTZRE0spP1jjqmLr/yhsCEh3VcuvGGE1UDjqEidBGoVzC8=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
        b=EnpOru7ooZm/SOJiO2ZKY9yOQOZpdpvNa6cW2ZWEAJJPyJLLOaA5R+Nn2U/l3lfY7RA5evV4mnPSxlcqVgOEuxQQu9lkbEN8RxMz7dhbG1m35bx46TCTNt4n1RZiiLxPjJhMXy021gKSyNA8gv/3XGVITxI19Mfj0JsCQh94dZs=
Received: by 10.82.189.6 with SMTP id m6mr4566841buf.1177636045476;
        Thu, 26 Apr 2007 18:07:25 -0700 (PDT)
Received: by 10.82.163.3 with HTTP; Thu, 26 Apr 2007 18:07:25 -0700 (PDT)
Message-ID: <7c737f300704261807s305f9858x37d044483870722@mail.gmail.com>
Date: Thu, 26 Apr 2007 18:07:25 -0700
From: "Alexy Khrabrov" <deliverable@gmail.com>
To: zsh-users@sunsite.dk
Subject: handling spaces in variables
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

I'm running zsh on MacOSX, and Mac generously sprinkles spaces in
system paths.  Thus I had to painfully quote all cases where a
parameter or a variable is passed to system commands.  I wonder
whether there's a way to minimize such quoting.  Here's an example.
Some Leica cameras write a RAW file along with a JPG.  The below
script takes a directory path as a parameter and creates a
subdirectory with the trailing name in a fixed central JPG Archive.
Then it moves all JPG files from the original directory to the newly
created one.  The script ended up as follows:

#!/bin/sh
SRC=`basename "$1"`
JPGROOT='/Volumes/Mir/JPG Archive/Leica'
TGT="$JPGROOT/$SRC"
mkdir "$TGT"
mv "$1"/*.JPG "$TGT"

Basically, I have to quote a potentially space-containing variable
anywhere on the right-hand side, and when passing back so system
commands.

Can I somehow declare e.g. TGT a self-escaping variable and avoid
quoting it all the time?  I.e., whever I now write "$TGT" on the RHS,
I'd write just $TGT, and zsh would supply the quotes?

Cheers,
Alexy

