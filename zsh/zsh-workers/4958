From zsh-workers-request@math.gatech.edu Sat Jan 23 19:08:02 1999
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 8846 invoked from network); 23 Jan 1999 19:08:01 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 23 Jan 1999 19:08:00 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.9.1/8.9.1) id OAA18774;
	Sat, 23 Jan 1999 14:06:49 -0500 (EST)
Resent-Date: Sat, 23 Jan 1999 14:06:49 -0500 (EST)
To: zsh-workers@math.gatech.edu
Subject: cygwin, compat.c/zgetdir()
From: Matt Armstrong <mattdav+matt@best.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Date: 23 Jan 1999 11:05:12 -0800
Message-ID: <uhfthstcn.fsf@best.com>
Lines: 19
User-Agent: Gnus/5.07007 (Pterodactyl Gnus v0.70) Emacs/20.3
Resent-Message-ID: <"ThF5n3.0.Eb4.8tXgs"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4958
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Currently zgetdir() does a lot of fiddling with
stat()/opendir()/inodes and devices.  Is there any reason why it
doesn't use the getcwd() function when present on a platform?

Under Cygnus' cygwin, the assumptions about the file system made by
zgetdir() break down.  While in the //g directory (which is really a
root directory of the g drive), cygwin lets you do a chdir("..") and
puts you into /.  This breaks zgetdir().  There is also a bug in
cygwin that'll give a different inode for /blah/foo/. and /blah/foo,
which also breaks zgetdir(), though I've sent a fix to cygnus for
that.

Anyway, under cygwin its best for zgetdir() to call getcwd().  I'm
wondering if the best fix is to put that code in an #ifdef HAVE_GETCWD
or an #ifdef __CYGWIN__.

After I use zsh under cygwin for a while, I'll be sending a patch to
the list including this and a few other tweaks.


