From zsh-workers-return-16311-mason-zsh=primenet.com.au@sunsite.dk Sat Dec 08 15:08:18 2001
Return-Path: <zsh-workers-return-16311-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 23094 invoked from network); 8 Dec 2001 15:08:17 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 8 Dec 2001 15:08:17 -0000
Received: (qmail 3310 invoked by alias); 8 Dec 2001 15:08:10 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16311
Received: (qmail 3296 invoked from network); 8 Dec 2001 15:08:10 -0000
From: Borsenkow Andrej <Andrej.Borsenkow@mow.siemens.ru>
To: Zsh hackers list <zsh-workers@sunsite.dk>
Subject: Caching between matchers
Content-Type: text/plain
Content-Transfer-Encoding: 7bit
X-Mailer: Evolution/1.0 (Preview Release)
Date: 08 Dec 2001 18:07:52 +0300
Message-Id: <1007824073.29799.1.camel@localhost.localdomain>
Mime-Version: 1.0

When completion generates list of matche on-the-fly (like installed RPMs
or list of available RPMs in urpmi completion) it currently does it for
every matcher that is tried. If list is long (urpmi has ~3000 packages
in database) or needs some time to build (esp. when forking off) it may
take quite a bit of time.

Because the list obviously is not changed between matchers, is it
possible to reuse it?

Actually, is it possible to traverse matchers list internally in
compadd? This way we'd have just one list that would be checked against
matchers. I am not sure what drawbacks it have though.

-andrej


