From zsh-workers-request@euclid.skiles.gatech.edu Thu Jul 10 15:51:14 1997
Return-Path: <zsh-workers-request@euclid.skiles.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 3773 invoked from network); 10 Jul 1997 15:51:13 -0000
Received: from euclid.skiles.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 10 Jul 1997 15:51:13 -0000
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id LAA26463; Thu, 10 Jul 1997 11:40:17 -0400 (EDT)
Resent-Date: Thu, 10 Jul 1997 11:39:53 -0400 (EDT)
To: zsh-users@math.gatech.edu
From: Roderick Schertler <roderick@argon.org>
Subject: references to empty variables dropped from arg lists
Date: Thu, 10 Jul 1997 11:42:56 -0400
Message-ID: <28191.868549376@eeyore.ibcinc.com>
Sender: roderick@ibcinc.com
Resent-Message-ID: <"KS4wx2.0.yS6.99Gnp"@euclid>
Resent-From: zsh-users@math.gatech.edu
X-Mailing-List: <zsh-users@math.gatech.edu> archive/latest/945
X-Loop: zsh-users@math.gatech.edu
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

I find it a great shame that zsh drops empty variable references instead
of retaining them as empty args.  I mean that when you say

    program $foo

program might get 0 or 1 args depending on whether $foo is empty or not.
Similarly for array assignments.  It means that when programming I have
to do

    program "$foo"

just like in sh.  For arrays it's even worse -- "$array[@]" is a pain to
type and compared to $array a pain to look at.

For me this behavior eliminates most of the advantage of not splitting
variables in the first place.  I find that I want to retain empty
variables as separate args much more often than not.

It would be great if zsh provided a switch to control this behavior.

-- 
Roderick Schertler
roderick@argon.org

