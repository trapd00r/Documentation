From zsh-workers-return-12467-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Aug 01 15:10:24 2000
Return-Path: <zsh-workers-return-12467-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4236 invoked from network); 1 Aug 2000 15:10:22 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 1 Aug 2000 15:10:22 -0000
Received: (qmail 21376 invoked by alias); 1 Aug 2000 15:10:06 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 12467
Received: (qmail 21366 invoked from network); 1 Aug 2000 15:10:03 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1000801150953.ZM30770@candle.brasslantern.com>
Date: Tue, 1 Aug 2000 15:09:53 +0000
In-Reply-To: <200008010900.LAA06432@beta.informatik.hu-berlin.de>
Comments: In reply to Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
        "Open bugs and questions?" (Aug  1, 11:00am)
References: <200008010900.LAA06432@beta.informatik.hu-berlin.de>
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-workers@sunsite.auc.dk
Subject: Re: Open bugs and questions?
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Aug 1, 11:00am, Sven Wischnowsky wrote:
} 
} Semester-holiday has definitely begun now. So, does anyone have a list
} of unfixed bugs and open questions? Bart?

I haven't updated the one I made just before 3.1.9, but I don't think
everything on that last list got done, either.
 
} 12344, 12350, 12382
}   Make `_arguments --' use the short options, too?

I have a patch for this first part, but:

}   And make it prefer a user-supplied description if there is one (and
}   a automatically found one).

I don't have a patch for that second part.

} 12225
}   The return value of _arguments with `->state' actions doesn't tell
}   if options were completed.

I meant to reply to that message.  I've never been happy with using the
exit status to indicate that an ->state action was taken.  The only
simple test on exit status is true/false; for anything else, you have
to compare against $? -- which means you might as well be testing some
other parameter instead, e.g. [[ -n "$state" ]] which is what most of
the functions that use ->state already do anyway.

So I suggest simply dumping the 300 exit status; zero means that matches
were added, anything else means that no matches were added, and if you
want to use states you test the $state array directly.

} 12054, 12071
}   There is no way to handle ^D at the beginning of the line with a
}   widget, because the zle main loop deals with it directly.

It *is* possible to handle ^D at beginning of line:  stty eof undef
permits it.  This is equivalent to having to turn off flow control in
order to use ^S and ^Q in keybindings.

So maybe the right answer is that `setopt ignoreeof' should affect ZLE
the same way that `setopt noflowcontrol' does.  An actual zero-byte
read would still be handled as it currently is; only ^D in column zero
would be different (actually invoke the ^D binding rather than print
"zsh: use 'logout' to logout.").

THEN we could change delete-char-or-list to print that warning when there
are no characters in the editor buffer, et voila: the default behavior is
exactly as now.
 
} ..., 11973
}   Completion after `{a,b}'. Urgh. I don't want to think about this

Then don't.

} 11399, 11400, 11413, 11428
}   Context names for styles not used by the completion system
}   itself. More specifically, for function that call the completion
}   system, but have other styles used directly. And where to document
}   them.

I've been toying with the idea of adding a "user contributions" chapter
to the manual and throwing into it: incremental-complete-word, zed, the
prompt themes, predict-on, zrecompile, nslookup, etc.  With appropriate
sections, of course.

} 11465
}   Interrupting builtins. E.g. with `cmd1 | builtin ; cmd2' a ^C should 
}   keep cmd2 from being run.

There's also 11468.  I wish I had a suggestion.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

