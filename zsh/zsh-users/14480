From zsh-users-return-14480-mason-zsh=primenet.com.au@sunsite.dk Sun Oct 11 14:59:12 2009
Return-Path: <zsh-users-return-14480-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2998 invoked from network); 11 Oct 2009 14:59:08 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from new-brage.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.254.104)
  by ns1.primenet.com.au with SMTP; 11 Oct 2009 14:59:08 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 77397 invoked from network); 11 Oct 2009 14:58:53 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 11 Oct 2009 14:58:53 -0000
Received: (qmail 18348 invoked by alias); 11 Oct 2009 14:58:43 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 14480
Received: (qmail 18332 invoked from network); 11 Oct 2009 14:58:42 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 11 Oct 2009 14:58:42 -0000
Received: from fly.srk.fer.hr (fly.srk.fer.hr [161.53.74.66])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 415AB805D09E
	for <zsh-users@sunsite.dk>; Sun, 11 Oct 2009 16:58:35 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by fly.srk.fer.hr (Postfix) with ESMTP id 67DAF6827E;
	Sun, 11 Oct 2009 16:58:33 +0200 (CEST)
Received: from fly.srk.fer.hr ([127.0.0.1])
	by localhost (fly.srk.fer.hr [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id U7o-NO4H-8+9; Sun, 11 Oct 2009 16:58:33 +0200 (CEST)
Received: by fly.srk.fer.hr (Postfix, from userid 30102)
	id 4F01468274; Sun, 11 Oct 2009 16:58:33 +0200 (CEST)
Date: Sun, 11 Oct 2009 16:58:33 +0200
From: =?iso-8859-2?Q?Dra=BEen_Ka=E8ar?= <dave@fly.srk.fer.hr>
To: Sebastian Stark <seb-zsh@biskalar.de>
Cc: Nazri Ramliy <ayiehere@gmail.com>, zsh-users@sunsite.dk
Subject: Re: noquote for quotes as in noglob for filename generation?
Message-ID: <20091011145833.GA1254@fly.srk.fer.hr>
References: <544dda350910092001r28997c41x5ef1ffe2e6d71982@mail.gmail.com> <87ab002aev.fsf@old-tantale.fifi.org> <544dda350910100053s499c0827yd54408b7f82b696d@mail.gmail.com> <544dda350910100233r6954f653wee358fc568e3a1a8@mail.gmail.com> <7591F47B-F5AA-42EE-849A-9D8B1EC5FCFF@biskalar.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <7591F47B-F5AA-42EE-849A-9D8B1EC5FCFF@biskalar.de>
X-Face: 'UIE}WabGB0+U>p-#(hp<_+AD2{H],=qR*jHfm$/e]l0(kU3oOYc5lqG6gg>[\h^IOc{
	'siD6#!T&loIShgmYHz3#+*D38:|`~\BE,(W~Ol9BDfDwk'lKJ;Z{sY8E9(ME.E]'wvN
	O`$n#,;9Z`tOFcW/nHZq!BOSrM>V?C<5DTw=<$<xxB~RP@|-Co<|COgeVi1ozw_W>{c{
	M2V+|)0jSUl&!+8%8nIBF(u:E>SZWM^e
X-Attribution: Dave
User-Agent: Mutt/1.5.18 (2008-05-17)
X-Virus-Scanned: ClamAV 0.94.2/9881/Sat Oct 10 11:21:35 2009 on bifrost
X-Virus-Status: Clean

Sebastian Stark wrote:
> Am 10.10.2009 um 11:33 schrieb Nazri Ramliy:
>>> The mechanism you want is:
>>>
>>>  ${(q)variable}    # Escaped
>>>  ${(qq)variable}   # Single quoted
>>>  ${(qqq)variable}  # Double quoted
>>
>> Thank you Philippe for the tip (I learned something new). But I don't
>> think that's what I want here (or maybe I'm just too stupid to see how 
>> I
>> can make use of it to do what I want :)
>
> You can't prevent zsh from removing the quotes if you add them to the  
> command line of your sql script, as far as I know.
>
> But using the (q..) expansion flag you can re-add the quotes later.

I think he wants Perl quoting operators:


    Customary  Generic        Meaning        Interpolates
        ''       q{}          Literal             no
        ""      qq{}          Literal             yes
        ``      qx{}          Command             yes*
                qw{}         Word list            no
        //       m{}       Pattern match          yes*
                qr{}          Pattern             yes*
                 s{}{}      Substitution          yes*
                tr{}{}    Transliteration         no (but see below)
        <<EOF                 here-doc            yes*

        * unless the delimiter is ''.

So one could write "ordinary" quoting characters for other programming
languages, without quoting those characters in the zsh script source. That
would look like this:

   sql_execute q{select * from foo where id='bar';}

Since the pair 'q{', '}' encloses the string, one doesn't need to quote
apostrophes inside. Something like that would be useful, mostly because
"{}" can be replaced with any pair of delimiters, so one can pick
characters which are not used in the other language (SQL in this example).
The above example could also be written as:

   sql_execute q(select * from foo where id='bar';)

The minimal quoting syntax I managed to find in zsh is:

   setopt rc_quotes
   sql_execute 'select * from foo where id=''bar'';'

That's a bit more readable than id=\'bar\' but still requires quoting.

-- 
 .-.   .-.    Yes, I am an agent of Satan, but my duties are largely
(_  \ /  _)   ceremonial.
     |
     |        dave@fly.srk.fer.hr

