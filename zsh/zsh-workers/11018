From zsh-workers-return-11018-mason-zsh=primenet.com.au@sunsite.auc.dk Sat Apr 29 17:39:28 2000
Return-Path: <zsh-workers-return-11018-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 14348 invoked from network); 29 Apr 2000 17:39:27 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 29 Apr 2000 17:39:27 -0000
Received: (qmail 11187 invoked by alias); 29 Apr 2000 17:39:19 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 11018
Received: (qmail 11165 invoked from network); 29 Apr 2000 17:39:18 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1000429173906.ZM32406@candle.brasslantern.com>
Date: Sat, 29 Apr 2000 17:39:06 +0000
In-Reply-To: <20000429135806.A2543@thelonious.new.ox.ac.uk>
Comments: In reply to Adam Spiers <adam@spiers.net>
        "_find or _users broken?" (Apr 29,  1:58pm)
References: <20000429135806.A2543@thelonious.new.ox.ac.uk>
X-Mailer: Z-Mail (5.0.0 30July97)
To: Adam Spiers <adam@spiers.net>,
        zsh workers mailing list <zsh-workers@sunsite.auc.dk>
Subject: Re: _find or _users broken?
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Apr 29,  1:58pm, Adam Spiers wrote:
} Subject: _find or _users broken?
}
} $ find -user <TAB>
} ---- user
} ---- directory
} <list of directories and users together>
} $ find ! -user <TAB>
} ---- directory
} <list of directories>
} 
} Why is it completing directories at all?  And when it completes users
} and directories, why are the users listed under the directory group?

That part must have something to do with your settings.  The final clause
of the _arguments call in _find is to complete directories when nothing
else matches.

There is something going wrong, though:

zagzig[103] find -user <TAB>
Completing user
(list of users only)
zagzig[103] find /tmp -user <TAB>
(feep, no completions)

This (and your case with `!') appears to happen because comparguments
believes the list of options to have been finished when /tmp was put
on the line, i.e., it doesn't deal well with commands whose options
follow a list of non-option arguments.

It may be necessary to rewrite _find using _regex_arguments, or to go
to a state-machine rather than a simple usage of _arguments.  I'm not
yet clever enough with _arguments to figure out a workaround, and I'm
totally unfamiliar with _regex_arguments.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

