From zsh-workers-return-20219-mason-zsh=primenet.com.au@sunsite.dk Thu Jul 29 13:17:54 2004
Return-Path: <zsh-workers-return-20219-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 17199 invoked from network); 29 Jul 2004 13:17:51 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 29 Jul 2004 13:17:51 -0000
Received: (qmail 36756 invoked from network); 29 Jul 2004 13:17:45 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 29 Jul 2004 13:17:45 -0000
Received: (qmail 23009 invoked by alias); 29 Jul 2004 13:17:33 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 20219
Received: (qmail 22999 invoked from network); 29 Jul 2004 13:17:32 -0000
Received: from unknown (HELO a.mx.sunsite.dk) (130.225.247.88)
  by 130.225.247.90 with SMTP; 29 Jul 2004 13:17:32 -0000
Received: (qmail 34470 invoked from network); 29 Jul 2004 13:15:34 -0000
Received: from lhuumrelay3.lnd.ops.eu.uu.net (62.189.58.19)
  by a.mx.sunsite.dk with SMTP; 29 Jul 2004 13:15:33 -0000
Received: from MAILSWEEPER01.csr.com (mailhost1.csr.com [62.189.183.235])
	by lhuumrelay3.lnd.ops.eu.uu.net (8.11.0/8.11.0) with ESMTP id i6TDFXv27597
	for <zsh-workers@sunsite.dk>; Thu, 29 Jul 2004 13:15:33 GMT
Received: from EXCHANGE02.csr.com (unverified [192.168.137.45]) by MAILSWEEPER01.csr.com
 (Content Technologies SMTPRS 4.3.12) with ESMTP id <T6b17a98cbac0a88d014dc@MAILSWEEPER01.csr.com> for <zsh-workers@sunsite.dk>;
 Thu, 29 Jul 2004 14:14:48 +0100
Received: from news01.csr.com ([192.168.143.38]) by EXCHANGE02.csr.com with Microsoft SMTPSVC(5.0.2195.6713);
	 Thu, 29 Jul 2004 14:17:28 +0100
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.12.11/8.12.11) with ESMTP id i6TDFVS2020497
	for <zsh-workers@sunsite.dk>; Thu, 29 Jul 2004 14:15:31 +0100
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.12.11/8.12.11/Submit) with ESMTP id i6TDFV5w020494
	for <zsh-workers@sunsite.dk>; Thu, 29 Jul 2004 14:15:31 +0100
Message-Id: <200407291315.i6TDFV5w020494@news01.csr.com>
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: PATCH: set history line in zle
Date: Thu, 29 Jul 2004 14:15:30 +0100
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 29 Jul 2004 13:17:28.0695 (UTC) FILETIME=[65BCF070:01C4756E]
X-Spam-Checker-Version: SpamAssassin 2.63 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, hits=-1.5 required=6.0 tests=BAYES_01 autolearn=no 
	version=2.63
X-Spam-Hits: -1.5

I'm still thinking about incremental search, but as I was looking at
the code yesterday I noted the aribtrary restriction that you can't set
the history line (HISTNO).  There's already code to do this for
searches.  Allowing this makes ordinary searches easier in shell
functions with $history, which uses history line numbers as keys.

I've supplied an example widget history-pattern-search.

One other chunk makes freeing the isearch history more consistent.
Currently it doesn't matter since it's only done when zle is unloaded,
but doing it instead when zleread() returns might be sensible.  I
haven't changed anything other than the free code itself yet.

Index: Doc/Zsh/contrib.yo
===================================================================
RCS file: /cvsroot/zsh/zsh/Doc/Zsh/contrib.yo,v
retrieving revision 1.35
diff -u -r1.35 contrib.yo
--- Doc/Zsh/contrib.yo	26 Jul 2004 16:59:55 -0000	1.35
+++ Doc/Zsh/contrib.yo	29 Jul 2004 13:09:09 -0000
@@ -591,6 +591,25 @@
 bindkey '\e^P' history-beginning-search-backward-end
 bindkey '\e^N' history-beginning-search-forward-end)
 )
+tindex(history-pattern-search)
+tindex(history-pattern-search-backward)
+tindex(history-pattern-search-forward)
+item(tt(history-pattern-search))(
+The function tt(history-pattern-search) implements widgets which prompt
+for a pattern with which to search the history backwards or forwards.  The
+pattern is in the usual zsh format, however the first character may be
+tt(^) to anchor the search to the start of the line, and the last character
+may be tt($) to anchor the search to the end of the line.  If the
+search was not anchored to the end of the line the cursor is positioned
+just after the pattern found.
+
+The commands to create bindable widgets are similar to those in the
+example immediately above:
+
+example(autoload -U history-pattern-search
+zle -N history-pattern-search-backward history-pattern-search
+zle -N history-pattern-search-forward history-pattern-search)
+)
 tindex(up-line-or-beginning-search)
 tindex(down-line-or-beginning-search)
 item(tt(up-line-or-beginning-search), tt(down-line-or-beginning-search))(
Index: Doc/Zsh/zle.yo
===================================================================
RCS file: /cvsroot/zsh/zsh/Doc/Zsh/zle.yo,v
retrieving revision 1.38
diff -u -r1.38 zle.yo
--- Doc/Zsh/zle.yo	11 Jul 2004 22:53:03 -0000	1.38
+++ Doc/Zsh/zle.yo	29 Jul 2004 13:09:11 -0000
@@ -634,7 +634,10 @@
 )
 vindex(HISTNO)
 item(tt(HISTNO) (integer))(
-The current history number; read-only.
+The current history number.  Setting this has the same effect as
+moving up or down in the history to the corresponding history line.
+An attempt to set it is ignored if the line is not stored in the
+history.
 )
 vindex(KEYMAP)
 item(tt(KEYMAP) (scalar))(
Index: Functions/Zle/.distfiles
===================================================================
RCS file: /cvsroot/zsh/zsh/Functions/Zle/.distfiles,v
retrieving revision 1.13
diff -u -r1.13 .distfiles
--- Functions/Zle/.distfiles	26 Jun 2004 17:54:32 -0000	1.13
+++ Functions/Zle/.distfiles	29 Jul 2004 13:09:11 -0000
@@ -13,5 +13,5 @@
 match-words-by-style select-word-style transpose-words-match
 up-case-word-match
 delete-whole-word-match quote-and-complete-word url-quote-magic
-zed-set-file-name
+zed-set-file-name history-pattern-search
 '
Index: Functions/Zle/history-pattern-search
===================================================================
RCS file: Functions/Zle/history-pattern-search
diff -N Functions/Zle/history-pattern-search
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ Functions/Zle/history-pattern-search	29 Jul 2004 13:09:11 -0000
@@ -0,0 +1,81 @@
+# Prompt for an search in the history for a pattern.
+# Patterns to search are standard zsh patterns, but may include
+# ^ at the start or $ at the end to anchor the pattern to the
+# start or end of the history entry respectively.
+#
+# To search backwards, create a widget history-pattern-search-backward:
+#   zle -N history-pattern-search-backward history-pattern-search
+# and to search forwards, create history-pattern-search-forward
+#   zle -N history-pattern-search-forward history-pattern-search
+
+# Use extended globbing by default.
+emulate -L zsh
+setopt extendedglob
+
+# Load required features.
+autoload -U read-from-minibuffer
+zmodload -i zsh/parameter
+
+local REPLY dir new
+integer i
+local -a found match mbegin mend
+
+# Decide if we are searching backwards or forwards.
+if [[ $WIDGET = *forward* ]]; then
+  dir="forw"
+else
+  dir="rev"
+fi
+
+# Read pattern.  Prompt could be made customisable.
+read-from-minibuffer "pat ($dir): "
+
+# Abort if bad status or nothing entered
+[[ $? -ne 0 || -z $REPLY ]] && return 0
+
+# Handle start-of-line anchor.
+if [[ $REPLY = \^* ]]; then
+  REPLY=$REPLY[2,-1]
+else
+  REPLY="*$REPLY"
+fi
+
+# Handle end-of-line anchor.
+if [[ $REPLY = *\$ ]]; then
+  REPLY=$REPLY[1,-2]
+else
+  REPLY="$REPLY*"
+fi
+
+# Search history for pattern.
+# As $history is an associative array we can get all matches.
+found=(${(kon)history[(R)$REPLY]})
+
+if [[ $dir = forw ]]; then
+  # Searching forward.  Look back through matches until we
+  # get back to the current history number.
+  for (( i = ${#found}; i >= 1; i-- )); do
+    (( $found[$i] <= HISTNO )) && break
+    new=$found[$i]
+  done
+else
+  # Searching backward.  Look forward through matches until we
+  # reach the current history number.
+  for (( i = 1; i <= ${#found}; i++ )); do
+    (( $found[$i] >= HISTNO )) && break
+    new=$found[$i]
+  done
+fi
+
+if [[ -n $new ]]; then
+  # Match found.  Move to line.
+  HISTNO=$new
+  if [[ $REPLY = *\* && $history[$new] = (#b)(${~REPLY[1,-2]})* ]]; then
+    # If not anchored to the end, move to the end of the pattern
+    # we were searching for.
+    CURSOR=$mend[1]
+  fi
+  return 0
+else
+  return 1
+fi
Index: Src/Zle/zle_hist.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/Zle/zle_hist.c,v
retrieving revision 1.13
diff -u -r1.13 zle_hist.c
--- Src/Zle/zle_hist.c	2 Jun 2004 22:15:01 -0000	1.13
+++ Src/Zle/zle_hist.c	29 Jul 2004 13:09:11 -0000
@@ -715,6 +715,8 @@
 free_isrch_spots(void)
 {
     zfree(isrch_spots, max_spot * sizeof(*isrch_spots));
+    max_spot = 0;
+    isrch_spots = NULL;
 }
 
 /**/
Index: Src/Zle/zle_params.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/Zle/zle_params.c,v
retrieving revision 1.15
diff -u -r1.15 zle_params.c
--- Src/Zle/zle_params.c	2 Jun 2004 22:15:02 -0000	1.15
+++ Src/Zle/zle_params.c	29 Jul 2004 13:09:11 -0000
@@ -75,7 +75,7 @@
         zleunsetfn, NULL },
     { "NUMERIC", PM_INTEGER | PM_UNSET, FN(set_numeric), FN(get_numeric),
         unset_numeric, NULL },
-    { "HISTNO", PM_INTEGER | PM_READONLY, NULL, FN(get_histno),
+    { "HISTNO", PM_INTEGER, FN(set_histno), FN(get_histno),
         zleunsetfn, NULL },
     { "BUFFERLINES", PM_INTEGER | PM_READONLY, NULL, FN(get_bufferlines),
         zleunsetfn, NULL },
@@ -326,6 +326,17 @@
 }
 
 /**/
+static void
+set_histno(UNUSED(Param pm), zlong x)
+{
+    Histent he;
+
+    if (!(he = quietgethist((int)x)))
+	return;
+    zle_setline(he);
+}
+
+/**/
 static zlong
 get_histno(UNUSED(Param pm))
 {

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR Ltd., Science Park, Milton Road,
Cambridge, CB4 0WH, UK                          Tel: +44 (0)1223 692070


**********************************************************************
This email and any files transmitted with it are confidential and
intended solely for the use of the individual or entity to whom they
are addressed. If you have received this email in error please notify
the system manager.

This footnote also confirms that this email message has been swept by
MIMEsweeper for the presence of computer viruses.

www.mimesweeper.com
**********************************************************************

