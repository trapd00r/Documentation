From zsh-workers-return-18471-mason-zsh=primenet.com.au@sunsite.dk Fri Apr 25 10:42:34 2003
Return-Path: <zsh-workers-return-18471-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2671 invoked from network); 25 Apr 2003 10:42:33 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 25 Apr 2003 10:42:33 -0000
Received: (qmail 15326 invoked by alias); 25 Apr 2003 10:42:28 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 18471
Received: (qmail 15318 invoked from network); 25 Apr 2003 10:42:28 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 25 Apr 2003 10:42:28 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [62.189.183.235] by sunsite.dk (MessageWall 1.0.8) with SMTP; 25 Apr 2003 10:42:27 -0000
Received: from exchange01.csr.com (unverified) by 
 (Content Technologies SMTPRS 4.2.1) with ESMTP id <T61d112ce48c0a88d01220@> for <zsh-workers@sunsite.dk>;
 Fri, 25 Apr 2003 11:51:38 +0100
Received: from csr.com (TINKY-WINKY [192.168.144.127]) by exchange01.csr.com with SMTP (Microsoft Exchange Internet Mail Service Version 5.5.2650.21)
	id 2HDKG4F4; Fri, 25 Apr 2003 11:40:51 +0100
To: zsh-workers@sunsite.dk
Subject: Re: Y03arguments.ztst fails 
In-reply-to: "Peter Whaite"'s message of "Wed, 23 Apr 2003 11:15:13 EDT."
             <200304231515.h3NFFD405951@aragorn.cortexmachina.com> 
Date: Fri, 25 Apr 2003 11:42:25 +0100
Message-ID: <14802.1051267345@csr.com>
From: Peter Stephenson <pws@csr.com>

I'm seeing these failures in Y03arguments.ztst too, they don't seem to
be there in 4.1.1-test-1.  I would think it's more likely to be in the
functions than the C code, since no-one dares touch the latter.

I'm also getting random failures with multios tests which I haven't seen
before.  I don't think the underlying problem is new, I think it's the
same issue as this comment:

# Following two tests have to be separated since in
#   print bar >foo >bar && print "$(<foo) $(<bar)"
# the multios aren't flushed until after the substitutions take
# place.  This can't be right.

--- separating the tests doesn't actually fix the race.  I can insert a
`sleep' but it's a bit nasty.  Unfortunately, the multios have to be
asynchronous (or we end up with something like DOS's bizarre pipe
implementation) so this is pretty fundamental.

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR Ltd., Science Park, Milton Road,
Cambridge, CB4 0WH, UK                          Tel: +44 (0)1223 692070


**********************************************************************
The information transmitted is intended only for the person or
entity to which it is addressed and may contain confidential 
and/or privileged material. 
Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by 
persons or entities other than the intended recipient is 
prohibited.  
If you received this in error, please contact the sender and 
delete the material from any computer.
**********************************************************************

