From zsh-workers-return-12781-mason-zsh=primenet.com.au@sunsite.auc.dk Sat Sep 09 03:49:07 2000
Return-Path: <zsh-workers-return-12781-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 9359 invoked from network); 9 Sep 2000 03:49:06 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 9 Sep 2000 03:49:06 -0000
Received: (qmail 7021 invoked by alias); 9 Sep 2000 03:48:53 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 12781
Received: (qmail 7014 invoked from network); 9 Sep 2000 03:48:52 -0000
Date: Fri, 8 Sep 2000 23:48:50 -0400
From: Will Day <willday@rom.oit.gatech.edu>
To: zsh-workers@sunsite.auc.dk
Subject: two sets of modules under /usr/local/lib/zsh ?
Message-ID: <20000908234850.A16212@rom.oit.gatech.edu>
Reply-To: Will Day <willday@rom.oit.gatech.edu>
Mime-Version: 1.0
Content-Type: multipart/signed; boundary="5vNYLRcllDrimb99"; micalg=pgp-md5;
	protocol="application/pgp-signature"
User-Agent: Mutt/1.1.2i
X-no-archive: yes


--5vNYLRcllDrimb99
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: quoted-printable

Okay, I haven't been keeping up with the list since 3.1.6, so this may be a
stupid question, but why are there two sets of modules under
/usr/local/lib/zsh?  There seems to be a set under 3.1.9, and then another,
larger, set under 3.1.9/zsh.

Looking through the NEWS and the mailing list archives, I see the modules
were moved from the version dir to the zsh subdir, and the ones in the top
directory are apparently called "alias modules".  However, what really
baffles me, is that they all appear to be the same file:

   % cd /usr/local/zsh/3.1.9
   % sum *.so
   33949     5 cap.so
   33949     5 clone.so
   33949     5 compctl.so
   33949     5 complete.so
   ...

And I guess I'm wondering, if these are only for backwards compatibility,
(a) do I need them, if I never used paths for modules anywhere, and (b) if
say I do want them, could they not instead be just symlinks to the
respective module under the zsh subdir?  Ie:

   % cd /usr/local/zsh/3.1.9
   % ls -l *.so
   lrwxrwxrwx   1 root   other   10 Sep  8 23:39 cap.so -> zsh/cap.so
   lrwxrwxrwx   1 root   other   10 Sep  8 23:39 clone.so -> zsh/clone.so
   lrwxrwxrwx   1 root   other   10 Sep  8 23:39 compctl.so -> zsh/compctl.=
so
   lrwxrwxrwx   1 root   other   10 Sep  8 23:39 complete.so -> zsh/complet=
e.so

Or, at the very least, have the module files in that toplevel dir all
hardlinked together, since they all appear to be the same file anyway.
Or am I missing something?

I probably wouldn't ever notice or care, except that I'm building a Solaris
pkg to install across all our machines, and the prototype file gets a bit
confusing with two of every module in there.  If I can make them symlinks,
or hardlinks, it'll make it all cleaner and easier to deal with. :)

Also, I guess I'm a little curious about it all, since the new path:
   /usr/local/zsh/3.1.9/zsh/cap.so

seems a little unnecessarily redundant, with two "zsh"'s in there.

--=20
Will Day     <PGP mail preferred>     OIT / O&E / Technical Support
willday@rom.oit.gatech.edu            Georgia Tech, Atlanta 30332-0715
  -> Opinions expressed are mine alone and do not reflect OIT policy <-
Those who would give up essential Liberty, to purchase a little temporary
Safety, deserve neither Liberty nor Safety.
    Benjamin Franklin, Pennsylvania Assembly, Nov. 11, 1755

--5vNYLRcllDrimb99
Content-Type: application/pgp-signature

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.2 (Solaris)
Comment: http://rom.oit.gatech.edu/~willday/pubkey.asc

iQCVAwUBObmzIhDHlOdPw2ZdAQGcAwP5AawG6WHrNmyYTLXsTj+WFP46vzn/U6nc
WkZSuzfj4J9W7e0vrQnduymf0MyVVlwmJxYkadsxaJK97erfgGE2JmeR9RNL2X2V
liqnztmTeycj3//IMDlxwJBq7DgA+V7bPMan/8N8euYaLmAP9AXuefzq2hMLjNrS
1kVCy7Z0a4c=
=MoaN
-----END PGP SIGNATURE-----

--5vNYLRcllDrimb99--

