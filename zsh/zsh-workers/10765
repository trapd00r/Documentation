From zsh-workers-return-10765-mason-zsh=primenet.com.au@sunsite.auc.dk Fri Apr 14 16:50:38 2000
Return-Path: <zsh-workers-return-10765-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 12945 invoked from network); 14 Apr 2000 16:50:36 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 14 Apr 2000 16:50:36 -0000
Received: (qmail 25150 invoked by alias); 14 Apr 2000 16:50:25 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 10765
Received: (qmail 25134 invoked from network); 14 Apr 2000 16:50:23 -0000
Message-ID: <20000414135110.A27516@mail.slc.edu>
Date: Fri, 14 Apr 2000 13:51:10 -0400
From: Anthony Schneider <aschneid@mail.slc.edu>
To: zsh-workers@sunsite.auc.dk
Subject: successful compilation
Mime-Version: 1.0
Content-Type: multipart/mixed; boundary="J/dobhs11T7y2rNN"
X-Mailer: Mutt 0.93.2


--J/dobhs11T7y2rNN
Content-Type: text/plain; charset=us-ascii

Thought I'd let you know that I have successfully installed zsh 3.1.6 on the 
following machine, as outputted by 'uname -a':
     OpenBSD cricket 2.6 GENERIC#696 i386
The machine itself is an IBM 466DX1/DP.
I have included the full output of the install process.
Hope this helps.
-Anthony Schneider.

p.s.  There were no modifications made whatsoever.

--J/dobhs11T7y2rNN
Content-Type: text/plain; charset=us-ascii
Content-Disposition: attachment; filename=zsh-install-output

root:/root/zsh-3.1.6:16# pwd
/root/zsh-3.1.6
root:/root/zsh-3.1.6:17# ./configure
creating cache ./config.cache
configuring for zsh 3.1.6
checking host system type... i386-unknown-openbsd2.6
checking for gcc... gcc
checking whether the C compiler (gcc  ) works... yes
checking whether the C compiler (gcc  ) is a cross-compiler... no
checking whether we are using GNU C... yes
checking whether gcc accepts -g... yes
checking whether large file support needs explicit enabling... no
checking how to run the C preprocessor... gcc -E
checking whether gcc needs -traditional... no
checking for working const... yes
checking for gcc option to accept ANSI C... 
checking whether to use prototypes... yes
checking for working alloca.h... no
checking for alloca... yes
checking if the compiler supports union initialisation... yes
checking if signed to unsigned casting is broken... no
checking if the compiler supports variable-length arrays... yes
checking whether make sets ${MAKE}... yes
checking for a BSD compatible install... /usr/bin/install -c
checking for mawk... no
checking for gawk... no
checking for nawk... nawk
checking for yodl... no
checking for dirent.h that defines DIR... yes
checking for opendir in -ldir... no
checking for ANSI C header files... yes
checking whether time.h and sys/time.h may both be included... yes
checking whether stat file-mode macros are broken... no
checking for sys/wait.h that is POSIX.1 compatible... yes
checking for sys/time.h... yes
checking for sys/times.h... yes
checking for sys/select.h... yes
checking for termcap.h... yes
checking for termio.h... no
checking for termios.h... yes
checking for sys/param.h... yes
checking for sys/filio.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for limits.h... yes
checking for fcntl.h... yes
checking for libc.h... no
checking for sys/utsname.h... yes
checking for sys/resource.h... yes
checking for locale.h... yes
checking for errno.h... yes
checking for stdlib.h... yes
checking for unistd.h... yes
checking for sys/capability.h... no
checking for utmp.h... yes
checking for utmpx.h... no
checking for sys/types.h... yes
checking for pwd.h... yes
checking for grp.h... yes
checking for poll.h... yes
checking for sys/mman.h... yes
checking for dlfcn.h... yes
checking for dl.h... no
checking for conflicts in sys/time.h and sys/select.h... no
checking POSIX termios... yes
checking TIOCGWINSZ in termios.h... yes
checking for sys/ptem.h... no
checking for printf in -lc... yes
checking for tgetent in -ltermcap... yes
checking for yp_all... yes
checking for dlopen in -ldl... no
checking for cap_get_proc in -lcap... no
checking for socket in -lsocket... no
checking if an include file defines ospeed... yes
checking if tgetent accepts NULL... yes
checking return type of signal handlers... void
checking for pid_t... yes
checking for off_t... yes
checking for ino_t... yes
checking for mode_t... yes
checking for uid_t in sys/types.h... yes
checking for size_t... yes
checking if long is 64 bits... no
checking if off_t is 64 bit... yes
checking if ino_t is 64 bit... no
checking if compiler has a 64 bit type... long long
checking for a corresponding unsigned 64 bit type... unsigned long long
checking for sigset_t... yes
checking for struct timezone... yes
checking for struct utmp... yes
checking for struct utmpx... no
checking for ut_host in struct utmp... yes
checking for ut_host in struct utmpx... no
checking for ut_xtime in struct utmpx... no
checking for ut_tv in struct utmpx... no
checking for d_ino in struct dirent... yes
checking for d_stat in struct dirent... no
checking for d_ino in struct direct... no
checking for d_stat in struct direct... no
checking for memcpy... yes
checking for memmove... yes
checking for strftime... yes
checking for waitpid... yes
checking for select... yes
checking for poll... yes
checking for tcsetpgrp... yes
checking for tcgetattr... yes
checking for strstr... yes
checking for lstat... yes
checking for getlogin... yes
checking for setpgid... yes
checking for gettimeofday... yes
checking for gethostname... yes
checking for mkfifo... yes
checking for wait3... yes
checking for difftime... yes
checking for sigblock... yes
checking for sigsetmask... yes
checking for sigrelse... no
checking for sighold... no
checking for killpg... yes
checking for sigaction... yes
checking for getrlimit... yes
checking for sigprocmask... yes
checking for setuid... yes
checking for seteuid... yes
checking for setreuid... yes
checking for setresuid... no
checking for setsid... yes
checking for strerror... yes
checking for nis_list... no
checking for initgroups... yes
checking for fchdir... yes
checking for cap_get_proc... no
checking for readlink... yes
checking for nice... yes
checking for getgrgid... yes
checking for getgrnam... yes
checking for getpwent... yes
checking for getpwnam... yes
checking for getpwuid... yes
checking for setpgrp... yes
checking for fseeko... no
checking for ftello... no
checking for mmap... yes
checking for munmap... yes
checking for msync... yes
checking for ftruncate... yes
checking whether getpgrp takes no argument... yes
checking for working strcoll... yes
checking for dlopen... yes
checking for dlerror... yes
checking for dlsym... yes
checking for dlclose... yes
checking for load... no
checking for loadquery... no
checking for loadbind... no
checking for unload... no
checking for shl_load... no
checking for shl_unload... no
checking for shl_findsym... no
checking what style of signals to use... POSIX_SIGNALS
checking where signal.h is located... /usr/include/sys/signal.h
checking where the RLIMIT macros are located... /usr/include/sys/resource.h
checking if rlim_t is longer than a long... yes
checking if rlim_t is a quad... yes
checking for rlim_t... yes
checking for /dev/fd filesystem... /dev/fd
checking for RFS superroot directory... no
checking whether we should use the native getcwd... no
checking for NIS... no
checking for NIS+... no
checking for utmp file... /var/run/utmp
checking for wtmp file... /var/log/wtmp
checking for utmpx file... no
checking for wtmpx file... no
checking for brk() prototype in <unistd.h>... yes
checking for sbrk() prototype in <unistd.h>... yes
checking for ioctl prototype in <sys/ioctl.h>... yes
checking if named FIFOs work... yes
checking if echo in /bin/sh interprets escape sequences... yes
checking if your system use ELF binaries... no
checking if your dlsym() needs a leading underscore... failed
updating cache ./config.cache
creating ./config.status
creating Config/defs.mk
creating Makefile
creating Doc/Makefile
creating Etc/Makefile
creating Src/Makefile
creating Completion/Makefile
creating Functions/Makefile
creating config.h

zsh configuration
-----------------
zsh version               : 3.1.6
host operating system     : i386-unknown-openbsd2.6
source code location      : .
compiler                  : gcc
preprocessor flags        : 
executable compiler flags :  -Wall -Wno-implicit -Wmissing-prototypes -O2
executable linker flags   :   -s 
library flags             : -ltermcap -lc 
binary install path       : /usr/local/bin
man page install path     : /usr/local/man
info install path         : /usr/local/info
functions install path    : /usr/local/share/zsh/functions
installed functions       : Core/* Base/* Builtins/* User/* Commands/* Zle/* Zftp/*

root:/root/zsh-3.1.6:18# make
if test -f mymods.conf; then  cat mymods.conf > modules-bltin;  elif test N = N; then  cat ./xmods.conf > modules-bltin;  elif test no != yes; then  echo comp1 > modules-bltin;  else  echo > modules-bltin;  fi
( cd .. && /bin/sh Src/mkmodindex.sh Src )  > modules.index.tmp
Updated `modules.index'.
cd .. && /bin/sh $top_srcdir/Src/mkmakemod.sh Src Makemod
creating Src/Makemod.in
creating Src/Makemod
echo 'timestamp for *.mdd files' > ../Src/modules.stamp
creating Src/Builtins/Makefile.in
creating Src/Builtins/Makefile
creating Src/Modules/Makefile.in
creating Src/Modules/Makefile
creating Src/Zle/Makefile.in
creating Src/Zle/Makefile
nawk -f ./signames1.awk /usr/include/sys/signal.h >sigtmp.c
gcc -E sigtmp.c >sigtmp.out
nawk -f ./signames2.awk sigtmp.out > signames.c
rm -f sigtmp.c sigtmp.out
grep 'define.*SIGCOUNT' signames.c > sigcount.h
Updated `zsh.mdh'.
echo 'timestamp for zsh.mdh against zsh.mdd' > zsh.mdhs
nawk -f ../Src/makepro.awk builtin.c Src > builtin.pro
nawk -f ../Src/makepro.awk compat.c Src > compat.pro
nawk -f ../Src/makepro.awk cond.c Src > cond.pro
nawk -f ../Src/makepro.awk exec.c Src > exec.pro
nawk -f ../Src/makepro.awk glob.c Src > glob.pro
nawk -f ../Src/makepro.awk hashtable.c Src > hashtable.pro
nawk -f ../Src/makepro.awk hist.c Src > hist.pro
nawk -f ../Src/makepro.awk init.c Src > init.pro
nawk -f ../Src/makepro.awk input.c Src > input.pro
nawk -f ../Src/makepro.awk jobs.c Src > jobs.pro
nawk -f ../Src/makepro.awk lex.c Src > lex.pro
nawk -f ../Src/makepro.awk linklist.c Src > linklist.pro
nawk -f ../Src/makepro.awk loop.c Src > loop.pro
nawk -f ../Src/makepro.awk math.c Src > math.pro
nawk -f ../Src/makepro.awk mem.c Src > mem.pro
nawk -f ../Src/makepro.awk module.c Src > module.pro
nawk -f ../Src/makepro.awk options.c Src > options.pro
nawk -f ../Src/makepro.awk params.c Src > params.pro
nawk -f ../Src/makepro.awk parse.c Src > parse.pro
nawk -f ../Src/makepro.awk prompt.c Src > prompt.pro
nawk -f ../Src/makepro.awk signals.c Src > signals.pro
nawk -f ../Src/makepro.awk signames.c Src > signames.pro
nawk -f ../Src/makepro.awk subst.c Src > subst.pro
nawk -f ../Src/makepro.awk text.c Src > text.pro
nawk -f ../Src/makepro.awk utils.c Src > utils.pro
nawk -f ../Src/makepro.awk watch.c Src > watch.pro
Updated `zsh.mdh'.
Updated `rlimits.mdh'.
echo 'timestamp for rlimits.mdh against rlimits.mdd' > rlimits.mdhs
nawk -f ../../Src/makepro.awk rlimits.c Src/Builtins > rlimits.pro
Updated `rlimits.mdh'.
Updated `sched.mdh'.
echo 'timestamp for sched.mdh against sched.mdd' > sched.mdhs
nawk -f ../../Src/makepro.awk sched.c Src/Builtins > sched.pro
Updated `sched.mdh'.
Updated `comp1.mdh'.
echo 'timestamp for comp1.mdh against comp1.mdd' > comp1.mdhs
nawk -f ../../Src/makepro.awk comp1.c Src/Zle > comp1.pro
Updated `comp1.mdh'.
Updated `compctl.mdh'.
echo 'timestamp for compctl.mdh against compctl.mdd' > compctl.mdhs
nawk -f ../../Src/makepro.awk compctl.c Src/Zle > compctl.pro
Updated `compctl.mdh'.
(  echo '/** thingies.list                            **/';  echo '/** thingy structures for the known thingies **/';  echo;  echo '/* format: T("name", TH_FLAGS, w_widget, t_nextthingy) */';  echo;  sed -e 's/#.*//; /^$/d; s/" *,.*/"/'  -e 's/^"/T("/; s/$/, 0,/; h'  -e 's/-//g; s/^.*"\(.*\)".*/w_\1, t_D\1)/'  -e 'H; g; s/\n/ /'  < ./iwidgets.list;  sed -e 's/#.*//; /^$/d; s/" *,.*/"/'  -e 's/^"/T("./; s/$/, TH_IMMORTAL,/; h'  -e 's/-//g; s/^.*"\.\(.*\)".*/w_\1, t_\1)/'  -e 'H; g; s/\n/ /'  < ./iwidgets.list;  ) > thingies.list
(  echo '/** zle_things.h                              **/';  echo '/** indices of and pointers to known thingies **/';  echo;  echo 'enum {';  sed -n -f ./zle_things.sed < thingies.list;  echo '    ZLE_BUILTIN_THINGY_COUNT';  echo '};';  ) > zle_things.h
Updated `zle.mdh'.
echo 'timestamp for zle.mdh against zle.mdd' > zle.mdhs
nawk -f ../../Src/makepro.awk zle_bindings.c Src/Zle > zle_bindings.pro
nawk -f ../../Src/makepro.awk zle_hist.c Src/Zle > zle_hist.pro
nawk -f ../../Src/makepro.awk zle_keymap.c Src/Zle > zle_keymap.pro
nawk -f ../../Src/makepro.awk zle_main.c Src/Zle > zle_main.pro
nawk -f ../../Src/makepro.awk zle_misc.c Src/Zle > zle_misc.pro
nawk -f ../../Src/makepro.awk zle_move.c Src/Zle > zle_move.pro
nawk -f ../../Src/makepro.awk zle_params.c Src/Zle > zle_params.pro
nawk -f ../../Src/makepro.awk zle_refresh.c Src/Zle > zle_refresh.pro
nawk -f ../../Src/makepro.awk zle_thingy.c Src/Zle > zle_thingy.pro
nawk -f ../../Src/makepro.awk zle_tricky.c Src/Zle > zle_tricky.pro
nawk -f ../../Src/makepro.awk zle_utils.c Src/Zle > zle_utils.pro
nawk -f ../../Src/makepro.awk zle_vi.c Src/Zle > zle_vi.pro
nawk -f ../../Src/makepro.awk zle_word.c Src/Zle > zle_word.pro
Updated `zle.mdh'.
Updated `complist.mdh'.
echo 'timestamp for complist.mdh against complist.mdd' > complist.mdhs
nawk -f ../../Src/makepro.awk complist.c Src/Zle > complist.pro
Updated `complist.mdh'.
rm -f stamp-modobjs.tmp
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o builtin.o builtin.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o compat.o compat.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o cond.o cond.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o exec.o exec.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o glob.o glob.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o hashtable.o hashtable.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o hist.o hist.c
srcdir='.' MODBINS='modules-bltin'  XMODCF='./xmods.conf' /bin/sh ./mkbltnmlst.sh bltinmods.list
Updated `zshpaths.h'.
Creating `zshxmods.h'.
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o init.o init.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o input.o input.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o jobs.o jobs.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o lex.o lex.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o linklist.o linklist.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o loop.o loop.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o math.o math.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o mem.o mem.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o module.o module.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o options.o options.c
echo '#define ZSH_VERSION "'3.1.6'"' > version.h
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o params.o params.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o parse.o parse.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o prompt.o prompt.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o signals.o signals.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o signames.o signames.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o subst.o subst.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o text.o text.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o utils.o utils.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o watch.o watch.c
echo '' builtin.o compat.o cond.o exec.o glob.o hashtable.o hist.o init.o input.o jobs.o lex.o linklist.o loop.o math.o mem.o module.o options.o params.o parse.o prompt.o signals.o signames.o subst.o text.o utils.o watch.o >> ../Src/stamp-modobjs.tmp
nawk -f ./rlimits.awk /usr/include/sys/resource.h > rlimits.h
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o rlimits.o rlimits.c
echo '' rlimits.o | sed 's" " Builtins/"g' >> ../../Src/stamp-modobjs.tmp
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o sched.o sched.c
echo '' sched.o | sed 's" " Builtins/"g' >> ../../Src/stamp-modobjs.tmp
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o comp1.o comp1.c
echo '' comp1.o | sed 's" " Zle/"g' >> ../../Src/stamp-modobjs.tmp
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o compctl.o compctl.c
echo '' compctl.o | sed 's" " Zle/"g' >> ../../Src/stamp-modobjs.tmp
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o complist.o complist.c
echo '' complist.o | sed 's" " Zle/"g' >> ../../Src/stamp-modobjs.tmp
(  echo '/** widgets.list                               **/';  echo '/** widget structures for the internal widgets **/';  echo;  echo '/* format: W(ZLE_FLAGS, t_firstname, functionname) */';  echo;  sed -e 's/#.*//; /^$/d; s/-//g'  -e 's/^"\(.*\)" *, *\([^ ]*\) *, *\(.*\)/W(\3, t_\1, \2)/'  < ./iwidgets.list;  ) > widgets.list
(  echo '/** zle_widget.h                                **/';  echo '/** indices of and pointers to internal widgets **/';  echo;  echo 'enum {';  sed -n -f ./zle_widget.sed < widgets.list;  echo '    ZLE_BUILTIN_WIDGET_COUNT';  echo '};';  ) > zle_widget.h
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o zle_bindings.o zle_bindings.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o zle_hist.o zle_hist.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o zle_keymap.o zle_keymap.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o zle_main.o zle_main.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o zle_misc.o zle_misc.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o zle_move.o zle_move.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o zle_params.o zle_params.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o zle_refresh.o zle_refresh.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o zle_thingy.o zle_thingy.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o zle_tricky.o zle_tricky.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o zle_utils.o zle_utils.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o zle_vi.o zle_vi.c
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o zle_word.o zle_word.c
echo '' zle_bindings.o zle_hist.o zle_keymap.o zle_main.o zle_misc.o zle_move.o zle_params.o zle_refresh.o zle_thingy.o zle_tricky.o zle_utils.o zle_vi.o zle_word.o | sed 's" " Zle/"g' >> ../../Src/stamp-modobjs.tmp
Updated `stamp-modobjs'.
nawk -f ../Src/makepro.awk main.c Src > main.pro
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2 -o main.o ./main.c
rm -f zsh
gcc  -s  -o zsh main.o `cat stamp-modobjs`   -ltermcap -lc
utils.o: warning: mktemp() possibly used unsafely; consider using mkstemp()
makeinfo ./zsh.texi; exit 0
Making info file `zsh.info' from `./zsh.texi'.
root:/root/zsh-3.1.6:19# make install
rm -f stamp-modobjs.tmp
`zshpaths.h' is up to date.
gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o init.o init.c
echo '' builtin.o compat.o cond.o exec.o glob.o hashtable.o hist.o init.o input.o jobs.o lex.o linklist.o loop.o math.o mem.o module.o options.o params.o parse.o prompt.o signals.o signames.o subst.o text.o utils.o watch.o >> ../Src/stamp-modobjs.tmp
echo '' rlimits.o | sed 's" " Builtins/"g' >> ../../Src/stamp-modobjs.tmp
echo '' sched.o | sed 's" " Builtins/"g' >> ../../Src/stamp-modobjs.tmp
echo '' comp1.o | sed 's" " Zle/"g' >> ../../Src/stamp-modobjs.tmp
echo '' compctl.o | sed 's" " Zle/"g' >> ../../Src/stamp-modobjs.tmp
echo '' complist.o | sed 's" " Zle/"g' >> ../../Src/stamp-modobjs.tmp
echo '' zle_bindings.o zle_hist.o zle_keymap.o zle_main.o zle_misc.o zle_move.o zle_params.o zle_refresh.o zle_thingy.o zle_tricky.o zle_utils.o zle_vi.o zle_word.o | sed 's" " Zle/"g' >> ../../Src/stamp-modobjs.tmp
Updated `stamp-modobjs'.
rm -f zsh
gcc  -s  -o zsh main.o `cat stamp-modobjs`   -ltermcap -lc
utils.o: warning: mktemp() possibly used unsafely; consider using mkstemp()
../mkinstalldirs /usr/local/bin
/usr/bin/install -c  zsh /usr/local/bin/zsh-3.1.6
if test -f /usr/local/bin/zsh; then  rm -f /usr/local/bin/zsh.old;  ln /usr/local/bin/zsh /usr/local/bin/zsh.old;  else :; fi
rm -f /usr/local/bin/zsh.new
ln /usr/local/bin/zsh-3.1.6 /usr/local/bin/zsh.new
mv /usr/local/bin/zsh.new /usr/local/bin/zsh
modules='';  if test -n "$modules"; then ../mkinstalldirs /usr/local/lib/zsh/3.1.6; fi;  for mod in $modules; do  /usr/bin/install -c $mod /usr/local/lib/zsh/3.1.6/$mod;  done
modules='';  if test -n "$modules"; then ../../mkinstalldirs /usr/local/lib/zsh/3.1.6; fi;  for mod in $modules; do  /usr/bin/install -c $mod /usr/local/lib/zsh/3.1.6/$mod;  done
modules='';  if test -n "$modules"; then ../../mkinstalldirs /usr/local/lib/zsh/3.1.6; fi;  for mod in $modules; do  /usr/bin/install -c $mod /usr/local/lib/zsh/3.1.6/$mod;  done
modules='';  if test -n "$modules"; then ../../mkinstalldirs /usr/local/lib/zsh/3.1.6; fi;  for mod in $modules; do  /usr/bin/install -c $mod /usr/local/lib/zsh/3.1.6/$mod;  done
../mkinstalldirs /usr/local/man/man1
for file in zsh.1 zshbuiltins.1 zshcompctl.1 zshcompwid.1 zshcompsys.1  zshexpn.1 zshmisc.1 zshmodules.1  zshoptions.1 zshparam.1 zshzftpsys.1 zshzle.1 zshall.1; do  if test -f $file; then  /usr/bin/install -c -m 644 $file /usr/local/man/man1;  elif test -f ./$file; then  /usr/bin/install -c -m 644 ./$file /usr/local/man/man1;  else :;  fi || exit 1;  done
if test x/usr/local/share/zsh/functions != x && test x/usr/local/share/zsh/functions != xno; then  sdir_top=".." fndir="/usr/local/share/zsh/functions" sdir="."  FUNCTIONS_INSTALL="Core/* Base/* Builtins/* User/* Commands/* Zle/* Zftp/*"  FUNCTIONS_SUBDIRS="no"  INSTALL_DATA="/usr/bin/install -c -m 644"  /bin/sh ../Config/installfns.sh || exit 1;  fi;  exit 0
mkdir /usr/local/share
mkdir /usr/local/share/zsh
mkdir /usr/local/share/zsh/functions
if test x/usr/local/share/zsh/functions != x && test x/usr/local/share/zsh/functions != xno; then  sdir_top=".." fndir="/usr/local/share/zsh/functions" sdir="."  FUNCTIONS_INSTALL="Core/* Base/* Builtins/* User/* Commands/* Zle/* Zftp/*"  FUNCTIONS_SUBDIRS="no"  INSTALL_DATA="/usr/bin/install -c -m 644"  /bin/sh ../Config/installfns.sh || exit 1;  fi;  exit 0
root:/root/zsh-3.1.6:20# zsh
cricket#
cricket# make clean
rm -f *.html *.info* *.dvi *.ps
rm -f *.aux *.cp *.cps *.fn *.fns *.ky *.log
rm -f *.pg *.pgs *.toc *.tp *.tps *.vr *.vrs
rm -f FAQ.html
if test -f Makemod; then  make -f Makemod prefix='/usr/local' exec_prefix='/usr/local' bindir='/usr/local/bin'  libdir='/usr/local/lib' MODDIR='/usr/local/lib/zsh/3.1.6' infodir='/usr/local/info' mandir='/usr/local/man'  CC='gcc' CPPFLAGS='' DEFS='-DHAVE_CONFIG_H' CFLAGS='-Wall -Wno-implicit -Wmissing-prototypes -O2'  LDFLAGS='' EXTRA_LDFLAGS=''  DLCFLAGS='-fpic' DLLDFLAGS=''  LIBLDFLAGS='-s' EXELDFLAGS='-s'  LIBS='-ltermcap -lc' DL_EXT='so' DLLD='ld'  AWK='nawk' YODL=':' YODL2TXT=':2txt' YODL2HTML=':2html'  FUNCTIONS_INSTALL='Core/* Base/* Builtins/* User/* Commands/* Zle/* Zftp/*' `echo clean-modules | sed 's/-modules//'`;  fi;  exit 0
rm -f *.o *.so
rm -f rlimits.h
rm -f *.o.c *.pro *.mdh *.mdhi *.mdhs *.mdh.tmp
rm -f *.o *.so
rm -f *.o.c *.pro *.mdh *.mdhi *.mdhs *.mdh.tmp
rm -f *.o *.so
rm -f zle_things.h zle_widget.h widgets.list thingies.list
rm -f *.o.c *.pro *.mdh *.mdhi *.mdhs *.mdh.tmp
rm -f *.o *.so
rm -f sigcount.h signames.c bltinmods.list version.h zshpaths.h zshxmods.h
rm -f *.o.c *.pro *.mdh *.mdhi *.mdhs *.mdh.tmp
rm -f stamp-modobjs stamp-modobjs.tmp
rm -f modules.index.tmp modules.stamp zsh ansi2knr.o ansi2knr
rm -f modules.index modules-bltin
rm -f libzsh-*.so
cricket#


--J/dobhs11T7y2rNN--

