From zsh-workers-return-7717-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Sep 08 10:40:56 1999
Return-Path: <zsh-workers-return-7717-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2545 invoked from network); 8 Sep 1999 10:40:54 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 8 Sep 1999 10:40:54 -0000
Received: (qmail 13262 invoked by alias); 8 Sep 1999 10:40:39 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 7717
Received: (qmail 13255 invoked from network); 8 Sep 1999 10:40:39 -0000
Date: Wed, 8 Sep 1999 11:40:38 +0100
From: Adam Spiers <adam@thelonious.new.ox.ac.uk>
To: Zsh hackers list <zsh-workers@sunsite.auc.dk>
Subject: Re: CVS (slightly off-topic)
Message-ID: <19990908114038.B20503@thelonious.new.ox.ac.uk>
Reply-To: Adam Spiers <adam@spiers.net>
Mail-Followup-To: Zsh hackers list <zsh-workers@sunsite.auc.dk>
References: <990907162927.ZM32134@candle.brasslantern.com> <199909080900.LAA08747@paris.ifh.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 0.95.4i
In-Reply-To: <199909080900.LAA08747@paris.ifh.de>; from Peter Stephenson on Wed, Sep 08, 1999 at 11:00:43AM +0200
X-URL: http://www.new.ox.ac.uk/~adam/
X-OS: Linux 2.2.9 i686

Peter Stephenson (pws@ifh.de) wrote:
> As far as organizing a CVS archive goes, we could arrange it so that,
> for example, Sven made changes to the completion code, and I did it
> for the rest, or Bart did in the case of my absence or total
> incapacity due to huge volume of patches.  Changes wouldn't appear in
> the archive until after they'd been seen on the list --- though at the
> present rate of change, how much after is difficult to judge.

On the subject of CVS, I've been trying to get my head around (vendor)
branches and have been wondering what the best strategy would be for
using CVS to track changes.  I know that several of you are already
doing this; would you mind briefly detailing what strategy you use?
In particular, do you use a vendor branch?  Several, even?  Do you
make your own changes to the main branch, or to a branch of your own?

It also struck me that even if an official anonymous CVS facility were
to be set up, this still wouldn't be a complete solution (correct me
if I'm wrong) for anyone who wanted to actively develop, since to
develop you ideally need your own repository.  If you wanted to merge
in changes from the anon CVS to your own repository, would you have to
update your working copy of the anon CVS and then `cvs import' your
working copy into your own development repository, or is there a
better way?

Apologies for the off-topicness, but once I get this sorted I'll find
it much easier to contribute (cvs rdiff with tags is a real joy).

Adam

