From zsh-workers-return-25620-mason-zsh=primenet.com.au@sunsite.dk Fri Sep 05 14:12:34 2008
Return-Path: <zsh-workers-return-25620-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 21239 invoked from network); 5 Sep 2008 14:12:22 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00,HTML_MESSAGE
	autolearn=ham version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 5 Sep 2008 14:12:22 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 65228 invoked from network); 5 Sep 2008 14:12:16 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 5 Sep 2008 14:12:16 -0000
Received: (qmail 5833 invoked by alias); 5 Sep 2008 14:12:11 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 25620
Received: (qmail 5815 invoked from network); 5 Sep 2008 14:12:08 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 5 Sep 2008 14:12:08 -0000
Received: from yx-out-2324.google.com (yx-out-2324.google.com [74.125.44.28])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 427B7802710B
	for <zsh-workers@sunsite.dk>; Fri,  5 Sep 2008 16:11:46 +0200 (CEST)
Received: by yx-out-2324.google.com with SMTP id 31so263470yxl.81
        for <zsh-workers@sunsite.dk>; Fri, 05 Sep 2008 07:11:46 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:to
         :subject:mime-version:content-type;
        bh=/GvIOU1i8Exwuf8Vzd7hjPOga9YvPb0zKWzTCxhSMyk=;
        b=sJY03x1XmQt/ohzFbkK5Xu5083AKKLD1muIB6fyC1i+UiudNmZeRNDFuNhi8VNhWwd
         ilmXiaYwamdvNEvX0TGxB0T2AdY1f6Noc6jGViiiOuB+Hl6338Dqn7nOxRMvPDKKFC2o
         WCK1DUzof4O4Fzt+1ed83d7UebyjPc4Ljwl3Y=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:to:subject:mime-version:content-type;
        b=NAzwMoZX1c9m8KHh1dujBctLH9choBMdnPCcMI/t6sJ2Nb0ai6g5axvixLMZjtMkkJ
         zoDqYm2RIC42JJJB+1o1JSTzarA2t5Cbl1pOLftcYiRzxo+9ttR6hldSj7MiB8qnV8cH
         n/YgH9Cu/11XfHEewB//UCf0ohUviZyqi2R7M=
Received: by 10.115.58.18 with SMTP id l18mr10029816wak.177.1220623905542;
        Fri, 05 Sep 2008 07:11:45 -0700 (PDT)
Received: by 10.114.159.2 with HTTP; Fri, 5 Sep 2008 07:11:45 -0700 (PDT)
Message-ID: <6cd6de210809050711h4811efei413630fb514333ae@mail.gmail.com>
Date: Fri, 5 Sep 2008 10:11:45 -0400
From: "Rocky Bernstein" <rocky.bernstein@gmail.com>
To: "Zsh hackers list" <zsh-workers@sunsite.dk>
Subject: Request: a way to get the subshell level nesting
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_47700_15049662.1220623905550"
X-Virus-Scanned: ClamAV 0.92.1/8167/Fri Sep  5 13:10:15 2008 on bifrost
X-Virus-Status: Clean

------=_Part_47700_15049662.1220623905550
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

It would be great if there were a way to get the subshell level nesting. ksh
uses .sh.level and bash BASH_SUBSHELL.

A debugger uses this in two ways. First to indicate the level of subshell
nesting on prompts, so that as you are following along you won't be
surprised when a variable which had a value get unset or the value restored
to its previous value. And second to maintain global state.

The general pattern here is

   debug_hook:
        if ((subshell_level < old_subshell_level)) ; then
            eval journal file
        fi
       save old subshell level
       work, work,
       ...
       something that should set or change global state:
           save global variable and value in journal file,
           e.g.  cmd='x=5'; eval $cmd; echo "$cmd" >> journal_file


It also occurs to me that if there were a variable that automatically got
*unset* and stayed that way
until explicitly set, then that could be used to sumulate such a variable.

------=_Part_47700_15049662.1220623905550
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

<div dir="ltr">It would be great if there were a way to get the subshell level nesting. ksh uses .sh.level and bash BASH_SUBSHELL. <br><br>A debugger uses this in two ways. First to indicate the level of subshell nesting on prompts, so that as you are following along you won&#39;t be surprised when a variable which had a value get unset or the value restored to its previous value. And second to maintain global state.<br>
<br>The general pattern here is<br><br>&nbsp;&nbsp; debug_hook:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ((subshell_level &lt; old_subshell_level)) ; then<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; eval journal file<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; save old subshell level<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; work, work, <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ... <br>&nbsp; &nbsp; &nbsp;&nbsp; something that should set or change global state: <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; save global variable and value in journal file,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.g.&nbsp; cmd=&#39;x=5&#39;; eval $cmd; echo &quot;$cmd&quot; &gt;&gt; journal_file<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br><br>It also occurs to me that if there were a variable that automatically got *unset* and stayed that way<br>until explicitly set, then that could be used to sumulate such a variable.<br><br>&nbsp;&nbsp; <br></div>

------=_Part_47700_15049662.1220623905550--

