From zsh-workers-return-12812-mason-zsh=primenet.com.au@sunsite.auc.dk Fri Sep 15 18:15:42 2000
Return-Path: <zsh-workers-return-12812-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 21987 invoked from network); 15 Sep 2000 18:15:41 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 15 Sep 2000 18:15:41 -0000
Received: (qmail 25540 invoked by alias); 15 Sep 2000 18:14:46 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 12812
Received: (qmail 25533 invoked from network); 15 Sep 2000 18:14:46 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer david.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: "Bart Schaefer" <schaefer@candle.brasslantern.com>,
   <zsh-workers@sunsite.auc.dk>
Subject: RE: Module hierarchies, aliasing, and dependencies
Date: Fri, 15 Sep 2000 22:14:43 +0400
Message-ID: <000201c01f40$d2a32890$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
In-Reply-To: <1000914163650.ZM12492@candle.brasslantern.com>
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400

>
> It *was* my assumption that the file name relative to $module_path would
> be the single argument to zmodload when loading the module, but of course
> there's no particular reason to assume that, either.
>
> } zmodload -f /path/to/my/module.so zsh/zle
>
> That would be fine, except that it requires you to know the full path
> to the module and the shared object extension, so it won't work in a
> cross-platform way.  How about instead something like
>
> zmodload -N zsh/zle my/module
>

Thinking more about it, I was wrong. The problem is linked-in modules. We
obviously cannot "overload" them with external file. It means, that the above
command must fail with some error message. This creates ugly special case. The
same applies to your idea.

If we use just module name + path search, it works nicely for linked-in
modules as well. Just assume (and document) that linked-in modules are
implicitly prepended to module_path and so always "found" first.

-andrej


