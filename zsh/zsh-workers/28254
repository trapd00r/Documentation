From zsh-workers-return-28254-mason-zsh=primenet.com.au@zsh.org Sun Sep 12 19:49:32 2010
Return-Path: <zsh-workers-return-28254-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 28840 invoked by alias); 12 Sep 2010 19:49:32 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28254
Received: (qmail 8856 invoked from network); 12 Sep 2010 19:49:29 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.0 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,RCVD_IN_DNSWL_NONE,
	T_TO_NO_BRKTS_FREEMAIL autolearn=ham version=3.3.1
Received-SPF: pass (ns1.primenet.com.au: SPF record at _spf.google.com designates 209.85.212.43 as permitted sender)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:received:received:in-reply-to
         :references:date:message-id:subject:from:to:content-type;
        bh=3/KiPD1L/deaKXAb0vUWFfyDZT8i9ps+LhTtKPwvGh4=;
        b=cmGV/ALi3j+9q2pP/plUwqi036aWK4hBnhMrVqNDoIg5izxBOLv0tVBb+D/3OUqz4I
         xTKCOzO+u6lNHXtmuDh0K2KHNbOUiKUtk2OjvGwaLlG5u4D+clzuFpasOci6QgvjERTt
         Q9yT/chAu+VMLbA60nRMGvRyqeQtnAqO7r3ws=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        b=Khh1ULKrGW4OdEIRYCaeqZmAbByVVY/3nRrXMHKEi56Tbc2tH/WR/44fbHEzAFb0qe
         gGOxuv0V/sPybD3kotpAg8qmMGncQSx/E1J6kqW3OdPAKPMZH2Aq+MPJaArekWWgUwE7
         8Vui4t/+vfHKuXbQUOS3PEJbeDhdZtc07ufic=
MIME-Version: 1.0
In-Reply-To: <m3eid5sj32.fsf@klanderman.net>
References: <20100907114403.0e526e9c@pwslap01u.europe.root.pri>
	<AANLkTinjkD7F53shp+vWZu01J-a48MxhbvFGpDrZshhC@mail.gmail.com>
	<20100907130231.49dcf737@pwslap01u.europe.root.pri>
	<m3hbi1sjzm.fsf@klanderman.net>
	<20100907154418.479be919@pwslap01u.europe.root.pri>
	<m3eid5sj32.fsf@klanderman.net>
Date: Sun, 12 Sep 2010 21:49:25 +0200
Message-ID: <AANLkTi=uW9_Ur1uQf6Ku5WS-1YGD4UzX9xg5DOYLyHv9@mail.gmail.com>
Subject: Re: PATCH: $ZLE_LINE_ABORTED
From: Mikael Magnusson <mikachu@gmail.com>
To: zsh-workers@zsh.org
Content-Type: text/plain; charset=UTF-8

On 7 September 2010 16:51, Greg Klanderman <gak@klanderman.net> wrote:
>
> Wow that was fast!  Seems to be working here, will continue to play
> with it..

I played with it a bit now, and came up with this

#the intent here is to insert syntax errors back on the command line, since
#those aren't saved in history, for example entering "do;"
function _zle_line_init() {
  if [[ -n $ZLE_LINE_SAVED && $ZLE_LINE_SAVED[1] != " " &&
$ZLE_LINE_SAVED != $history[$((HISTCMD-1))] ]]; then
    LBUFFER=$ZLE_LINE_SAVED
    zle -R
  fi
  unset ZLE_LINE_SAVED
}

#like pws said, if we accept a line, we don't need the aborted one anymore
function _zle_line_finish() {
  ZLE_LINE_SAVED=$BUFFER
  unset ZLE_LINE_ABORTED
}


#this puts back the aborted line when you try to go up history, can be
bound to other
#things too but haven't got around to that yet (ie up-line-or-search).
should probably
#also check the current line is empty first too.
function _recover_line_or_else() {
  if [[ -n $ZLE_LINE_SAVED ]]; then
    LBUFFER+=$ZLE_LINE_SAVED
    unset ZLE_LINE_SAVED
  elif [[ -n $ZLE_LINE_ABORTED ]]; then
    LBUFFER+=$ZLE_LINE_ABORTED
    unset ZLE_LINE_ABORTED
  else
    zle .$WIDGET
  fi
}
zle -N up-history _recover_line_or_else

-- 
Mikael Magnusson

