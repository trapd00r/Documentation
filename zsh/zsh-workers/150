From zsh-workers-request@math.gatech.edu  Wed Jul  5 21:27:11 1995
Received: from gatech.edu (gatech.edu [130.207.244.244]) by werple.mira.net.au (8.6.12/8.6.9) with SMTP id VAA03228 for <mason@werple.mira.net.au>; Wed, 5 Jul 1995 21:27:03 +1000
Received: from math (math.skiles.gatech.edu) by gatech.edu with SMTP id AA18921
  (5.65c/Gatech-10.0-IDA for <mason@werple.mira.net.au>); Wed, 5 Jul 1995 07:27:57 -0400
Received: by math (5.x/SMI-SVR4)
	id AA21177; Wed, 5 Jul 1995 07:25:01 -0400
Resent-Date: Wed, 5 Jul 1995 13:24:13 +0100 (MET DST)
Old-Return-Path: <hzoli@cs.elte.hu>
From: hzoli@cs.elte.hu (Zoltan Hidvegi)
Message-Id: <9507051124.AA09588@turan.elte.hu>
Subject: New BUGS file
To: zsh-workers@math.gatech.edu (zsh-workers)
Date: Wed, 5 Jul 1995 13:24:13 +0100 (MET DST)
X-Mailer: ELM [version 2.4 PL21]
Content-Type: text
Resent-Message-Id: <"e42tK2.0.pA5.CQd-l"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/150
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Here is a new BUGS file. The distributed BUGS file is again out of
sync. Richard, could you update it regularily? Only you can do it, as only you
know what you fix in a new release. I can only post an update after the new
release is out.

As usual I only mention bug I did not fix. I recently posted the list of bug I
fixed in my release.

And please, use a short RCS comments for each RCS revision you check in. Even
if you change only one line. It will make maintenance much simpler, if a few
months later you want to remove a patch which you fount too buggy etc. A more
detailed ChangeLog would also be useful, containing some details about
significant changes (like the hashtables changes in beta10).

Cheers,

  Zoltan


-*- text -*-
------------------------------------------------------------------------
% ( echo foo ; echo bar 1>& 2 ) 2>&1 1>/dev/null | cat
bar
foo
% ksh
$ ( echo foo ; echo bar 1>& 2 ) 2>&1 1>/dev/null | cat
bar

This is not exactly a bug, but an effect of the multiple IO
redirection.  It is a (k)sh incompatibility, though.
------------------------------------------------------------------------
Completion has a habit of doing the wrong thing after a
backslash/newline.
------------------------------------------------------------------------
If you suspend "man", zle seems to get into cooked mode.  It works ok
for plain "less".
It is not specific neither to man nor to zsh.
E.g. call the fallowing program foo:
#include <sys/wait.h>
#include <unistd.h>

void main(int argc, char *argv[])
{
    int status;

    if (!fork())	/* child */
	execvp(argv[1], argv + 1);
    else		/* parent */
	wait(&status);
}
Then if you suspend
% foo less something
from zsh/bash, zle/readline gets into cooked mode.
------------------------------------------------------------------------
% test=test
% echo "${test##`echo '*'`}"
test
sh gives empty string here. Is it a bug or a feature?
------------------------------------------------------------------------
% zsh -c 'cat a_long_file | less ; :'
can be interrupted with ^C. The prompt comes back and less is orphaed.
If you go to the end of the file with less and cat terminates, ^C
will not terminate less. The `; :' after less forces zsh to fork before
executing less.
------------------------------------------------------------------------
On Suns in xterm if a line wraps to the next line and the cursor is in
the last column on the sreen and you type a character the charactr after
the cursor is replaced on the screen with the character the cursor is on.
------------------------------------------------------------------------
An other problem which may be related to the previous one. In Sun xterms
the output of the following is overwritten by the next prompt if
no_prompt_cr is not set, and if it is set the first character of the
prompt appears in the last column overwriting the `9' character there:
% echo 01234567890123456789012345678901234567890123456789012345678901234567890123456789 | more
------------------------------------------------------------------------
The pattern %?* maches names beginning with %? instead of names with at
least two characters beginning with %. This is a hack to allow %?foo job
substitution without quoting. This behaviour is incompatible with sh
and ksh and may be removed in the future. A good fix would be to keep
such patterns unchanged if they do not match regardless of the state of
the nonomatch and nullglob options.
------------------------------------------------------------------------
On ULTRIX 4.2, if NOTIFY is unset, zsh gets SEGV each time a background
job terminates if compiled with gcc-2.6.3 or c89. It does not happen
with cc (non-ANSI compiler, ansi2knr is used). Terminal suspension
does not seem work regardless of the compiler.
------------------------------------------------------------------------

