From zsh-workers-return-7207-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Jul 19 19:11:22 1999
Return-Path: <zsh-workers-return-7207-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1590 invoked from network); 19 Jul 1999 19:11:21 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 19 Jul 1999 19:11:21 -0000
Received: (qmail 9729 invoked by alias); 19 Jul 1999 19:11:09 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 7207
Received: (qmail 9721 invoked from network); 19 Jul 1999 19:11:08 -0000
Date: Mon, 19 Jul 1999 12:10:56 -0700 (PDT)
From: Wayne Davison <wayne@clari.net>
To: Bart Schaefer <schaefer@candle.brasslantern.com>
cc: Tanaka Akira <akr@jaist.ac.jp>, zsh-workers@sunsite.auc.dk
Subject: Re: string range between 1 and 0.
In-Reply-To: <990719050457.ZM8827@candle.brasslantern.com>
Message-ID: <Pine.GSO.4.10.9907191204510.4796-100000@house.clari.net>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

On Mon, 19 Jul 1999, Bart Schaefer wrote:
> The difficulty with doing this is that C arrays are indexed from 0.  So
> when zsh uses 1-based indices, it has to decrement them before indexing
> into the internal representation of the value.  This decrement is done
> at parse time (unless the value is already zero), so that thereafter the
> same code can be used for ksh and zsh arrays.

Sounds to me like a good fix would be to change the parse code to
turn ksh arrays into zsh arrays (incrementing non-negative numbers)
OR to turn the values into an internal representation of offset and
length at parse time (though you may have to leave -1 unchanged if
you don't know the length).  This way, the C code would be able to
handle the more flexible indexing values properly (the zsh values)
without affecting ksh compatibility.

..wayne..

