From zsh-workers-return-9517-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Feb 01 20:50:34 2000
Return-Path: <zsh-workers-return-9517-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4204 invoked from network); 1 Feb 2000 20:50:33 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 1 Feb 2000 20:50:33 -0000
Received: (qmail 17348 invoked by alias); 1 Feb 2000 20:50:28 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 9517
Received: (qmail 17341 invoked from network); 1 Feb 2000 20:50:28 -0000
To: zsh-workers@sunsite.auc.dk (Zsh hackers list)
Subject: Wordcode bug with $functions
Date: Tue, 01 Feb 2000 20:53:26 +0000
From: Peter Stephenson <pws@pwstephenson.fsnet.co.uk>
Message-Id: <E12FkFl-0002L6-00.2000-02-01-20-50-25@mail1.svr.pol.co.uk>

I'm getting a segmentation fault with `print $functions', even patched up
to date (supposedly). I presume this is a new wordcode feature.  This is
reproducible with my addpath function by doing `which addpath'.  I narrowed
it down:  actually, this form doesn't give a crash, but it does show more
clearly what's going wrong.

By the way, I found this by doing `set' on its own.  This dumps out the
whole of every function when zsh/parameter is loaded.  Yuck.

% fn() {
a() { true; }
b() { true; }
}
% which fn
unknown word code in gettext2()
fn () {
        a () {
                true
        }

}

-- 
Peter Stephenson <pws@pwstephenson.fsnet.co.uk>

