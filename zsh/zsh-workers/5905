From zsh-workers-return-5905-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Mar 23 15:47:18 1999
Return-Path: <zsh-workers-return-5905-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 21602 invoked from network); 23 Mar 1999 15:47:17 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 23 Mar 1999 15:47:17 -0000
Received: (qmail 5302 invoked by alias); 23 Mar 1999 15:46:34 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 5905
Received: (qmail 5275 invoked from network); 23 Mar 1999 15:46:26 -0000
Message-Id: <9903231527.AA34098@ibmth.df.unipi.it>
To: zsh-workers@sunsite.auc.dk (Zsh hackers list)
Subject: Another slight weirdness
Date: Tue, 23 Mar 1999 16:27:25 +0100
From: Peter Stephenson <pws@ibmth.df.unipi.it>

I've set the configuration:

  compconf completer=_complete
           correct_accept=2n \
           correct_prompt="Correcting (%e error[s]):"

so it's not actually supposed to be using correcton or approximation, and a
(not all that useful) directory containing

Xbarfoo2   Xfoo       Xnonofoo

and when I do

% echo foo<TAB>

(any letter of foo is enough, in fact, though I found out about this from
omitting the first character) I get offered all the files in the directory,
not just Xfoo.  Any ideas?  I think I've got all the patches (and if I
haven't, you'd better tell me about it :-)).  globcomplete is not set.  I
even get this with

_match_test () {
        (( compstate[matcher] <= 1 ))
}
_match_pattern () { }

and no `compctl -M'.


By the way, I never liked the way _setopt and _unsetopt reflected the
current state of the options, since usually I can't remember what's set and
the fact I don't get offered all possibilities just confuses me.  The fact
you now have to two $(...) calls on every single completion just to store
the current values --- this does not seem to be the sort of thing
completion should be doing by default --- makes me think even more strongly
that this is just not worth it for the basic set-up and anyone
sophisticated enough should add it themselves.  Furthermore, I get the same
list at the moment if I do `setopt ^D' or `unsetopt ^D' (that's what I
*want*, but it's not what should happen with the current functions).  Oh,
wait, I see why.  Except it still doesn't work properly because of all
those *@!@!#!** `no's when you run `unsetopt'.  That's probably a bug.

--- Completion/Core/_main_complete.uo	Tue Mar 23 15:59:51 1999
+++ Completion/Core/_main_complete	Tue Mar 23 16:21:31 1999
@@ -18,7 +18,7 @@
 local comp _set_options _unset_options
 
 _set_options=("${(@f)$({ unsetopt kshoptionprint; setopt } 2>/dev/null)}")
-_unset_options=("${(@f)$({ unsetopt kshoptionprint; setopt } 2>/dev/null)}")
+_unset_options=("${(@f)$({ unsetopt kshoptionprint; unsetopt } 2>/dev/null)}")
 
 setopt localoptions nullglob rcexpandparam
 unsetopt markdirs globsubst shwordsplit nounset ksharrays

-- 
Peter Stephenson <pws@ibmth.df.unipi.it>       Tel: +39 050 844536
WWW:  http://www.ifh.de/~pws/
Dipartimento di Fisica, Via Buonarroti 2, 56127 Pisa, Italy

