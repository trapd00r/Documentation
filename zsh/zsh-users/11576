From zsh-users-return-11576-mason-zsh=primenet.com.au@sunsite.dk Sat Jun 16 18:33:29 2007
Return-Path: <zsh-users-return-11576-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1108 invoked from network); 16 Jun 2007 18:33:27 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.1 (2007-05-02) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.1
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 16 Jun 2007 18:33:27 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 61515 invoked from network); 16 Jun 2007 18:33:19 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 16 Jun 2007 18:33:19 -0000
Received: (qmail 11847 invoked by alias); 16 Jun 2007 18:33:10 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 11576
Received: (qmail 11835 invoked from network); 16 Jun 2007 18:33:09 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 16 Jun 2007 18:33:09 -0000
Received: (qmail 60184 invoked from network); 16 Jun 2007 18:33:09 -0000
Received: from mta-2.ms.rz.rwth-aachen.de (134.130.7.73)
  by a.mx.sunsite.dk with SMTP; 16 Jun 2007 18:33:06 -0000
Received: from ironport-out-2.rz.rwth-aachen.de ([134.130.3.59])
 by mta-2.ms.rz.RWTH-Aachen.de
 (Sun Java System Messaging Server 6.2-8.04 (built Feb 28 2007))
 with ESMTP id <0JJQ00KNLRH5D700@mta-2.ms.rz.RWTH-Aachen.de> for
 zsh-users@sunsite.dk; Sat, 16 Jun 2007 20:31:53 +0200 (CEST)
Received: from relay.rwth-aachen.de ([134.130.3.1])
 by ironport-in-2.rz.rwth-aachen.de with ESMTP; Sat, 16 Jun 2007 18:32:21 +0000
Received: from fsst.voodoo.lan ([212.117.84.92])
	by relay.rwth-aachen.de (8.13.7/8.13.3/1) with ESMTP id l5GIVrqF025815	for
 <zsh-users@sunsite.dk>; Sat, 16 Jun 2007 20:31:53 +0200 (MEST)
Received: from hawk by fsst.voodoo.lan with local (Exim 4.67)
	(envelope-from <ft@bewatermyfriend.org>)
	id 1Hzd3D-0001y7-Sw	for zsh-users@sunsite.dk; Sat, 16 Jun 2007 20:31:07 +0200
Date: Sat, 16 Jun 2007 20:31:07 +0200
From: Frank Terbeck <ft@bewatermyfriend.org>
Subject: incr. search: skip duplicates on the same history event
To: zsh users <zsh-users@sunsite.dk>
Mail-followup-to: zsh users <zsh-users@sunsite.dk>
Message-id: <20070616183107.GC5199@fsst.voodoo.lan>
MIME-version: 1.0
Content-type: text/plain; charset=iso-8859-1
Content-transfer-encoding: 7BIT
Content-disposition: inline
X-IronPort-AV: E=Sophos;i="4.16,430,1175472000";   d="scan'208";a="1567998"
User-Agent: Mutt/1.5.15+20070515 (2007-05-02)

Hey list,

Someone on IRC came up with the following question:

Say, you got a few history events that got the string 'make' in them:

  % make depend
  % make clean ; make all ; sudo make install

After a few more commands, you do a
'history-incremental-search-backward' for 'make' and get back the last
event with the three make calls on one line. Now you can reinvoke
'history-incremental-search-backward' again to jump back to earlier
occurrences of 'make' in the history:

  % make clean ; make all ; sudo make install
    ^            ^               ^
    |            |               |
    |            |               \-- ^Rmake
    |            |
    |            \-- 1st time you hit ^R after making
    |                your initial search.
    |
    \-- after hitting ^R for the 2nd time you end up here.

Now, the idea is to after searching backwards for the first time
(^Rmake), hitting ^R again, to go further backwards should ignore any
other occurrences of 'make' in the current history event and jump
directly to the next history event containing 'make' ('make depend')
in the example above.

I have been playing around to get this working and had a few rather
complex solutions, that all failed somehow. :-)

So, I took another approach and the closest I got (which works) is the
following. It exists the incremental search and re-enters it if you
continue typing. That is not an exceptionally nice solution and it
would require additional tweaking to become usable.

[snip]
self-insert () {
  if [[ $LASTWIDGET == incsearch ]] ; then
    zle history-incremental-search-backward $LASTSEARCH
  fi
  zle .self-insert
}
zle -N self-insert
incsearch () {
  if [[ $LASTWIDGET == incsearch ]] ; then
    zle history-search-backward
  else
    zle history-incremental-search-backward
  fi
}
zle -N incsearch
bindkey '^r' incsearch
[snap]

However, I hope that someone has got a better idea to solve this.

Regards, Frank

-- 
In protocol design, perfection has been reached not when there is
nothing left to add, but when there is nothing left to take away.
                                                  -- RFC 1925

