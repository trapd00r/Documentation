From zsh-workers-request@euclid.skiles.gatech.edu Mon Aug 18 05:16:34 1997
Return-Path: <zsh-workers-request@euclid.skiles.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 9598 invoked from network); 18 Aug 1997 05:16:33 -0000
Received: from euclid.skiles.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 18 Aug 1997 05:16:33 -0000
Received: (from list@localhost)
	by euclid.skiles.gatech.edu (8.8.5/8.8.5) id BAA29509;
	Mon, 18 Aug 1997 01:06:12 -0400 (EDT)
Resent-Date: Mon, 18 Aug 1997 01:06:12 -0400 (EDT)
From: "Bart Schaefer" <schaefer@brasslantern.com>
Message-Id: <970817220553.ZM23929@candle.brasslantern.com>
Date: Sun, 17 Aug 1997 22:05:53 -0700
In-Reply-To: <199708151315.HAA24323@ghidora.uwyo.edu>
Comments: In reply to "John M. Harres" <harres@ghidora.uwyo.edu>
        "zgetcwd patch?" (Aug 15,  7:15am)
References: <199708151315.HAA24323@ghidora.uwyo.edu>
X-Mailer: Z-Mail (4.0b.820 20aug96)
To: "John M. Harres" <harres@ghidora.uwyo.edu>
Subject: Re: zgetcwd patch?
Cc: zsh-workers@math.gatech.edu
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-Message-ID: <"EDcwP2.0.0D7.4Xzzp"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/3445
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

On Aug 15,  7:15am, John M. Harres wrote:
} Subject: zgetcwd patch?
}
} I never heard a response to the patch I sent to compat.c.

Just so you know someone's paying attention ...

} Does it appear correct?

It doesn't look wrong to me, but I'm not sure why it wasn't used in the
first place, so I can't say for certain.  My guess is that there was an
assumption of at most one mount of the same device in any given directory,
so the second loop is (before your patch) finding any mount point matching
the device and assuming that must be the one.

Why is it, again, that de->d_ino != sbuf.st_ino for the dir in question?

} I'm also curious under what circumstances these two operations differ (aside
} from the obvious chdir side effect):
} 
} 1. opendir( ".." );
} 
} 2. chdir( ".." );
} 	opendir( "." );

It could have something to do with crossing NFS mount points.  I can't
figure out precisely what, though, as I don't have any NFS-mounted
filesystems to try it on.

More likely, though, it's just expediency.  The chdir("..") is done so
that lstat() can be called directly on de->d_name.  There's probably no
reason that
	closedir(dir);
	dir = opendir(".");
could not be replaced by
	rewinddir(dir);
unless maybe there's some implementation of the directory library out
there that doesn't have rewinddir().

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

