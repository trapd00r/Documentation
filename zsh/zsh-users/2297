From zsh-users-return-2297-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Apr 12 08:09:25 1999
Return-Path: <zsh-users-return-2297-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16303 invoked from network); 12 Apr 1999 08:09:24 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 12 Apr 1999 08:09:24 -0000
Received: (qmail 7255 invoked by alias); 12 Apr 1999 08:08:52 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 2297
Received: (qmail 7102 invoked from network); 12 Apr 1999 08:08:23 -0000
Date: Mon, 12 Apr 1999 10:08:12 +0200 (MET DST)
Message-Id: <199904120808.KAA26694@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-users@sunsite.auc.dk
In-reply-to: Greg Badros's message of 01 Apr 1999 17:57:57 -0800
Subject: Re: Updating the Xterm title with every execution?


Greg Badros wrote:

> Though why can't
> executing a setopt load a module (as invoking a function loads that
> function)?

The problem is that the option code currently uses an array with one
entry per option, making testing for set/unset options nicely small
and fast. Enhancing that is not trivial.

Side note: once we have modules autoloadable on parameters, this might 
be another argument for mocing towards a associative-array based
option system.

> Similarly, I've wanted this for completion controls, too --
> scanning all my completion stuff takes forever at startup-- it'd be nice 
> to have them autoloaded when I first try to complete (ignorance warning: 
> I've not been following the 3.1.x discussion on completion stuff so
> maybe people are working on this or something similar).

Well, the new completion system (more precisely: the example
implementation of the new completion system) uses autoloaded functions.

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

