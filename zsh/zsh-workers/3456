From zsh-workers-request@math.gatech.edu Mon Aug 25 05:37:31 1997
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 10284 invoked from network); 25 Aug 1997 05:37:29 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by coral.primenet.com.au with SMTP; 25 Aug 1997 05:37:29 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.8.5/8.8.5) id BAA15703;
	Mon, 25 Aug 1997 01:31:54 -0400 (EDT)
Resent-Date: Mon, 25 Aug 1997 01:31:54 -0400 (EDT)
From: Zoltan Hidvegi <hzoli@frontiernet.net>
Message-Id: <199708250506.BAA04326@hzoli.home>
Subject: Re: zgetcwd patch?
In-Reply-To: <199708151315.HAA24323@ghidora.uwyo.edu> from "John M. Harres" at "Aug 15, 97 07:15:37 am"
To: harres@ghidora.uwyo.edu (John M. Harres)
Date: Mon, 25 Aug 1997 01:06:54 -0400 (EDT)
Cc: zsh-workers@math.gatech.edu (Zsh hacking and development)
X-Mailer: ELM [version 2.4ME+ PL31 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"d92Vv2.0.Ir3.9ZH0q"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/3456
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

> I never heard a response to the patch I sent to compat.c.
> Does it appear correct?
> 
> I'm also curious under what circumstances these two operations differ (aside
> from the obvious chdir side effect):
> 
> 1. opendir( ".." );
> 
> 2. chdir( ".." );
> 	opendir( "." );

Sorry for my silence about this.  Zsh-3.1.1 already had a fix for this
promlem, here is the patch for zsh-3.0.4.  It avoids the double scan you
noticed.

Zoltan


*** compat.c.3.0.4	Tue Dec 17 15:14:11 1996
--- compat.c	Mon Aug 25 00:58:18 1997
***************
*** 115,122 ****
      struct stat sbuf;
      struct dirent *de;
      DIR *dir;
!     ino_t ino, rootino = (ino_t) ~ 0;
!     dev_t dev, rootdev = (dev_t) ~ 0;
  
      holdintr();
      buf2[0] = '\0';
--- 115,122 ----
      struct stat sbuf;
      struct dirent *de;
      DIR *dir;
!     ino_t ino, pino, rootino = (ino_t) ~ 0;
!     dev_t dev, pdev, rootdev = (dev_t) ~ 0;
  
      holdintr();
      buf2[0] = '\0';
***************
*** 127,146 ****
  	rootdev = sbuf.st_dev;
      }
  
      for (;;) {
- 	if (stat(".", &sbuf) < 0) {
- 	    chdir(buf0);
- 	    noholdintr();
- 	    return ztrdup(".");
- 	}
- 	ino = sbuf.st_ino;
- 	dev = sbuf.st_dev;
  	if (stat("..", &sbuf) < 0) {
  	    chdir(buf0);
  	    noholdintr();
  	    return ztrdup(".");
  	}
! 	if ((sbuf.st_ino == ino && sbuf.st_dev == dev) ||
  	    (ino == rootino && dev == rootdev)) {
  	    chdir(buf0);
  	    noholdintr();
--- 127,153 ----
  	rootdev = sbuf.st_dev;
      }
  
+     if (stat(".", &sbuf) < 0) {
+ 	noholdintr();
+ 	return ztrdup(".");
+     }
+ 
+     pino = sbuf.st_ino;
+     pdev = sbuf.st_dev;
+ 
      for (;;) {
  	if (stat("..", &sbuf) < 0) {
  	    chdir(buf0);
  	    noholdintr();
  	    return ztrdup(".");
  	}
! 
! 	ino = pino;
! 	dev = pdev;
! 	pino = sbuf.st_ino;
! 	pdev = sbuf.st_dev;
! 
! 	if ((ino == pino && dev == pdev) ||
  	    (ino == rootino && dev == rootdev)) {
  	    chdir(buf0);
  	    noholdintr();
***************
*** 160,194 ****
  		(fn[1] == '\0' ||
  		 (fn[1] == '.' && fn[2] == '\0')))
  		continue;
! 	    if ((ino_t) de->d_ino == ino) {
  		lstat(fn, &sbuf);
! 		if (sbuf.st_dev == dev)
! 		    goto match;
  	    }
  	}
  	closedir(dir);
! 	dir = opendir(".");
! 	while ((de = readdir(dir))) {
! 	    char *fn = de->d_name;
! 	    /* Ignore `.' and `..'. */
! 	    if (fn[0] == '.' &&
! 		(fn[1] == '\0' ||
! 		 (fn[1] == '.' && fn[2] == '\0')))
! 		continue;
! 	    lstat(fn, &sbuf);
! 	    if (sbuf.st_dev == dev)
! 		goto match;
  	}
- 	noholdintr();
- 	closedir(dir);
- 	return ztrdup(".");
-       match:
- 	strcpy(buf3, de->d_name);
  	if (*buf2)
  	    strcat(buf3, "/");
  	strcat(buf3, buf2);
  	strcpy(buf2, buf3);
- 	closedir(dir);
      }
  }
  
--- 167,189 ----
  		(fn[1] == '\0' ||
  		 (fn[1] == '.' && fn[2] == '\0')))
  		continue;
! 	    if (dev != pdev || (ino_t) de->d_ino == ino) {
  		lstat(fn, &sbuf);
! 		if (sbuf.st_dev == dev && sbuf.st_ino == ino) {
! 		    strcpy(buf3, de->d_name);
! 		    break;
! 		}
  	    }
  	}
  	closedir(dir);
! 	if (!de) {
! 	    noholdintr();
! 	    return ztrdup(".");
  	}
  	if (*buf2)
  	    strcat(buf3, "/");
  	strcat(buf3, buf2);
  	strcpy(buf2, buf3);
      }
  }
  

