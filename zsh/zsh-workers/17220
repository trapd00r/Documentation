From zsh-workers-return-17220-mason-zsh=primenet.com.au@sunsite.dk Fri May 24 12:55:09 2002
Return-Path: <zsh-workers-return-17220-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4375 invoked from network); 24 May 2002 12:55:08 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 24 May 2002 12:55:08 -0000
Received: (qmail 25316 invoked by alias); 24 May 2002 12:54:58 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 17220
Received: (qmail 25300 invoked from network); 24 May 2002 12:54:57 -0000
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: PATCH: Today's TCP Fix (TM) (2)
Date: Fri, 24 May 2002 13:54:28 +0100
Message-ID: <17948.1022244868@csr.com>
From: Peter Stephenson <pws@csr.com>

Two bits for listing with `ztcp' on its own: the size of the address was
wrong, a socket address instead of an internet address --- as it was too
large, some systems might handle it anyway, which is probably how this
escaped detection.  Then the address used if no name was available for
the peer was the local one; again, you wouldn't see this unless the
gethostbyaddr() failed.

We should ideally handle AF_INET6 at this point, too.

Index: Src/Modules/tcp.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/Modules/tcp.c,v
retrieving revision 1.28
diff -u -r1.28 tcp.c
--- Src/Modules/tcp.c	16 May 2002 14:05:30 -0000	1.28
+++ Src/Modules/tcp.c	24 May 2002 12:48:09 -0000
@@ -565,16 +565,16 @@
 
 		if (sess->fd != -1)
 		{
-		    zthost = gethostbyaddr((const void *)&(sess->sock.in.sin_addr), sizeof(struct sockaddr_in), AF_INET);
+		    zthost = gethostbyaddr((const void *)&(sess->sock.in.sin_addr), sizeof(sess->sock.in.sin_addr), AF_INET);
 		    if (zthost)
 			localname = zthost->h_name;
 		    else
 			localname = ztrdup(inet_ntoa(sess->sock.in.sin_addr));
-		    ztpeer = gethostbyaddr((const void *)&(sess->peer.in.sin_addr), sizeof(struct sockaddr_in), AF_INET);
+		    ztpeer = gethostbyaddr((const void *)&(sess->peer.in.sin_addr), sizeof(sess->peer.in.sin_addr), AF_INET);
 		    if (ztpeer)
 			remotename = ztpeer->h_name;
 		    else
-			remotename = ztrdup(inet_ntoa(sess->sock.in.sin_addr));
+			remotename = ztrdup(inet_ntoa(sess->peer.in.sin_addr));
 		    fprintf(shout, "%s:%d %s %s:%d is on fd %d%s\n",
 			    localname, ntohs(sess->sock.in.sin_port),
 			    ((sess->flags & ZTCP_LISTEN) ? "-<" :

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR Ltd., Science Park, Milton Road,
Cambridge, CB4 0WH, UK                          Tel: +44 (0)1223 392070


**********************************************************************
The information transmitted is intended only for the person or
entity to which it is addressed and may contain confidential 
and/or privileged material. 
Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by 
persons or entities other than the intended recipient is 
prohibited.  
If you received this in error, please contact the sender and 
delete the material from any computer.
**********************************************************************

