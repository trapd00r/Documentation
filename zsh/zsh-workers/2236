From zsh-workers-request@euclid.skiles.gatech.edu  Wed Oct 16 07:08:10 1996
Return-Path: zsh-workers-request@euclid.skiles.gatech.edu
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by coral.primenet.com.au (8.7.5/8.7.3) with ESMTP id HAA24715 for <mason@primenet.com.au>; Wed, 16 Oct 1996 07:08:08 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id RAA01759; Tue, 15 Oct 1996 17:05:16 -0400 (EDT)
Resent-Date: Tue, 15 Oct 1996 17:05:16 -0400 (EDT)
From: Zoltan Hidvegi <hzoli@cs.elte.hu>
Message-Id: <199610152105.XAA12164@bolyai.cs.elte.hu>
Subject: Re: getzlequery
In-Reply-To: <199610151351.PAA16223@hydra.ifh.de> from Peter Stephenson at "Oct 15, 96 03:51:27 pm"
To: pws@ifh.de (Peter Stephenson)
Date: Tue, 15 Oct 1996 23:05:13 +0200 (MET DST)
Cc: zsh-workers@math.gatech.edu
Organization: Dept. of Comp. Sci., Eotvos University, Budapest, Hungary
Phone: (36 1)2669833 ext: 2667, home phone: (36 1) 2752368
X-Mailer: ELM [version 2.4ME+ PL27 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"fUVOA2.0.PR.Co_Oo"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/2236
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Peter Stephenson wrote:
> I'm getting a `test is always zero' message from getlzlequery() in
> zle_utils.c due to testing whether a char is EOF.  This is something
> to do with:
> 
>         * Src/utils.c: getquery always returned n on cray-unicos. From
>           Richard D. Slater (2136)

I do not see the relation between these.  However the patch below should fix
that.

Zoltan


--- Src/zle_utils.c	1996/10/15 20:16:35	2.14
+++ Src/zle_utils.c	1996/10/15 20:59:31
@@ -309,7 +309,7 @@
 int
 getzlequery(void)
 {
-    char c;
+    int c;
 #ifdef FIONREAD
     int val;
 
@@ -332,5 +332,5 @@
 
     /* echo response and return */
     putc(c, shout);
-    return (int)c;
+    return c;
 }

