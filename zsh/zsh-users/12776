From zsh-users-return-12776-mason-zsh=primenet.com.au@sunsite.dk Thu Apr 10 11:42:43 2008
Return-Path: <zsh-users-return-12776-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4693 invoked from network); 10 Apr 2008 11:42:42 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 10 Apr 2008 11:42:42 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 29488 invoked from network); 10 Apr 2008 11:42:32 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 10 Apr 2008 11:42:32 -0000
Received: (qmail 27076 invoked by alias); 10 Apr 2008 11:42:23 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12776
Received: (qmail 27062 invoked from network); 10 Apr 2008 11:42:22 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 10 Apr 2008 11:42:22 -0000
Received: from mail.o2.co.uk (yoda.london.02.net [82.132.130.151])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 12527802265F
	for <zsh-users@sunsite.dk>; Thu, 10 Apr 2008 13:42:15 +0200 (CEST)
Received: from sc.homeunix.net (78.105.216.138) by mail.o2.co.uk (8.0.013.3) (authenticated as stephane.chazelas)
        id 47ED3C6902D75C37 for zsh-users@sunsite.dk; Thu, 10 Apr 2008 12:42:15 +0100
Received: from chazelas by sc.homeunix.net with local (Exim 4.69)
	(envelope-from <stephane_chazelas@yahoo.fr>)
	id 1JjvAU-0001hp-P7
	for zsh-users@sunsite.dk; Thu, 10 Apr 2008 12:42:14 +0100
Date: Thu, 10 Apr 2008 12:42:14 +0100
From: Stephane Chazelas <Stephane_Chazelas@yahoo.fr>
To: zsh-users@sunsite.dk
Subject: Re: iterating through a hierarchy with a filter
Message-ID: <20080410114214.GB5179@sc.homeunix.net>
Mail-Followup-To: zsh-users@sunsite.dk
References: <8BAD0AA6-3B6F-4946-B636-6C16B56A944E@gmail.com> <200804100851.m3A8pk9S003521@news01.csr.com> <DDABD6BC-F3D9-4277-86C1-776B24CB914F@gmail.com> <20080410105245.GB11585@imada.sdu.dk>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-15
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <20080410105245.GB11585@imada.sdu.dk>
User-Agent: Mutt/1.5.16 (2007-09-19)
X-Virus-Scanned: ClamAV 0.91.2/6695/Thu Apr 10 12:19:23 2008 on bifrost
X-Virus-Status: Clean

On Thu, Apr 10, 2008 at 12:52:45PM +0200, Thor Andreassen wrote:
[...]
> find source/ -iname '*.xml' | while read file1; do 

That should be while IFS= read -r file1

but that assumes that the file names don't contain newline
characters. -iname is a GNU extension, that's neither POSIX nor
Unix. While you're at using GNU extensions, you could use
-print0:

find source -iname '*.xml' | while IFS= read -rd$'\0' file1...

as $'\0' won't be found in a file name.

>   file2=dest/${${file1##source/}:r}.txt
>   destdir=${file2:h}
>   [[ -d $destdir ]] || mkdir -p $destdir
>   filter < $file1 > $file2
> done
[...]

This can be done in zsh with:

for file1 in **/*.(#i)xml(.NDoN); do

That builds the whole list first, but you can also do:

process() {
  file2=dest/${${1#source/}:r}.txt
  destdir=${file2:h}
  [[ -d $destdir ]] || mkdir -p -- $destdir
  filter < $file1 > $file2
  return 1
}
: **/*.(#i)xml(.NDoN+process)


POSIXly, you could do:

find source -type f -name '*.[xX][mM][lL]' -exec sh -c '
  for file1 do
    file2=${file1%.*}.txt
    file2=dest/${file2#source/}
    destdir=${file2%/*}
    [ -d "$destdir" ] || mkdir -p -- "$destdir"
    filter < "$file1" > "$file2"
  done' inline {} +

-- 
Stéphane

