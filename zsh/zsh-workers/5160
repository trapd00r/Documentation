Delivered-To: mason-zsh@primenet.com.au
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
Resent-Date: Tue, 2 Feb 1999 00:24:35 -0500 (EST)
From: "SCoTTie :)" <scott@phobos.mobinfo.com.au>
Message-Id: <199902020422.PAA19723@phobos.mobinfo.com.au>
Subject: zsh BUG (3.1.5)
To: zsh-workers@math.gatech.edu
Date: Tue, 2 Feb 1999 15:22:02 +1100 (EST)
Cc: scott@phobos.mobinfo.com.au (Scott Smedley)
Reply-To: scott@mobinfo.com.au
Organization: Dynamic Transport Management Pty Ltd
X-URL: http://www.mobinfo.com.au
X-Mailer: ELM [version 2.4 PL24]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"3hFUz3.0.067.Jmejs"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Loop: zsh-workers@math.gatech.edu
Resent-Sender: zsh-workers-request@math.gatech.edu
X-Mailing-List: <zsh-workers@sunsite.auc.dk> 5160


Hi there! :)

I think I've found a bug in the latest version of ZSH (3.1.5).
It caused mE some grief with a program I wrote that did a
getenv("PWD"), which is how I managed to find it out.

Below is a transcript of a few commands I typed which highlight
this bug. It's to do with 'cd' & the 'PWD' environment variable:

JuPiTeR>> zsh -f					# As requested in README file.
JuPiTeR>> builtin cd /home/jupiter/scott/C
JuPiTeR>> builtin pwd
/home/jupiter/scott/C				# As expected.
JuPiTeR>> /usr/bin/env --version
env (GNU sh-utils) 1.16				# Just so you know.
JuPiTeR>> /usr/bin/env | grep PWD
PWD=/home/bart/scott				# D'OH! What's going on?
JuPiTeR>> builtin cd /etc
JuPiTeR>> builtin pwd
/etc								# As expected.
JuPiTeR>> /usr/bin/env | grep PWD	# Whoops! We're a bit behind.
PWD=/home/jupiter/scott/C

I'm pretty sure it's a bug cos I ran these same commands using
ZSH version 3.0.5 & it worked as expected. Also the Src/builtin.c
file seems to have had a lot of work since 3.0.5.

I'll append the output of 'reporter' @ the bottom of this e-mail.
There's a lot of crap there, I'm NOT sure u want it all , but it
can't hurt.

Anywayz, in spite of this minor inconvenience, ZSH JUST RULES! :)

Thanx 4 making such a KeWL shell! I couldn't live without it now!

SCoTT SMeDLeY :)
--------------------
scott@mobinfo.com.au

-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: PGPfreeware 5.0i for non-commercial use

mQBtAzaxUUkAAAEDALzHjojRkA3UynczlRKtNfxsJG9OIN6OBIIcU1Cw159+IqGl
p/+r4B8ZcpR19EpSJouDfcKTZWKCzlIPCw+7Wc3xbqG0ccRT5Y3YIo9ilTWQEFDO
iMcQ6rwzDWyNCuQSdwAFEbQeU0NvVFRpZSA8c2NvdHRAbW9iaW5mby5jb20uYXU+
iQB1AwUQNrFRSTMNbI0K5BJ3AQE6lwL+NxDvD/+TfUd4EnuQV9JQs2XUIQLXsPia
tPA8IeJR/FGBmFW/snlu0/jbN3W9Pu9AaClUrMQdq1B7klvYwMlCgJ2Qd1WLlqro
J80blheSWYmCHmvdb9+fSNC9nsAS3Gbr
=OoI0
-----END PGP PUBLIC KEY BLOCK-----

---------------- 'reporter' output starts here ----------------

# START zsh saveset
# uname:  Linux jupiter 2.0.35 #1 Tue Jul 14 23:56:39 EDT 1998 i586 unknown

# Aliases.

alias ls='ls --color'
alias run-help=man
alias which-command=whence

# Key bindings.

bindkey -N .safe
bindkey -N emacs
bindkey -N main
bindkey -N vicmd
bindkey -N viins

bindkey -R -M .safe "^@"-"^I" self-insert
bindkey -M .safe "^J" accept-line
bindkey -R -M .safe "^K"-"^L" self-insert
bindkey -M .safe "^M" accept-line
bindkey -R -M .safe "^N"-"\M-^?" self-insert

bindkey -M emacs "^@" set-mark-command
bindkey -M emacs "^A" beginning-of-line
bindkey -M emacs "^B" backward-char
bindkey -M emacs "^D" delete-char-or-list
bindkey -M emacs "^E" end-of-line
bindkey -M emacs "^F" forward-char
bindkey -M emacs "^G" send-break
bindkey -M emacs "^H" backward-delete-char
bindkey -M emacs "^I" expand-or-complete
bindkey -M emacs "^J" accept-line
bindkey -M emacs "^K" kill-line
bindkey -M emacs "^L" clear-screen
bindkey -M emacs "^M" accept-line
bindkey -M emacs "^N" down-line-or-history
bindkey -M emacs "^O" accept-line-and-down-history
bindkey -M emacs "^P" up-line-or-history
bindkey -M emacs "^Q" push-line
bindkey -M emacs "^R" history-incremental-search-backward
bindkey -M emacs "^S" history-incremental-search-forward
bindkey -M emacs "^T" transpose-chars
bindkey -M emacs "^U" kill-whole-line
bindkey -M emacs "^V" quoted-insert
bindkey -M emacs "^W" backward-kill-word
bindkey -M emacs "^X^B" vi-match-bracket
bindkey -M emacs "^X^F" vi-find-next-char
bindkey -M emacs "^X^J" vi-join
bindkey -M emacs "^X^K" kill-buffer
bindkey -M emacs "^X^N" infer-next-history
bindkey -M emacs "^X^O" overwrite-mode
bindkey -M emacs "^X^U" undo
bindkey -M emacs "^X^V" vi-cmd-mode
bindkey -M emacs "^X^X" exchange-point-and-mark
bindkey -M emacs "^X*" expand-word
bindkey -M emacs "^X=" what-cursor-position
bindkey -M emacs "^XG" list-expand
bindkey -M emacs "^Xg" list-expand
bindkey -M emacs "^Xr" history-incremental-search-backward
bindkey -M emacs "^Xs" history-incremental-search-forward
bindkey -M emacs "^Xu" undo
bindkey -M emacs "^Y" yank
bindkey -M emacs "^[^D" list-choices
bindkey -M emacs "^[^G" send-break
bindkey -M emacs "^[^H" backward-kill-word
bindkey -M emacs "^[^I" self-insert-unmeta
bindkey -M emacs "^[^J" self-insert-unmeta
bindkey -M emacs "^[^L" clear-screen
bindkey -M emacs "^[^M" self-insert-unmeta
bindkey -M emacs "^[^_" copy-prev-word
bindkey -M emacs "^[ " expand-history
bindkey -M emacs "^[!" expand-history
bindkey -M emacs "^[\"" quote-region
bindkey -M emacs "^[\$" spell-word
bindkey -M emacs "^['" quote-line
bindkey -M emacs "^[-" neg-argument
bindkey -M emacs "^[." insert-last-word
bindkey -M emacs "^[0" digit-argument
bindkey -M emacs "^[1" digit-argument
bindkey -M emacs "^[2" digit-argument
bindkey -M emacs "^[3" digit-argument
bindkey -M emacs "^[4" digit-argument
bindkey -M emacs "^[5" digit-argument
bindkey -M emacs "^[6" digit-argument
bindkey -M emacs "^[7" digit-argument
bindkey -M emacs "^[8" digit-argument
bindkey -M emacs "^[9" digit-argument
bindkey -M emacs "^[<" beginning-of-buffer-or-history
bindkey -M emacs "^[>" end-of-buffer-or-history
bindkey -M emacs "^[?" which-command
bindkey -M emacs "^[A" accept-and-hold
bindkey -M emacs "^[B" backward-word
bindkey -M emacs "^[C" capitalize-word
bindkey -M emacs "^[D" kill-word
bindkey -M emacs "^[F" forward-word
bindkey -M emacs "^[G" get-line
bindkey -M emacs "^[H" run-help
bindkey -M emacs "^[L" down-case-word
bindkey -M emacs "^[N" history-beginning-search-forward
bindkey -M emacs "^[OA" up-line-or-history
bindkey -M emacs "^[OB" down-line-or-history
bindkey -M emacs "^[OC" forward-char
bindkey -M emacs "^[OD" backward-char
bindkey -M emacs "^[P" history-beginning-search-backward
bindkey -M emacs "^[Q" push-line
bindkey -M emacs "^[S" spell-word
bindkey -M emacs "^[T" transpose-words
bindkey -M emacs "^[U" up-case-word
bindkey -M emacs "^[W" copy-region-as-kill
bindkey -M emacs "^[[A" up-line-or-history
bindkey -M emacs "^[[B" down-line-or-history
bindkey -M emacs "^[[C" forward-char
bindkey -M emacs "^[[D" backward-char
bindkey -M emacs "^[_" insert-last-word
bindkey -M emacs "^[a" accept-and-hold
bindkey -M emacs "^[b" backward-word
bindkey -M emacs "^[c" capitalize-word
bindkey -M emacs "^[d" kill-word
bindkey -M emacs "^[f" forward-word
bindkey -M emacs "^[g" get-line
bindkey -M emacs "^[h" run-help
bindkey -M emacs "^[l" down-case-word
bindkey -M emacs "^[n" history-beginning-search-forward
bindkey -M emacs "^[p" history-beginning-search-backward
bindkey -M emacs "^[q" push-line
bindkey -M emacs "^[s" spell-word
bindkey -M emacs "^[t" transpose-words
bindkey -M emacs "^[u" up-case-word
bindkey -M emacs "^[w" copy-region-as-kill
bindkey -M emacs "^[x" execute-named-cmd
bindkey -M emacs "^[y" yank-pop
bindkey -M emacs "^[z" execute-last-named-cmd
bindkey -M emacs "^[|" vi-goto-column
bindkey -M emacs "^[^?" backward-kill-word
bindkey -M emacs "^_" undo
bindkey -R -M emacs " "-"~" self-insert
bindkey -M emacs "^?" backward-delete-char
bindkey -R -M emacs "\M-^@"-"\M-^?" self-insert

bindkey "^@" set-mark-command
bindkey "^A" beginning-of-line
bindkey "^B" backward-char
bindkey "^D" delete-char-or-list
bindkey "^E" end-of-line
bindkey "^F" forward-char
bindkey "^G" send-break
bindkey "^H" backward-delete-char
bindkey "^I" expand-or-complete
bindkey "^J" accept-line
bindkey "^K" kill-line
bindkey "^L" clear-screen
bindkey "^M" accept-line
bindkey "^N" down-line-or-history
bindkey "^O" accept-line-and-down-history
bindkey "^P" up-line-or-history
bindkey "^Q" push-line
bindkey "^R" history-incremental-search-backward
bindkey "^S" history-incremental-search-forward
bindkey "^T" transpose-chars
bindkey "^U" kill-whole-line
bindkey "^V" quoted-insert
bindkey "^W" backward-kill-word
bindkey "^X^B" vi-match-bracket
bindkey "^X^F" vi-find-next-char
bindkey "^X^J" vi-join
bindkey "^X^K" kill-buffer
bindkey "^X^N" infer-next-history
bindkey "^X^O" overwrite-mode
bindkey "^X^U" undo
bindkey "^X^V" vi-cmd-mode
bindkey "^X^X" exchange-point-and-mark
bindkey "^X*" expand-word
bindkey "^X=" what-cursor-position
bindkey "^XG" list-expand
bindkey "^Xg" list-expand
bindkey "^Xr" history-incremental-search-backward
bindkey "^Xs" history-incremental-search-forward
bindkey "^Xu" undo
bindkey "^Y" yank
bindkey "^[^D" list-choices
bindkey "^[^G" send-break
bindkey "^[^H" backward-kill-word
bindkey "^[^I" self-insert-unmeta
bindkey "^[^J" self-insert-unmeta
bindkey "^[^L" clear-screen
bindkey "^[^M" self-insert-unmeta
bindkey "^[^_" copy-prev-word
bindkey "^[ " expand-history
bindkey "^[!" expand-history
bindkey "^[\"" quote-region
bindkey "^[\$" spell-word
bindkey "^['" quote-line
bindkey "^[-" neg-argument
bindkey "^[." insert-last-word
bindkey "^[0" digit-argument
bindkey "^[1" digit-argument
bindkey "^[2" digit-argument
bindkey "^[3" digit-argument
bindkey "^[4" digit-argument
bindkey "^[5" digit-argument
bindkey "^[6" digit-argument
bindkey "^[7" digit-argument
bindkey "^[8" digit-argument
bindkey "^[9" digit-argument
bindkey "^[<" beginning-of-buffer-or-history
bindkey "^[>" end-of-buffer-or-history
bindkey "^[?" which-command
bindkey "^[A" accept-and-hold
bindkey "^[B" backward-word
bindkey "^[C" capitalize-word
bindkey "^[D" kill-word
bindkey "^[F" forward-word
bindkey "^[G" get-line
bindkey "^[H" run-help
bindkey "^[L" down-case-word
bindkey "^[N" history-beginning-search-forward
bindkey "^[OA" up-line-or-history
bindkey "^[OB" down-line-or-history
bindkey "^[OC" forward-char
bindkey "^[OD" backward-char
bindkey "^[P" history-beginning-search-backward
bindkey "^[Q" push-line
bindkey "^[S" spell-word
bindkey "^[T" transpose-words
bindkey "^[U" up-case-word
bindkey "^[W" copy-region-as-kill
bindkey "^[[A" up-line-or-history
bindkey "^[[B" down-line-or-history
bindkey "^[[C" forward-char
bindkey "^[[D" backward-char
bindkey "^[_" insert-last-word
bindkey "^[a" accept-and-hold
bindkey "^[b" backward-word
bindkey "^[c" capitalize-word
bindkey "^[d" kill-word
bindkey "^[f" forward-word
bindkey "^[g" get-line
bindkey "^[h" run-help
bindkey "^[l" down-case-word
bindkey "^[n" history-beginning-search-forward
bindkey "^[p" history-beginning-search-backward
bindkey "^[q" push-line
bindkey "^[s" spell-word
bindkey "^[t" transpose-words
bindkey "^[u" up-case-word
bindkey "^[w" copy-region-as-kill
bindkey "^[x" execute-named-cmd
bindkey "^[y" yank-pop
bindkey "^[z" execute-last-named-cmd
bindkey "^[|" vi-goto-column
bindkey "^[^?" backward-kill-word
bindkey "^_" undo
bindkey -R " "-"~" self-insert
bindkey "^?" backward-delete-char
bindkey -R "\M-^@"-"\M-^?" self-insert

bindkey -a "^D" list-choices
bindkey -a "^G" list-expand
bindkey -a "^H" vi-backward-char
bindkey -a "^J" accept-line
bindkey -a "^L" clear-screen
bindkey -a "^M" accept-line
bindkey -a "^N" down-history
bindkey -a "^P" up-history
bindkey -a "^R" redisplay
bindkey -a "^[OA" up-line-or-history
bindkey -a "^[OB" down-line-or-history
bindkey -a "^[OC" vi-forward-char
bindkey -a "^[OD" vi-backward-char
bindkey -a "^[[A" up-line-or-history
bindkey -a "^[[B" down-line-or-history
bindkey -a "^[[C" vi-forward-char
bindkey -a "^[[D" vi-backward-char
bindkey -a " " vi-forward-char
bindkey -a "\"" vi-set-buffer
bindkey -a "#" pound-insert
bindkey -a "\$" vi-end-of-line
bindkey -a "%" vi-match-bracket
bindkey -a "'" vi-goto-mark-line
bindkey -a "+" vi-down-line-or-history
bindkey -a "," vi-rev-repeat-find
bindkey -a -- "-" vi-up-line-or-history
bindkey -a "." vi-repeat-change
bindkey -a "/" vi-history-search-backward
bindkey -a "0" vi-digit-or-beginning-of-line
bindkey -R -a "1"-"9" digit-argument
bindkey -a ";" vi-repeat-find
bindkey -a "<" vi-unindent
bindkey -a "=" list-choices
bindkey -a ">" vi-indent
bindkey -a "?" vi-history-search-forward
bindkey -a "A" vi-add-eol
bindkey -a "B" vi-backward-blank-word
bindkey -a "C" vi-change-eol
bindkey -a "D" vi-kill-eol
bindkey -a "E" vi-forward-blank-word-end
bindkey -a "F" vi-find-prev-char
bindkey -a "G" vi-fetch-history
bindkey -a "I" vi-insert-bol
bindkey -a "J" vi-join
bindkey -a "N" vi-rev-repeat-search
bindkey -a "O" vi-open-line-above
bindkey -a "P" vi-put-before
bindkey -a "R" vi-replace
bindkey -a "S" vi-change-whole-line
bindkey -a "T" vi-find-prev-char-skip
bindkey -a "W" vi-forward-blank-word
bindkey -a "X" vi-backward-delete-char
bindkey -a "Y" vi-yank-whole-line
bindkey -a "\^" vi-first-non-blank
bindkey -a "\`" vi-goto-mark
bindkey -a "a" vi-add-next
bindkey -a "b" vi-backward-word
bindkey -a "c" vi-change
bindkey -a "d" vi-delete
bindkey -a "e" vi-forward-word-end
bindkey -a "f" vi-find-next-char
bindkey -a "h" vi-backward-char
bindkey -a "i" vi-insert
bindkey -a "j" down-line-or-history
bindkey -a "k" up-line-or-history
bindkey -a "l" vi-forward-char
bindkey -a "m" vi-set-mark
bindkey -a "n" vi-repeat-search
bindkey -a "o" vi-open-line-below
bindkey -a "p" vi-put-after
bindkey -a "r" vi-replace-chars
bindkey -a "s" vi-substitute
bindkey -a "t" vi-find-next-char-skip
bindkey -a "u" vi-undo-change
bindkey -a "w" vi-forward-word
bindkey -a "x" vi-delete-char
bindkey -a "y" vi-yank
bindkey -a "|" vi-goto-column
bindkey -a "~" vi-swap-case
bindkey -a "^?" vi-backward-char

bindkey -R -M viins "^A"-"^C" self-insert
bindkey -M viins "^D" list-choices
bindkey -R -M viins "^E"-"^F" self-insert
bindkey -M viins "^G" list-expand
bindkey -M viins "^H" vi-backward-delete-char
bindkey -M viins "^I" expand-or-complete
bindkey -M viins "^J" accept-line
bindkey -M viins "^K" self-insert
bindkey -M viins "^L" clear-screen
bindkey -M viins "^M" accept-line
bindkey -R -M viins "^N"-"^P" self-insert
bindkey -M viins "^Q" vi-quoted-insert
bindkey -M viins "^R" redisplay
bindkey -R -M viins "^S"-"^T" self-insert
bindkey -M viins "^U" vi-kill-line
bindkey -M viins "^V" vi-quoted-insert
bindkey -M viins "^W" vi-backward-kill-word
bindkey -R -M viins "^X"-"^Z" self-insert
bindkey -M viins "^[" vi-cmd-mode
bindkey -R -M viins "^\\\\"-"~" self-insert
bindkey -M viins "^?" vi-backward-delete-char
bindkey -R -M viins "\M-^@"-"\M-^?" self-insert

# Completions.

compctl -C -c
compctl -D -f
compctl -T

# Undefined functions.


# Defined functions.

a2fax () {
        a2ps -p -1 -F10 -H"FAX MESSAGE" $*
}
a2memo () {
        a2ps -p -1 -F10 -HMEMO $*
}
a2p10 () {
        a2ps -p -1 -F10 $*
}
a2psh () {
        a2ps -h
        echo font="  8   7   6   5   4   3"
        echo "wide= 154
167 206 248 311 415"
}
a2pt () {
        a2ps -nP $* > /dev/null
}
a2release () {
        a2ps -p -1 -F10 -H"RELEASE NOTES / PACKING LIST" $*
}
a2wide () {
        a2ps -l -1 $*
}
b () {
        $SDE_PERL $SDE_BIN/build.pl $*
}
bartw () {
        rsh -n bart xterm -d $HOSTDISPLAY &
}
bb () {
        $SDE_PERL $SDE_BIN/build.pl bin $*
}
bbp () {
        $SDE_PERL $SDE_BIN/build.pl cc=g++ bin acf=-DDTM_CPP $*
}
bbsp () {
        $SDE_PERL $SDE_BIN/build.pl cc=g++ bin acf=-DDTM_CPP alf=-static $*
}
bl () {
        $SDE_PERL $SDE_BIN/build.pl lib $*
}
blank () {
        lpr /home/lisa/etc/blank.ps
}
blp () {
        $SDE_PERL $SDE_BIN/build.pl cc=g++ lib acf=-DDTM_CPP $*
}
bp () {
        $SDE_PERL $SDE_BIN/build.pl cc=g++ acf=-DDTM_CPP $*
}
br () {
        $SDE_PERL $SDE_BIN/build.pl rsc $*
}
brp () {
        $SDE_PERL $SDE_BIN/build.pl cc=g++ rsc acf=-DDTM_CPP $*
}
build () {
        $SDE_PERL $SDE_BIN/build.pl $*
}
bye () {
        logout
}
catn () {
        cat > /dev/null
}
cf () {
        $SDE_PERL $SDE_BIN/createfile.pl $*
}
cf2 () {
        $SDE_PERL $SDE_BIN/createfile.pl -c $*
        $SDE_PERL $SDE_BIN/createfile.pl -h $*
}
createfile () {
        $SDE_PERL $SDE_BIN/createfile.pl $*
}
d () {
        ls -alF $*
}
dpt () {
        cd $DPT_HOME
        pwd
}
f () {
        finger $*
}
fb_addrel () {
        $SDE_PERL $SDE_BIN/fb_addrel.pl $*
}
fb_delrel () {
        $SDE_PERL $SDE_BIN/fb_delrel.pl $*
}
fb_search () {
        $SDE_PERL $SDE_BIN/fb_search.pl $*
}
fdpt () {
        find $DPT_HOME -name \!$ -print
}
ff () {
        find / -name $1 -print
}
findfile () {
        find `cat \$DPT_HOME/prod/\*/product.cfg \| sed \""s|[^/]*/|/|"\" \| sort \| uniq` -name $1 -print
}
findm () {
        find $* -printf "%02Ty-%02Tm-%02Td %TT%9s %p\n" | sort
}
finds () {
        find $* -printf "%9s %02Ty-%02Tm-%02Td %TT %p\n" | sort
}
findu () {
        find $* -printf "%02Ay-%02Am-%02Ad %AT%9s %p\n" | sort
}
gbug () {
        name=`pwd | xargs basename` 
        type=`type $name || return` 
        path_to_exe=`echo $type | sed 's/.* //'` 
        path_to_init=`echo $path_to_exe | sed s,'/[^/]*$',/.gdbinit_$name,` 
        gdb -x $path_to_init $path_to_exe
}
gi () {
        cd ../../inc
}
gp () {
        if ! gpt
        then
                false
                return
        fi
        if [ $# = 0 ]
        then
                if [ -n "$PRODUCT" ]
                then
                        cd $PRODUCT
                fi
        elif [ ! -d "$1" ]
        then
                echo "Product specified does NOT exist in this TREE"
                false
                return
        else
                PRODUCT=$1 
                cd $1
        fi
        true
        return
}
gpi () {
        if ! gp $1
        then
                false
                return
        fi
        cd gen/inc
        true
        return
}
gps () {
        if [ $# -eq 1 ]
        then
                if ! gp $1 >& /dev/null
                then
                        if ! gp $PRODUCT
                        then
                                echo "Product specified does NOT exist in this TREE"
                                false
                                return
                        elif [ -d gen/src/$1 ]
                        then
                                cd gen/src/$1
                                true
                                return
                        else
                                echo "Product/Subdirectory specified does NOT exist in this TREE"
                                false
                                return
                        fi
                fi
        else
                if ! gp $1
                then
                        false
                        return
                fi
        fi
        cd gen/src
        if [ $# -ge 2 ]
        then
                if [ ! -d "$2" ]
                then
                        echo "$2 NOT found in src directory"
                else
                        cd $2
                fi
        fi
        true
        return
}
gpt () {
        case "$PWD" in
                */prod*) TREE=`echo $PWD | sed "s,prod/.*,prod,"`  ;;
                *) if [ -d prod ]
                        then
                                TREE=$PWD/prod 
                        elif [ -z "$TREE" ]
                        then
                                echo "No tree specified"
                                false
                                return
                        fi ;;
        esac
        cd $TREE
        true
        return
}
grepi () {
        grep -i $*
}
grepn () {
        grep -n $*
}
h () {
        if [ $# = 0 ]
        then
                fc -ld 1
        else
                fc -ld -$1
        fi
}
i () {
        echo -n "$USER on "
        pwd
}
inc () {
        cd $INC
        pwd
}
inc1 () {
        cd $INC1
        pwd
}
inc2 () {
        cd $INC2
        pwd
}
ind () {
        indent $* -bl -c0 -nce -d0 -di8 -l80 -pcs -nlp
}
k () {
        exit
}
killg () {
        kill `psg \!\^ \| awk \'\{print \$2\}\'`
}
l () {
        ll $*
}
la () {
        ll -a $*
}
lc () {
        ll -crt $*
}
less () {
        /usr/bin/less -x4 $*
}
lf () {
        ls -F $*
}
ll () {
        ls -lF $*
}
lss () {
        ll $* | sed s/^..............................// | sort -n
}
lt () {
        ll -rt $*
}
ltt () {
        lt $* | tail -4
}
lu () {
        ll -urt $*
}
m () {
        less -x4 $*
}
makemake () {
        $SDE_PERL $SDE_BIN/makemake.pl $*
}
manpath () {
        $SDE_PERL -e '$ENV{MANPATH} =~ s/:/\n/g; print $ENV{MANPATH},
"\n"'
}
mans () {
        man $* | man2text | less
}
mis_ap_req () {
        $SDE_PERL $SDE_BIN/mis_ap_req.pl $*
}
mm () {
        $SDE_PERL $SDE_BIN/makemake.pl $*
}
mmail () {
        m /usr/spool/mail/$USER
}
nedit () {
        nc -noask $*
}
netstatf () {
        netstat -ne \| $SDE_PERL -ne 'next if /\^unix/\; s/\^\(....\)...../\$1/\; s/\\s+\$/\\n/\; \$a = \(split\(/\\s+/, \$_\)\)\[4\]\; print if \$a \!~ /\^192\\.168\\.0/ \&\& \$a \!~ /\^127\\.0\\.0/' \; netstat -M
}
netstatfo () {
        netstat -n \| $SDE_PERL -ne 's/\^\(....\)...../\$1/\; s/\\s+\$/\\n/\; \$a = \(split\(/\\s+/, \$_\)\)\[4\]\; print if \$a \!~ /\^192\\.168\\.0/ \&\& \$a \!~ /\^127\\.0\\.0/'
}
p () {
        dirs $*
}
path () {
        $SDE_PERL -e '$ENV{PATH} =~ s/:/\n/g; print $ENV{PATH}, "\n"'
}
pd () {
        pushd $*
}
pgrep () {
        $SDE_PERL -n -e 'print "$ARGV:$_" if /$1/' $2
}
pingd () {
        ping `route -n \| grep \'\^default\' \| awk \'\{print \$2\}\'`
}
po () {
        popd $*
}
postcode () {
        grep -i $1 /home/lisa/local/etc/postcodes
}
pppc () {
        pppd defaultroute /dev/modem 38400
}
pppf () {
        $SDE_PERL $SDE_BIN/preProcessPerlFile.pl $*
}
precmd () {
        print -nP '%{\e]2;%n@%m   %~\a\e]1;%n@%m\a%} '
}
prt_check () {
        $SDE_PERL $SDE_BIN/prt_check.pl $*
}
prt_diff () {
        $SDE_PERL $SDE_BIN/prt_diff.pl $*
}
psa () {
        ps auwwx $*
}
psg () {
        ps auxww | grep $*
}
psu () {
        ps auwwx | grep ^$USER
}
psus () {
        ps auwwx | grep -v "^root" | sort
}
qt () {
        setenv TERM q102
}
rci () {
        $SDE_PERL $SDE_BIN/rci.pl $*
}
rco () {
        $SDE_PERL $SDE_BIN/rco.pl $*
}
rcoall () {
        $SDE_PERL $SDE_BIN/rcoall.pl $*
}
rcoallhere () {
        $SDE_BIN/rcoallhere.csh $*
}
rcol () {
        rco -l $*
}
rdiff () {
        $SDE_PERL $SDE_BIN/rdiff.pl $*
}
redirect_cfgs () {
        $SDE_PERL $SDE_BIN/redirect_cfgs.pl $*
}
release_diff () {
        $SDE_PERL $SDE_BIN/release_diff.pl $*
}
release_prod () {
        $SDE_PERL $SDE_BIN/release_prod.pl $*
}
rlog () {
        $SDE_PERL $SDE_BIN/rlog.pl $*
}
rtell () {
        $SDE_PERL $SDE_BIN/rtell.pl $*
}
run () {
        rm -f core && `which $cwd:t`
}
s () {
        source $*
}
sd () {
        /sbin/shutdown -h now
}
setenv () {
        eval "$1=$2"
        export $1
}
si () {
        INC=`pwd` 
        export INC
}
si1 () {
        INC1=`pwd` 
        export INC1
}
si2 () {
        INC2=`pwd` 
        export INC2
}
source () {
        . $*
}
spt_fromrel () {
        $SDE_PERL $SDE_BIN/spt_fromrel.pl $*
}
sptcreate () {
        $SDE_PERL $SDE_BIN/sptcreate.pl $*
}
sptdestroy () {
        $SDE_PERL $SDE_BIN/sptdestroy.pl $*
}
src () {
        cd $SRC
        pwd
}
src1 () {
        cd $SRC1
        pwd
}
src2 () {
        cd $SRC2
        pwd
}
src3 () {
        cd $SRC3
        pwd
}
src4 () {
        cd $SRC4
        pwd
}
ss () {
        SRC=`pwd` 
        export SRC
}
ss1 () {
        SRC1=`pwd` 
        export SRC1
}
ss2 () {
        SRC2=`pwd` 
        export SRC2
}
ss3 () {
        SRC3=`pwd` 
        export SRC3
}
ss4 () {
        SRC4=`pwd` 
        export SRC4
}
stracef () {
        strace -etrace=open,close,stat,lstat,access,readlink,utime,chmod,chown,socket,readdir $*
}
tapec () {
        cpio -ocv | dd of=$TAPE obs=128k
}
tapec512 () {
        cpio -ocv | dd of=$TAPE obs=512k
}
tapet () {
        dd if=$TAPE ibs=128k | cpio -ictv
}
tapet512 () {
        dd if=$TAPE ibs=512k | cpio -ictv
}
tapex () {
        dd if=$TAPE ibs=128k | cpio -icdvmu
}
tapex512 () {
        dd if=$TAPE ibs=512k | cpio -icdvmu
}
tart () {
        gzip -dc $1 | tar tvf -
}
tarx () {
        gzip -dc $1 | tar xvpf -
}
ulb () {
        cd /usr/local/bin
        pwd
}
unsetenv () {
        unset $*
}
version_diff () {
        $SDE_PERL $SDE_BIN/version_diff.pl $*
}
version_notes () {
        $SDE_PERL $SDE_BIN/version_notes.pl $*
}
vt () {
        setenv TERM vt100
}
warn () {
        egrep ':\[\^0-9\]'
}
wd () {
        env | grep DISPLAY
}
wis () {
        env | grep INC
}
wp () {
        ps -ef | grep $*
}
wss () {
        env | grep SRC
}
xl () {
        xterm -T less -e less $* &
}
xless () {
        xterm -e less $*
}
xv () {
        /usr/bin/X11/xv -nolimits -8 -perfect $*
}

# Limits.

limit stacksize       8MB
limit coredumpsize    0kB
limit maxproc         256
limit descriptors     256

# Modules: zmodload not available.

# Non-array variables.

TERMCAP=''
TERM='xterm'
\'#\'="0"
\'$\'="13894"
\'?\'="1"
APPENDHISTORY="1"
ARCHITECTURE="linux"
ARGC="0"
AWK="awk"
BAUD="0"
CDPATH="\'\'"
COLUMNS="80"
COMPLETEINWORD="1"
CPP="/lib/cpp"
DIRCONTROL="/home/jupiter/scott/.dirControl"
DIRFILE="/home/jupiter/scott/.dir"
DISPLAY="jupiter:0"
DPT_HOME="/home/itchy/DPT"
EGID="150"
ERRNO="0"
EUID="134"
EXINIT="\'set ts=4 noai showmode exrc\'"
FCEDIT="vi"
FIGNORE="\'\'"
FMHOME="/home/lisa/Frame55"
FPATH="\'\'"
GDBHISTFILE="/home/jupiter/scott/.gdb_history"
GID="150"
GLOBDOTS="1"
HISTCHARS="\'!^#\'"
HISTFILE="/home/jupiter/scott/.history.jupiter"
HISTSIZE="128"
HOME="/home/bart/scott"
HOST="jupiter"
HOSTNAME="jupiter"
INFOPATH="/usr/local/info:/usr/local/lib/xemacs-19.14/info"
KEYTIMEOUT="40"
LD_LIBRARY_PATH="/usr/X11/lib"
LESSOPEN="\'|/home/bart/scott/scripts/lesspipe.sh %s\'"
LINENO="339"
LINES="24"
LISTMAX="100"
LOGCHECK="60"
LOGNAME="scott"
LS_COLORS="\'no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.deb=01;31:*.jpg=01;35:*.gif=01;35:*.bmp=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.mpg=01;37:*.avi=01;37:*.gl=01;37:*.dl=01;37:\'"
MACHINE="JuPiTeR"
MACHTYPE="i586"
MAIL="/var/spool/mail/scott"
MAILCHECK="60"
MAILPATH="\'\'"
MANPATH="/usr/lib/perl5/man:/usr/local/lib/perl5/man:/usr/local/man:/usr/man:/usr/man/preformat:/usr/X11/man:/usr/openwin/man"
NNTPSERVER="phobos"
NULLCMD="cat"
OLDPWD="/etc"
OPENWINHOME="/usr/openwin"
OPTARG="\'\'"
OPTIND="1"
OSTYPE="Linux"
PAGER="\'exec less -s\'"
PATH="/home/lisa/Frame55/bin:/home/lisa/etc/scripts:/home/sideshow-bob/SDE/RELEASES/dtmperl-1.5.0/linux/bin:/home/sideshow-bob/SDE/RELEASES/sde-4.2.0/bin/linux:/home/sideshow-bob/SDE/RELEASES/sde-4.2.0/bin:/home/bart/scott/bin:../../linux/bin:../../../gen/linux/bin:/usr/local/bin:/bin:/usr/bin:/usr/bin/X11:/usr/X11/bin:/sbin:/usr/sbin:/usr/ucb:."
PERL_1="dtmperl-1.5.0"
PERL_CURR_VERS="dtmperl-1.4.1"
PERL_HOME="/home/sideshow-bob/SDE"
PERL_VERSIONS="1"
POSTEDIT="\'\'"
PPID="13859"
PRINTER="laserjet"
PROMPT="\'jupiter.scott$ \'"
PROMPT2="\'\'"
PROMPT3="\'?# \'"
PROMPT4="\'+ \'"
PS1="\'jupiter.scott$ \'"
PS2="\'\'"
PS3="\'?# \'"
PS4="\'+ \'"
PSVAR="\'\'"
PWD="/etc"
RANDOM="14412"
READNULLCMD="more"
REMOTEHOST="jupiter"
RPROMPT="\'\'"
RPS1="\'\'"
SAVEHIST="256"
SDE_1="sde-4.0.0"
SDE_2="sde-4.0.1"
SDE_3="sde-4.0.2"
SDE_4="sde-4.0.3"
SDE_5="sde-4.0.4"
SDE_6="sde-4.1.0"
SDE_7="sde-4.1.1"
SDE_8="sde-4.2.0"
SDE_BIN="/home/sideshow-bob/SDE/RELEASES/sde-4.2.0/bin"
SDE_CURR="/home/sideshow-bob/SDE/RELEASES/sde-4.2.0"
SDE_CURR_VERS="sde-4.2.0"
SDE_HOME="/home/sideshow-bob/SDE"
SDE_LIB="/home/sideshow-bob/SDE/RELEASES/sde-4.2.0/lib"
SDE_PERL="/home/sideshow-bob/SDE/RELEASES/dtmperl-1.5.0/linux/bin/perl"
SDE_PERL_DIR="/home/sideshow-bob/SDE/RELEASES/dtmperl-1.5.0/linux/bin"
SDE_RSC="/home/sideshow-bob/SDE/RELEASES/sde-4.2.0/rsc"
SDE_VERSIONS="8"
SECONDS="5"
SHELL="/bin/zsh"
SHLVL="3"
SPROMPT="\'zsh: correct \'\\'\'%R\'\\'\' to \'\\'\'%r\'\\'\' [nyae]? \'"
TAPE="/dev/st0"
TIMEFMT="\'%J  %U user %S system %P cpu %*E total\'"
TMPPREFIX="/tmp/zsh"
TTY="/dev/ttyr2"
TTYIDLE="-1"
UID="134"
USER="scott"
USERNAME="scott"
VENDOR="pc"
WATCH="\'\'"
WATCHFMT="\'%n has %a %l from %m.\'"
WORDCHARS="\'*?_-.[]~=/&;!#$%^(){}<>\'"
X11HOME="/usr/X11R6"
XAPPLRESDIR="/usr/local/lib/X11/app-defaults"
XFILESEARCHPATH="/usr/local/X11/lib"
ZSH_NAME="zsh"
ZSH_VERSION="3.1.5"
each="/bin"
histchars="\'!^#\'"
reporter_OSVersion="Linux_2.0.35"
reporter_junkiequotes="no"
status="1"
str="\'Linux jupiter 2.0.35 #1 Tue Jul 14 23:56:39 EDT 1998 i586 unknown\'"
prompt='test%'

# Array variables.

argv=()
'*'=()
cdpath=()
fignore=()
fpath=()
mailpath=()
manpath=(/usr/lib/perl5/man /usr/local/lib/perl5/man /usr/local/man /usr/man /usr/man/preformat /usr/X11/man /usr/openwin/man)
path=(/home/lisa/Frame55/bin /home/lisa/etc/scripts /home/sideshow-bob/SDE/RELEASES/dtmperl-1.5.0/linux/bin /home/sideshow-bob/SDE/RELEASES/sde-4.2.0/bin/linux /home/sideshow-bob/SDE/RELEASES/sde-4.2.0/bin /home/bart/scott/bin ../../linux/bin ../../../gen/linux/bin /usr/local/bin /bin /usr/bin /usr/bin/X11 /usr/X11/bin /sbin /usr/sbin /usr/ucb .)
psvar=()
signals=(EXIT HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH IO PWR UNUSED ZERR DEBUG)
watch=()

# Exported variables.

export TERMCAP
export TERM
export APPENDHISTORY=1
export ARCHITECTURE=linux
export COMPLETEINWORD=1
export DIRCONTROL=/home/jupiter/scott/.dirControl
export DIRFILE=/home/jupiter/scott/.dir
export DISPLAY=jupiter:0
export DPT_HOME=/home/itchy/DPT
export EXINIT='set ts=4 noai showmode exrc'
export FMHOME=/home/lisa/Frame55
export GDBHISTFILE=/home/jupiter/scott/.gdb_history
export GLOBDOTS=1
export HISTFILE=/home/jupiter/scott/.history.jupiter
export HISTSIZE=128
export HOME=/home/bart/scott
export HOSTNAME=jupiter
export INFOPATH=/usr/local/info:/usr/local/lib/xemacs-19.14/info
export LD_LIBRARY_PATH=/usr/X11/lib
export LESSOPEN='|/home/bart/scott/scripts/lesspipe.sh %s'
export LOGNAME=scott
export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.deb=01;31:*.jpg=01;35:*.gif=01;35:*.bmp=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.mpg=01;37:*.avi=01;37:*.gl=01;37:*.dl=01;37:'
export MACHINE=JuPiTeR
export MAIL=/var/spool/mail/scott
export MANPATH=/usr/lib/perl5/man:/usr/local/lib/perl5/man:/usr/local/man:/usr/man:/usr/man/preformat:/usr/X11/man:/usr/openwin/man
export NNTPSERVER=phobos
export OLDPWD=/etc
export OPENWINHOME=/usr/openwin
export OSTYPE=Linux
export PATH=/home/lisa/Frame55/bin:/home/lisa/etc/scripts:/home/sideshow-bob/SDE/RELEASES/dtmperl-1.5.0/linux/bin:/home/sideshow-bob/SDE/RELEASES/sde-4.2.0/bin/linux:/home/sideshow-bob/SDE/RELEASES/sde-4.2.0/bin:/home/bart/scott/bin:../../linux/bin:../../../gen/linux/bin:/usr/local/bin:/bin:/usr/bin:/usr/bin/X11:/usr/X11/bin:/sbin:/usr/sbin:/usr/ucb:.
export PERL_1=dtmperl-1.5.0
export PERL_CURR_VERS=dtmperl-1.4.1
export PERL_HOME=/home/sideshow-bob/SDE
export PERL_VERSIONS=1
export PRINTER=laserjet
export PROMPT='jupiter.scott$ '
export PWD=/etc
export REMOTEHOST=jupiter
export SAVEHIST=256
export SDE_1=sde-4.0.0
export SDE_2=sde-4.0.1
export SDE_3=sde-4.0.2
export SDE_4=sde-4.0.3
export SDE_5=sde-4.0.4
export SDE_6=sde-4.1.0
export SDE_7=sde-4.1.1
export SDE_8=sde-4.2.0
export SDE_BIN=/home/sideshow-bob/SDE/RELEASES/sde-4.2.0/bin
export SDE_CURR=/home/sideshow-bob/SDE/RELEASES/sde-4.2.0
export SDE_CURR_VERS=sde-4.2.0
export SDE_HOME=/home/sideshow-bob/SDE
export SDE_LIB=/home/sideshow-bob/SDE/RELEASES/sde-4.2.0/lib
export SDE_PERL=/home/sideshow-bob/SDE/RELEASES/dtmperl-1.5.0/linux/bin/perl
export SDE_PERL_DIR=/home/sideshow-bob/SDE/RELEASES/dtmperl-1.5.0/linux/bin
export SDE_RSC=/home/sideshow-bob/SDE/RELEASES/sde-4.2.0/rsc
export SDE_VERSIONS=8
export SHELL=/bin/zsh
export SHLVL=3
export TAPE=/dev/st0
export TERM=xterm
export USER=scott
export X11HOME=/usr/X11R6
export XAPPLRESDIR=/usr/local/lib/X11/app-defaults
export XFILESEARCHPATH=/usr/local/X11/lib

# Setopt.


# END zsh saveset


