From zsh-workers-return-5608-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Mar 02 17:10:36 1999
Return-Path: <zsh-workers-return-5608-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 23067 invoked from network); 2 Mar 1999 17:10:35 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 2 Mar 1999 17:10:35 -0000
Received: (qmail 16574 invoked by alias); 2 Mar 1999 17:10:13 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 5608
Received: (qmail 16556 invoked from network); 2 Mar 1999 17:10:11 -0000
Sender: B.Stephens@isode.com
To: ZSH workers mailing list <zsh-workers@sunsite.auc.dk>
Subject: Re: Reading completion manual
References: <000501be64cd$1bc57030$21c9ca95@mowp.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
From: Bruce Stephens <B.Stephens@isode.com>
Date: 02 Mar 1999 17:09:40 +0000
In-Reply-To: "Andrej Borsenkow"'s message of "Tue, 2 Mar 1999 19:52:50 +0300"
Message-ID: <vbzp5vu8bv.fsf@snake.isode.com>
Lines: 27
User-Agent: Gnus/5.070079 (Pterodactyl Gnus v0.79) XEmacs/20.4 (Emerald)

"Andrej Borsenkow" <borsenkow.msk@sni.de> writes:

>  - use new option character (do we have one free?)
>  - implement long options
>  - (really wild one) implement name spaces.
> 
> I'd like the last one, but it is probably impossible. A command name
> may have any character, so there is simply no char that can be
> (safely) used as delimiter. So, long options is probably the only
> viable solution. And quite useful in other places as well.

I thought namespaces had been discussed before?  What's the objection
to allowing "." in variable names, and regarding it as a component
delimiter in function/command names?  Hmm, this isn't a good idea; I
quite often use things like "cp $i $i.bak" and stuff.  I wonder how
ksh93 copes with this?  Maybe you have to predeclare name
spaces---that would be acceptable and sufficient, I should think.

I seem to remember that ksh93 supports this kind of use, and the
defines a number of special components which, if set, change the way
that variable assignment and things get done.  

(So if you have a function foo.WRITE, then that gets called when you
try to write to foo.  Something like that, anyway.  A better interface
might be to copy the Perl tie ideas---allowing special associative
arrays and things as Bart suggested; you wouldn't need name spaces for
this, of course.)

