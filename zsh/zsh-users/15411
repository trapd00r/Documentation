From zsh-users-return-15411-mason-zsh=primenet.com.au@zsh.org Sun Sep 19 11:59:23 2010
Return-Path: <zsh-users-return-15411-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 27481 invoked by alias); 19 Sep 2010 11:59:22 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15411
Received: (qmail 26238 invoked from network); 19 Sep 2010 11:59:19 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.0 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,HTML_MESSAGE,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: pass (ns1.primenet.com.au: SPF record at _spf.google.com designates 209.85.216.43 as permitted sender)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:mime-version:received:in-reply-to
         :references:from:date:message-id:subject:to:cc:content-type;
        bh=uDfG1XB471wsrk/gJCkWbKGwFQnfX1xaLuJWXMskCmA=;
        b=Z+OZ505JU+TLMP7HTDp6MPiL/R1JI0YiJj8bhrU1BCqWFDa/5zwfZ/XxQUtO0vZ4jg
         17NBXkkyfIxAJSL3Xc5l0muLskBvsmAfmVzymQGDIEp64AOnxh5jSK2+BgbYos/EsW++
         lfa1ofN05c5vTcjB8i6ykDudTZuS2S7sRWum8=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type;
        b=mvwmJPzkGn9EJNnsQJjLg9O+xADCW/wtCrCQIAgkYmnHgZa0nh04oi5jn2hDsfEL/q
         fYXz7PGLelV31jNKuaeknLmMMS+nAgGdu1YGOy03ZqClz9o1uGiqAokouWi9X24gq1Zq
         DvoXHv+26Gky3oufGtfym8mD6yBp0bOrb8NT0=
MIME-Version: 1.0
In-Reply-To: <AANLkTin4ufgJ-5WHPxojvuukJiksMaqywFJtU0-So1Mo@mail.gmail.com>
References: <AANLkTinNJXay4pibEiQmKR4PSRcNiwCJ3w==Scc9rco0@mail.gmail.com>
 <20100913130345.GA9240@Lancelot> <AANLkTikq=h-awW+-HAB8-QWdg0dWTuY+uydMu-Ezmt-0@mail.gmail.com>
 <6227C736-CCD3-4E09-A922-106573F3D70D@biskalar.de> <AANLkTimj6n_qSd3_5Egk6RN=v47GwWBb+W3_MjWpMs4t@mail.gmail.com>
 <AANLkTi=28cEq+XhxCy7pYKtu+bmSNG3QSKMfBUckJ7Tc@mail.gmail.com>
 <20100918230945.GA4530@Lancelot> <AANLkTin4ufgJ-5WHPxojvuukJiksMaqywFJtU0-So1Mo@mail.gmail.com>
From: Julien Nicoulaud <julien.nicoulaud@gmail.com>
Date: Sun, 19 Sep 2010 13:50:59 +0200
Message-ID: <AANLkTi=H78fPNwCSnp9ZQQ901oP-Coak=odh+9kw5S+V@mail.gmail.com>
Subject: Re: Dynamic colored command in zsh
To: Michel <michel.barret@gmail.com>
Cc: zsh-users@zsh.org
Content-Type: multipart/alternative; boundary=0016363b9164fb8f2604909b6985

--0016363b9164fb8f2604909b6985
Content-Type: text/plain; charset=ISO-8859-1

My version merged with Roy's last one that handles inconsistent spacing in
the command: http://gist.github.com/586698

Nobody found how to trigger it whenever the buffer changes ? I tried with
_refresh without success.

2010/9/19 Michel <michel.barret@gmail.com>

> Thanks everybody for your help.
>
> I have work with the first code give by Roy and I have this :
> color_cmd() {
>  res=$(builtin type $1 2>/dev/null)
>  [ -z $res ] && return
>  case $res in
>    *'reserved word'*)  color='magenta' ;;
>    *'an alias'*)       color='cyan'    ;;
>    *'shell builtin'*)  color='yellow'  ;;
>    *'shell function'*) color='green'   ;;
>    *"$cms is"*)        color='blue'    ;;
>    *)                  color='red'
>  esac
>  case $cmd in
>    'sudo')   state=1 ;;
>    'start')  state=1 ;;
>    'time')   state=1 ;;
>    'strace') state=1 ;;
>    *)        state=2
>  esac
> }
>
> color_arg() {
>  case $1 in
>    '--'*) color='magenta' ;;
>    '-'*)  color='cyan'    ;;
>    *)     color='red'
>  esac
> }
>
> color_string() {
>  case $1 in
>    '"'*) color='yellow' ;;
>    "'"*) color='yellow' ;;
>    *)       color=''
>  esac
> }
>
> recolor-cmd() {
>  args=(${(z)BUFFER})
>   offset=0
>  state=1
>  region_highlight=()
>  for cmd in $args; do
>    if [ $state -eq 1 ]; then
>      color_cmd $cmd
>    elif [ $state -eq 2 ]; then
>      color_arg $cmd
>      if [[ "$color" =~ 'red' ]]; then
>        color_string $cmd
>      fi
>    fi
>    if [ -n "$color" ]; then
>      region_highlight=($region_highlight "$offset $((${#cmd}+offset))
> fg=${color},bold")
>    fi
>    offset=$((offset+${#cmd}+1))
>    case $cmd in
>      *'|')  state=1 ;;
>      *'&')  state=1 ;;
>      *';')  state=1 ;;
>    esac
>   done
> }
>
> check-cmd-self-insert() { zle .self-insert && recolor-cmd }
> check-cmd-backward-delete-char() { zle .backward-delete-char && recolor-cmd
> }
> #check-cmd-expand-or-complete() { zle .expand-or-complete } # &&
> recolor-cmd }
>
> zle -N self-insert check-cmd-self-insert
> #zle -N expand-or-complete check-cmd-expand-or-complete
> zle -N backward-delete-char check-cmd-backward-delete-char
>
> _____________________
> Michel BARRET
>
>
>
> 2010/9/19 Roy Zuo <roylzuo@gmail.com>:
> > Not exactly the same code, but the same feature and less bugs.
> >
> >    recolor-cmd() {
> >        region_highlight=()
> >        colorize=true
> >        start_pos=0
> >        for arg in ${(z)BUFFER}; do
> >
>  ((start_pos+=${#BUFFER[$start_pos+1,-1]}-${#${BUFFER[$start_pos+1,-1]##
> #}}))
> >            ((end_pos=$start_pos+${#arg}))
> >            if $colorize; then
> >                colorize=false
> >                res=$(LC_ALL=C builtin type $arg 2>/dev/null)
> >                case $res in
> >                    *'reserved word'*)   style="fg=magenta,bold";;
> >                    *'alias for'*)       style="fg=cyan,bold";;
> >                    *'shell builtin'*)   style="fg=yellow,bold";;
> >                    *'shell function'*)  style='fg=green,bold';;
> >                    *"$arg is"*)
> >                        [[ $arg = 'sudo' ]] && style="fg=red,bold" ||
> style="fg=blue,bold";;
> >                    *)                   style='none,bold';;
> >                esac
> >                region_highlight+=("$start_pos $end_pos $style")
> >            fi
> >            if [[ $arg = '|' ]] || [[ $arg = 'sudo' ]]; then
> >                  colorize=true
> >            fi
> >            start_pos=$end_pos
> >        done
> >    }
> >
> >    check-cmd-self-insert() { zle .self-insert && recolor-cmd }
> >    check-cmd-backward-delete-char() { zle .backward-delete-char &&
> recolor-cmd }
> >
> >    zle -N self-insert check-cmd-self-insert
> >    zle -N backward-delete-char check-cmd-backward-delete-char
> >
> > Roy
> >
> > On Sat, Sep 18, 2010 at 06:03:42PM +0200, Richard Hartmann wrote:
> >> On Mon, Sep 13, 2010 at 16:34, Julien Nicoulaud
> >> <julien.nicoulaud@gmail.com> wrote:
> >>
> >> > I created a collaborative notepad, feel free to improve it:
> >> > http://ethercodes.com/zDUmDAuWiV
> >>
> >> That link does not seem to work, any more.
> >>
> >>
> >> Richard
> >>
> >
> > --
> >  ____________________________________________________________
> > / Nothing will dispel enthusiasm like a small admission fee. \
> > |                                                            |
> > \ -- Kim Hubbard                                             /
> >  ------------------------------------------------------------
> >       \   ,__,
> >        \  (oo)____
> >           (__)    )\
> >              ||--|| *
> >
>
 -- Julien Nicoulaud

--0016363b9164fb8f2604909b6985--

