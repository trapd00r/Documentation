From zsh-workers-return-21603-mason-zsh=primenet.com.au@sunsite.dk Fri Aug 12 10:21:22 2005
Return-Path: <zsh-workers-return-21603-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 13510 invoked from network); 12 Aug 2005 10:21:20 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 12 Aug 2005 10:21:20 -0000
Received: (qmail 70553 invoked from network); 12 Aug 2005 10:21:14 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 12 Aug 2005 10:21:14 -0000
Received: (qmail 27699 invoked by alias); 12 Aug 2005 10:21:11 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 21603
Received: (qmail 27690 invoked from network); 12 Aug 2005 10:21:10 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 12 Aug 2005 10:21:10 -0000
Received: (qmail 70304 invoked from network); 12 Aug 2005 10:21:10 -0000
Received: from mailhost1.csr.com (HELO MAILSWEEPER01.csr.com) (81.105.217.43)
  by a.mx.sunsite.dk with SMTP; 12 Aug 2005 10:21:04 -0000
Received: from exchange03.csr.com (unverified [10.100.137.60]) by MAILSWEEPER01.csr.com
 (Content Technologies SMTPRS 4.3.12) with ESMTP id <T72b6d2b6390a6c8d012e8@MAILSWEEPER01.csr.com> for <zsh-workers@sunsite.dk>;
 Fri, 12 Aug 2005 11:18:54 +0100
Received: from news01.csr.com ([10.103.143.38]) by exchange03.csr.com with Microsoft SMTPSVC(5.0.2195.6713);
	 Fri, 12 Aug 2005 11:20:55 +0100
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.13.1/8.12.11) with ESMTP id j7CAL2oN012574
	for <zsh-workers@sunsite.dk>; Fri, 12 Aug 2005 11:21:02 +0100
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.13.1/8.13.1/Submit) with ESMTP id j7CAL18n012569
	for <zsh-workers@sunsite.dk>; Fri, 12 Aug 2005 11:21:02 +0100
Message-Id: <200508121021.j7CAL18n012569@news01.csr.com>
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: PATCH: fix 4, was Re: unpatch: metafying zle line
Date: Fri, 12 Aug 2005 11:21:00 +0100
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 12 Aug 2005 10:20:56.0006 (UTC) FILETIME=[86901E60:01C59F27]
X-Spam-Checker-Version: SpamAssassin 3.0.4 (2005-06-05) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.4 required=5.0 tests=AWL,BAYES_00 autolearn=ham 
	version=3.0.4

Conversion of the cursor position when metafying and unmetafying the
line was broken in both directions when the cursor was at the end of the
line: this is the bug David Gomez noticed.

After this, completion is basically working with ZLE_UNICODE_SUPPORT
defined when you stick to using single-byte characters.  It's almost
time to allow that to be enabled by default, which will help picking up
the remaining problems with multi-byte characters:  those are likely to
be widespread, but probably in most cases fixable by local changes.

In fact the first test that fails is the third from last, and it's not
catastrophic; a stray space appears at the end of the line in
Y03arguments.ztst test "words array in reset arguments".  There ought to
be a prize for anyone who tracks that down.  But there isn't.

Index: Src/Zle/zle_utils.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/Zle/zle_utils.c,v
retrieving revision 1.26
diff -u -r1.26 zle_utils.c
--- Src/Zle/zle_utils.c	10 Aug 2005 10:56:41 -0000	1.26
+++ Src/Zle/zle_utils.c	12 Aug 2005 10:17:48 -0000
@@ -140,16 +140,19 @@
     s = zalloc(inll * MB_CUR_MAX + 1);
 
     outcs = 0;
-    for(i=0; i < inll; i++, incs--) {
+    for (i=0; i < inll; i++, incs--) {
 	if (incs == 0)
 	    outcs = mb_len;
 	j = wctomb(s + mb_len, instr[i]);
 	if (j == -1) {
 	    /* invalid char; what to do? */
+	    s[mb_len++] = ZWC('?');
 	} else {
 	    mb_len += j;
 	}
     }
+    if (incs == 0)
+	outcs = mb_len;
     s[mb_len] = '\0';
 
     outll = mb_len;
@@ -279,7 +282,7 @@
 	/* Reset shift state to input complete string */
 	memset(&ps, '\0', sizeof(ps));
 
-	while (ll) {
+	while (ll > 0) {
 	    size_t ret = mbrtowc(outptr, inptr, ll, &ps);
 
 	    /*
@@ -311,6 +314,8 @@
 	    outptr++;
 	    ll -= ret;
 	}
+	if (outcs && inptr <= (char *)instr + incs)
+	    *outcs = outptr - outstr;
 	*outll = outptr - outstr;
     } else {
 	*outll = 0;

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070


**********************************************************************
This email and any files transmitted with it are confidential and
intended solely for the use of the individual or entity to whom they
are addressed. If you have received this email in error please notify
the system manager.

**********************************************************************

