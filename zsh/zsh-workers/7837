From zsh-workers-return-7837-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Sep 15 09:54:43 1999
Return-Path: <zsh-workers-return-7837-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 964 invoked from network); 15 Sep 1999 09:54:40 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 15 Sep 1999 09:54:40 -0000
Received: (qmail 14486 invoked by alias); 15 Sep 1999 09:54:27 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 7837
Received: (qmail 14479 invoked from network); 15 Sep 1999 09:54:25 -0000
Message-Id: <9909150919.AA30132@ibmth.df.unipi.it>
To: zsh-workers@sunsite.auc.dk (Zsh hackers list)
Subject: Re: Floating point support? 
In-Reply-To: ""Bart Schaefer""'s message of "Tue, 14 Sep 1999 17:06:16 DFT."
             <990914170616.ZM27029@candle.brasslantern.com> 
Date: Wed, 15 Sep 1999 11:19:21 +0200
From: Peter Stephenson <pws@ibmth.df.unipi.it>

"Bart Schaefer" wrote:
> I'm also a bit dubious of making floating point precision dependent on the
> size of the integer type, but if it doesn't bother you ...

It does, and ksh 93 promises doubles, which are in any case what the
standard library routines will expect and produce.  The problem is the
alignment in zsh's memory routines, including the heap allocation:
alignment is tied to the size of the integer type used.  So if it's a
32-bit long you need to fiddle around to get doubles aligned.  It can be
done, it just makes the thing more messy and accident prone.

-- 
Peter Stephenson <pws@ibmth.df.unipi.it>       Tel: +39 050 844536
WWW:  http://www.ifh.de/~pws/
Dipartimento di Fisica, Via Buonarroti 2, 56127 Pisa, Italy

