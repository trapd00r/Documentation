From zsh-users-return-15095-mason-zsh=primenet.com.au@zsh.org Sun Jun 06 17:43:10 2010
Return-Path: <zsh-users-return-15095-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 9506 invoked by alias); 6 Jun 2010 17:43:10 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15095
Received: (qmail 25879 invoked from network); 6 Jun 2010 17:43:02 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: pass (ns1.primenet.com.au: SPF record at ntlworld.com designates 81.103.221.47 as permitted sender)
Date: Sun, 6 Jun 2010 18:42:08 +0100
From: Peter Stephenson <p.w.stephenson@ntlworld.com>
To: Zsh Users <zsh-users@zsh.org>
Subject: Re: Caveats of setopt magic_equal_subst
Message-ID: <20100606184208.4cb1521e@pws-pc>
In-Reply-To: <alpine.LNX.2.01.1006041541370.5029@hp.internal>
References: <alpine.LNX.2.01.1006041541370.5029@hp.internal>
X-Mailer: Claws Mail 3.7.6 (GTK+ 2.18.9; x86_64-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Cloudmark-Analysis: v=1.1 cv=1ggfb5FlKZQUfF3vzm9UBYZ2uTfLsbs/8dSljwg5+mE= c=1 sm=0 a=BH8T_9Y5YBgA:10 a=ADBQPqJMlbwA:10 a=DogomfpGjd0A:10 a=kj9zAlcOel0A:10 a=YQfN4TnuAAAA:8 a=NLZqzBF-AAAA:8 a=xGG7sYlZqCqtm5r3eI8A:9 a=99x0MxtVkMHm2JvNJ3RpXMF-OpcA:4 a=CjuIK1q_8ugA:10 a=bxnOgZBHIjQA:10 a=_dQi-Dcv4p4A:10 a=HpAAvcLHHh0Zw7uRqdWCyQ==:117

On Fri, 4 Jun 2010 15:49:49 -0400 (EDT)
"Benjamin R. Haskell" <zsh@benizi.com> wrote:
> As with so many things Zsh-related, I just discovered that something I'd 
> kind of wanted for a while was a built-in option: magic_equal_subst
> 
> I was just wondering if there were commonly-occurring situations where 
> magic_equal_subst might bite me.  It seems like the benefits will 
> outweigh having to workaround such situations, but I was just hoping to 
> get a group opinion or warning if I'm being optimistic.
> 
> My main reason for switching it on is that I use a lot of named 
> directories, and I'd like to be able to use them where command options 
> are of the form --some-option=~some/filename

I've been using it for quite some time and I'm not aware of any
problems.  Command line syntax is usually such that an "=" does
something approximately like what you expect it to.

The only slight oddity I know is that it does "=" substitution as well
as "~" substitution:

% echo animal==cat
animal=/bin/cat

but none of the places I know about where "==" is significant occur in
arguments like that.

-- 
Peter Stephenson <p.w.stephenson@ntlworld.com>
Web page now at http://homepage.ntlworld.com/p.w.stephenson/

