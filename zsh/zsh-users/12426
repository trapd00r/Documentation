From zsh-users-return-12426-mason-zsh=primenet.com.au@sunsite.dk Sun Jan 13 08:01:29 2008
Return-Path: <zsh-users-return-12426-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 17597 invoked from network); 13 Jan 2008 08:01:18 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 13 Jan 2008 08:01:18 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 45144 invoked from network); 13 Jan 2008 08:01:03 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 13 Jan 2008 08:01:03 -0000
Received: (qmail 13023 invoked by alias); 13 Jan 2008 08:00:54 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12426
Received: (qmail 13007 invoked from network); 13 Jan 2008 08:00:54 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 13 Jan 2008 08:00:54 -0000
Received: from virusfilter.dotsrc.org (bifrost [127.0.0.1])
	by spamfilter.dotsrc.org (Postfix) with ESMTP id B2DDF80307F7
	for <zsh-users@sunsite.dk>; Sun, 13 Jan 2008 09:00:51 +0100 (CET)
Received: from vms042pub.verizon.net (vms042pub.verizon.net [206.46.252.42])
	by bifrost.dotsrc.org (Postfix) with ESMTP
	for <zsh-users@sunsite.dk>; Sun, 13 Jan 2008 09:00:51 +0100 (CET)
Received: from torch.brasslantern.com ([71.121.18.67])
 by vms042.mailsrvcs.net (Sun Java System Messaging Server 6.2-6.01 (built Apr
 3 2006)) with ESMTPA id <0JUK00FRNOXD6DT4@vms042.mailsrvcs.net> for
 zsh-users@sunsite.dk; Sun, 13 Jan 2008 02:00:50 -0600 (CST)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id m0D80mX0015019	for
 <zsh-users@sunsite.dk>; Sun, 13 Jan 2008 00:00:48 -0800
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id m0D80m5W015018	for zsh-users@sunsite.dk; Sun,
 13 Jan 2008 00:00:48 -0800
Date: Sun, 13 Jan 2008 00:00:48 -0800
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: Fw: Zsh - push current command on history without executing it
In-reply-to: <Xns9A20C0F173D23zzappergmailcom@80.91.229.13>
To: zsh-users@sunsite.dk
Message-id: <080113000048.ZM15017@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <20080104105900.37a87f7e@news01>
	<237967ef0801040304h494987bv939bf6ff9541123f@mail.gmail.com>
	<477E177A.3060303@kotiportti.fi>	<Xns9A20C0F173D23zzappergmailcom@80.91.229.13>
Comments: In reply to zzapper <david@tvis.co.uk>
 "Re: Fw: Zsh - push current command on history without executing it" (Jan  9,
 6:58pm)
X-Virus-Scanned: ClamAV using ClamSMTP

On Jan 9,  6:58pm, zzapper wrote:
}
} BTW you can use this as a temporary memory for a telephone number etc
} etc as well etc.

I don't know why I never thought of this before.

--- 8< --- snip --- 8< ---
#!/bin/zsh -f

# A little zsh sticky-note ("post-it") application.  Sticky notes are
# stored in the file named by the STICKYFILE variable (defaults to
# $HOME/.zsticky).  The number of notes stored is STICKYSIZE (1000).
#
# May be bound as a widget:
#    zle -N sticky-note
# And/or run as a command:
#    sticky-note
#    sticky-note -b
#    sticky-note -l ...
# With the -l option, lists previous sticky notes.  Most options of the
# "fc -l" command are supported for selecting which notes to display.
# The -b option is like "zed -b": installs keymaps/bindings only.
#
# Otherwise invokes the line editor with the previous notes available
# as an editor history.  Two quick taps on the return/enter key finish
# the note, or you can use use ^X^W as usual (ZZ in vicmd mode).

# I encourage all you creative people to contribute enhancements ...
# no-prize for the first person to put the most recent sticky note in
# his PS1 string.

emulate -LR zsh

local STICKYFILE=${STICKYFILE:-$HOME/.zsticky}
local STICKYSIZE=${STICKYSIZE:-1000}

# If invoked as a widget, behave a bit like run-help
if zle
then
  if [[ $CONTEXT = (cont|select|vared) ]]
  then
    zle -M "No stickies during ${${(z)PREBUFFER}[1]:-$CONTEXT}, sorry"
    zle .beep
  else
    zle .push-line
    BUFFER=sticky-note
    zle .accept-line
  fi
  return 0
fi

(($+bg && $+fg)) || { autoload -U colors; colors }

# Invoked as a command, behave like zed, but write a history file
setopt extendedhistory nobanghist
fc -ap $STICKYFILE $STICKYSIZE $STICKYSIZE

# With a -l option, list the existing sticky notes
if [[ "$1" == -l ]]
then
  print -nr "$bg[yellow]$fg[black]"
  fc -f "$@"
  print -nr "$reset_color"
  return 0
fi

# Set up keybindings (adapted from "zed")
if ! bindkey -M sticky >& /dev/null
then
  bindkey -N sticky main
  bindkey -M sticky ^X^W accept-line
  bindkey -M sticky ^M^M accept-line	# Two quick RETs ends note
  bindkey -M sticky ^M self-insert-unmeta
fi
if ! bindkey -M sticky-vicmd >& /dev/null 
then
  bindkey -N sticky-vicmd vicmd
  bindkey -M sticky-vicmd ZZ accept-line
fi

[[ "$1" == -b ]] && return 0

# Edit a new sticky note and add it to the STICKYFILE
local sticky
while vared -h -p "%{$bg[yellow]$fg[black]%}" -M sticky -m sticky-vicmd sticky
do
  {
    print -s -- "$sticky"
  } always {
    (( TRY_BLOCK_ERROR = 0 ))
  } && break
  echo -n -e '\a'
done
return 0

