From zsh-users-return-10232-mason-zsh=primenet.com.au@sunsite.dk Wed May 10 06:29:53 2006
Return-Path: <zsh-users-return-10232-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 23413 invoked from network); 10 May 2006 06:29:51 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.1 (2006-03-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00,
	FORGED_RCVD_HELO autolearn=ham version=3.1.1
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 10 May 2006 06:29:51 -0000
Received: (qmail 41176 invoked from network); 10 May 2006 06:29:44 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 10 May 2006 06:29:44 -0000
Received: (qmail 27575 invoked by alias); 10 May 2006 06:29:36 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 10232
Received: (qmail 27563 invoked from network); 10 May 2006 06:29:35 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 10 May 2006 06:29:35 -0000
Received: (qmail 39986 invoked from network); 10 May 2006 06:29:35 -0000
Received: from ns9.hostinglmi.net (213.194.149.146)
  by a.mx.sunsite.dk with SMTP; 10 May 2006 06:29:33 -0000
Received: from 212.red-80-35-44.staticip.rima-tde.net ([80.35.44.212] helo=localhost)
	by ns9.hostinglmi.net with esmtpa (Exim 4.52)
	id 1FdiCP-0006YA-BZ; Wed, 10 May 2006 08:29:29 +0200
Date: Wed, 10 May 2006 08:29:30 +0200
From: DervishD <zsh@dervishd.net>
To: Lloyd Zusman <ljz@asfast.com>
Cc: zsh-users@sunsite.dk
Subject: Re: File locking within zsh?
Message-ID: <20060510062930.GB4340@DervishD>
Mail-Followup-To: Lloyd Zusman <ljz@asfast.com>, zsh-users@sunsite.dk
References: <87r7324zyh.fsf@asfast.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <87r7324zyh.fsf@asfast.com>
User-Agent: Mutt/1.4.2.1i
Organization: DervishD
X-AntiAbuse: This header was added to track abuse, please include it with any abuse report
X-AntiAbuse: Primary Hostname - ns9.hostinglmi.net
X-AntiAbuse: Original Domain - sunsite.dk
X-AntiAbuse: Originator/Caller UID/GID - [0 0] / [47 12]
X-AntiAbuse: Sender Address Domain - dervishd.net
X-Source: 
X-Source-Args: 
X-Source-Dir: 

    Hi Lloyd :)

 * Lloyd Zusman <ljz@asfast.com> dixit:
> Do any of you know of any functions, primitives, tricks, hacks, or even
> outright abominations which will allow me to do cooperative file locking
> from within zsh?
> 
> I know that I can do this with a number of compiled executables, but I'm
> looking for a zsh-only solution.

    Apart from the 'ln' trick, you can do this in Perl if you don't
want compiled executables. This way you can embed the locking into
your zsh script without the need of having separate scripts or
compiled executables, using "perl -e".

    Unless you need real file locking (because you have to cooperate
with another external binary), you should use the 'ln' trick instead
of using locks.

    Which solution to use depends utterly on which problem are you
trying to solve. If your problem is that you have to write
exclusively to a file, and that file may have been "lockf()"ed by
another program, then you need real lock semantics and that may be a
problem to do from zsh. I would switch to Perl or something similar
to do the task (or a zsh+Perl mix, for example). If, on the other
hand, you just need to make sure that all instances of your script
won't write to the same file at the same time, go ahead with the 'ln'
solution.

    If you could ellaborate on the problem you're trying to solve, I
can try to give a better solution.

    Good luck :)

    Raúl Núñez de Arenas Coronado

-- 
Linux Registered User 88736 | http://www.dervishd.net
http://www.pleyades.net & http://www.gotesdelluna.net
It's my PC and I'll cry if I want to... RAmen!

