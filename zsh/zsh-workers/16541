From zsh-workers-return-16541-mason-zsh=primenet.com.au@sunsite.dk Sun Feb 03 18:03:25 2002
Return-Path: <zsh-workers-return-16541-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 18296 invoked from network); 3 Feb 2002 18:03:24 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 3 Feb 2002 18:03:24 -0000
Received: (qmail 26154 invoked by alias); 3 Feb 2002 18:03:16 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16541
Received: (qmail 26143 invoked from network); 3 Feb 2002 18:03:14 -0000
Date: Sun, 3 Feb 2002 19:04:40 +0100
From: Bruno Bonfils <asyd@debian-fr.org>
To: zsh-workers@sunsite.dk
Subject: MPlayer function
Message-ID: <20020203180440.GA9258@debian-fr.org>
Mail-Followup-To: Bruno Bonfils <asyd@debian-fr.org>,
	zsh-workers@sunsite.dk
Mime-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha1;
	protocol="application/pgp-signature"; boundary="E39vaYmALEf/7YXx"
Content-Disposition: inline
User-Agent: Mutt/1.3.27i


--E39vaYmALEf/7YXx
Content-Type: multipart/mixed; boundary="OXfL5xGRrasGEqWY"
Content-Disposition: inline


--OXfL5xGRrasGEqWY
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hi all,

this is new version of my mplayer's completion function. Support at
least 0.50, 0.60 and CVS Version. I use cache for stock drivers and
codes list.

I need to add the completion for the skins but i don't use the GUI..

comments about _mplayer are welcome

PS : i'm looking for the way to do a periodic rehash.. it's possible ?

Thank you very much.

--=20
 Bruno Bonfils
 Admin Sys GNU/Linux

--OXfL5xGRrasGEqWY
Content-Type: text/plain; charset=us-ascii
Content-Disposition: attachment; filename=_mplayer
Content-Transfer-Encoding: quoted-printable

#compdef mplayer

#
# MPlayer Zsh function
#
# Feb 2002, Bruno Bonfils <asyd@zshfr.org>
#
# thanks to #zsh@irc.openprojects.net (specially Clint)
#

_audio-codec-list ()
{
    if ( [[ ${+_mplayer_audio_codec} -eq 0 ]] ||=20
	    _cache_invalid MPlayer_ac ) &&=20
	! _retrieve_cache MPlayer_ac; then
=09
	local buffer version
=09
	buffer=3D(${(@f)"$(mplayer -ac help)"})
	version=3Dbuffer[1]

	if [[ "$version" =3D *\0.50* ]]; then
	    _mplayer_audio_codec=3D(${buffer[3,-1]%% *})
	else
	    _mplayer_audio_codec=3D(${buffer[9,-1]%% *})
	fi

	_store_cache MPlayer_ac _mplayer_audio_codec
    fi

    _wanted audio-codec expl 'audio-codec' compadd $_mplayer_audio_codec
}

_audio-driver-list ()
{
    if ( [[ ${+_mplayer_audio_driver} -eq 0 ]] ||
	    _cache_invalid MPlayer_ao ) &&
	! _retrieve_cache MPlayer_ao; then
=09
	local buffer version

	buffer=3D(${(@f)"$(mplayer -ao help)"})
	version=3D$buffer[1]

	if [[ "$version" =3D *\0.50* ]]; then
	    _mplayer_audio_driver=3D(${${buffer[3,-1]/[[:blank:]]/}%%[[:blank:]]*})
	else
	    _mplayer_audio_driver=3D(${${buffer[7,-1]/[[:blank:]]/}%%[[:blank:]]*})
	fi

	_store_cache MPlayer_ao _mplayer_audio_driver

    fi

    _wanted audio-driver expl 'audio-driver' compadd $_mplayer_audio_driver
}

_video-codec-list ()
{
    if ( [[ ${+_mplayer_video_codec} -eq 0 ]] ||=20
	    _cache_invalid MPlayer_vc ) &&=20
	! _retrieve_cache MPlayer_vc; then
=09
	local buffer version
=09
	buffer=3D(${(@f)"$(mplayer -vc help)"})
	version=3Dbuffer[1]

	if [[ "$version" =3D *\0.50* ]]; then
	    _mplayer_video_codec=3D(${buffer[3,-1]%% *})
	else
	    _mplayer_video_codec=3D(${buffer[9,-1]%% *})
	fi

	_store_cache MPlayer_vc _mplayer_video_codec
    fi

    _wanted video-codec expl 'video-codec' compadd $_mplayer_video_codec
}

_video-driver-list ()
{
    if ( [[ ${+_mplayer_video_driver} -eq 0 ]] ||
	    _cache_invalid MPlayer_vo ) &&
	! _retrieve_cache MPlayer_vo; then
=09
	local buffer version

	buffer=3D(${(@f)"$(mplayer -vo help)"})
	version=3D$buffer[1]

	if [[ "$version" =3D *\0.50* ]]; then
	    _mplayer_video_driver=3D(${${buffer[3,-1]/[[:blank:]]/}%%[[:blank:]]*})
	else
	    _mplayer_video_driver=3D(${${buffer[7,-1]/[[:blank:]]/}%%[[:blank:]]*})
	fi

	_store_cache MPlayer_vo _mplayer_video_driver

    fi

    _wanted video-driver expl 'video-driver' compadd $_mplayer_video_driver
}


_arguments -C -s \
    '-abs[sound card audio buffer size(in bytes, default: measuring)]:buffe=
r size' \
    '-ac[force usage of a specific audio codec]:audio-codec attachment:_aud=
io-codec-list' \
    '-afm[force usage of a specific audio codec family]:audio-codec-family:=
(1 2 3 4 5)' \
    '-aid[select audio channel]:audio-channel' \
    '-ao[audio driver]:audio-driver attachment:_audio-driver-list' \
    '-aspect[set aspect ratio of movies]:ratio' \
    '-benchmark[use with combination with -nosound and -vo null for benchma=
rking]' \
    '-chapter[specify which chapter to start playing at]:chapter' \
    '-config[specifies where to search for config files]' \
    '-delay[audio delay in seconds (may be +/- float value)]:delay' \
    '-display[specify the hostname and display number of the X server]:disp=
lay attachment:_x_display' \
    '-double[enable double buffering]' \
    '-dumpaudio[writes audio stream of the file to ./stream.dump]' \
    '-dvdkey[key to decrypt stream encoded with css]:key' \
    '-dvd[tell MPlayer which movies to play]:titleid' \
    '-fbmode[change videomode from /etc/fb.modes]:fbmode' \
    '-fbmodeconfig[use config file instead /etc/fb.modes]:fbmodeconfig:_fil=
es' \
    '-fb[specifies the framebuffer device to user]' \
    '-ffactor[resample alphamap of the font]:factor:(0 0.75 1 10)' \
    '-forceidx[force rebuilding of index]' \
    '-forcexv[force using xvideo (sdl)]' \
    '-fps[force frame rate (if value is wrong in the header)]:frame-rate' \
    '-framedrop[enable slow dropping (for slow machine)]' \
    '-framedrop[frame dropping]' \
    '-frames[mplayer plays number frame, and quits]:frame-number' \
    '-fs[fullscreen]' \
    '-fsmode[fullscreen mode]:fs-mode:(0 1 2 3)' \
    '-gui[start with the gui]' \
    '-idx[rebuilds index of the avi]' \
    '-include[specify config file to be parsed after the default]:config-fi=
le:_files' \
    '-lircconf[specifies a configfile for lirc]:lirc-config-files attachmen=
t:_files' \
    '-mc[maximun sync correction per 5 frames (in second)]:max-sync-correct=
ion' \
    '-monitoraspect[set aspect ratio of your screen]:ratio' \
    '-ni[force usage of non-interlaced avi parser]' \
    '-nobps[do not use avg byte/sec value for A-V sync (AVI)]' \
    '-nobps[use alternative A-V sync method for AVI files]' \
    '-nodouble[disable double buffering (default)]' \
    '-nodshow[disable usage of directshow video codecs]' \
    '-noframedrop[no frame dropping]' \
    '-nosound[no sound]' \
    '-osdlevel[specifies which mode the osd should start]:osd-level:(0 1 2)=
' \
    '-pp[apply postprocess filter]:filter attachment:_filter-list' \
    '-quiet[display less output, status messages]' \
    '-sb[seek to byte position]:byte' \
    '-skin[skin directory]:skin directory:_path_files -/' \
    '-srate[specifies Hz to playback audio on]:frequence' \
    '-ss[seek to given time position (format hh:mm\[:ss\])]:position' \
    '-steromode[select type of mpeg1 stereo output]:stereo-mode:(0 1 2)' \
    '-subfps[specify frame/sec rate of subtitle file only]:rate' \
    '-sub[use/display this subtitle file]:subtitle:_files' \
    '-unicode[tells mplayer to handle the subtitle file as unicode]' \
    '-utf8[tells mplayer to handle the subtitle file as utf8]' \
    '-vcd[play video cd track]:track' \
    '-vc[force usage of a specific video codec]:video-codec attachment:_vid=
eo-codec-list' \
    '-v[enable verbose output]' \
    '-vfm[force usage of a specific video codec family]:video-codec-family:=
(1 2 3 4 5)' \
    '-vid[select video channel]:video-channel' \
    '-vm[use XF86VidMode extension for mode changing]' \
    '-vo[video driver]:video-driver attachment:_video-driver-list' \
    '-x[scale image to x width if driver supports]:width' \
    '-xy[scale image by factor if driver supports]:factor' \
    '-y[scale image to y height if driver supports]:height' \
    '-zoom[use software scaling, where available (use with -nofs)]' \
    '-z[specify compression level for png output]:compression-level:(0 1 2 =
3 4 5 6 7 8)' \
    '*:video file:_files -g \*\.\(\#i\)\(mpg\|avi\|mpeg\|mov\|asf\|vob\|mjp=
g\)' \
    && return 0
return 1

--OXfL5xGRrasGEqWY--

--E39vaYmALEf/7YXx
Content-Type: application/pgp-signature
Content-Disposition: inline

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: Pour information voir http://www.gnupg.org

iEYEARECAAYFAjxde7cACgkQ8dj4f/OdzPXmrQCfQZyBf1WQqDZZhMSFZ6xkgsvu
U0gAniBOceOeWFOPNx0b8OUl/ZhdWKg8
=gJ4K
-----END PGP SIGNATURE-----

--E39vaYmALEf/7YXx--

