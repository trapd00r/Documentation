From zsh-users-return-14255-mason-zsh=primenet.com.au@sunsite.dk Fri Jul 24 19:02:21 2009
Return-Path: <zsh-users-return-14255-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 23026 invoked from network); 24 Jul 2009 19:02:17 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from new-brage.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.254.104)
  by ns1.primenet.com.au with SMTP; 24 Jul 2009 19:02:17 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 99134 invoked from network); 24 Jul 2009 19:01:59 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 24 Jul 2009 19:01:59 -0000
Received: (qmail 10430 invoked by alias); 24 Jul 2009 19:01:14 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 14255
Received: (qmail 10416 invoked from network); 24 Jul 2009 19:01:13 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 24 Jul 2009 19:01:13 -0000
Received: from smtp112.mail.ukl.yahoo.com (smtp112.mail.ukl.yahoo.com [77.238.184.50])
	by bifrost.dotsrc.org (Postfix) with SMTP id 48EF3801E289
	for <zsh-users@sunsite.dk>; Fri, 24 Jul 2009 21:01:07 +0200 (CEST)
Received: (qmail 69137 invoked from network); 24 Jul 2009 19:01:07 -0000
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
  s=s1024; d=yahoo.fr;
  h=Received:X-Yahoo-SMTP:X-YMail-OSG:X-Yahoo-Newman-Property:Date:From:To:Cc:Subject:Message-ID:Mail-Followup-To:References:MIME-Version:Content-Type:Content-Disposition:In-Reply-To:User-Agent;
  b=gyIVpXokYg5PqejVsUaoBNzugEjb4WyMgLURW9U1LINkEy6jxPSDPLA9zzB9n8Nd20amSuhVfg96Ze/81FQrYlEEonETLgUYtSgSVsPmOb3tdTZf+M9Q8bYogNiG14AKsypMpqBdz1KunaHKAEhvPcSe3EBDf8DXMTSXuqhKsY0=  ;
Received: from unknown (HELO seebyte.com) (stephane_chazelas@78.105.235.196 with login)
  by smtp112.mail.ukl.yahoo.com with SMTP; 24 Jul 2009 19:01:06 -0000
X-Yahoo-SMTP: UETkiwKswBCC9bX5uJ2yis03J2tKBqQX.pJ.0Bnx
X-YMail-OSG: 9oqJbzIVM1nnSpMkj6UuCeiNEfmT40b0j6SyUOy1MQAbXWY56olwOwIs6yWSRJj85nrkXluFvQ5y2Fi6L4Rgc1pvQqRmjx.vfm.T0hthTQu1YHj1.0yhUSz1ub8SsPj37YJlwISKs26lz5.TOhPD5pq_6JPKGybPp1p.RjHLGPF4G7haBobMIz9t5UffN0K_RPvghgOGRx1Ct.4cXm12nqF5D9gWia3_3iL83Q.34I0rbBMhQLc4Yxmg5uDr.rJylKbQ4c1gxA46sFgI8PlZQGV1U3MPqDwQa_xgKnLKPhcaV2jQf0aUo83rdfcBm7nb44a2C8eyOQy5dBPQqvFEdQ--
X-Yahoo-Newman-Property: ymail-3
Date: Fri, 24 Jul 2009 20:01:03 +0100
From: Stephane Chazelas <stephane_chazelas@yahoo.fr>
To: spiralofhope <spiralofhope@gmail.com>
Cc: zsh-users@sunsite.dk
Subject: Re: variables not working as expected
Message-ID: <chaz20090724190103.GA5081@seebyte.com>
Mail-Followup-To: spiralofhope <spiralofhope@gmail.com>,
	zsh-users@sunsite.dk
References: <20090724113635.796ef7b4@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20090724113635.796ef7b4@gmail.com>
User-Agent: Mutt/1.5.16 (2007-09-19)
X-Virus-Scanned: ClamAV 0.94.2/9612/Fri Jul 24 19:42:58 2009 on bifrost
X-Virus-Status: Clean

2009-07-24 11:36:35 -0700, spiralofhope:
> This works in bash, dash, ash and sash, but not in zsh:
> 
> a="echo foo bar"
> $a

That behavior of those shells, inherited from the Bourne shell
is the cause of half the bugs and especially the security ones
in existing shell scripts. It's been fixed in zsh.

See http://zsh.dotsrc.org/FAQ/zshfaq03.html#l18

Do

$=a

to explicitly request the word splitting. The equivalent of the
other shells would be $=~a, that is request both word spitting
and filename generation.

But chances are that you actually want:

eval $a

(eval "$a" is other shells)

if you want the content of $a to be interpreted as a command
line and not as a list of arguments to a simple command.

setopt shwordsplit  globsubst

enables the Bourne shell behavior. Same with "emulate sh", if
wou're really keen on shooting yourself in the feet ;)

Note: to get zsh's behavior in other shells, you'd do:

IFS=; set -f

But that would also disable filename generation everywhere,
not only upon variable expansion.

Also note that zsh performs word splitting but not filename
generation upon command substitution $(cmd) or `cmd` (and also
the trimming of every trailing character, a bogus behavior of
the Bourne shell which it did not fix).

Another thing to note (IMO another bug it did not fix) is that
$a expands to no argument instead of en empty argument when $a
is empty just like the other shells, which makes so that even in
zsh, it's generally safer to use quotes anyway just as in the
other shells.

-- 
Stephane

