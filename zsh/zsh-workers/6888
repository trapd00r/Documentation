From zsh-workers-return-6888-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Jun 28 08:14:53 1999
Return-Path: <zsh-workers-return-6888-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 21419 invoked from network); 28 Jun 1999 08:14:50 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 28 Jun 1999 08:14:50 -0000
Received: (qmail 17388 invoked by alias); 28 Jun 1999 08:14:26 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 6888
Received: (qmail 17381 invoked from network); 28 Jun 1999 08:14:18 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer david.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: "Sven Wischnowsky" <wischnow@informatik.hu-berlin.de>,
        <zsh-workers@sunsite.auc.dk>
Subject: RE: Final (?) info on signals/crashes when suspending "mutt" function
Date: Mon, 28 Jun 1999 12:14:14 +0400
Message-ID: <000801bec13e$35cbbbb0$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="koi8-r"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)
Importance: Normal
In-Reply-To: <199906280704.JAA09417@beta.informatik.hu-berlin.de>
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2314.1300

> I also build a patch over the weekend that tried to address Andrej's
> problems, it's appended below.

It does not help (sigh). Unfortunately, I'm beginning to suspect OS bug. The
visible problem is, that Zsh does not get SIGCHLD when child stops. Unless Zsh
somehow blocks SIGCHLD (but I fail to see why it does it when started as first
level shell but does not otherwise) this looks like SIGCHLD not being sent in
this case. Again, I suspect, why it can happen:

man 2 signal

     If signal() or sigset() is used to set SIGCHLD's disposition to a sig-
     nal handler, SIGCHLD will not be sent when the calling process' chil-
     dren are stopped or continued.

At least xterm (and probably dtterm and getty/login) are using signal() to play
with SIGCHLD before exec'ing shell. So, I can imagine some non-trivial bug, that
subsequent sigaction() won't reset SA_NOCLDSTOP. Unfortunately, I could not
reproduce it in obvious way.


/andrej


