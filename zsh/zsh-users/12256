From zsh-users-return-12256-mason-zsh=primenet.com.au@sunsite.dk Thu Nov 29 13:38:29 2007
Return-Path: <zsh-users-return-12256-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 5350 invoked from network); 29 Nov 2007 13:38:21 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.3 (2007-08-08) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.3
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 29 Nov 2007 13:38:21 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 65909 invoked from network); 29 Nov 2007 13:38:12 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 29 Nov 2007 13:38:12 -0000
Received: (qmail 5561 invoked by alias); 29 Nov 2007 13:37:53 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12256
Received: (qmail 5541 invoked from network); 29 Nov 2007 13:37:53 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 29 Nov 2007 13:37:53 -0000
Received: (qmail 64574 invoked from network); 29 Nov 2007 13:37:53 -0000
Received: from sienna.akte.de (HELO ds80-237-184-21.dedicated.hosteurope.de) (80.237.184.21)
  by a.mx.sunsite.dk with SMTP; 29 Nov 2007 13:37:44 -0000
Received: (root@ds80-237-184-21.dedicated.hosteurope.de) by sienna.akte.de
	id <S1133467AbXK2Nhb>; Thu, 29 Nov 2007 14:37:31 +0100
KRecCount: 1
X-Originating-IP: [87.152.142.245]
X-KInfo: !spam auth
X-KInfo: virscan ok
Received: from condor.int.spiegl.de (p57988EF5.dip.t-dialin.net [87.152.142.245])
	 by sienna.akte.de
	 via kasmail (3.1)
	 id <1Hxja2-385-1-sienna>; Thu, 29 Nov 2007 13:37:27 GMT
Received: from condor.int.spiegl.de (spiegl@localhost [127.0.0.1])
	by condor.int.spiegl.de (8.14.1/8.14.1/Debian-9) with ESMTP id lATDbQm8026103
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <zsh-users@sunsite.dk>; Thu, 29 Nov 2007 14:37:26 +0100
Received: (from spiegl@localhost)
	by condor.int.spiegl.de (8.14.1/8.14.1/Submit) id lATDbQgG026099
	for zsh-users@sunsite.dk; Thu, 29 Nov 2007 14:37:26 +0100
X-Authentication-Warning: condor.int.spiegl.de: spiegl set sender to zsh.Andy@spiegl.de using -f
Date:	Thu, 29 Nov 2007 14:37:26 +0100
From:	Andy Spiegl <zsh.Andy@spiegl.de>
To:	ZSH User List <zsh-users@sunsite.dk>
Subject: uhmm, another segmentation fault
Message-ID: <20071129133726.GF2541@spiegl.de>
Mail-Followup-To: ZSH User List <zsh-users@sunsite.dk>
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="ZGiS0Q5IWpPtfppv"
Content-Disposition: inline
X-PGP-GPG-Keys:	mail -s "send pgp" auto@spiegl.de
X-Fingerprint: Key-ID C2CB30F0: 9051 50B9 13B0 57B9 10FD  48AC 4FA1 209B
	C2CB 30F0
X-Accepted-File-Formats: ASCII OpenOffice .rtf .pdf - *NO* Microsoft files
	please.
X-why-you-shouldnt-use-MS-LookOut: http://www.jensbenecke.de/l-oe-en.php
X-warum-man-MS-Outlook-vermeiden-sollte: http://www.jensbenecke.de/l-oe-de.p
	hp
X-how-to-quote:	http://www.afaik.de/usenet/faq/zitieren/
X-how-to-ask-questions:	http://www.catb.org/~esr/faqs/smart-questions.html
X-stupid-disclaimers: http://goldmark.org/jeff/stupid-disclaimers/
User-Agent: Mutt/1.5.16 (2007-06-11)


--ZGiS0Q5IWpPtfppv
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline

Is this the month of zsh bugs? :-)

 lama:~>mutt ali<TAB>
 interactive: ali[]
 - corrections -
 alex                             -- "Alexandra Probst" <Alexandra.Probst@online.de>
 alle                             -- "KasCada alle" <alle@kascada.com>
 angi                             -- "Angi Mayr" <angi@spiegl.de>
 lalo                             -- "Eduardo Carrera" <eduardocarrera2001@yahoo.com
 - original -
 ali

Then I pressed "c" and whooooie:
 lama:~>mutt ali[1]    30401 segmentation fault (core dumped)  zsh

:-(((

 lama:~>print ${_comps[mutt]}    
 _mutt
 lama:~>grep mutt .zsh/complete
  muttaliases=( `~/bin/list.mail.aliases` )
  muttusers=( $muttaliases )
  mailusers=( $users `~/bin/list.mail.aliases -f` )
  #or:
  # _mutt_aliases=(${(o)${${(M)${(f)"$(< ~/.mutt/aliases)"}##alias*}/alias /}%% *})

  # to use these variables in all contexts
  zstyle ':completion:*:mutt:*' users $muttusers
  zstyle ':completion:*:mail:*' users $mailusers
  zstyle ':completion:*:checkalias:*' users $muttaliases

  # where to find mutt "mailboxes" and "alias" settings
  muttrc=~/.mutt/local

 lama:~>gdb zsh core
 GNU gdb 6.6-debian
...
 Core was generated by `zsh'.
 Program terminated with signal 11, Segmentation fault.
 #0  0x40281b0c in doinsert (zstr=0xbfdb7a80, len=1) at ../../../Src/Zle/zle_misc.c:54
 54      ../../../Src/Zle/zle_misc.c: No such file or directory.
         in ../../../Src/Zle/zle_misc.c
 (gdb) bt
 #0  0x40281b0c in doinsert (zstr=0xbfdb7a80, len=1) at ../../../Src/Zle/zle_misc.c:54
 #1  0x40281ba6 in selfinsert (args=0x4029b27c) at ../../../Src/Zle/zle_misc.c:71
 #2  0x402d9197 in domenuselect (dummy=0x402b9834, dat=0xbfdb7f6c) at ../../../Src/Zle/complist.c:2546
 #3  0x0808ba8a in runhookdef (h=0x402b9834, d=0xbfdb7f6c) at ../../Src/module.c:1870
 #4  0x402aad60 in after_complete (dummy=0x4029afbc, dat=0xbfdb80a4) at ../../../Src/Zle/compcore.c:515
 #5  0x4028e09f in docomplete (lst=0) at ../../../Src/Zle/zle_tricky.c:869
 #6  0x402899e0 in completecall (args=0xbfdb83a4) at ../../../Src/Zle/zle_tricky.c:208
 #7  0x4027da0a in execzlefunc (func=0x40298398, args=0xbfdb83a4, set_bindk=0) at ../../../Src/Zle/zle_main.c:1254
 #8  0x402894c6 in bin_zle_call (name=0x4023e398 "zle", args=0xbfdb83a0, ops=0xbfdb83ec, func=0 '\0') at ../../../Src/Zle/zle_thingy.c:705
 #9  0x402885e3 in bin_zle (name=0x4023e398 "zle", args=0xbfdb83a0, ops=0xbfdb83ec, func=0) at ../../../Src/Zle/zle_thingy.c:381
 #10 0x0805d183 in execbuiltin (args=0x4023e370, bn=0x4029b068) at ../../Src/builtin.c:438
 #11 0x0806aeef in execcmd (state=0xbfdb97a8, input=0, output=0, how=2, last1=2) at ../../Src/exec.c:2670
 #12 0x0806b199 in execpline2 (state=0xbfdb97a8, pcode=<value optimized out>, how=2, input=0, output=0, last1=0) at ../../Src/exec.c:1343
 #13 0x0806b56b in execpline (state=0xbfdb97a8, slcode=<value optimized out>, how=2, last1=0) at ../../Src/exec.c:1129
 #14 0x0806c255 in execlist (state=0xbfdb97a8, dont_change_job=1, exiting=0) at ../../Src/exec.c:935
 #15 0x0806c4da in execode (p=0x818ad68, dont_change_job=1, exiting=0) at ../../Src/exec.c:793
 #16 0x0806c5c3 in runshfunc (prog=0x818ad68, wrap=0x0, name=0x4023e2e0 "complete-word-with-dots") at ../../Src/exec.c:3991
 #17 0x0806c937 in doshfunc (name=0x80ef3b8 "complete-word-with-dots", prog=0x818ad68, doshargs=0x0, flags=0, noreturnval=1)
     at ../../Src/exec.c:3900
 #18 0x4027d863 in execzlefunc (func=0x818ada0, args=0x4029b27c, set_bindk=0) at ../../../Src/Zle/zle_main.c:1296
 #19 0x4027dbea in zlecore () at ../../../Src/Zle/zle_main.c:1019
 #20 0x4027e217 in zleread (lp=0x80d65b4, rp=0x0, flags=3, context=0) at ../../../Src/Zle/zle_main.c:1174
 #21 0x0807dea6 in ingetc () at ../../Src/input.c:278
 #22 0x080795e2 in ihgetc () at ../../Src/hist.c:240
 #23 0x08084eee in gettok () at ../../Src/lex.c:630
 #24 0x0808571a in yylex () at ../../Src/lex.c:345
 #25 0x0809d769 in parse_event () at ../../Src/parse.c:451
 #26 0x0807c87a in loop (toplevel=1, justonce=0) at ../../Src/init.c:128
 #27 0x0807d594 in zsh_main (argc=1, argv=0xbfdba394) at ../../Src/init.c:1347
 #28 0x08054872 in main (argc=Cannot access memory at address 0x0) at ../../Src/main.c:93


Thanks,
 Andy.

-- 
 GNU GPL: "The source will be with you... always."

--ZGiS0Q5IWpPtfppv
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline; filename="list.mail.aliases"

#!/bin/sh

# ASp: list mail aliases (for zsh mutt-completion etc.)

# Options:
#  -f lists the expanded addresses
#  -p lists the pairs alias=address

if [ x"$1" = x-f ]; then
  #sed -e '/^alias [^-]/!d' -e '/<.*>/!d' -e 's/.*<\(.*\)>.*/\1/g' ~/.mutt/aliases
  #or like this:
  perl -n -e 'if (/^alias [^-].*<.*>/) { s/^alias +([^<]*)<([^>]+)>(.*)/\2/; print}' ~/.mutt/aliases
elif [ x"$1" = x-p ]; then
  perl -n -e 'if (/^alias [^-].*<.*>/) { s/^alias +([^ ]*).*<([^>]+)>(.*)/\1 = \2/; print}' ~/.mutt/aliases
else
  grep "^alias" $HOME/.mutt/aliases | grep -v "\-\-" | awk '{ print $2 }'
  #or like this:
  # awk '/^alias/ { print $2; }' ~/.mutt/aliases | grep -v "\-\-"
fi

--ZGiS0Q5IWpPtfppv--

