From A.Main@dcs.warwick.ac.uk Fri May 24 01:10:09 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by melb.werple.net.au (8.7.5/8.7.3) with ESMTP id BAA06114 for <mason@werple.mira.net.au>; Fri, 24 May 1996 01:10:07 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id KAA09545; Thu, 23 May 1996 10:52:09 -0400 (EDT)
Resent-Date: Thu, 23 May 1996 10:52:09 -0400 (EDT)
From: Zefram <A.Main@dcs.warwick.ac.uk>
Message-Id: <19808.199605231452@stone.dcs.warwick.ac.uk>
Subject: {fore,back}del() fix for use in completion
To: zsh-workers@math.gatech.edu (Z Shell workers mailing list)
Date: Thu, 23 May 1996 15:51:58 +0100 (BST)
X-Patch: 98
X-Loop: zefram@dcs.warwick.ac.uk
X-Stardate: [-31]7548.09
X-US-Congress: Moronic fuckers
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"GzQbs2.0.0L2.Pk7fn"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/1144
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu
Content-Length: 1608
Status: O

-----BEGIN PGP SIGNED MESSAGE-----

When menu completing in beta18, each time the menu completion
reaches a completion with no special suffix, the last character
in the buffer gets duplicated.  This is because the foredel() and
backdel() functions are used in the completion code, but they now
do not expect the buffer to be NUL terminated.  The patch below
fixes this: they always move line[ll], which is harmless if the
buffer is not NUL terminated, because it's always big enough.

 -zefram

      Index: Src/zle_utils.c
      *** zle_utils.c	1996/05/18 06:52:44	1.5
      --- zle_utils.c	1996/05/23 13:07:53
      ***************
      *** 152,158 ****
        {
            int i = (cs -= ct);
        
      !     while (i + ct < ll) {
        	line[i] = line[i + ct];
        	i++;
            }
      --- 152,158 ----
        {
            int i = (cs -= ct);
        
      !     while (i + ct <= ll) {
        	line[i] = line[i + ct];
        	i++;
            }
      ***************
      *** 165,171 ****
        {
            int i = cs;
        
      !     while (i + ct < ll) {
        	line[i] = line[i + ct];
        	i++;
            }
      --- 165,171 ----
        {
            int i = cs;
        
      !     while (i + ct <= ll) {
        	line[i] = line[i + ct];
        	i++;
            }

-----BEGIN PGP SIGNATURE-----
Version: 2.6.2

iQCVAwUBMaRmd3D/+HJTpU/hAQFbZQP/Y9+SU8EPMgWHPDRPqSAGWRsaob0Gfgww
MagkMN4dEeYY8e8VVyY3jc7t6DgAs8vJb2sXgjBkvR0Iy0WOcdIwyaW7dFxcDvb6
sAs7wGB+EFI8oDvwCj0OB5FbDTdJHO+9hfBipsyUgseeoh4Z4FBkjm1idtxrZYjD
6pZv9pO0/pc=
=IFrY
-----END PGP SIGNATURE-----


