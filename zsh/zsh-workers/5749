From zsh-workers-return-5749-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Mar 11 06:34:48 1999
Return-Path: <zsh-workers-return-5749-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 15928 invoked from network); 11 Mar 1999 06:34:47 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 11 Mar 1999 06:34:47 -0000
Received: (qmail 10216 invoked by alias); 11 Mar 1999 06:34:21 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 5749
Received: (qmail 10209 invoked from network); 11 Mar 1999 06:34:20 -0000
X-Authentication-Warning: awayteam.zanshin.com: schaefer set sender to schaefer@tiny.zanshin.com using -f
From: Bart Schaefer <schaefer@tiny.zanshin.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <14055.25484.913379.910845@awayteam.zanshin.com>
Date: Wed, 10 Mar 1999 22:32:44 -0800 (PST)
To: Bernd Eggink <eggink@uni-hamburg.de>
Cc: Zsh-workers <zsh-workers@math.gatech.edu>
Subject: Re: compctl -v
In-Reply-To: <36E6D2CC.7CFCB1DA@uni-hamburg.de>
References: <36E6D2CC.7CFCB1DA@uni-hamburg.de>
X-Mailer: VM 6.68a under Emacs 20.3.5.1
Reply-To: Bart Schaefer <schaefer@zanshin.com>

Bernd Eggink writes:
 > 	compctl -D -v

This means that all default completions should use parameter names and
only parameter names, which is probably not what you intended.

 > these commands are nicely completed:
 > 
 > 	vared xyz<TAB>
 > 	print $xyz<TAB>

Completion following a $ is a special case and doesn't require compctl
to activate it.

 > 	ls xyz<TAB>
 > 
 > all shell parameters starting with 'xyz' also show up, which IMHO is
 > nonsense. Any way to prevent this, and get parameter names completed
 > only if preceded by '$' or 'vared'?

Yes; you want to get rid of that compctl -D, and instead use

     compctl -v vared

A minimal set of sensible compctls using only built-in completions is:

compctl -B builtin
compctl -m command
compctl -v declare integer local readonly read
compctl -aBFw disable
compctl -daBFw enable
compctl -c exec sched whence where -
compctl -F functions unfunction
compctl -Nv getln
compctl -a unalias
compctl -cn unhash
compctl -k signals trap
# These last few are enabled by default in 3.0, but not in 3.1.2 and later
compctl -b bindkey
compctl -v export typeset unset vared
compctl -o setopt unsetopt
compctl -c which

The argument for leaving out all default compctls from 3.1.2+, last time I
heard it, is that the above set isn't "good enough" by comparison to the
collection in Misc/compctl-examples to be worth having.  I've been saying
for at least a year now that I think that's a silly reason to have zsh
out-of-the-box default to completing nothing but file names, but I guess
I'm beating a dead horse.

