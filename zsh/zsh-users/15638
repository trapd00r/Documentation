From zsh-users-return-15638-mason-zsh=primenet.com.au@zsh.org Wed Dec 08 04:35:12 2010
Return-Path: <zsh-users-return-15638-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 28329 invoked by alias); 8 Dec 2010 04:35:12 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15638
Received: (qmail 1579 invoked from network); 8 Dec 2010 04:35:01 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <101207203433.ZM4335@torch.brasslantern.com>
Date: Tue, 07 Dec 2010 20:34:31 -0800
In-reply-to: <20101207194639.3224B1ED6D40@scythe.noid.net>
Comments: In reply to zsh@noid.net
 "Re: multiline ZLE w/ bash-like single line .zsh_history...?" (Dec  7, 11:46am)
References: <20101207194639.3224B1ED6D40@scythe.noid.net>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-users@zsh.org
Subject: Re: multiline ZLE w/ bash-like single line .zsh_history...?
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Dec 7, 11:46am, zsh@noid.net wrote:
}
} I tried your second zshaddhistory example to create a parallel history
} file that has the bash-format:
} 
}   zshaddhistory() {
}     fc -p ${HISTFILE}_bash_format $HISTSIZE $SAVEHIST
}     print -sr "${(z)1%%$'\n'}"
}     return 0
}   }
} 
} Unfortunately, it's not working for me...  It creates the file but
} never writes any lines to it.  Even worse, the normal history file
} ($HISTFILE) is no longer written to either.

Ah; I copied/edited the example from the zshaddhistory entry in the
manual page, but it has a small bug.  Change "fc -p" to "fc -ap".
 
} Because maintaining a parallel history file is not super-optimal to
} me, and based on inspiration from the above, I took an alternate route
} and it seems to be working for me at the moment.  It uses a little
} perl hack (sorry it's not in ZSH!):
} 
} ---------------------------------
} 
} #!/usr/bin/perl
} #
} # zsh_cook_history

This won't work if you have the extended_history option set.

Here's the same in zsh:

zsh_cook_history() {
  # Save values because fc -p will reset them
  local histfile=$HISTFILE histsize=$HISTSIZE
  # Start a new temporary history we won't save anywhere
  fc -ap
  HISTSIZE=$histsize
  SAVEHIST=0
  # Read in the file
  fc -R $histfile
  # Now print it all out again
  zmodload -i zsh/parameter
  local entry
  for entry in ${(nok)history}
  do print -r -- "${(z)history[$entry]}"
  done
}

As previously noted, (z) has a small problem with here-documents
(it converts the embedded newlines to semicolons).  I'm not sure
what your perl solution does with here-documents.  Neither the perl
version nor this version will deal well with history written with
interactivecomments ...

-- 

