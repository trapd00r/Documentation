From zsh-workers-request@math.gatech.edu  Tue Jun  6 20:02:40 1995
Received: from gatech.edu (gatech.edu [130.207.244.244]) by werple.mira.net.au (8.6.12/8.6.9) with SMTP id UAA07874 for <mason@werple.mira.net.au>; Tue, 6 Jun 1995 20:02:30 +1000
Received: from math (math.skiles.gatech.edu) by gatech.edu with SMTP id AA20743
  (5.65c/Gatech-10.0-IDA for <mason@werple.mira.net.au>); Tue, 6 Jun 1995 05:46:35 -0400
Received: by math (5.x/SMI-SVR4)
	id AA21105; Tue, 6 Jun 1995 05:42:52 -0400
Resent-Date: Tue, 06 Jun 95 10:42:14 +0100
Old-Return-Path: <P.Stephenson@swansea.ac.uk>
Message-Id: <24898.9506060942@pyro.swan.ac.uk>
To: zsh-workers@math.gatech.edu (Zsh hackers list)
Subject: Re: numeric brace expansion
In-Reply-To: "mcampbel@schubert.sbi.com"'s message of "Mon, 05 Jun 95 13:39:58 EDT." <9506051739.AA28868@offenbach.sbi.com>
Date: Tue, 06 Jun 95 10:42:14 +0100
From: P.Stephenson@swansea.ac.uk
X-Mts: smtp
Resent-Message-Id: <"yzbPg.0.h95.RC2rl"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/76
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

On undefining HAVE_STRTOL on machines that do have strtol():

mcampbel@schubert.sbi.com wrote:
> gcc -c -I.. -I. -I. -DCONFIG_BROKETS -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmi
> ssing-prototypes -O2 builtin.c
> In file included from zsh.h:1013,
>                  from builtin.c:32:
> prototypes.h:125: conflicting types for `strtol'
> /optware/unsupported/lib/gcc-lib/sparc-sun-solaris2.3/2.6.3/include/stdlib.h:
> 75: previous declaration of `strtol'
> *** Error code 1
> make: Fatal error: Command failed for target `builtin.o'
> Current working directory /export/local/ftp/zsh-2.6-beta9/Src
> *** Error code 1

You should be able to fix this just by altering prototypes.h and
compat.c to add a `const' to the first argument of strtol(), which is
what gcc is worried about: it doesn't really care if the const is
there or not, but if it is in one prototype it needs to be there in
any other.  I think the following is the ANSI/ISO prototype anyway,
but it looks like the zsh code avoids using `const' in prototypes
probably to avoid breaking older compilers.  Does ansi2knr not handle
const's?  We could always do the

#ifdef __STDC__
#define CONST const
#else
#define CONST
#endif

trick.

*** Src/prototypes.h~	Wed May 31 05:09:46 1995
--- Src/prototypes.h	Tue Jun  6 10:32:32 1995
***************
*** 122,128 ****
  /**************************************************/
  /*** prototypes for functions built in compat.c ***/
  #ifndef HAVE_STRTOL
! extern long strtol _((char *s, char **t, int base));
  #endif
  
  #ifndef HAVE_STRSTR
--- 122,128 ----
  /**************************************************/
  /*** prototypes for functions built in compat.c ***/
  #ifndef HAVE_STRTOL
! extern long strtol _((const char *s, char **t, int base));
  #endif
  
  #ifndef HAVE_STRSTR
*** Src/compat.c~	Wed May 31 05:10:08 1995
--- Src/compat.c	Tue Jun  6 10:35:14 1995
***************
*** 35,41 ****
  
  #ifndef HAVE_STRTOL
  long
! strtol(char *s, char **t, int base)
  {
      long ret = 0;
  
--- 35,41 ----
  
  #ifndef HAVE_STRTOL
  long
! strtol(const char *s, char **t, int base)
  {
      long ret = 0;
  

-- 
Peter Stephenson <P.Stephenson@swansea.ac.uk>  Tel: +44 1792 205678 extn. 4461
WWW:  http://python.swan.ac.uk/~pypeters/      Fax: +44 1792 295324
Department of Physics, University of Wales, Swansea,
Singleton Park, Swansea, SA2 8PP, U.K.

