From zsh-workers-return-22455-mason-zsh=primenet.com.au@sunsite.dk Thu May 25 03:51:59 2006
Return-Path: <zsh-workers-return-22455-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 8735 invoked from network); 25 May 2006 03:51:57 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.1 (2006-03-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00,
	FORGED_RCVD_HELO autolearn=ham version=3.1.1
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 25 May 2006 03:51:57 -0000
Received: (qmail 38251 invoked from network); 25 May 2006 03:51:48 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 25 May 2006 03:51:47 -0000
Received: (qmail 21774 invoked by alias); 25 May 2006 03:51:45 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 22455
Received: (qmail 21765 invoked from network); 25 May 2006 03:51:44 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 25 May 2006 03:51:44 -0000
Received: (qmail 37941 invoked from network); 25 May 2006 03:51:44 -0000
Received: from acolyte.scowler.net (216.254.112.45)
  by a.mx.sunsite.dk with SMTP; 25 May 2006 03:51:43 -0000
Received: by acolyte.scowler.net (Postfix, from userid 1000)
	id D9B7F70059; Wed, 24 May 2006 23:51:41 -0400 (EDT)
Date: Wed, 24 May 2006 23:51:41 -0400
From: Clint Adams <clint@zsh.org>
To: zsh-workers@sunsite.dk
Subject: PATCH: _valgrind 3.1.1
Message-ID: <20060525035141.GA1422@scowler.net>
Mail-Followup-To: zsh-workers@sunsite.dk
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.11+cvs20060403

Update from R.Ramkumar for valgrind 3.1.1.

Index: Completion/Linux/Command/_valgrind
===================================================================
RCS file: /cvsroot/zsh/zsh/Completion/Linux/Command/_valgrind,v
retrieving revision 1.3
diff -u -r1.3 _valgrind
--- Completion/Linux/Command/_valgrind	21 Jan 2005 09:42:13 -0000	1.3
+++ Completion/Linux/Command/_valgrind	25 May 2006 03:50:22 -0000
@@ -1,7 +1,8 @@
 #compdef valgrind -value-,VALGRIND_OPTS,-default-
 
-local curcontext="$curcontext" state line common cmd
-local -a args args_{memcheck,addrcheck,cachegrind,helgrind,massif}
+local curcontext="$curcontext" state line
+local -a cmd common common_mem_null \
+  args args_{addrcheck,memcheck,cachegrind,helgrind,lackey,massif,none}
 
 cmd=(
   '1:command name:_command_names -e'
@@ -16,12 +17,17 @@
 fi
 
 common=(
-  '--sloppy-malloc=-[round malloc sizes to multiple of 4]:enable:(yes no)'
   '--alignment=-[set minimum alignment of allocations]:number'
 )
 
+common_mem_null=(
+  '--xml=-[output everything in XML]:enable:(yes no)'
+  '--xml-user-comment=-[copy specified string verbatim to XML output]:string'
+)
+
 args_addrcheck=(
   $common
+  $common_mem_null
   '--partial-loads-ok=-:enable:(yes no)'
   '--freelist-vol=-[volume of freed blocks queue]:blocks'
   '--leak-check=-[search for memory leaks at exit]:enable:(yes no)'
@@ -32,7 +38,6 @@
 
 args_memcheck=(
   $args_addrcheck
-  '--avoid-strlen-errors=-[suppress errs from inlined strlen]:enable:(yes no)'
 )
 
 args_cachegrind=(
@@ -47,6 +52,11 @@
   '--show-last-access=-[show location of last word access on error]:locations:(no some all)'
 )
 
+args_lackey=(
+  '--fnname=-[count calls to specified name]:name'
+  '--detailed-counts=-[count loads, stores and alu ops]:enable:(yes no)'
+)
+
 args_massif=(
   $common
   '--heap=-[profile heap blocks]:enable:(yes no)'
@@ -57,10 +67,14 @@
   '--format=-[specify format of textual output]:format:(text html)'
 )
 
-args="args_${${words[(r)--(skin|tool)=*]#*=}:-memcheck}"
+args_none=(
+  $common_mem_null
+)
+
+args="args_${${words[(r)--tool=*]#*=}:-memcheck}"
 
 _arguments -C ${(P)args} $cmd \
-  '(--tool --skin)'{--tool,--skin}'=-[specify valgrind tool]:valgrind tool:->tools' \
+  '--tool=-[specify valgrind tool]:valgrind tool:->tools' \
   '(-h --help)'{-h,--help}'[show help information]' \
   '--help-debug[show help info including debugging options]' \
   '--version[show version]' \
@@ -69,15 +83,15 @@
   '--trace-children=-[valgrind-ise child processes]:enable:(yes no)' \
   '--track-fds=-[track open file descriptors]:enable:(yes no)' \
   '--time-stamp=-[add timestamps to log messages]:enable:(yes no)' \
-  '--run-libc-freeres=-[free up glibc memory at exit]:enable:(yes no)' \
-  '--weird-hacks=-[enable hack]:hack:(lax-ioctls)' \
-  '--signal-polltime=-[signal poll period (ms)]:period' \
-  '--lowlat-signals=-[improve thread signal wake-up latency]:enable:(yes no)' \
-  '--lowlat-syscalls=-[improve thread syscall wake-up latency]:enable:(yes no)' \
-  '--pointercheck=-[enforce client address space limits]:enable:(yes no)' \
   '--log-fd=-[log messages to specified file descriptor]:file descriptor:_file_descriptors' \
-  '--log-file=-[log messages to specified file]:file:_files' \
+  '--log-file=-[log messages to specified file with pid appended]:file:_files' \
+  '--log-file-exactly=-[log messages to specified file]:file:_files' \
+  '--log-file-qualifier=-[log messages to filename given by specified environment variable]:variable:_parameters -g "*scalar*"' \
   '--log-socket=-[log messages to socket]:ipaddr\:port' \
+  '--run-libc-freeres=-[free up glibc memory at exit]:enable:(yes no)' \
+  '--sim-hints=-[enable hint]:hint:(lax-ioctls enable-outer)' \
+  '--show-emwarns=-[show warnings about emulation limits]:enable:(yes no)' \
+  '--kernel-variant=-[handle non-standard kernel variants]:kernel variant:_values -s , kernel\ variant bproc' \
   '--demangle=-[automatically demangle C++ names]:enable:(yes no)' \
   '--num-callers=-[specify no of callers to show in stack traces]:number' \
   '--error-limit=-[stop showing new errors if too many]:enable:(yes no)' \
@@ -86,11 +100,20 @@
   '--gen-suppressions=-[print suppressions for errors detected]:enable:(yes no)' \
   '--db-attach=-[start debugger when errors detected]:enable:(yes no)' \
   '--db-command=-[specify command to start debugger]:command:_command_names -e' \
-  '--input-fd=-[specify file descriptor for input]:file descriptor:_file_descriptors' && return
+  '--input-fd=-[specify file descriptor for input]:file descriptor:_file_descriptors' \
+  '--max-stackframe=-[assume stack switch for SP changes larger than specified number of bytes]:bytes' \
+  && return
+
+typeset -a tools
 
 if [[ -n "$state" ]]; then
-  _wanted tools exl 'valgrind tool' compadd ${=${${(f)"$(_call_program \
-      tools valgrind --tool= 2>&1)"}[(r)Available*,-1]}[2,-1]} && return
+  # `valgrind --tool=` no longer works.
+  # The method below is even more hackish, but the only one I could find.
+  # Basically uses debug output to find out the directory where the tools are
+  # present and lists all executables in that directory.
+  # Hope the program provides a neater interface some day!
+  tools=(${${${(M)${(f)"$(_call_program tools valgrind --tool=something -d 2> /dev/null)"}:#*launcher launching *something}##*launcher launching }%%something}*(*:t))
+  _wanted tools exl 'valgrind tool' compadd $tools && return
 fi
 
 return 1

