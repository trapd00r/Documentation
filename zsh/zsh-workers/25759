From zsh-workers-return-25759-mason-zsh=primenet.com.au@sunsite.dk Sat Sep 27 19:43:26 2008
Return-Path: <zsh-workers-return-25759-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 3548 invoked from network); 27 Sep 2008 19:43:13 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 27 Sep 2008 19:43:13 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 53115 invoked from network); 27 Sep 2008 19:42:59 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 27 Sep 2008 19:42:59 -0000
Received: (qmail 11412 invoked by alias); 27 Sep 2008 19:42:52 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 25759
Received: (qmail 11393 invoked from network); 27 Sep 2008 19:42:51 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 27 Sep 2008 19:42:51 -0000
Received: from mtaout01-winn.ispmail.ntl.com (mtaout01-winn.ispmail.ntl.com [81.103.221.47])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 05B8C80308B9
	for <zsh-workers@sunsite.dk>; Sat, 27 Sep 2008 21:42:48 +0200 (CEST)
Received: from aamtaout03-winn.ispmail.ntl.com ([81.103.221.35])
          by mtaout01-winn.ispmail.ntl.com with ESMTP
          id <20080927194247.RBOU2285.mtaout01-winn.ispmail.ntl.com@aamtaout03-winn.ispmail.ntl.com>
          for <zsh-workers@sunsite.dk>; Sat, 27 Sep 2008 20:42:47 +0100
Received: from pws-pc ([81.107.43.40]) by aamtaout03-winn.ispmail.ntl.com
          with ESMTP
          id <20080927194247.FUYM29597.aamtaout03-winn.ispmail.ntl.com@pws-pc>
          for <zsh-workers@sunsite.dk>; Sat, 27 Sep 2008 20:42:47 +0100
Date: Sat, 27 Sep 2008 20:42:41 +0100
From: Peter Stephenson <p.w.stephenson@ntlworld.com>
To: "Zsh hackers list" <zsh-workers@sunsite.dk>
Subject: Re: PATCH: dynamic named directories
Message-ID: <20080927204241.084ea69d@pws-pc>
In-Reply-To: <237967ef0809260556q7c01d31s79a00e5d58f1b9c7@mail.gmail.com>
References: <15726.1222353125@csr.com>
	<237967ef0809260552o3903e719od88cf2c79d9c3f07@mail.gmail.com>
	<237967ef0809260556q7c01d31s79a00e5d58f1b9c7@mail.gmail.com>
X-Mailer: Claws Mail 3.5.0 (GTK+ 2.12.12; x86_64-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Cloudmark-Analysis: v=1.0 c=1 a=NLZqzBF-AAAA:8 a=2dF_0rVYAc-shQ_oHA8A:9 a=DFwBb_MmJ-mrfITJ0l8A:7 a=2CjptMDuoHvOa3Rr-1808pMaF6QA:4 a=MSl-tDqOz04A:10 a=Shd8Sdw-9eQA:10 a=_dQi-Dcv4p4A:10 a=LY0hPdMaydYA:10
X-Virus-Scanned: ClamAV 0.92.1/8346/Sat Sep 27 09:08:52 2008 on bifrost
X-Virus-Status: Clean

On Fri, 26 Sep 2008 14:56:32 +0200
"Mikael Magnusson" <mikachu@gmail.com> wrote:
> 2008/9/26 Mikael Magnusson <mikachu@gmail.com>:
> > 2008/9/25 Peter Stephenson <pws@csr.com>:
> >
> > Here's line broken backtrace of the week
> >
> > (gdb) run
> > Starting program: /usr/local/bin/zsh -f
> > fartmonstret% zsh_directory_name() {}
> > fartmonstret% cd ~[a b]
> 
> Well, maybe the space is a bit of a red herring there. 'cd ~[a'
> appears to give more or less the same result.

Oops.  Thanks.  The problem is the search for "]".  If that was
attempted but the name substitution failed, the pointer used in the next
test was messed up.  In the first case, the failure is after the call to
zsh_directory_name, in the second before since the search for "]"
itself failed.  (You'd have found the first case didn't crash if there
was already a value for $reply, which would have been used as the
directory---you do have to stick to the rules to get it to work
properly, although obviously it shouldn't crash.)

I've also spotted that the substitution code requires static named
directories to have the same set of chararacters as user names, whether
or not they are user names.  So (i) this should be documented (ii) hash
-d should check when defining static names for directories since it's
pointless and confusing if they can be defined but can't be used (there
isn't room to list the valid characters in the error message).

It's not obvious that this limitation is necessary, however.  It
obviously comes from when named directories could only be user names or
parameters; with "hash -d" we could in principle relax it.  However,
I don't think there's any good reason to use a wider name space and
there's every possibility of confusion with people wondering why tilde
squiggle squiggle squiggle slash doesn't do quite what they want.

Index: Doc/Zsh/expn.yo
===================================================================
RCS file: /cvsroot/zsh/zsh/Doc/Zsh/expn.yo,v
retrieving revision 1.92
diff -u -r1.92 expn.yo
--- Doc/Zsh/expn.yo	26 Sep 2008 09:11:28 -0000	1.92
+++ Doc/Zsh/expn.yo	27 Sep 2008 19:29:23 -0000
@@ -1375,13 +1375,16 @@
 cindex(directories, named, static)
 cindex(named directories, static)
 cindex(static named directories)
-A `tt(~)' followed by anything not already covered is looked up as a
+A `tt(~)' followed by anything not already covered consisting
+of any number of alphanumeric characters or underscore (`tt(_)'),
+hyphen (`tt(-)'), or dot (`tt(.)') is looked up as a
 named directory, and replaced by the value of that named directory if found.
 Named directories are typically home directories for users on the system.
 They may also be defined if the text after the `tt(~)' is the name
 of a string shell parameter whose value begins with a `tt(/)'.
 Note that trailing slashes will be removed from the path to the directory
 (though the original parameter is not modified).
+
 It is also possible to define directory names using the tt(-d) option to the
 tt(hash) builtin.
 
Index: Src/builtin.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/builtin.c,v
retrieving revision 1.208
diff -u -r1.208 builtin.c
--- Src/builtin.c	23 Sep 2008 08:42:01 -0000	1.208
+++ Src/builtin.c	27 Sep 2008 19:29:26 -0000
@@ -3262,9 +3262,19 @@
 		/* The argument is of the form foo=bar, *
 		 * so define an entry for the table.    */
 		if(OPT_ISSET(ops,'d')) {
-		    Nameddir nd = hn = zshcalloc(sizeof *nd);
-		    nd->node.flags = 0;
-		    nd->dir = ztrdup(asg->value);
+		    /* shouldn't return NULL if asg->name is not NULL */
+		    if (*itype_end(asg->name, IUSER, 0)) {
+			zwarnnam(name,
+				 "invalid character in directory name: %s",
+				 asg->name);
+			returnval = 1;
+			argv++;
+			continue;
+		    } else {
+			Nameddir nd = hn = zshcalloc(sizeof *nd);
+			nd->node.flags = 0;
+			nd->dir = ztrdup(asg->value);
+		    }
 		} else {
 		    Cmdnam cn = hn = zshcalloc(sizeof *cn);
 		    cn->node.flags = HASHED;
Index: Src/subst.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/subst.c,v
retrieving revision 1.87
diff -u -r1.87 subst.c
--- Src/subst.c	26 Sep 2008 09:11:30 -0000	1.87
+++ Src/subst.c	27 Sep 2008 19:29:27 -0000
@@ -529,7 +529,7 @@
 
     if (*str == Tilde && str[1] != '=' && str[1] != Equals) {
 	Shfunc dirfunc;
-	char *ptr, *tmp, *res;
+	char *ptr, *tmp, *res, *ptr2;
 	int val;
 
 	val = zstrtol(str + 1, &ptr, 10);
@@ -544,14 +544,14 @@
 	    return 1;
 	} else if (str[1] == Inbrack &&
 		   (dirfunc = getshfunc("zsh_directory_name")) &&
-		   (ptr = strchr(str+2, Outbrack))) {
+		   (ptr2 = strchr(str+2, Outbrack))) {
 	    char **arr;
-	    untokenize(tmp = dupstrpfx(str+2, ptr - (str+2)));
+	    untokenize(tmp = dupstrpfx(str+2, ptr2 - (str+2)));
 	    remnulargs(tmp);
 	    arr = subst_string_by_func(dirfunc, "n", tmp);
 	    res = arr ? *arr : NULL;
 	    if (res) {
-		*namptr = dyncat(res, ptr+1);
+		*namptr = dyncat(res, ptr2+1);
 		return 1;
 	    }
 	    if (isset(NOMATCH))


-- 
Peter Stephenson <p.w.stephenson@ntlworld.com>
Web page now at http://homepage.ntlworld.com/p.w.stephenson/

