From zsh-workers-return-12499-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Aug 03 12:21:49 2000
Return-Path: <zsh-workers-return-12499-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 8416 invoked from network); 3 Aug 2000 12:21:48 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 3 Aug 2000 12:21:48 -0000
Received: (qmail 29300 invoked by alias); 3 Aug 2000 12:21:36 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 12499
Received: (qmail 29293 invoked from network); 3 Aug 2000 12:21:36 -0000
Date: Thu, 3 Aug 2000 13:21:34 +0100
From: Adam Spiers <adam@spiers.net>
To: zsh-workers@sunsite.auc.dk
Subject: Re: PATCH: completion caching layer
Message-ID: <20000803132134.A32712@thelonious.new.ox.ac.uk>
Reply-To: Adam Spiers <adam@spiers.net>
Mail-Followup-To: zsh-workers@sunsite.auc.dk
References: <200008021413.QAA11687@beta.informatik.hu-berlin.de> <20000802160131.B19975@thelonious.new.ox.ac.uk>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0.1i
In-Reply-To: <20000802160131.B19975@thelonious.new.ox.ac.uk>; from adam@spiers.net on Wed, Aug 02, 2000 at 04:01:31PM +0100
X-Home-Page: http://www.new.ox.ac.uk/~adam/
X-OS: RedHat Linux

Adam Spiers (adam@spiers.net) wrote:
> Sven Wischnowsky (wischnow@informatik.hu-berlin.de) wrote:
> > 
> > Adam Spiers wrote:
> > 
> > > Sven Wischnowsky (wischnow@informatik.hu-berlin.de) wrote:
> > > > It's a bit unfortunate that _cache_invalid can be called twice (in
> > > > your examples), once directly and once from _retrieve_cache. I think.
> > > 
> > > Yes, I didn't like that either, but couldn't think of a better
> > > design.  The problem is that there are actually two caching layers -
> > > the parameters, and the cache files on disk, but the _cache_invalid
> > > check needs to be invoked if either is about to be used.  Suggestions
> > > for how to avoid this welcome.
> > 
> > Couldn't we stuff everything in _retrieve_cache? So that one only
> > needs to call:
> > 
> >   if ! _retrieve_cache RPMs _rpms; then
> >     _rpms=(...)
> >     _store_cache RPMs _rpms
> >   fi
> 
> I had thought of that, and then decided against it, probably for no
> good reason whatsoever, as I was exhausted at the time :-) 

I remembered the reason, and why I thought it might be good.  I was
thinking that the problem with moving the parameter test into
_retrieve_cache is that the completion function programmer loses
control over it, and while in the majority of the situations the test
will be of the nature 'check if the parameter is undefined, and if so
we need to retrieve from the cache file', there could be situations in
the future where the parameter would correctly end up undefined
/after/ retrieval from disk.  For example, suppose that _perl_modules
stored the results of its search for perl modules in several
parameters, instead of one:

  _perl_pragmatic_modules
  _perl_standard_modules
  _perl_extension_modules
  _perl_CPAN_modules

(See the perlmodlib man page for an explanation of these.)

Now, it's not hard to imagine a system which doesn't have any CPAN
modules installed.  In that case, I was worried about the above test
failing because _perl_CPAN_modules would be undefined.  However there
appears to be an easy solution, which is just to ensure that all
cache-related parameters are always defined after retrieval, even if
they're defined to the empty array or string.  Does that sound OK?

