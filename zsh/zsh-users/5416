From zsh-users-return-5416-mason-zsh=primenet.com.au@sunsite.dk Thu Oct 03 15:30:32 2002
Return-Path: <zsh-users-return-5416-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4840 invoked from network); 3 Oct 2002 15:30:32 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 3 Oct 2002 15:30:32 -0000
Received: (qmail 11408 invoked by alias); 3 Oct 2002 15:29:30 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 5416
Received: (qmail 11377 invoked from network); 3 Oct 2002 15:29:19 -0000
From: Paul Lew <paullew@cisco.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <15772.25139.506561.955462@paullew-ultra.cisco.com>
Date: Thu, 3 Oct 2002 08:28:51 -0700
To: zsh-users@sunsite.auc.dk
Subject: Bart's urlglobber question
X-Mailer: VM 7.07 under Emacs 21.2.1

I am trying to use the urlglobber but there is a problem:

    > w3m http://yahoo.com/?id=test&name=paul&addr=home
    zsh: parse error near `&'

    > echo $ZSH_VERSION
    4.0.5

Seems noglob does not handle the '&' because pure simple:

    > noglob foo&bar

will not work either.  So zsh will treat the above statement as:

     'noglob foo' &  and 'bar'

then how can I ever achieve the original goal of not supplying quotes
when using w3m?

BTW, the definitions for w3m is:

    > alias   w3m='globurl w3m'
    > alias   globurl='noglob urlglobber'

The urlglobber came from:
# Bart Schaefer" <schaefer@brasslantern.com>
# Fri, 30 Aug 2002 05:31:59 +0000
function urlglobber {
    local -a args globbed
    local arg command="$1"
    shift
    for arg; do
        case "${arg}" in
        (ftp://(|localhost)/*)
               globbed=( ${~${arg##ftp://(localhost|)}} )
               args[$#args+1]=(
               "${(M)arg##ftp://(localhost|)}${(@)^globbed}" )
               ;;
        ((http(|s)|ftp):*) args[$#args+1]="$arg";;
        (*) args[$#args+1]=( ${~arg} );;
        esac
    done
    "$command" "${(@)args}"
}

