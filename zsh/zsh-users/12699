From zsh-users-return-12699-mason-zsh=primenet.com.au@sunsite.dk Fri Mar 07 22:52:41 2008
Return-Path: <zsh-users-return-12699-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 13603 invoked from network); 7 Mar 2008 22:52:39 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 7 Mar 2008 22:52:39 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 34045 invoked from network); 7 Mar 2008 22:52:20 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 7 Mar 2008 22:52:20 -0000
Received: (qmail 25287 invoked by alias); 7 Mar 2008 22:52:06 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12699
Received: (qmail 25272 invoked from network); 7 Mar 2008 22:52:05 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 7 Mar 2008 22:52:05 -0000
Received: from mtaout02-winn.ispmail.ntl.com (mtaout02-winn.ispmail.ntl.com [81.103.221.48])
	by bifrost.dotsrc.org (Postfix) with ESMTP id C5305802A5EF
	for <zsh-users@sunsite.dk>; Fri,  7 Mar 2008 23:52:01 +0100 (CET)
Received: from aamtaout02-winn.ispmail.ntl.com ([81.103.221.35])
          by mtaout02-winn.ispmail.ntl.com with ESMTP
          id <20080307225424.CUUZ27871.mtaout02-winn.ispmail.ntl.com@aamtaout02-winn.ispmail.ntl.com>
          for <zsh-users@sunsite.dk>; Fri, 7 Mar 2008 22:54:24 +0000
Received: from pws-pc ([81.107.42.63]) by aamtaout02-winn.ispmail.ntl.com
          with ESMTP
          id <20080307225340.CZGU17393.aamtaout02-winn.ispmail.ntl.com@pws-pc>
          for <zsh-users@sunsite.dk>; Fri, 7 Mar 2008 22:53:40 +0000
Date: Fri, 7 Mar 2008 22:51:50 +0000
From: Peter Stephenson <p.w.stephenson@ntlworld.com>
To: zsh-users@sunsite.dk
Subject: Re: Conflict between *:foo:_files and -o:bar:_files
Message-ID: <20080307225150.78227259@pws-pc>
In-Reply-To: <20080307133323.GA22989@fox>
References: <20080307133323.GA22989@fox>
X-Mailer: Claws Mail 3.3.1 (GTK+ 2.12.5; x86_64-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Virus-Scanned: ClamAV 0.91.2/6166/Fri Mar  7 17:36:07 2008 on bifrost
X-Virus-Status: Clean

On Fri, 7 Mar 2008 14:33:23 +0100
Haakon Riiser <haakon.riiser@fys.uio.no> wrote:
> For this, I've tried
> 
>   _arguments -S \
>     '-o:output file:_files' \
>     '*:input file:_files'
> 
> For some reason, calling the app as
> 
>   $ app input -o <PRESS-TAB-HERE>
> 
> and then using ZSH's completion system to generate alternatives
> for -o, the _files completer is called twice with two different
> descriptions:
> 
>   output file
>   file1 file2 file3 (etc)
>   input file
>   file1 file2 file3 (etc)

(Posting this to zsh-users as a help request rather than zsh-workers as a
bug report earns you the award "optimist of the week".)

I tracked this down through the uncommented mess of shell functions to
the uncommented mess of C support files below that.  I've put in quite a
specific fix: if there are similar cases where _arguments is completing
too much it should be possible to change the code again without the
two-hour battle I had this time.

The appropriate test, Y03arguments.ztst, still passes, but you'll
appreciate I can't guarantee this has no side effects.

Index: Src/Zle/computil.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/Zle/computil.c,v
retrieving revision 1.105
diff -u -r1.105 computil.c
--- Src/Zle/computil.c	6 Jul 2007 21:52:40 -0000	1.105
+++ Src/Zle/computil.c	7 Mar 2008 22:37:13 -0000
@@ -1612,7 +1612,16 @@
     return new;
 }
 
-/* Get the option used in a word from the line, if any. */
+/*
+ * Get the option used in a word from the line, if any.
+ *
+ * "d" is a complete set of argument/option definitions to scan.
+ * "line" is the word we are scanning.
+ * "full" indicates that the option must match a full word; otherwise
+ *   we look for "=" arguments or prefixes.
+ * *"end" is set to point to the end of the option, in some cases
+ *   leaving an option argument after it.
+ */
 
 static Caopt
 ca_get_opt(Cadef d, char *line, int full, char **end)
@@ -1785,6 +1794,12 @@
 
 typedef struct castate *Castate;
 
+/*
+ *           **** DOCUMENT ME ****
+ *
+ * This structure and its use are a nightmare.
+ */
+
 struct castate {
     Castate snext;
     Cadef d;
@@ -2244,9 +2259,18 @@
 	return ztrdup("");
 }
 
+/*
+ * This function adds the current set of descriptions, actions,
+ * and subcontext descriptions to the given linked list for passing
+ * up in comparguments -D and comparguments -L.  opt is the
+ * option string (may be NULL if this isn't an option argument) and arg the
+ * argument structure (either an option argument or a normal argument
+ * as determined by arg->type).
+ */
+
 static void
 ca_set_data(LinkList descr, LinkList act, LinkList subc,
-	    char *opt, Caarg arg, int single)
+	    char *opt, Caarg arg, Caopt optdef, int single)
 {
     LinkNode dnode, anode;
     char nbuf[40], *buf;
@@ -2297,6 +2321,19 @@
 
 	    addlinknode(subc, buf);
 	}
+	/*
+	 * If this is an argument to an option, and the option definition says
+	 * the argument to the option is required and in the following
+	 * (i.e. this) word, then it must match what we've just told it to
+	 * match---don't try to match normal arguments.
+	 *
+	 * This test may be too stringent for what we need, or it
+	 * may be too loose; I've simply tweaked it until it gets
+	 * the case above right.
+	 */
+	if (arg->type == CAA_NORMAL &&
+	    opt && optdef && optdef->type == CAO_NEXT)
+	    return;
 	if (single)
 	    break;
 
@@ -2467,7 +2504,7 @@
 			ignore_prefix(lstate->doff);
 		    }
 		    ca_set_data(descr, act, subc, arg->opt, arg,
-				(lstate->doff > 0));
+				lstate->curopt, (lstate->doff > 0));
 		}
 		lstate = lstate->snext;
 	    }
@@ -2565,7 +2602,7 @@
 
 		if (opt && opt->args) {
 		    ret = 0;
-		    ca_set_data(descr, act, subc, opt->name, opt->args, 1);
+		    ca_set_data(descr, act, subc, opt->name, opt->args, opt, 1);
 		}
 		lstate = lstate->snext;
 	    }


-- 
Peter Stephenson <p.w.stephenson@ntlworld.com>
Web page now at http://homepage.ntlworld.com/p.w.stephenson/

