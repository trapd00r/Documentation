From zsh-users-return-12770-mason-zsh=primenet.com.au@sunsite.dk Thu Apr 10 08:52:23 2008
Return-Path: <zsh-users-return-12770-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 12440 invoked from network); 10 Apr 2008 08:52:21 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.3 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 10 Apr 2008 08:52:21 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 68264 invoked from network); 10 Apr 2008 08:52:15 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 10 Apr 2008 08:52:15 -0000
Received: (qmail 8902 invoked by alias); 10 Apr 2008 08:52:07 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12770
Received: (qmail 8889 invoked from network); 10 Apr 2008 08:52:06 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 10 Apr 2008 08:52:06 -0000
Received: from cluster-d.mailcontrol.com (cluster-d.mailcontrol.com [217.69.20.190])
	by bifrost.dotsrc.org (Postfix) with ESMTP id E20B8802265E
	for <zsh-users@sunsite.dk>; Thu, 10 Apr 2008 10:52:03 +0200 (CEST)
Received: from cameurexb01.EUROPE.ROOT.PRI ([62.189.241.200])
	by rly42d.srv.mailcontrol.com (MailControl) with ESMTP id m3A8pkhh005337
	for <zsh-users@sunsite.dk>; Thu, 10 Apr 2008 09:52:02 +0100
Received: from news01.csr.com ([10.103.143.38]) by cameurexb01.EUROPE.ROOT.PRI with Microsoft SMTPSVC(6.0.3790.3959);
	 Thu, 10 Apr 2008 09:51:46 +0100
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.14.2/8.13.4) with ESMTP id m3A8pkbi003524
	for <zsh-users@sunsite.dk>; Thu, 10 Apr 2008 09:51:46 +0100
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.14.2/8.14.2/Submit) with ESMTP id m3A8pk9S003521
	for <zsh-users@sunsite.dk>; Thu, 10 Apr 2008 09:51:46 +0100
Message-Id: <200804100851.m3A8pk9S003521@news01.csr.com>
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-users@sunsite.dk
Subject: Re: iterating through a hierarchy with a filter
In-reply-to: <8BAD0AA6-3B6F-4946-B636-6C16B56A944E@gmail.com>
References: <8BAD0AA6-3B6F-4946-B636-6C16B56A944E@gmail.com>
Comments: In-reply-to Alexy Khrabrov <deliverable@gmail.com>
   message dated "Wed, 09 Apr 2008 19:56:33 -0700."
Date: Thu, 10 Apr 2008 09:51:46 +0100
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 10 Apr 2008 08:51:46.0955 (UTC) FILETIME=[1BCCB5B0:01C89AE8]
X-Scanned-By: MailControl A-08-00-04 (www.mailcontrol.com) on 10.68.0.152
X-Virus-Scanned: ClamAV 0.91.2/6693/Thu Apr 10 10:22:27 2008 on bifrost
X-Virus-Status: Clean

Alexy Khrabrov wrote:
> Greetings -- I have a series of XML files scattered around a  
> hierarchy.  I also have a filter script which reads stdin and writes  
> stdout in a standard Unix way.
> 
> I need to create a mirror hierarchy where files are results of  
> applying the filter to the originals, replacing the original  
> extension, say .xml, with the result extension, say .txt.  Except for  
> the extension change, the hierarchy should be preserved.
> 
> Ideally, my script would not know anything about this whole process,  
> so I can take any filter and use it for my transforms.  The hierarchy  
> for the transformed tree must be created anew so I can easily throw it  
> away (i.e. we do not output the results next to the originals).  The  
> original and result extensions should be provided as a parameter to  
> the process.
> 
> Which zshfoo can I use for it above and beyond find with exec helper  
> script?

zsh doesn't have any specific code for descending hierarchies, so you
would have to do that by trickery.  If it's shallow enough that globbing
the whole thing in one go will work, you can do things along the lines
of (untested):

for file1 in source/**/*.xml; do
  file2=dest/${${file1##source/}:r}.txt
  destdir=${file2:h}
  [[ -d $destdir ]] || mkdir -p $destdir
  filter <$file1 >$file2
done

If that doesn't work even with a few small tweaks, you'll probably have
to tell us why before we can advise better.

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070

