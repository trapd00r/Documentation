From zsh-workers-return-9852-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Feb 24 07:48:23 2000
Return-Path: <zsh-workers-return-9852-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 6550 invoked from network); 24 Feb 2000 07:48:19 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 24 Feb 2000 07:48:19 -0000
Received: (qmail 20643 invoked by alias); 24 Feb 2000 07:47:50 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 9852
Received: (qmail 20635 invoked from network); 24 Feb 2000 07:47:49 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer david.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: "Sven Wischnowsky" <wischnow@informatik.hu-berlin.de>,
        <zsh-workers@sunsite.auc.dk>
Subject: RE: PATCH: parser (was: Re: PATCH: Improved _mailboxes)
Date: Thu, 24 Feb 2000 10:47:46 +0300
Message-ID: <000901bf7e9b$70e3ef40$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="koi8-r"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)
In-Reply-To: <200002231321.OAA00470@beta.informatik.hu-berlin.de>
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6700

>
> Here is the first of the two. As I said, this mainly makes the parser
> create wordcode directly, no more extra compilation phase.
>
>

Sounds really interesting ... Two questions.

Is the code position-independent?
Is now code-compiler separated from code-interpreter?

The main reason for these questions - is it possible to precompile Zsh
function, store it and then execute directly? This may be intersted in many
cases - primary use is completion. Precompile completion functions; put
byte-code in single file; mmap this file. I do not know about speed increase
(if any) - but it should dramatically reduce RAM footprint on multiuser
systems. Currently every shell compiles every function on it's own and it
goes in private memory - and that is real RAM (O.K., it is real swap on some
systems :-) mmap'ing precompiled byte-code would mean, that just a single
copy exists.

It may be useful to generalize it to allow byte-code be the contents of
variable. Then Zsh could simply execute the content of

mapfile[/path/to/precompiled/file] ... may be, not as directly - with
something like imaginal zcompiler module

zcodeload file

/andrej


