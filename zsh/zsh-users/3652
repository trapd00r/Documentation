From zsh-users-return-3652-mason-zsh=primenet.com.au@sunsite.dk Thu Mar 08 10:28:08 2001
Return-Path: <zsh-users-return-3652-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 409 invoked from network); 8 Mar 2001 10:28:07 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 8 Mar 2001 10:28:07 -0000
Received: (qmail 18672 invoked by alias); 8 Mar 2001 10:27:55 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 3652
Received: (qmail 18661 invoked from network); 8 Mar 2001 10:27:54 -0000
Date: Thu, 8 Mar 2001 11:27:52 +0100 (MET)
Message-Id: <200103081027.LAA09315@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-users@sunsite.dk
In-reply-to: jarausch@igpm.rwth-aachen.de's message of Thu, 8 Mar 2001
	10:12:30 +0100
Subject: Re: Inter-Shell communication ?


jarausch@igpm.rwth-aachen.de wrote:

> Hi,
> 
> is there an elegant technique for one zshell waiting
> for a different zshell (i.e. running in a different xterm)
> to complete?
> (better than e.g. periodically checking for a file that
> the second zshell touches at completion)
> 
> Thanks for your hint,

I can only think of named pipes (`mknod foo p') with `read var <foo' and
`print go >foo'.

If the pid of the waiting shell is known, one can also use one of the
USR-signals. Or start a endlessly running process in the wait-shell,
wait for it and kill it from the other shell.


We really need that generic socket module ;-)

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

