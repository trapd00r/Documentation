From zsh-users-return-5933-mason-zsh=primenet.com.au@sunsite.dk Sat Feb 22 22:37:26 2003
Return-Path: <zsh-users-return-5933-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1846 invoked from network); 22 Feb 2003 22:37:25 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 22 Feb 2003 22:37:25 -0000
Received: (qmail 17085 invoked by alias); 22 Feb 2003 22:36:51 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 5933
Received: (qmail 17074 invoked from network); 22 Feb 2003 22:36:51 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 22 Feb 2003 22:36:51 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [4.64.233.231] by sunsite.dk (MessageWall 1.0.8) with SMTP; 22 Feb 2003 22:36:50 -0000
Received: (from schaefer@localhost)
	by candle.brasslantern.com (8.11.6/8.11.6) id h1MNabD10603
	for zsh-users@sunsite.dk; Sat, 22 Feb 2003 15:36:37 -0800
From: "Bart Schaefer" <schaefer@brasslantern.com>
Message-Id: <1030222233637.ZM10602@candle.brasslantern.com>
Date: Sat, 22 Feb 2003 23:36:37 +0000
In-Reply-To: <15957.22919.742981.955897@cns-build2.cisco.com>
Comments: In reply to Paul Lew <paullew@cisco.com>
        "umask for process substitution" (Feb 20,  2:41pm)
References: <15957.22919.742981.955897@cns-build2.cisco.com>
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-users@sunsite.dk
Subject: Re: umask for process substitution
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Feb 20,  2:41pm, Paul Lew wrote:
}
} Is there a way to set umask for temporary file created with =(cmd)?

No, there isn't.

However, because of the order in which zsh creates/removes those temp
files, you can do something like this:

    { f==(cmd); chmod a+r $f; suidprog $f }

That is, the file will persist until the end of the braces (and maybe
longer, depending on the structure of the command).

If your operating system supports /dev/fd/, you might be able to do this:

    suidprog =(chmod a+r /dev/fd/1; cmd)

It depends on the implementation of /dev/fd ... it works on Linux, but I
doubt it works on Solaris.

