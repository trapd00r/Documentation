From zsh-workers-return-24515-mason-zsh=primenet.com.au@sunsite.dk Fri Feb 01 19:38:22 2008
Return-Path: <zsh-workers-return-24515-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 29150 invoked from network); 1 Feb 2008 19:38:11 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00,
	SUBJECT_FUZZY_TION autolearn=no version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 1 Feb 2008 19:38:11 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 53201 invoked from network); 1 Feb 2008 19:38:07 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 1 Feb 2008 19:38:07 -0000
Received: (qmail 7913 invoked by alias); 1 Feb 2008 19:38:03 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 24515
Received: (qmail 7897 invoked from network); 1 Feb 2008 19:38:02 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 1 Feb 2008 19:38:02 -0000
Received: from acolyte.scowler.net (acolyte.scowler.net [216.254.112.45])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 2BF2D80482A3
	for <zsh-workers@sunsite.dk>; Fri,  1 Feb 2008 20:37:58 +0100 (CET)
Received: by acolyte.scowler.net (Postfix, from userid 1000)
	id D7E235C1A4; Fri,  1 Feb 2008 14:37:57 -0500 (EST)
Date: Fri, 1 Feb 2008 14:37:57 -0500
From: Clint Adams <schizo@debian.org>
To: zsh-workers@sunsite.dk
Cc: "A. Costa" <agcosta@gis.net>, 463613@bugs.debian.org
Subject: Re: Bug#463613: 'man zshcalsys' typos: "preceeding" x2,
	"qualifer", "recurrenced", "repitition", "successully", "timein",
	"arrangments", etc.
Message-ID: <20080201193757.GC24895@scowler.net>
Mail-Followup-To: zsh-workers@sunsite.dk, "A. Costa" <agcosta@gis.net>,
	463613@bugs.debian.org
References: <20080131222114.0cdd3d10.agcosta@gis.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20080131222114.0cdd3d10.agcosta@gis.net>
User-Agent: Mutt/1.5.17+20080114 (2008-01-14)
X-Virus-Scanned: ClamAV 0.91.2/5642/Fri Feb  1 17:15:15 2008 on bifrost
X-Virus-Status: Clean

On Thu, Jan 31, 2008 at 10:21:14PM -0500, A. Costa wrote:
> Found some typos in '/usr/share/man/man1/zshcalsys.1.gz', see attached '.diff'.
> 
> Hope this helps...

> --- zshcalsys.1	2008-01-29 10:24:59.000000000 -0500
> +++ /tmp/zshcalsys.1	2008-01-31 06:10:25.000000000 -0500
> @@ -36,7 +36,7 @@
>  .PP
>  Various enhancements to this format are supported, based on the syntax
>  of Emacs calendar mode\&.  An indented line indicates a continuation line
> -that continues the description of the event from the preceeding line
> +that continues the description of the event from the preceding line
>  (note the date may not be continued in this way)\&.  An initial ampersand
>  (\fB&\fP) is ignored for compatibility\&.
>  .PP
> @@ -256,7 +256,7 @@
>  end time when the end time is relative (even if the start time is
>  implicit)\&.  When examining calendar files, the scheduled event being
>  examined anchors the warning time when it is given explicitly by means of
> -the \fBWARN\fP keyword; likewise, the scheduled event anchors a repitition
> +the \fBWARN\fP keyword; likewise, the scheduled event anchors a repetition
>  period when given by the \fBRPT\fP keyword, so that specifications such as
>  \fBRPT 2 months, 3rd Thursday\fP are handled properly\&.  Finally, the \fB\-R\fP
>  argument to \fBcalendar_scandate\fP directly provides an anchor for relative
> @@ -475,7 +475,7 @@
>  The event can contain multiple lines, as described in
>  the section Calendar File Format above\&.
>  Using this function ensures that the calendar file is sorted in date
> -and time order\&.  It also makes special arrangments for locking
> +and time order\&.  It also makes special arrangements for locking
>  the file while it is altered\&.  The old calendar is left in a file
>  with the suffix \fB\&.old\fP\&.
>  .RS
> @@ -546,7 +546,7 @@
>  .TP
>  rpttime
>  Any recurrence time given by the \fBRPT\fP keyword as a string
> -of digits containing the time of the recurrenced in the same units
> +of digits containing the time of the recurrence in the same units
>  as \fB$EPOCHSECONDS\fP\&.  (Note this is an absolute time\&.)  Not set if
>  no \fBRPT\fP keyword and value were matched\&.
>  .TP
> @@ -570,7 +570,7 @@
>  .RS
>  .PP
>  With the option \fB\-r\fP nothing is printed but the value of the date and
> -timein seconds since the epoch is stored in the parameter \fBREPLY\fP\&.
> +time in seconds since the epoch is stored in the parameter \fBREPLY\fP\&.
>  .PP
>  With the option \fB\-f\fP \fIfmt\fP the given date/time conversion format
>  is passed to \fBstrftime\fP; see notes on the \fBdate\-format\fP style below\&.
> @@ -602,7 +602,7 @@
>  .RE
>  .PP
>  \fBage\fP selects files having a given modification time for use
> -as a glob qualifer\&.  The format of the date is the same as that
> +as a glob qualifier\&.  The format of the date is the same as that
>  understood by the calendar system, described in
>  the section FILE AND DATE FORMATS above\&.
>  .PP
> @@ -751,7 +751,7 @@
>  The files locked are appended to the array \fBlockfiles\fP, which should
>  be local to the caller\&.
>  .PP
> -If all files were successully, status zero is returned, else status one\&.
> +If all files were successfully locked, status zero is returned, else status one\&.
>  .PP
>  This function may be used as a general file locking function, although
>  this will only work if only this mechanism is used to lock files\&.
> @@ -783,7 +783,7 @@
>  .PD
>  \fB\-a\fP
>  The date and time are anchored to the start of the argument; they
> -will not be matched if there is preceeding text\&.
> +will not be matched if there is preceding text\&.
>  .TP
>  \fB\-A\fP
>  The date and time are anchored to both the start and end of the argument;

Index: Doc/Zsh/calsys.yo
===================================================================
RCS file: /cvsroot/zsh/zsh/Doc/Zsh/calsys.yo,v
retrieving revision 1.11
diff -u -r1.11 calsys.yo
--- Doc/Zsh/calsys.yo	29 Nov 2007 09:49:43 -0000	1.11
+++ Doc/Zsh/calsys.yo	1 Feb 2008 19:36:44 -0000
@@ -46,7 +46,7 @@
 
 Various enhancements to this format are supported, based on the syntax
 of Emacs calendar mode.  An indented line indicates a continuation line
-that continues the description of the event from the preceeding line
+that continues the description of the event from the preceding line
 (note the date may not be continued in this way).  An initial ampersand
 (tt(&)) is ignored for compatibility.
 
@@ -222,7 +222,7 @@
 end time when the end time is relative (even if the start time is
 implicit).  When examining calendar files, the scheduled event being
 examined anchors the warning time when it is given explicitly by means of
-the tt(WARN) keyword; likewise, the scheduled event anchors a repitition
+the tt(WARN) keyword; likewise, the scheduled event anchors a repetition
 period when given by the tt(RPT) keyword, so that specifications such as
 tt(RPT 2 months, 3rd Thursday) are handled properly.  Finally, the tt(-R)
 argument to tt(calendar_scandate) directly provides an anchor for relative
@@ -430,7 +430,7 @@
 ifnzman(noderef(Calendar File and Date Formats))\
 ifzman(the section Calendar File Format above).
 Using this function ensures that the calendar file is sorted in date
-and time order.  It also makes special arrangments for locking
+and time order.  It also makes special arrangements for locking
 the file while it is altered.  The old calendar is left in a file
 with the suffix tt(.old).
 
@@ -485,7 +485,7 @@
 matched.)
 sitem(warnstr)(The raw string matched after the tt(WARN) keyword, else unset.)
 sitem(rpttime)(Any recurrence time given by the tt(RPT) keyword as a string
-of digits containing the time of the recurrenced in the same units
+of digits containing the time of the recurrence in the same units
 as tt($EPOCHSECONDS).  (Note this is an absolute time.)  Not set if
 no tt(RPT) keyword and value were matched.)
 sitem(rptstr)(The raw string matched after the tt(RPT) keyword, else unset.)
@@ -505,7 +505,7 @@
 month, 1st Friday') shows the date of the first Friday of next month.
 
 With the option tt(-r) nothing is printed but the value of the date and
-timein seconds since the epoch is stored in the parameter tt(REPLY).
+time in seconds since the epoch is stored in the parameter tt(REPLY).
 
 With the option tt(-f) var(fmt) the given date/time conversion format
 is passed to tt(strftime); see notes on the tt(date-format) style below.
@@ -536,7 +536,7 @@
 disable stat)
 
 tt(age) selects files having a given modification time for use
-as a glob qualifer.  The format of the date is the same as that
+as a glob qualifier.  The format of the date is the same as that
 understood by the calendar system, described in
 ifzman(the section FILE AND DATE FORMATS above)\
 ifnzman(noderef(Calendar File and Date Formats)).
@@ -666,7 +666,7 @@
 The files locked are appended to the array tt(lockfiles), which should
 be local to the caller.
 
-If all files were successully, status zero is returned, else status one.
+If all files were successfully locked, status zero is returned, else status one.
 
 This function may be used as a general file locking function, although
 this will only work if only this mechanism is used to lock files.
@@ -697,7 +697,7 @@
 startitem()
 item(tt(-a))(
 The date and time are anchored to the start of the argument; they
-will not be matched if there is preceeding text.
+will not be matched if there is preceding text.
 )
 item(tt(-A))(
 The date and time are anchored to both the start and end of the argument;

