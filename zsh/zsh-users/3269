From zsh-users-return-3269-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Jul 12 08:27:12 2000
Return-Path: <zsh-users-return-3269-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1072 invoked from network); 12 Jul 2000 08:27:10 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 12 Jul 2000 08:27:10 -0000
Received: (qmail 20083 invoked by alias); 12 Jul 2000 08:26:43 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 3269
Received: (qmail 20076 invoked from network); 12 Jul 2000 08:26:41 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1000712082636.ZM9329@candle.brasslantern.com>
Date: Wed, 12 Jul 2000 08:26:36 +0000
References: <Pine.LNX.4.10.10007111846240.1513-100000@langec.myip.org>
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-users@sunsite.auc.dk
Subject: Re: ZLE Widget: Insert last word (except &)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

I wrote:
} If we don't accept the shell syntax definition of a "word", how can we
} choose a single definition of what constitutes a "word" that everyone
} will agree on?

The answer is, we don't, we use a style.  Which isn't (presently) ever done
with the builtin widgets, so you aren't going to see this as the default
behavior of insert-last-word any time soon.

---- 8< ---- cut ---- 8< ----
# smart-insert-last-word
# Inspired by Christoph Lange <langec@gmx.de> from zsh-users/3265.
#
# This function as a ZLE widget can replace insert-last-word, like so:
#
#   zle -N insert-last-word smart-insert-last-word
#
# With a numeric prefix, simply calls .insert-last-word, which is also the
# fall-through case in the event that "smart" word selection fails.
#
# Otherwise, the rightmost "interesting" word from the previous command is
# found and inserted.  The default definition of "interesting" is that the
# word contains at least one alphabetic character, slash, or backslash.
# This definition can be overridden by use of a style like so:
#
#   zstyle :insert-last-word match '*[[:alpha:]/\\]*'
#
# For example, you might want to include words that contain spaces:
#
#   zstyle :insert-last-word match '*[[:alpha:][:space:]/\\]*'
#
# Or include numbers as long as the word is at least two characters long:
#
#   zstyle :insert-last-word match '*([[:digit:]]?|[[:alpha:]/\\])*'
#
# That causes redirections like "2>" to be included.
#
# Note also that the style is looked up based on the widget name, so you
# can bind this function to different widgets to use different patterns:
#
#   zle -N insert-last-assignment smart-insert-last-word
#   zstyle :insert-last-assignment match '[[:alpha:]][][[:alnum:]]#=*'
#   bindkey '\e=' insert-last-assignment
#
# (The above is a contrived example since it works only if the previous
# command line included an assignment, but you get the idea.)

if [[ -z "$NUMERIC" ]]
then
    emulate -L zsh
    setopt extendedglob
    local lastcmd pattern
    integer cursor=$CURSOR        # Remember cursor position
    zle up-history || return 1    # Retrieve previous command
    lastcmd=( ${(z)BUFFER} )      # Split into shell words
    zle down-history              # Return to current command
    CURSOR=$cursor                # Restore cursor position
    integer i=$#lastcmd
    zstyle -s :$WIDGET match pattern ||
	pattern='*[[:alpha:]/\\]*'
    while ((i)); do
	if [[ $lastcmd[i] == $~pattern ]]; then
	    LBUFFER="$LBUFFER$lastcmd[i]"
	    return 0
	else
	    ((--i))
	fi
    done
fi
zle .insert-last-word
---- 8< ---- cut ---- 8< ----

Note that this presently doesn't work right when the previous command line
contains a [[ ... ]] expression that uses one of the (#x) forms of extended
pattern matching, e.g. (#i) to ignore case.  That's a bug in ${(z)...} (it
takes the # to be a comment introducer), so it should be fixed soon.  If
this really bothers you in the meantime, try adding

  local +h histchars=''

somewhere before the assignment to lastcmd -- but then it's broken for the
case of `setopt interactive_comments`, so choose your poison ...

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

