From zsh-users-return-3186-mason-zsh=primenet.com.au@sunsite.auc.dk Sun Jun 18 20:34:06 2000
Return-Path: <zsh-users-return-3186-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2166 invoked from network); 18 Jun 2000 20:34:04 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 18 Jun 2000 20:34:04 -0000
Received: (qmail 20739 invoked by alias); 18 Jun 2000 20:33:24 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 3186
Received: (qmail 20711 invoked from network); 18 Jun 2000 20:33:23 -0000
Date: Sun, 18 Jun 2000 22:33:19 +0200
From: Bernd Eggink <eggink@uni-hamburg.de>
To: Zsh Users <zsh-users@sunsite.auc.dk>
Subject: Completion for variable assigement
Message-ID: <20000618223314.A1129@eggink3.rrz.uni-hamburg.de>
Mail-Followup-To: Zsh Users <zsh-users@sunsite.auc.dk>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.3.2i

I'd like to have completion for assignements to a variable. So that,
for example, 

    PROJECT=<TAB>
    
will allow me to cycle through all file names in the current directory
ending with '.mak' (without the suffix). I succeeded in doing this only
by wrapping the assignement in a function 'setp':

    function projects
    {
        reply=(*.mak) 2>/dev/null
        reply=(${reply%.mak})
    }

    function setp
    {
        PROJECT=$1
    }

    compctl -K projects setp

Is there any way to avoid the wrapper function?

Regards,
Bernd

-- 
Bernd Eggink
Regionales Rechenzentrum der Uni Hamburg
eggink@uni-hamburg.de
http://www.rrz.uni-hamburg.de/eggink/BEggink.html

