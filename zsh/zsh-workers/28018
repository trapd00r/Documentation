From zsh-workers-return-28018-mason-zsh=primenet.com.au@zsh.org Wed Jun 09 16:29:16 2010
Return-Path: <zsh-workers-return-28018-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4247 invoked by alias); 9 Jun 2010 16:29:16 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28018
Received: (qmail 8856 invoked from network); 9 Jun 2010 16:29:15 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-4.2 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_MED
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at cis.fu-berlin.de does not designate permitted sender hosts)
Date: Wed, 9 Jun 2010 18:29:13 +0200
From: Holger Weiss <holger@CIS.FU-Berlin.DE>
To: Zsh Workers <zsh-workers@zsh.org>
Subject: [PATCH] Fix __git_is_treeish and add __git_is_committish
Message-ID: <20100609162913.GC19932197@CIS.FU-Berlin.DE>
Mail-Followup-To: Zsh Workers <zsh-workers@zsh.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.20 (2009-06-14)
X-Originating-IP: 160.45.11.138

The __git_is_treeish function is meant to check whether the provided
argument specifies a "tree-ish" Git object.  The function runs

	git rev-parse $1 --

and passes the result on to "git cat-file".  However, due to the
trailing "--", "git rev-parse" spits out two lines, such as:

	2719f952d367293602d481dddec8827771e12197
	--

Therefore, the "git cat-file" call always fails and __git_is_treeish
always returns false.

This patch simply removes the "--" argument from the "git rev-parse"
call.  While at it, it also adds a __git_is_committish function (which
I'll use in my next patch) and lets both functions call the generic
__git_is_type function.
---
 Completion/Unix/Command/_git |   24 +++++++++++++++++-------
 1 files changed, 17 insertions(+), 7 deletions(-)

diff --git a/Completion/Unix/Command/_git b/Completion/Unix/Command/_git
index 9c2d486..e53018f 100644
--- a/Completion/Unix/Command/_git
+++ b/Completion/Unix/Command/_git
@@ -1597,13 +1597,6 @@ _git-branch () {
 }
 __git_zstyle_default ':completion::complete:git-branch:delete-argument-rest:*' ignore-line yes
 
-(( $+functions[__git_is_treeish] )) ||
-__git_is_treeish () {
-  local sha1
-  sha1="$(git rev-parse $1 -- 2> /dev/null)" &&
-  [[ "$(git cat-file -t "${sha1}^{tree}" 2> /dev/null)" == tree ]]
-}
-
 # TODO: __git_tree_ishs is just stupid.  It should be giving us a list of tags
 # and perhaps also allow all that just with ^{tree} and so on.  Not quite sure
 # how to do that, though.
@@ -4423,6 +4416,23 @@ __git_setup_revision_arguments () {
 
 # ---
 
+(( $+functions[__git_is_type] )) ||
+__git_is_type () {
+  local sha1
+  sha1="$(git rev-parse $2 2> /dev/null)" &&
+  [[ "$(git cat-file -t "${sha1}^{$1}" 2> /dev/null)" == $1 ]]
+}
+
+(( $+functions[__git_is_committish] )) ||
+__git_is_committish () {
+  __git_is_type commit $1
+}
+
+(( $+functions[__git_is_treeish] )) ||
+__git_is_treeish () {
+  __git_is_type tree $1
+}
+
 (( $+functions[__git_is_indexed] )) ||
 __git_is_indexed () {
   [[ -n $(git ls-files $REPLY) ]]
-- 
Holger

