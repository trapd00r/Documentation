From zsh-workers-return-23444-mason-zsh=primenet.com.au@sunsite.dk Sun May 20 17:54:15 2007
Return-Path: <zsh-workers-return-23444-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16291 invoked from network); 20 May 2007 17:54:13 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.0 (2007-05-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00 autolearn=no
	version=3.2.0
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 20 May 2007 17:54:13 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 83926 invoked from network); 20 May 2007 17:54:05 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 20 May 2007 17:54:05 -0000
Received: (qmail 12076 invoked by alias); 20 May 2007 17:54:02 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 23444
Received: (qmail 12057 invoked from network); 20 May 2007 17:54:01 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 20 May 2007 17:54:01 -0000
Received: (qmail 83573 invoked from network); 20 May 2007 17:54:01 -0000
Received: from mtaout02-winn.ispmail.ntl.com (81.103.221.48)
  by a.mx.sunsite.dk with SMTP; 20 May 2007 17:53:58 -0000
Received: from aamtaout01-winn.ispmail.ntl.com ([81.103.221.35])
          by mtaout02-winn.ispmail.ntl.com with ESMTP
          id <20070520175357.RMKX12560.mtaout02-winn.ispmail.ntl.com@aamtaout01-winn.ispmail.ntl.com>
          for <zsh-workers@sunsite.dk>; Sun, 20 May 2007 18:53:57 +0100
Received: from pws-pc.ntlworld.com ([81.107.45.67])
          by aamtaout01-winn.ispmail.ntl.com with ESMTP
          id <20070520175357.YSZX219.aamtaout01-winn.ispmail.ntl.com@pws-pc.ntlworld.com>
          for <zsh-workers@sunsite.dk>; Sun, 20 May 2007 18:53:57 +0100
Received: from pws-pc.ntlworld.com (pws-pc.ntlworld.com [127.0.0.1])
	by pws-pc.ntlworld.com (8.13.8/8.13.8) with ESMTP id l4KHrXAq008838
	for <zsh-workers@sunsite.dk>; Sun, 20 May 2007 18:53:43 +0100
Message-Id: <200705201753.l4KHrXAq008838@pws-pc.ntlworld.com>
From: Peter Stephenson <p.w.stephenson@ntlworld.com>
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: PATCH: multibyte print column widths
Date: Sun, 20 May 2007 18:53:33 +0100

print's column width calculator doesn't take into account
multibyte characters.

Index: Src/builtin.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/builtin.c,v
retrieving revision 1.176
diff -u -r1.176 builtin.c
--- Src/builtin.c	11 Feb 2007 00:40:19 -0000	1.176
+++ Src/builtin.c	20 May 2007 17:52:07 -0000
@@ -3617,12 +3617,58 @@
     /* -c -- output in columns */
     if (!fmt && (OPT_ISSET(ops,'c') || OPT_ISSET(ops,'C'))) {
 	int l, nc, nr, sc, n, t, i;
+#ifdef MULTIBYTE_SUPPORT
+	int *widths;
+
+	if (isset(MULTIBYTE)) {
+	    int *wptr;
+
+	    /*
+	     * We need the character widths to align output in
+	     * columns.
+	     */
+	    wptr = widths = (int *) zhalloc(argc * sizeof(int));
+	    for (i = 0; i < argc && args[i]; i++, wptr++) {
+		int l = len[i], width = 0;
+		char *aptr = args[i];
+		mbstate_t mbs;
+
+		memset(&mbs, 0, sizeof(mbstate_t));
+		while (l > 0) {
+		    wchar_t wc;
+		    size_t cnt = mbrtowc(&wc, aptr, l, &mbs);
+		    int wcw;
+
+		    if (cnt == MB_INCOMPLETE || cnt == MB_INVALID)
+		    {
+			/* treat as ordinary string */
+			width += l;
+			break;
+		    }
+		    wcw = wcwidth(wc);
+		    /* treat unprintable as 0 */
+		    if (wcw > 0)
+			width += wcw;
+		    /* skip over NUL normally */
+		    if (cnt == 0)
+			cnt = 1;
+		    aptr += cnt;
+		    l -= cnt;
+		}
+		widths[i] = width;
+	    }
+	}
+	else
+	    widths = len;
+#else
+	int *widths = len;
+#endif
 
 	if (OPT_ISSET(ops,'C')) {
 	    char *eptr, *argptr = OPT_ARG(ops,'C');
 	    nc = (int)zstrtol(argptr, &eptr, 10);
 	    if (*eptr) {
-		zwarnnam(name, "number expected after -%c: %s", 'C', argptr);
+		zwarnnam(name, "number expcted after -%c: %s", 'C', argptr);
 		return 1;
 	    }
 	    if (nc <= 0) {
@@ -3652,8 +3698,8 @@
 		    if (i >= nr * (nc - 1))
 			break;
 		}
-		if (l < len[i])
-		    l = len[i];
+		if (l < widths[i])
+		    l = widths[i];
 	    }
 	    sc = l + 2;
 	}
@@ -3664,8 +3710,8 @@
 	     * l: maximum length seen
 	     */
 	    for (n = l = 0; n < argc; n++)
-		if (l < len[n])
-		    l = len[n];
+		if (l < widths[n])
+		    l = widths[n];
 
 	    /*
 	     * sc: column width
@@ -3686,8 +3732,8 @@
 		int ic;
 		for (ic = 0; ic < nc && n < argc; ic++, n++)
 		{
-		    l = len[n];
-		    fwrite(args[n], l, 1, fout);
+		    fwrite(args[n], len[n], 1, fout);
+		    l = widths[n];
 		    if (n < argc)
 			for (; l < sc; l++)
 			    fputc(' ', fout);
@@ -3697,8 +3743,8 @@
 	    {
 		n = i;
 		do {
-		    l = len[n];
-		    fwrite(args[n], l, 1, fout);
+		    fwrite(args[n], len[n], 1, fout);
+		    l = widths[n];
 		    for (t = nr; t && n < argc; t--, n++);
 		    if (n < argc)
 			for (; l < sc; l++)


-- 
Peter Stephenson <p.w.stephenson@ntlworld.com>
Web page now at http://homepage.ntlworld.com/p.w.stephenson/

