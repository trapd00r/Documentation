From zsh-users-return-2450-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Jul 19 22:52:11 1999
Return-Path: <zsh-users-return-2450-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 8211 invoked from network); 19 Jul 1999 22:52:09 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 19 Jul 1999 22:52:09 -0000
Received: (qmail 25180 invoked by alias); 19 Jul 1999 22:51:50 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 2450
Received: (qmail 25172 invoked from network); 19 Jul 1999 22:51:48 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <990719225136.ZM10630@candle.brasslantern.com>
Date: Mon, 19 Jul 1999 22:51:36 +0000
In-Reply-To: <19990719113013.A29253@lorien.emufarm.org>
Comments: In reply to Danek Duvall <duvall@lorien.emufarm.org>
        "Inserting all completions" (Jul 19, 11:30am)
References: <19990719113013.A29253@lorien.emufarm.org>
X-Mailer: Z-Mail Lite (5.0.0 30July97)
To: Danek Duvall <duvall@lorien.emufarm.org>,
        zsh-users@sunsite.auc.dk (Zsh Users)
Subject: Re: Inserting all completions
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Jul 19, 11:30am, Danek Duvall wrote:
> Subject: Inserting all completions
> Is there a simple way to insert all the possible completions into the
> current commandline?

In the new 3.1.6 completion system, you can use

	compadd -A the_matches ...
	compadd -UQ "$the_matches"

That is, replace the current word (-U) with a single match consisting of
all strings to be inserted, but don't quote (-Q) the spaces between them.
Replace `...' above with the list of potential matches to which compadd
should compare the current word on the command line; those that actually
do match will be placed in $the_matches, quoted and ready for insertion.

Here's a trivial example of actually using this; it assumes you've run
"compinit" or otherwise installed the function-based completion system:

 function _all () {
  local -a the_matches
  compadd -A the_matches one two three four twenty thirty forty "fifty six"
  compadd -UQ "$the_matches"
 }
 compdef _all print

Now if you type

 print -l f<TAB>

you should see

 print -l four forty fifty\ six

