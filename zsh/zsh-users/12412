From zsh-users-return-12412-mason-zsh=primenet.com.au@sunsite.dk Thu Jan 10 18:33:15 2008
Return-Path: <zsh-users-return-12412-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 19851 invoked from network); 10 Jan 2008 18:33:06 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.3 (2007-08-08) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.4 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.3
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 10 Jan 2008 18:33:06 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 51660 invoked from network); 10 Jan 2008 18:32:44 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 10 Jan 2008 18:32:44 -0000
Received: (qmail 14104 invoked by alias); 10 Jan 2008 18:32:32 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12412
Received: (qmail 14091 invoked from network); 10 Jan 2008 18:32:32 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 10 Jan 2008 18:32:32 -0000
Received: from virusfilter.dotsrc.org (bifrost [127.0.0.1])
	by spamfilter.dotsrc.org (Postfix) with ESMTP id C81268058FF2
	for <zsh-users@sunsite.dk>; Thu, 10 Jan 2008 19:32:29 +0100 (CET)
Received: from cluster-g.mailcontrol.com (cluster-g.mailcontrol.com [85.115.41.190])
	by bifrost.dotsrc.org (Postfix) with ESMTP
	for <zsh-users@sunsite.dk>; Thu, 10 Jan 2008 19:32:29 +0100 (CET)
Received: from cameurexb01.EUROPE.ROOT.PRI ([62.189.241.200])
	by rly07g.srv.mailcontrol.com (MailControl) with ESMTP id m0AC4UTY031867
	for <zsh-users@sunsite.dk>; Thu, 10 Jan 2008 12:07:38 GMT
Received: from news01 ([10.103.143.38]) by cameurexb01.EUROPE.ROOT.PRI with Microsoft SMTPSVC(6.0.3790.1830);
	 Thu, 10 Jan 2008 12:06:58 +0000
Date: Thu, 10 Jan 2008 12:06:57 +0000
From: Peter Stephenson <pws@csr.com>
To: zsh-users@sunsite.dk
Subject: Re: [ -f glob ]
Message-ID: <20080110120657.0cc83d5e@news01>
In-Reply-To: <200801100958.m0A9w2jj015161@news01.csr.com>
References: <20080109091335.49226.qmail@smasher.org>
	<200801091239.m09CdmR9003125@news01.csr.com>
	<20080110044842.63406.qmail@smasher.org>
	<200801100958.m0A9w2jj015161@news01.csr.com>
Organization: CSR
X-Mailer: Claws Mail 3.2.0 (GTK+ 2.10.14; i386-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 10 Jan 2008 12:06:58.0649 (UTC) FILETIME=[4CEC2490:01C85381]
X-Scanned-By: MailControl A-06-00-00 (www.mailcontrol.com) on 10.71.0.117
X-Virus-Scanned: ClamAV using ClamSMTP

On Thu, 10 Jan 2008 09:58:02 +0000
Peter Stephenson <pws@csr.com> wrote:
> Atom Smasher wrote:
> > On Wed, 9 Jan 2008, Peter Stephenson wrote:
> > 
> > > This is broken: -f expectes exactly one argument and you're giving it an 
> > > expression that expands to multiple arguments.
> > ================
> > 
> > but, why would it work on bsd and not work on solaris?
> 
> You're into implementation-specific land, from whose Bourne shell no
> traveller returns.

However, zsh isn't helping by not reporting an error if there are arguments
it couldn't parse.

Index: Src/builtin.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/builtin.c,v
retrieving revision 1.184
diff -u -r1.184 builtin.c
--- Src/builtin.c	17 Dec 2007 17:11:29 -0000	1.184
+++ Src/builtin.c	10 Jan 2008 12:04:28 -0000
@@ -5472,7 +5472,7 @@
 
 /* holds arguments for testlex() */
 /**/
-char **testargs;
+char **testargs, **curtestarg;
 
 /* test, [: the old-style general purpose logical expression builtin */
 
@@ -5483,7 +5483,7 @@
     if (tok == LEXERR)
 	return;
 
-    tokstr = *testargs;
+    tokstr = *(curtestarg = testargs);
     if (!*testargs) {
 	/* if tok is already zero, reading past the end:  error */
 	tok = tok ? NULLTOK : LEXERR;
@@ -5557,6 +5557,11 @@
 	return 1;
     }
 
+    if (*curtestarg) {
+	zwarnnam(name, "too many arguments");
+	return 1;
+    }
+
     /* syntax is OK, so evaluate */
 
     state.prog = prog;
Index: Src/parse.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/parse.c,v
retrieving revision 1.67
diff -u -r1.67 parse.c
--- Src/parse.c	27 Jun 2007 13:56:11 -0000	1.67
+++ Src/parse.c	10 Jan 2008 12:04:32 -0000
@@ -537,6 +537,12 @@
     return bld_eprog();
 }
 
+/*
+ * This entry point is only used for bin_test, our attempt to
+ * provide compatibility with /bin/[ and /bin/test.  Hence
+ * at this point condlex should always be set to testlex.
+ */
+
 /**/
 mod_export Eprog
 parse_cond(void)
Index: Test/C02cond.ztst
===================================================================
RCS file: /cvsroot/zsh/zsh/Test/C02cond.ztst,v
retrieving revision 1.20
diff -u -r1.20 C02cond.ztst
--- Test/C02cond.ztst	4 Jan 2008 14:45:40 -0000	1.20
+++ Test/C02cond.ztst	10 Jan 2008 12:04:33 -0000
@@ -199,7 +199,31 @@
 0:strings with `[' builtin
 
   [ `echo 0` -lt `echo 1` ]
-0:substituion in `[' builtin
+0:substitution in `[' builtin
+
+  [ -n foo scrimble ]
+1:argument checking for [ builtin
+?(eval):[:1: too many arguments
+
+  test -n foo scramble
+1:argument checking for test builtin
+?(eval):test:1: too many arguments
+
+  [ -n foo scrimble scromble ]
+1:argument checking for [ builtin
+?(eval):[:1: too many arguments
+
+  test -n foo scramble scrumble
+1:argument checking for test builtin
+?(eval):test:1: too many arguments
+
+  [ -n foo -a -n bar scrimble ]
+1:argument checking for [ builtin
+?(eval):[:1: too many arguments
+
+  test -n foo -a -z "" scramble
+1:argument checking for test builtin
+?(eval):test:1: too many arguments
 
   fn() {
     # careful: first file must exist to trigger bug

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070

