From zsh-users-return-15650-mason-zsh=primenet.com.au@zsh.org Sat Dec 11 07:58:05 2010
Return-Path: <zsh-users-return-15650-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 5315 invoked by alias); 11 Dec 2010 07:58:05 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15650
Received: (qmail 7303 invoked from network); 11 Dec 2010 07:58:02 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <101210235748.ZM11748@torch.brasslantern.com>
Date: Fri, 10 Dec 2010 23:57:48 -0800
In-reply-to: =?iso-8859-1?Q?=3CAANLkTikHzGZGnhCma+wsDPhYhMwK4TaL3AASNOvfXi?=
 =?iso-8859-1?Q?sn=40mail=2Egmail=2Ecom=3E?=
 =?iso-8859-1?Q?Comments=3A_In_reply_to_Nikolai_Weibull_=3Cnow=40bitwi=2Es?=
 =?iso-8859-1?Q?e=3E?=
 =?iso-8859-1?Q?________=22=28_Text_in_unknown_character_set_UTF-8_not_sho?=
 =?iso-8859-1?Q?wn_=29_ts_line_above_prompt=E2=80=99s_first_line=22_=28Dec?=
 =?iso-8859-1?Q?_10=2C_11=3A40am=29?=
References: <AANLkTikHzGZGnhCma+wsDPhYhMwK4TaL3AASNOvfXisn@mail.gmail.com>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: Zsh Users <zsh-users@zsh.org>
Subject: Re: zle reset-prompt with prompt that is COLUMNS wide eats line above
 prompt's first line
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Dec 10, 11:40am, Nikolai Weibull wrote:
}
} Running zle reset-prompt with a prompt that is COLUMNS wide eats the
} line above prompt's first line.  Here's a set-up to try it with:
} 
} PS1=${(l:COLUMNS:)}$'\n'
} bindkey '^^' reset-prompt

The problem here isn't the width of the prompt, it's the newline.
(OK, it's sort of the combination of the two, but more the latter.)

} Each time you press CTRL-^ you'll be eating the line above the first
} line of the prompt.  If you change PS1 to ${(l:COLUMNS-1)}$'\n' this
} doesn't happen.
} 
} Would it be possible to have prompt that is COLUMNS wide and have this
} not happen?

This is a problem with terminals and terminfo or termcap descriptions.
Some terminals silently discard a newline when one is output at the
right margin, others don't, and still others discard it only when it
is output at the right margin of the very last line of the screen.
Some terminals cause the cursor to wrap onto the next line right
away when the right margin is reached, others leave the cursor on
top of the last character that was output until at least one more
character appears.

Terminal description databases aren't very good at differentiating
these cases.  ZLE decides in this case that the terminal both wraps
the line and does not discard the newline, so it believes it needs
to move up one line before redrawing the prompt.  Your terminal
wraps at the margin but does discard the newline, so ZLE's internal
idea of what the screen looks like does not match reality.

You can get around this by replacing $'\n' with $'%1(l.\n.)' which
means to emit the newline only if ZLE believes that at least one
character has been output since the last (implicit) newline.  If
the line is exactly $COLUMNS wide, ZLE will think that the terminal
has wrapped and that zero characters have been output since, so it
won't fool itself by emitting a newline that the terminal discards.

On a different terminal, though, you might need to go back to $'\n'
unconditionally.

