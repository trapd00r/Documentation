From zsh-workers-return-17118-mason-zsh=primenet.com.au@sunsite.dk Thu May 09 19:50:34 2002
Return-Path: <zsh-workers-return-17118-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 7363 invoked from network); 9 May 2002 19:50:33 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 9 May 2002 19:50:33 -0000
Received: (qmail 1126 invoked by alias); 9 May 2002 19:50:24 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 17118
Received: (qmail 1114 invoked from network); 9 May 2002 19:50:23 -0000
To: zsh-workers@sunsite.auc.dk (Zsh hackers list)
Subject: Re: File descriptor madness 
In-reply-to: "Bart Schaefer"'s message of "Thu, 09 May 2002 12:08:27 PDT."
             <Pine.LNX.4.44.0205091149330.7898-100000@ns1.sodaware.com> 
Date: Thu, 09 May 2002 19:57:09 +0100
From: Peter Stephenson <pws@pwstephenson.fsnet.co.uk>
Message-Id: <20020509185715.C4F301C0AB@pwstephenson.fsnet.co.uk>

Bart Schaefer wrote:
> On Thu, 9 May 2002, Peter Stephenson wrote:
> 
> > In this case it's tying up fd 3, right in the paltry set of 9 fd's we
> > have available. [...]
> > One solution to this problem is to open (or dup something such as fd 0
> > onto) all fd's 3 to 9 during initialisation and then close them again
> > before any user code is executed
> 
> It'd have to be an actual open() or the equivalent, because there's no way
> to guarantee that any particular descriptor (even 0) is valid when the
> shell starts up.

Apart from 0, which I suppose we need to test with open(), I had in mind
just using dup() to dup 0 and see where the fd ended up.  This would in
one go show open fd's (avoided) and open new fd's to block them.  Or
doesn't that work?

-- 
Peter Stephenson <pws@pwstephenson.fsnet.co.uk>
Work: pws@csr.com
Web: http://www.pwstephenson.fsnet.co.uk

