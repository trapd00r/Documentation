From zsh-workers-return-26806-mason-zsh=primenet.com.au@sunsite.dk Sun Apr 05 18:13:34 2009
Return-Path: <zsh-workers-return-26806-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2447 invoked from network); 5 Apr 2009 18:13:30 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 5 Apr 2009 18:13:30 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 85646 invoked from network); 5 Apr 2009 18:13:24 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 5 Apr 2009 18:13:24 -0000
Received: (qmail 22199 invoked by alias); 5 Apr 2009 18:13:18 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 26806
Received: (qmail 22181 invoked from network); 5 Apr 2009 18:13:18 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 5 Apr 2009 18:13:18 -0000
Received: from mtaout03-winn.ispmail.ntl.com (mtaout03-winn.ispmail.ntl.com [81.103.221.49])
	by bifrost.dotsrc.org (Postfix) with ESMTP id A7EF282D4B6A
	for <zsh-workers@sunsite.dk>; Sun,  5 Apr 2009 20:13:14 +0200 (CEST)
Received: from aamtaout04-winn.ispmail.ntl.com ([81.103.221.35])
          by mtaout03-winn.ispmail.ntl.com
          (InterMail vM.7.08.04.00 201-2186-134-20080326) with ESMTP
          id <20090405181313.NUIO7670.mtaout03-winn.ispmail.ntl.com@aamtaout04-winn.ispmail.ntl.com>
          for <zsh-workers@sunsite.dk>; Sun, 5 Apr 2009 19:13:13 +0100
Received: from pws-pc ([81.107.42.185]) by aamtaout04-winn.ispmail.ntl.com
          (InterMail vG.2.02.00.01 201-2161-120-102-20060912) with ESMTP
          id <20090405181308.ZCQS22934.aamtaout04-winn.ispmail.ntl.com@pws-pc>
          for <zsh-workers@sunsite.dk>; Sun, 5 Apr 2009 19:13:08 +0100
Date: Sun, 5 Apr 2009 19:13:04 +0100
From: Peter Stephenson <p.w.stephenson@ntlworld.com>
To: zsh-workers@sunsite.dk
Subject: Re: PATCH: Add CORRECT_NOCOMPSYS option
Message-ID: <20090405191304.1908fca8@pws-pc>
In-Reply-To: <090404193718.ZM19801@torch.brasslantern.com>
References: <1238890030-4683-1-git-send-email-ft@bewatermyfriend.org>
	<090404193718.ZM19801@torch.brasslantern.com>
X-Mailer: Claws Mail 3.7.0 (GTK+ 2.14.7; x86_64-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Cloudmark-Analysis: v=1.0 c=1 a=blZfqohsIVMA:10 a=q2GGsy2AAAAA:8 a=NLZqzBF-AAAA:8 a=pkNC4EGvRXkUJb_MV5gA:9 a=yefbsg0ZUO1bug5J9ecA:7 a=jCq2ve86B3HF_3f7FwkKvNidcv0A:4 a=LY0hPdMaydYA:10 a=I6wTmPyJxzYA:10 a=_dQi-Dcv4p4A:10
X-Virus-Scanned: ClamAV 0.92.1/9205/Sun Apr  5 05:09:43 2009 on bifrost
X-Virus-Status: Clean

On Sat, 04 Apr 2009 19:37:17 -0700
Bart Schaefer <schaefer@brasslantern.com> wrote:
> On Apr 5,  2:07am, Frank Terbeck wrote:
> }
> } This certainly is not perfect. A better solution would be to disallow
> } _commandname type function names from being the result of a correction
> } without completely disabling correction.
> 
> My reservation about this is that the leading-underscore naming
> convention is (1) just that, a convention, and (2) specific to this
> implementation of the completion system -- the whole idea of putting
> the completion system into shell code was to remove this kind of
> dependency from the base shell and make it possible for anyone to
> implement their own system (admittedly increasingly unlikely at
> this point, but still).
> 
> A more general solution would be an fignore-type variable, which
> compinit could set to the value "_*" or some such thing.

Right, here's a more general solution.  Shout if I've missed something.

Index: Doc/Zsh/options.yo
===================================================================
RCS file: /cvsroot/zsh/zsh/Doc/Zsh/options.yo,v
retrieving revision 1.80
diff -u -r1.80 options.yo
--- Doc/Zsh/options.yo	26 Mar 2009 15:21:39 -0000	1.80
+++ Doc/Zsh/options.yo	5 Apr 2009 18:11:45 -0000
@@ -1007,6 +1007,9 @@
 Note that, when the tt(HASH_LIST_ALL) option is not set or when some
 directories in the path are not readable, this may falsely report spelling
 errors the first time some commands are used.
+
+The shell variable tt(CORRECT_IGNORE) may be set to a pattern to
+match words that will never be offered as corrections.
 )
 pindex(CORRECT_ALL)
 pindex(NO_CORRECT_ALL)
Index: Doc/Zsh/params.yo
===================================================================
RCS file: /cvsroot/zsh/zsh/Doc/Zsh/params.yo,v
retrieving revision 1.52
diff -u -r1.52 params.yo
--- Doc/Zsh/params.yo	3 Mar 2009 21:04:53 -0000	1.52
+++ Doc/Zsh/params.yo	5 Apr 2009 18:11:46 -0000
@@ -797,6 +797,14 @@
 The number of columns for this terminal session.
 Used for printing select lists and for the line editor.
 )
+vindex(CORRECT_IGNORE)
+item(tt(CORRECT_IGNORE))(
+If set, is treated as a pattern during spelling correction.  Any
+potential correction that matches the pattern is ignored.  For example,
+if the value is `tt(_*)' then completion functions (which, by
+convention, have names beginning with `tt(_)') will never be offered
+as spelling corrections.
+)
 vindex(DIRSTACKSIZE)
 item(tt(DIRSTACKSIZE))(
 The maximum size of the directory stack.  If the
Index: Src/utils.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/utils.c,v
retrieving revision 1.220
diff -u -r1.220 utils.c
--- Src/utils.c	24 Mar 2009 16:14:33 -0000	1.220
+++ Src/utils.c	5 Apr 2009 18:11:47 -0000
@@ -2236,6 +2236,7 @@
 
 static int d;
 static char *guess, *best;
+static Patprog spckpat;
 
 /**/
 static void
@@ -2243,6 +2244,9 @@
 {
     int nd;
 
+    if (spckpat && pattry(spckpat, hn->nam))
+	return;
+
     nd = spdist(hn->nam, guess, (int) strlen(guess) / 4 + 1);
     if (nd <= d) {
 	best = hn->nam;
@@ -2257,7 +2261,7 @@
 mod_export void
 spckword(char **s, int hist, int cmd, int ask)
 {
-    char *t;
+    char *t, *correct_ignore;
     int x;
     char ic = '\0';
     int ne;
@@ -2293,6 +2297,14 @@
 	    break;
     if (**s == Tilde && !*t)
 	return;
+
+    if ((correct_ignore = getsparam("CORRECT_IGNORE")) != NULL) {
+	tokenize(correct_ignore = dupstring(correct_ignore));
+	remnulargs(correct_ignore);
+	spckpat = patcompile(correct_ignore, 0, NULL);
+    } else
+	spckpat = NULL;
+
     if (**s == String && !*t) {
 	guess = *s + 1;
 	if (itype_end(guess, IIDENT, 1) == guess)



-- 
Peter Stephenson <p.w.stephenson@ntlworld.com>
Web page now at http://homepage.ntlworld.com/p.w.stephenson/

