From zsh-workers-return-10337-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Mar 30 15:58:14 2000
Return-Path: <zsh-workers-return-10337-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 6624 invoked from network); 30 Mar 2000 15:58:13 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 30 Mar 2000 15:58:13 -0000
Received: (qmail 23620 invoked by alias); 30 Mar 2000 15:58:00 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 10337
Received: (qmail 23558 invoked from network); 30 Mar 2000 15:57:52 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1000330155742.ZM8845@candle.brasslantern.com>
Date: Thu, 30 Mar 2000 15:57:42 +0000
In-Reply-To: <200003301056.MAA29226@beta.informatik.hu-berlin.de>
Comments: In reply to Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
        "Re: PATCH: was: Re: endianness of wordcode" (Mar 30, 12:56pm)
References: <200003301056.MAA29226@beta.informatik.hu-berlin.de>
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-workers@sunsite.auc.dk
Subject: Re: PATCH: was: Re: endianness of wordcode
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Mar 30, 12:56pm, Sven Wischnowsky wrote:
} Subject: Re: PATCH: was: Re: endianness of wordcode
}
} 
} Bart Schaefer wrote:
} 
} > On Mar 29, 11:14am, Sven Wischnowsky wrote:
} > } Subject: Re: PATCH: was: Re: endianness of wordcode
} > }
} > } So, this adds the -a option to zcompile which is needed to make
} > } functions that are currently only marked for autoloading to be written 
} > 
} > This is still a bit odd, because it means you have to check yourself
} > whether a function is defined or undefined before you know what result
} > "zcompile -a -c ..." is going to produce.  I'd rather that you simply
} > CAN'T compile both defined and undefined functions in the same pass.
} 
} Hm. Consider someone who has all his functions autoloaded (i.e. none
} defined in .zshrc or other init files) and doesn't use kshautoload.
} With the current state he can do `zcompile -ca all-funcs' to write them
} all into one file. If we disallow compiling both already-loaded and
} not-yet-loaded functions `in the same pass', it is impossible to do
} that if at least one of the functions happens to be loaded already.

But that user will still get the wrong result if e.g. _cvs is one of the
functions that happens to be loaded already.  Isn't it better to have to
expend slightly more effort to get consistent and correct results than to
easily be able produce an inconsistent and sometimes incorrect results?

Even something as simple as searching $fpath and printing a warning when
a file with the same name as an already-loaded function is found, would
be preferable to silently doing the wrong thing.  (That warning would be
printed only when -a is given, of course.)

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

