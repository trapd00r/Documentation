From zsh-users-return-6645-mason-zsh=primenet.com.au@sunsite.dk Sun Oct 05 15:57:54 2003
Return-Path: <zsh-users-return-6645-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 17047 invoked from network); 5 Oct 2003 15:57:53 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 5 Oct 2003 15:57:53 -0000
Received: (qmail 2443 invoked by alias); 5 Oct 2003 15:57:36 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 6645
Received: (qmail 2432 invoked from network); 5 Oct 2003 15:57:35 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 5 Oct 2003 15:57:35 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [4.3.58.249] by sunsite.dk (MessageWall 1.0.8) with SMTP; 5 Oct 2003 15:57:35 -0000
Received: (from schaefer@localhost)
	by candle.brasslantern.com (8.11.6/8.11.6) id h95FvX002621
	for zsh-users@sunsite.dk; Sun, 5 Oct 2003 08:57:33 -0700
From: Bart Schaefer <schaefer@brasslantern.com>
Message-Id: <1031005155733.ZM2619@candle.brasslantern.com>
Date: Sun, 5 Oct 2003 15:57:33 +0000
In-Reply-To: <m365j4oamc.fsf@asfast.com>
Comments: In reply to Lloyd Zusman <ljz@asfast.com>
        "Re: Emulating 'locate'" (Oct  4,  7:18pm)
References: <20031001221753.GA23189@DervishD> 
	<1031002023639.ZM22046@candle.brasslantern.com> 
	<20031002080358.GA23230@DervishD> 
	<m365j6watm.fsf@asfast.com>  <20031004104844.GA50@DervishD> 
	<m3oewxru4k.fsf@asfast.com> 
	<1031004163727.ZM28731@candle.brasslantern.com> 
	<m3isn4ol1q.fsf@asfast.com> 
	<1031004224016.ZM29064@candle.brasslantern.com> 
	<m365j4oamc.fsf@asfast.com>
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-users@sunsite.dk
Subject: Re: Emulating 'locate'
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Oct 4,  7:18pm, Lloyd Zusman wrote:
}
} Therefore, prior to the function definition, I now do this:
} 
}   { unalias xlocate; unfunction xlocate } 2>/dev/null
} 
} But besides that, would another way to prevent this problem be to always
} define functions with "function foo" instead of "foo()"?

Yes, the latter will work.  Note, however, that in ksh the meanings of
"foo() {...}" and "function foo {...}" are not quite equivalent, and
the zsh/ksh/bash developers have been discussing standardization of
some of those kinds of details, so there's a very small chance that in
the future you won't always be able to use them interchangeably.

