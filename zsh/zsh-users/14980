From zsh-users-return-14980-mason-zsh=primenet.com.au@zsh.org Wed Apr 07 16:43:50 2010
Return-Path: <zsh-users-return-14980-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 8738 invoked by alias); 7 Apr 2010 16:43:50 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14980
Received: (qmail 25818 invoked from network); 7 Apr 2010 16:43:48 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <100407094328.ZM13705@torch.brasslantern.com>
Date: Wed, 07 Apr 2010 09:43:26 -0700
In-reply-to: <k2pa9a51b1a1004070855lc0d017b3n5599a7a5aeec60a4@mail.gmail.com>
Comments: In reply to Maryam <darwinskernel@gmail.com>
 "bck-search in vicmd is not thinking vi-style" (Apr  7, 11:55am)
References: <k2pa9a51b1a1004070855lc0d017b3n5599a7a5aeec60a4@mail.gmail.com>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-users@zsh.org
Subject: Re: bck-search in vicmd is not thinking vi-style
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Apr 7, 11:55am, Maryam wrote:
} 
} Can someone help me figure this out? thnx.

Figure out which part?  There's a whole conversation there ...

If you mean the original question about invoking tab-completion during
incremental search:  It can't be done in a straightforward way.
Incremental search is a self-contained widget, you can't escape from
it to go into completion and then come back to where you left off.

It can probably be done by implementing your own incremental search
widget as a completion widget; see e.g., the incremental-complete-word
widget in the distribution.  In fact this *might* work:

# Choose another binding at your preference
autoload -U incremental-complete-word
zle -N incremental-complete-word
bindkey -M vicmd / incremental-complete-word
zstyle ':completion:incremental:*' completer _history

However, I haven't tried it; you may need other zstyles, and I don't
know how compatible incremental-complete-word is with vi-mode.


} 10:56 < glphvgacs> ft: hi, while user isearches in vicmd mode; is it
} possible to hit some key (tab?) to run through the possible hits
} (something like menu-completion)?
} 11:22 < glphvgacs> a key for reapeating bck-i-search that is not
} emac-style i.e. '^r'
} 11:24 < Mikachu> you can bind keys in the isearch keymap
} 11:24 < Mikachu> if that helps
} 11:27 < glphvgacs> Mikachu: I have this bindkey -M vicmd 'f'
} history-incremental-search-backward
} 11:27 < Mikachu> obviously you can't use f in isearch since i assume
} you want to be able to type f
} 11:27 < glphvgacs> but that's just to start isearch
} 11:27 < Mikachu> but you could try bindkey -M isearch '^I'
} history-incremental-search-backward
} 11:32 < glphvgacs>  vimperator guys have a nice feature to open a
} location; user hits 'o' and starts typing then user gets a list of
} possible completions and then (here is the good part) user can <tab>
} through the results. i don't think i can search for <tab> in my search
} history so having that key doing nothing during bck-search and then
} introducing an extra key to hold (in the case of '^r' or as you
} suggested '^I') seems redundant, i think
} 11:34 < glphvgacs> i mean then whole idea of going vicmd to me at
} least to to get rid of that extra '^' in emacs, to thing vi as opposed
} to emacs, right?
} 11:34 < Mikachu> ^I is tab
} 11:34 -!- bapt is now known as aigrbapt
} 11:34 < glphvgacs> nice
} 11:34 < Mikachu> it took me a while to realize that isn't immediately
} obvious to everyone
} 11:36 < glphvgacs> so empty line + ^I brings up  bck-search
} 11:36 < glphvgacs> i was thinking I as in Increment
} 11:36 < glphvgacs> thnx
} 11:36 < Mikachu> after going into the searhc mode, pressing tab should
} be the same as pressing ctrl-r again in emacs mode
} 11:37  * Mikachu disappears
} 11:37 < glphvgacs> yeah, not really
} 11:38 < glphvgacs> it doesn't do what i wanted but still a nice touch

-- 

