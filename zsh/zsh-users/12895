From zsh-users-return-12895-mason-zsh=primenet.com.au@sunsite.dk Wed Jun 04 11:44:55 2008
Return-Path: <zsh-users-return-12895-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 11230 invoked from network); 4 Jun 2008 11:44:54 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.4 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 4 Jun 2008 11:44:54 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 45042 invoked from network); 4 Jun 2008 11:44:44 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 4 Jun 2008 11:44:44 -0000
Received: (qmail 25365 invoked by alias); 4 Jun 2008 11:44:34 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12895
Received: (qmail 25351 invoked from network); 4 Jun 2008 11:44:33 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 4 Jun 2008 11:44:33 -0000
Received: from cluster-d.mailcontrol.com (cluster-d.mailcontrol.com [217.69.20.190])
	by bifrost.dotsrc.org (Postfix) with ESMTP id B742B80589A4
	for <zsh-users@sunsite.dk>; Wed,  4 Jun 2008 13:44:28 +0200 (CEST)
Received: from cameurexb01.EUROPE.ROOT.PRI ([62.189.241.200])
	by rly06d.srv.mailcontrol.com (MailControl) with ESMTP id m54BiEd7005181
	for <zsh-users@sunsite.dk>; Wed, 4 Jun 2008 12:44:23 +0100
Received: from news01.csr.com ([10.103.143.38]) by cameurexb01.EUROPE.ROOT.PRI with Microsoft SMTPSVC(6.0.3790.3959);
	 Wed, 4 Jun 2008 12:44:17 +0100
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.14.2/8.13.4) with ESMTP id m54BiHlu004041
	for <zsh-users@sunsite.dk>; Wed, 4 Jun 2008 12:44:17 +0100
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.14.2/8.14.2/Submit) with ESMTP id m54BiHtT004038
	for <zsh-users@sunsite.dk>; Wed, 4 Jun 2008 12:44:17 +0100
Message-Id: <200806041144.m54BiHtT004038@news01.csr.com>
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-users <zsh-users@sunsite.dk>
Subject: Re: no way to keep my glob expanded ? (i don't think so)
In-reply-to: <20080604112956.GB25558@hyperion.u-strasbg.fr>
References: <20080604112956.GB25558@hyperion.u-strasbg.fr>
Comments: In-reply-to Marc Chantreux <marc.chantreux@ulpmm.u-strasbg.fr>
   message dated "Wed, 04 Jun 2008 13:29:56 +0200."
Date: Wed, 04 Jun 2008 12:44:17 +0100
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 04 Jun 2008 11:44:17.0519 (UTC) FILETIME=[51EFAFF0:01C8C638]
X-Scanned-By: MailControl A-08-50-03 (www.mailcontrol.com) on 10.68.0.116
X-Virus-Scanned: ClamAV 0.91.2/7356/Wed Jun  4 12:22:58 2008 on bifrost
X-Virus-Status: Clean

Marc Chantreux wrote:
> hello zsh lovers,
> ${${:-*c}//truc/}  see *c as a string so the result is *c

> Clint and Peter explained me in another post that the subsitution is
> applied first. So: 
> 
> print ${${:-*c}//truc/}
> => print ${"*c"//truc/}
> => print "*c"
> 
> as i understood thinks, it's impossible to do what i expected.

Yes, that's right.  Variable handling is always done before globbing.
Once globbing is expanded the argument list is fully prepared.

> ft gave a workaround on #zsh: print -l *c(e-'REPLY=${REPLY//truc/}'-)

As Mikael explained, you can also use history-style modifiers in glob
qualifiers, which are more readable.  I think *c(:gs/truc//) is the
best answer you are likely to get.

> - is it a way to visualize those multipass transformations ?

There's a long (but still probably incomplete) description of how the
parameter transformations work in zshexpn: search for "brain damage".

As to how the different types of expansion are ordered, this is stated
rather than explained at the top of the same manual page:  the
expansions are performed in order.  The main subtlety is whether the
parameter expansion produces further expandable results, or just
strings, as controlled by the GLOB_SUBST option.

> - is there a way to tell to zsh to work as expected ?

If you mean you expect the shell to perform globbing in the middle of
parameter expansion then no, that's just not how shells work.  If you
insist on using a parameter expansion syntax you need something that
produces an extra expansion phase, which will be clumsy, such as using
an intermediate array or a $(...) expansion which can be nested in
parameter expansion (e.g. ${$(print *c)//truc/} ) but will fork a subshell
to do its own expansion.

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070

