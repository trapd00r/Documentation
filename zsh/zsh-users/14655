From zsh-users-return-14655-mason-zsh=primenet.com.au@zsh.org Thu Dec 17 08:06:59 2009
Return-Path: <zsh-users-return-14655-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 15536 invoked by alias); 17 Dec 2009 08:06:58 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14655
Received: (qmail 10393 invoked from network); 17 Dec 2009 08:06:46 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.5 required=5.0 tests=AWL,BAYES_00,TVD_RCVD_IP
	autolearn=no version=3.2.5
Received-SPF: none (ns1.primenet.com.au: domain at fruitbat.org does not designate permitted sender hosts)
Date: Thu, 17 Dec 2009 00:04:39 -0800 (PST)
From: "Peter A. Castro" <doctor@fruitbat.org>
To: zsh-users@zsh.org
Subject: Re: Unable to read history on latest Cygwin
In-Reply-To: <733654e30912160754q5e505cabo4a2510b41bf1d892@mail.gmail.com>
Message-ID: <Pine.LNX.4.64.0912162357250.19572@gremlin.fruitbat.org>
References: <1260800369.32429.1350005931@webmail.messagingengine.com>
 <733654e30912160754q5e505cabo4a2510b41bf1d892@mail.gmail.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed

On Wed, 16 Dec 2009, Wayne Davison wrote:

> On Mon, Dec 14, 2009 at 6:19 AM, Thorsten Kampe
> <thorsten@thorstenkampe.de>wrote:
>
>> The result of that is that I'm not able to run zsh "portable" from a
>> FAT32 USB thumb drive: "zsh: failed to create hard link as lock file
>> /home/thorsten/.zhistory.LOCK: operation not permitted".
>
> One simple possibility is to change the two #ifdef HAVE_LINK lines in hist.c
> to this:
>
> #if defined HAVE_LINK && !defined __CYGWIN__

I'll get to testing that possible usage, as well as Peter's proposed code
changes, once I get a few spare cycles...

> That should make it use the open with O_EXCL, which is hopefully atomic.

Hmm...atomic in the sense that the open vectors through the symlink to
the real file?  Yes, I believe it's "atomic" in that sense.

> As for Peter's idea of using a symlink, do you know if the cygwin folks
> mention if their emulation of a symlink is an atomic operation?  We could

Symlinks in Cygwin are a close analog to true filesystem supported
symlinks.  They are just a 'plain' file with a special name (and file
attribute) and contain the redirection to the target file.  So....since a
Cygwin app. must access the symlink/file through Cygwin (which is doing
the symlink resolution) you can considder it "mostly" atomic.  It's
certainly not atomic from the underlying filesystem perspective (because
it doesn't support it), but the emulation layer is the only access point
for the app. to get to the symlink file.  Does that answer your question?

> completely get rid of the temp file (used in the hard-link code) and just
> create a symlink named for the lock file, pointing at (essentially)
> $PID/$HOST (since it doesn't matter if the link is valid, just that it
> exists).  According to various web docs, symlinks are atomic on NFS, so that
> might be a good thing to use in general (replacing the use of link()).
>
> ..wayne..

-- 
Peter A. Castro <doctor@fruitbat.org> or <Peter.Castro@oracle.com>
 	"Cats are just autistic Dogs" -- Dr. Tony Attwood

