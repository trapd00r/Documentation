From zsh-users-return-14404-mason-zsh=primenet.com.au@sunsite.dk Thu Sep 17 23:48:17 2009
Return-Path: <zsh-users-return-14404-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 25224 invoked from network); 17 Sep 2009 23:48:13 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from new-brage.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.254.104)
  by ns1.primenet.com.au with SMTP; 17 Sep 2009 23:48:13 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 24352 invoked from network); 17 Sep 2009 23:48:02 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 17 Sep 2009 23:48:02 -0000
Received: (qmail 25868 invoked by alias); 17 Sep 2009 23:47:47 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 14404
Received: (qmail 25831 invoked from network); 17 Sep 2009 23:47:47 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 17 Sep 2009 23:47:47 -0000
Received: from mail-fx0-f212.google.com (mail-fx0-f212.google.com [209.85.220.212])
	by bifrost.dotsrc.org (Postfix) with ESMTP id C8E5D8026E39
	for <zsh-users@sunsite.dk>; Fri, 18 Sep 2009 01:47:40 +0200 (CEST)
Received: by fxm8 with SMTP id 8so396989fxm.45
        for <zsh-users@sunsite.dk>; Thu, 17 Sep 2009 16:47:40 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:received:in-reply-to:references
         :date:message-id:subject:from:to:cc:content-type;
        bh=Fs0Xl7Q2a9ctNPwmQyDxdAV5NFJPcq+fI3/N6VMTizY=;
        b=PpkP5OkpnmSyx2FJG9qbH4Japym66uoQPvEQ2E/e418t1sXYwax5EBS7KSf3LM5L/n
         suP0rl4nSnxmo00u1sJUbEWFBugbgO1kTwemGxZnRd+efWmYVTr44hQjifa3qKSDfZX7
         A7AeG+F90w6dRqL465fQWCxC2Qy8YeSgeZnhI=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        b=omhSBolqN9jmmrjfgqbj0Y7WdhsZiMMMuui6wSMeYZsE1oOb0x06vUHn2G9Hztk+hw
         W5JVWWO8XXRXFdrGQ3/U59ZvgfrSAMSNwlh5ZKdGb7iQzfGc+buQcfCVPsJd4NQQ8gqP
         GQOnBAfQnl7e1kjutFVHtbGdqJxd6HgNJW9rI=
MIME-Version: 1.0
Received: by 10.204.34.75 with SMTP id k11mr146767bkd.105.1253231260040; Thu, 
	17 Sep 2009 16:47:40 -0700 (PDT)
In-Reply-To: <m2ocp9ma6k.fsf@asfast.com>
References: <m2ocp9ma6k.fsf@asfast.com>
Date: Fri, 18 Sep 2009 01:47:40 +0200
Message-ID: <237967ef0909171647k21d15c6bwe934c4fe16029c68@mail.gmail.com>
Subject: Re: Testing if there is data on stdin?
From: Mikael Magnusson <mikachu@gmail.com>
To: Lloyd Zusman <ljz@asfast.com>
Cc: zsh-users@sunsite.dk
Content-Type: text/plain; charset=UTF-8
X-Virus-Scanned: ClamAV 0.94.2/9814/Thu Sep 17 19:17:50 2009 on bifrost
X-Virus-Status: Clean

2009/9/18 Lloyd Zusman <ljz@asfast.com>:
> Is there a way in zsh to test whether there is at least one byte of data
> waiting to be read from stdin without actually reading that data?
>
> I know I can do a [[ -t 0 ]] to see whether stdin is attached to a
> terminal, but that doesn't tell me if there is any data waiting to
> be read.
>
> The reason I want to do this is because I have a zsh script which, under
> certain circumstances, needs to get its arguments via stdin instead of
> from the command line. I'd like to be able to test within the script
> whether there is data waiting on stdin, and if so, to read it and use it
> to construct the argument list. If there is no data waiting on stdin,
> then I just want to get the arguments from the command line.
>
> Also, there is a slight difference in processing logic if I find data in
> stdin, and I need to do a little bit of special initialization _before_
> I try to read that data ... but only if that data is on stdin waiting to
> be read.
>
> Any suggestions as to how I might do this? I couldn't find anything in
> the zsh docs, but I could easily have overlooked something.
>
> Thanks in advance.

You can either use
zmodload zsh/zselect
zselect -t0 0
or
read -t0

I have a feeling the code can get pretty complicated quickly, since
both of those will return true if there's one byte of data, then you
have to recheck after each character you read so it won't suddenly
block (or use a loop of read -t -k). Unless I'm overlooking some
clever solution.

-- 
Mikael Magnusson

