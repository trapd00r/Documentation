From zsh-workers-return-19919-mason-zsh=primenet.com.au@sunsite.dk Tue May 11 15:08:49 2004
Return-Path: <zsh-workers-return-19919-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 22492 invoked from network); 11 May 2004 15:08:48 -0000
Received: from thor.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.86)
  by ns1.primenet.com.au with SMTP; 11 May 2004 15:08:48 -0000
Received: (qmail 9001 invoked from network); 11 May 2004 15:08:30 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 11 May 2004 15:08:30 -0000
Received: (qmail 28515 invoked by alias); 11 May 2004 15:08:28 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 19919
Received: (qmail 28506 invoked from network); 11 May 2004 15:08:27 -0000
Received: from thor.dotsrc.org (HELO a.mx.sunsite.dk) (qmailr@130.225.247.86)
  by sunsite.dk with SMTP; 11 May 2004 15:08:24 -0000
Received: (qmail 8837 invoked from network); 11 May 2004 15:08:24 -0000
Received: from lhuumrelay3.lnd.ops.eu.uu.net (62.189.58.19)
  by a.mx.sunsite.dk with SMTP; 11 May 2004 15:08:17 -0000
Received: from MAILSWEEPER01.csr.com (mailhost1.csr.com [62.189.183.235])
	by lhuumrelay3.lnd.ops.eu.uu.net (8.11.0/8.11.0) with ESMTP id i4BF7ov25618
	for <zsh-workers@sunsite.dk>; Tue, 11 May 2004 15:07:50 GMT
Received: from EXCHANGE02.csr.com (unverified [192.168.137.45]) by MAILSWEEPER01.csr.com
 (Content Technologies SMTPRS 4.3.12) with ESMTP id <T69813a2e91c0a88d01850@MAILSWEEPER01.csr.com> for <zsh-workers@sunsite.dk>;
 Tue, 11 May 2004 16:07:19 +0100
Received: from csr.com ([192.168.144.127]) by EXCHANGE02.csr.com with Microsoft SMTPSVC(5.0.2195.6713);
	 Tue, 11 May 2004 16:09:25 +0100
To: zsh-workers@sunsite.dk
Subject: Re: print and floating point output 
In-reply-to: "Matthias Kopfermann"'s message of "Tue, 11 May 2004 16:13:59 +0200."
             <20040511141359.GA32388@finlandia.infodrom.north.de> 
Date: Tue, 11 May 2004 16:07:49 +0100
Message-ID: <9991.1084288069@csr.com>
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 11 May 2004 15:09:25.0309 (UTC) FILETIME=[F284A6D0:01C43769]
X-Spam-Flag: YES
X-Spam-Checker-Version: SpamAssassin 2.63 on a.mx.sunsite.dk
X-Spam-Level: ******
X-Spam-Status: Yes, hits=6.0 required=6.0 tests=BAYES_99 autolearn=no 
	version=2.63
X-Spam-Hits: 6.0
X-Spam-Report: 
	*  6.0 BAYES_99 BODY: Bayesian spam probability is 99 to 100%
	*      [score: 0.9995]

Matthias Kopfermann wrote:
> On Tue, May 11, 2004 at 02:18:39PM +0100, Peter Stephenson:
> > Matthias Kopfermann wrote:
> > > > If you are doing serious floating point work, unfortunately you need to
> > > > understand something about rounding errors, which are a tricky and
> > > > ever-present feature.
> > > 
> > > I learned that here.
> > 
> > Good lesson!  The principle of least surprise is best satisfied by not
> > trusting rounding errors.
> 
> it only _depends_ on what the user is expecting.
> And _I_ just expected the output of zcalc, python, ruby, perl
> and bc when using print with this example. :)

Well, they happen to round it earlier.  That's not a particularly good
basis for expectation.  But the case isn't the same anyway, read on.

I should already have said a bit more about why it's the way it is...

In perl, etc. the operation you're talking about is printing a number,
and that's all.  This is an output operation on an internally
represented floating point number.  The equivalent of that in zsh would
be what I suggested you use,

  float var
  (( var = expr ))
  print $var

In zsh, the operation you're talking about is the result of a
substitution.  The print is irrelevant; it just passes through the
result unchanged in this case.  Substitutions are frequently used
internally for passing on numbers to other values.  For example,

  var=$(( <floating point expression ))

The way zsh is at the moment, we keep the maximum precision until
output.  At output, the expectation is if you want neat formatting, you
ask for it, using typeset on the output variable or printf.  A
substitution is an internal mechanism for generating data, not an final
step for the user.

Actually, it would be better to do

  (( var = <floating point expression> ))

but if var isn't yet set or is a scalar it does the conversion to
floating point at this stage, so you still potentially lose precision
when it truncates.

> And it's only _default_ we are talking about.

As I explain above, that's exactly why it gives the longest precision.
The default (and least surprising) behaviour of a substitution is not to
remove information.  The default behaviour of outputting is got by using
a properly typed variable; $(( ... )) has no associated typing.

> So I am not convinced now but I of course respect this
> decision.

Well, if anyone else feels strongly, they should make their views known.

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR Ltd., Science Park, Milton Road,
Cambridge, CB4 0WH, UK                          Tel: +44 (0)1223 692070


**********************************************************************
This email and any files transmitted with it are confidential and
intended solely for the use of the individual or entity to whom they
are addressed. If you have received this email in error please notify
the system manager.

This footnote also confirms that this email message has been swept by
MIMEsweeper for the presence of computer viruses.

www.mimesweeper.com
**********************************************************************

