From zsh-workers-return-14959-mason-zsh=primenet.com.au@sunsite.dk Mon Jun 18 09:26:49 2001
Return-Path: <zsh-workers-return-14959-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4304 invoked from network); 18 Jun 2001 09:26:49 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 18 Jun 2001 09:26:49 -0000
Received: (qmail 25691 invoked by alias); 18 Jun 2001 09:26:15 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 14959
Received: (qmail 25537 invoked from network); 18 Jun 2001 09:25:42 -0000
Message-ID: <Tc0a88d0154377c1d53@mailsweeper01.cambridgesiliconradio.com>
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: Re: General unqueue_signal problem 
In-reply-to: "Sven Wischnowsky"'s message of "Mon, 18 Jun 2001 09:21:50 +0200."
             <200106180721.JAA11015@beta.informatik.hu-berlin.de> 
Date: Mon, 18 Jun 2001 10:20:33 +0100
From: Peter Stephenson <pws@csr.com>

Sven Wischnowsky wrote:
> Peter Stephenson wrote:
> > Adding mod_export is obviously the right first step, and probably ought to
> > fix this particular bug.  I haven't got time to change the name `handler'
> > at the moment, but replacing it by zhandler sounds sensible.
> 
> Here's the patchlet for that.

I'd feel happier if handler were changed to zhandler for systems that don't
use POSIX signals, too.

Of course, *I* would never commit a patch without a thorough review of all
effects.  Ummm....

Index: Src/signals.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/signals.c,v
retrieving revision 1.19
diff -u -r1.19 signals.c
--- Src/signals.c	2001/06/18 07:24:23	1.19
+++ Src/signals.c	2001/06/18 09:17:49
@@ -105,7 +105,7 @@
 # ifdef BSD_SIGNALS
     struct sigvec vec;
  
-    vec.sv_handler = (SIGNAL_HANDTYPE) handler;
+    vec.sv_handler = (SIGNAL_HANDTYPE) zhandler;
     vec.sv_mask = sigmask(sig);    /* mask out this signal while in handler    */
 #  ifdef SV_INTERRUPT
     vec.sv_flags = SV_INTERRUPT;   /* make sure system calls are not restarted */
@@ -115,9 +115,9 @@
 #  ifdef SYSV_SIGNALS
     /* we want sigset rather than signal because it will   *
      * block sig while in handler.  signal usually doesn't */
-    sigset(sig, handler);
+    sigset(sig, zhandler);
 #  else  /* NO_SIGNAL_BLOCKING (bummer) */
-    signal(sig, handler);
+    signal(sig, zhandler);
 
 #  endif /* SYSV_SIGNALS  */
 # endif  /* BSD_SIGNALS   */


**********************************************************************
The information transmitted is intended only for the person or
entity to which it is addressed and may contain confidential 
and/or privileged material. 
Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by 
persons or entities other than the intended recipient is 
prohibited.  
If you received this in error, please contact the sender and 
delete the material from any computer.
**********************************************************************

