From zsh-workers-request@euclid.skiles.gatech.edu  Sun Aug 25 10:18:35 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by coral.primenet.com.au (8.7.5/8.7.3) with ESMTP id KAA04363 for <mason@primenet.com.au>; Sun, 25 Aug 1996 10:18:33 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id UAA06809; Sat, 24 Aug 1996 20:13:36 -0400 (EDT)
Resent-Date: Sat, 24 Aug 1996 20:13:36 -0400 (EDT)
From: Zoltan Hidvegi <hzoli@cs.elte.hu>
Message-Id: <199608250012.CAA26870@bolyai.cs.elte.hu>
Subject: Re: The speed of zsh
To: schaefer@nbn.com
Date: Sun, 25 Aug 1996 02:12:45 +0200 (MET DST)
Cc: zsh-workers@math.gatech.edu
In-Reply-To: <960824141541.ZM453@candle.brasslantern.com> from Bart Schaefer at "Aug 24, 96 02:15:41 pm"
Organization: Dept. of Comp. Sci., Eotvos University, Budapest, Hungary
Phone: (36 1)2669833 ext: 2667, home phone: (36 1) 2752368
X-Mailer: ELM [version 2.4ME+ PL16 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"wiPsX2.0.Jg1.mgv7o"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/2067
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

> } The patch below improves zsh preformance by 10-15%.  An other 10% speed
> } improvement would be possible by avoiding the
> } child_block()/child_unblock() calls whenever possible (other shells do not
> } use any system calls while executing builtin-only scritpts).
> 
> I think I said before that we could avoid those if we aren't going to fork
> and if the job table is empty.  Maybe they're expensive enough to be worth
> the extra test.  On what do you base the 10% figure?

Because zsh time is 26.11s+3.00s, 94% CPU, 30.659 total while ksh is
9.99s+0.00s, 93% CPU, 10.674 total for 9999 bottles of beer.

It's clear that zsh spends 10% of the time in system calls and the only
system call used by zsh while executing non-forking builtin-only scripts is
sigprocmask (which can be easily seen using strace).

Zoltan

