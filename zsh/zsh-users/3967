From zsh-users-return-3967-mason-zsh=primenet.com.au@sunsite.dk Thu Jun 28 08:06:30 2001
Return-Path: <zsh-users-return-3967-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1926 invoked from network); 28 Jun 2001 08:06:29 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 28 Jun 2001 08:06:29 -0000
Received: (qmail 20853 invoked by alias); 28 Jun 2001 08:05:30 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 3967
Received: (qmail 20840 invoked from network); 28 Jun 2001 08:05:29 -0000
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
Date: Thu, 28 Jun 2001 10:04:15 +0200 (MET DST)
Message-Id: <200106280804.KAA31411@beta.informatik.hu-berlin.de>
To: zsh-users@sunsite.dk
Subject: Re: pop - is there a more elegant solution
In-Reply-To: <200106280801.KAA63855@numa1.igpm.rwth-aachen.de>

jarausch@igpm.rwth-aachen.dejarausch@igpm.rwth-aachen.de wrote:

> Hello,
> 
> just being curious,
> is there a more elegant (less cryptic) solution to
> 
> #!/bin/zsh
> # get the last parameter and shorten the list
> # emulate Perl's pop function
> echo $@
> last=$[-1]
> # shorten the parameter array
> set $@[0,$[-1+$#]]
> echo $@
> 
> Thanks for your opinion,

Not much less cryptic:

  last="$argv[-1]"
  argv[-1]=()


Bye
  Sven


-- 
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

