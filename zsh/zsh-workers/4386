From zsh-workers-request@math.gatech.edu Wed Sep 16 00:40:23 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 28053 invoked from network); 16 Sep 1998 00:40:22 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 16 Sep 1998 00:40:22 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.9.1/8.9.1) id UAA25253;
	Tue, 15 Sep 1998 20:34:02 -0400 (EDT)
Resent-Date: Tue, 15 Sep 1998 20:34:02 -0400 (EDT)
From: "Bart Schaefer" <schaefer@brasslantern.com>
Message-Id: <980915173702.ZM4523@candle.brasslantern.com>
Date: Tue, 15 Sep 1998 17:37:02 -0700
In-Reply-To: <m0zJ3N1-000X3MC@mailgw.approve.se>
Comments: In reply to Goran Larsson <hoh@lorelei.approve.se>
        "select behaving strange in 3.1.4" (Sep 16, 12:14am)
References: <m0zJ3N1-000X3MC@mailgw.approve.se>
X-Mailer: Z-Mail Lite (5.0.0 30July97)
To: zsh-workers@math.gatech.edu
Subject: Re: select behaving strange in 3.1.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-Message-ID: <"nF0-o3.0.WA6.vTm_r"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4386
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

On Sep 16, 12:14am, Goran Larsson wrote:
> Subject: select behaving strange in 3.1.4
> Look at this:
> 
> $ ./select_weirdness
> 1) A  2) B  3) C
> What now?^D                                        <-- enter control-D
> $ 
> $ . ./select_weirdness
> 1) A  2) B  3) C
> What now?^D                                        <-- enter control-D
> zsh: do you wish to see all 1120 possibilities?

I see this behavior immediately, that is, it's not necessary to source
the script twice to have ^D cease to be end-of-file.  I have applied the
patch from zsh-workers/4192, which perhaps has affected the problem.

> $ . ./select_weirdness
> 1) A  2) B  3) C
> What now?^C                                        <-- enter control-C
> $ 
> $ . ./select_weirdness
> 1) A  2) B  3) C
> What now?2                                         <-- enter 2
> B
> What now?^D                                        <-- enter control-D
> zsh: do you wish to see all 1120 possibilities? n  <-- enter n
> What now?^C                                        <-- enter control-C
> 
> At this point control-C has stopped working

At this spot in getkey():

335             while ((r = read(SHTTY, &cc, 1)) != 1) {
336                 if (r == 0) {

Hitting ctrl-C returns from the read with -1 and errno == EINTR.  So we to
to this branch of the code:

351                 }
352                 icnt = 0;
353                 if (errno == EINTR) {
354                     die = 0;
355                     if (!errflag && !retflag && !breaks)
356                         continue;

The first ^C in the sample input above gets here with errflag == 1, so we
break out of the loop with EOF (which is wrong).  At the second ^C, we get
back here with NONE of errflag or retflag or breaks set, so getkey() just
tries again forever.

We just can't seem to get this tty-interrupt stuff right.  Sometimes ^C
does return from getkey() and then gets wrongly interpreted as EOF (see
http://www.zsh.org/mla/workers-1998/msg00437.html and related postings)
and other times it doesn't return on interrupt at all.

Does anybody think they know what's supposed to be happening in getkey()?

