From zsh-workers-return-22769-mason-zsh=primenet.com.au@sunsite.dk Tue Sep 26 10:00:48 2006
Return-Path: <zsh-workers-return-22769-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20533 invoked from network); 26 Sep 2006 10:00:44 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.5 (2006-08-29) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.4 required=5.0 tests=AWL,BAYES_00,
	FORGED_RCVD_HELO autolearn=ham version=3.1.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 26 Sep 2006 10:00:44 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 31526 invoked from network); 26 Sep 2006 10:00:38 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 26 Sep 2006 10:00:38 -0000
Received: (qmail 19423 invoked by alias); 26 Sep 2006 10:00:35 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 22769
Received: (qmail 19414 invoked from network); 26 Sep 2006 10:00:34 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 26 Sep 2006 10:00:34 -0000
Received: (qmail 31153 invoked from network); 26 Sep 2006 10:00:34 -0000
Received: from cluster-d.mailcontrol.com (217.69.20.190)
  by a.mx.sunsite.dk with SMTP; 26 Sep 2006 10:00:32 -0000
Received: from cameurexb01.EUROPE.ROOT.PRI ([62.189.241.200])
	by rly17d.srv.mailcontrol.com (MailControl) with ESMTP id k8Q9irwG005227
	for <zsh-workers@sunsite.dk>; Tue, 26 Sep 2006 10:59:54 +0100
Received: from news01.csr.com ([10.103.143.38]) by cameurexb01.EUROPE.ROOT.PRI with Microsoft SMTPSVC(6.0.3790.1830);
	 Tue, 26 Sep 2006 10:20:05 +0100
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.13.7/8.13.4) with ESMTP id k8Q9K5Pq026577
	for <zsh-workers@sunsite.dk>; Tue, 26 Sep 2006 10:20:05 +0100
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.13.7/8.13.7/Submit) with ESMTP id k8Q9K4wb026573
	for <zsh-workers@sunsite.dk>; Tue, 26 Sep 2006 10:20:05 +0100
Message-Id: <200609260920.k8Q9K4wb026573@news01.csr.com>
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-workers@sunsite.dk
Subject: Re: mb_metacharlenconv vs. tokens 
In-reply-to: <200609252146.00249.arvidjaar@newmail.ru> 
References: <200609252146.00249.arvidjaar@newmail.ru>
Comments: In-reply-to Andrey Borzenkov <arvidjaar@newmail.ru>
   message dated "Mon, 25 Sep 2006 21:45:57 +0400."
Date: Tue, 26 Sep 2006 10:20:04 +0100
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 26 Sep 2006 09:20:05.0725 (UTC) FILETIME=[F430F0D0:01C6E14C]
Content-Type: text/plain
MIME-Version: 1.0
X-Scanned-By: MailControl A-07-04-02 (www.mailcontrol.com) on 10.68.0.127

Andrey Borzenkov wrote:
> Apparently mb_metacharlenconv gets passed tokenized string (how is it called
> properly in zsh lingua?) It means that the fact length(any-token-char) == 1
> is actually side effect of mbrtowc failing miserably and mb_metacharlenconv
> returning fallback 1 (at least using UTF-8).
> 
> Should not it untokenize character first? If yes, I will provide a fix as
>  part of larger patch; if no, I fail to see how it works then.

It's a bug if it's getting a tokenized character.  It should have been
untokenized at some point in the sequence leading to the call, since
mb_metacharlenconv() should already be dealing with a printable
string---by implication, we're looking at its width or length in
characters because we're about to do something to it which is
appropriate to a printable string.  However, this being zsh, the exact
point at which untokenization should be done is not necessarily obvious.
This is particularly true if we're using the string as a pattern.

I had a case like this in substitution recently:

2006-09-12  Peter Stephenson  <pws@csr.com>

	* 22689: Src/subst.c, Test/D04parameter.ztst: untokenize
	strings for substitution in cases like
	${${~:-*}//(#m)*/$MATCH=$MATCH}.  The pattern code tried
	to metafy the tokens, which caused chaos.

We're a victim of the fact that metafied strings are used both to
protect tokens and to protect embedded NULs; it tends to hide the logic
indicating that tokens are still around when they shouldn't be.

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070


To access the latest news from CSR copy this link into a web browser:  http://www.csr.com/email_sig.php

