From zsh-workers-return-22685-mason-zsh=primenet.com.au@sunsite.dk Sun Sep 10 19:09:09 2006
Return-Path: <zsh-workers-return-22685-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 3895 invoked from network); 10 Sep 2006 19:09:06 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.4 (2006-07-25) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00,
	FORGED_RCVD_HELO autolearn=ham version=3.1.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 10 Sep 2006 19:09:06 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 4338 invoked from network); 10 Sep 2006 19:08:58 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 10 Sep 2006 19:08:58 -0000
Received: (qmail 19609 invoked by alias); 10 Sep 2006 19:08:55 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 22685
Received: (qmail 19598 invoked from network); 10 Sep 2006 19:08:54 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 10 Sep 2006 19:08:54 -0000
Received: (qmail 4157 invoked from network); 10 Sep 2006 19:08:54 -0000
Received: from mtaout01-winn.ispmail.ntl.com (81.103.221.47)
  by a.mx.sunsite.dk with SMTP; 10 Sep 2006 19:08:52 -0000
Received: from aamtaout01-winn.ispmail.ntl.com ([81.103.221.35])
          by mtaout01-winn.ispmail.ntl.com with ESMTP
          id <20060910190851.JZJD15018.mtaout01-winn.ispmail.ntl.com@aamtaout01-winn.ispmail.ntl.com>
          for <zsh-workers@sunsite.dk>; Sun, 10 Sep 2006 20:08:51 +0100
Received: from pwslaptop.csr.com ([81.107.41.155])
          by aamtaout01-winn.ispmail.ntl.com with ESMTP
          id <20060910190851.VWAR644.aamtaout01-winn.ispmail.ntl.com@pwslaptop.csr.com>
          for <zsh-workers@sunsite.dk>; Sun, 10 Sep 2006 20:08:51 +0100
Received: from pwslaptop.csr.com (pwslaptop.csr.com [127.0.0.1])
	by pwslaptop.csr.com (8.13.7/8.13.7) with ESMTP id k8AJ8jG8019141
	for <zsh-workers@sunsite.dk>; Sun, 10 Sep 2006 20:08:47 +0100
Message-Id: <200609101908.k8AJ8jG8019141@pwslaptop.csr.com>
From: Peter Stephenson <p.w.stephenson@ntlworld.com>
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: PATCH: printf ... \'X
Date: Sun, 10 Sep 2006 20:08:45 +0100

  printf "%d\n" \'X

is yet another way of getting the character index of character X.  I'm
guessing it's more useful for it to handle wide characters rather than
outputting the value of the first byte in a multibyte character.

Goodness knows whether string width in printf should take account of
wide character widths for %s and %b, but my guess is it should.  I
haven't done that.  In fact, I see I haven't fixed up character widths
for dopadding() yet, either.

By the way, I think the handling of "curarg" in the printf code doesn't
generally take account of the fact that curarg is unmetafied with length
curlen, right?  (This fact isn't particularly convenient here but is
pretty much inevitable given the use of getkeystring().)  I've made it
do so in this case but haven't altered the other cases.  (In the first
hunk it already does, that's just a whitespace change.)


Index: Src/builtin.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/builtin.c,v
retrieving revision 1.161
diff -u -r1.161 builtin.c
--- Src/builtin.c	10 Sep 2006 18:10:49 -0000	1.161
+++ Src/builtin.c	10 Sep 2006 19:00:48 -0000
@@ -3938,7 +3938,8 @@
 		    char *b;
 		    int l;
 		    if (*c == 'b') {
-			b = getkeystring(metafy(curarg, curlen, META_USEHEAP), &l,
+			b = getkeystring(metafy(curarg, curlen, META_USEHEAP),
+					 &l,
 					 OPT_ISSET(ops,'b') ? GETKEYS_BINDKEY :
 					 GETKEYS_PRINTF, &nnl);
 		    } else {
@@ -4004,11 +4005,25 @@
 
 	    if (type > 0) {
 		if (curarg && (*curarg == '\'' || *curarg == '"' )) {
+		    convchar_t cc;
+#ifdef MULTIBYTE_SUPPORT
+		    if (isset(MULTIBYTE)) {
+			mb_metacharinit();
+			(void)mb_metacharlenconv(metafy(curarg+1, curlen-1,
+							META_USEHEAP), &cc);
+		    }
+		    else
+			cc = WEOF;
+		    if (cc == WEOF)
+			cc = (curlen > 1) ? STOUC(curarg[1]) : 0;
+#else
+		    cc = (curlen > 1) ? STOUC(curarg[1]) : 0;
+#endif
 		    if (type == 2) {
-			doubleval = STOUC(curarg[1]);
+			doubleval = cc;
 			print_val(doubleval);
 		    } else {
-			intval = STOUC(curarg[1]);
+			intval = cc;
 			print_val(intval);
 		    }
 		} else {


-- 
Peter Stephenson <p.w.stephenson@ntlworld.com>
Web page now at http://homepage.ntlworld.com/p.w.stephenson/

