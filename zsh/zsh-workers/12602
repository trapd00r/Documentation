From zsh-workers-return-12602-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Aug 14 05:52:29 2000
Return-Path: <zsh-workers-return-12602-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1394 invoked from network); 14 Aug 2000 05:52:22 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 14 Aug 2000 05:52:22 -0000
Received: (qmail 9048 invoked by alias); 14 Aug 2000 05:51:46 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 12602
Received: (qmail 9040 invoked from network); 14 Aug 2000 05:51:45 -0000
Message-ID: <20000814055143.26862.qmail@web1104.mail.yahoo.com>
Date: Sun, 13 Aug 2000 22:51:43 -0700 (PDT)
From: Felix Rosencrantz <f_rosencrantz@yahoo.com>
Subject: Re: Completing parameter names that have yet to be set.
To: zsh-workers <zsh-workers@sunsite.auc.dk>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

I was unaware of the "fake" style.  I just looked at _parameter before
posting. It seems that "fake" covers the functionality I was thinking
about for files.  It seems that _parameters also needs the ability to
fake values as my copy does.  There probably are other places where fake
could be used.

It does seem that if the format is different, the style name should be
different.  Though I do like the idea of the "fake-" prefix, being used
with the styles names that provide additional values to the values found
via the normal mechanism.  So maybe a "fake-parameters" style to allow
for parameters that haven't been set.

It seems whatever format is used for "fake-parameters", it should allow
the user to specify descriptions.  Also type information would be nice.


One thing I really like about the fake style used for files is that
it provides a mechanism for context based on the directory of the
completion.  I've wondered if there is a way to generalize this so that
other styles could be based on the directory of completion (or other
information).

The completion system has so many styles that allow the user to tweak
completion.  All these different styles provide hooks to the various
tools of the completion.  Different situations require different tools.

For example, in my source code tree I might want to look at ".[ch]"
files first, but in logs directory I want to look ".{log,out}" files
first.  I can use tags, but I still have to list tags for ".[ch]" and
for the ".{logs,out}" files. And if both types of directories contain
files that match both tags, there will be at least one directory where I
always get the incorrect completion the first time.

It seems that the ability to configure styles based on additional
information not found in the context requires the ability to treat a
group of styles as a single whole, and quickly set/unset a group of
styles.  I vaguely remember something like this was talked about, but
don't remember what was decided.

This sort of seems similar to the keymaps. We want to quickly set a
group of keymaps at once. The ability to place a bunch of key mappings
in the name space of a keymap, seems like what we want to do with
styles.  Place a bunch of them in a name space, and then provide a list
of name spaces to search like a path.

-FR.


__________________________________________________
Do You Yahoo!?
Yahoo! Mail – Free email you can access from anywhere!
http://mail.yahoo.com/

