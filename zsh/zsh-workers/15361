From zsh-workers-return-15361-mason-zsh=primenet.com.au@sunsite.dk Tue Jul 10 11:40:44 2001
Return-Path: <zsh-workers-return-15361-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20348 invoked from network); 10 Jul 2001 11:40:42 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 10 Jul 2001 11:40:42 -0000
Received: (qmail 10814 invoked by alias); 10 Jul 2001 11:40:36 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 15361
Received: (qmail 10803 invoked from network); 10 Jul 2001 11:40:35 -0000
X-VirusChecked: Checked
Sender: kiddleo@cav.logica.co.uk
Message-ID: <3B4AE994.14216030@u.genie.co.uk>
Date: Tue, 10 Jul 2001 12:40:04 +0100
From: Oliver Kiddle <opk@u.genie.co.uk>
X-Mailer: Mozilla 4.77 [en] (X11; U; Linux 2.2.15 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: David Korn <dgk@research.att.com>
CC: Zsh hackers list <zsh-workers@sunsite.dk>
Subject: Re: Proposal to standardize the shell
References: <20010709223550.73E8514283@pwstephenson.fsnet.co.uk>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

David Korn wrote:

> I would like to see if it is possible to come up with an enhanced
> shell standard that could be met by at least ksh, bash, and zsh.
> 
> If the zsh workers are also interested in this effort let me know.

The effort does sound interesting to me. Your suggested starting points
seem sensible and I'd be keen for there to be input from us so that
current zsh features and incompatibilities can be accounted for in the
process.

> Also, if you know who else should be included, please let me know.

Maybe the pdksh developers but I'm not sure how alive that project is.

Peter Stephenson wrote:

> Quite what degree of compatibility is possible between the more advanced
> features I really don't know, but it's worth thinking about.  We've been
> treating ksh93 as a sort of de facto standard for some of the advanced
> features, though there's still quite a lot of that missing and (according
> to my reading of Oliver Kiddle's post to zsh-workers just now) some of it
> appears to be incompatible.

Certainly, there may be problems with some of the more advanced
features but I think there is a fair amount of scope for extensions to
POSIX which wouldn't cause many problems. If I'm not mistaken, there
were quite a few extensions to POSIX that were in ksh88 and these are
fairly well followed by bash and zsh. I think there are also a number of
newer features where we don't have incompatibilities. Process
substitution would be one example.

Can anyone please point me in the direction of the canonical web
location for the POSIX shell definition because my search wasn't very
successful?

> In interactive features, there might be something we do with simple things
> like key binding syntax, for example.  I doubt if it'll go much deeper than

I didn't mention ksh93 key binding in my recent post but it is very
different. In short, there is a KEYBD trap which you override to change
keypresses. I expect the zsh/bash bindkey builtin was inspired by tcsh.

There might be other areas of interactive features which can be
standardised on though. Parts of the history mechanism, fc options
maybe.

Oliver

_____________________________________________________________________
This message has been checked for all known viruses by the 
MessageLabs Virus Scanning Service. For further information visit
http://www.messagelabs.com/stats.asp

