From zsh-users-return-13646-mason-zsh=primenet.com.au@sunsite.dk Mon Jan 05 18:18:24 2009
Return-Path: <zsh-users-return-13646-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 21647 invoked from network); 5 Jan 2009 18:18:20 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 5 Jan 2009 18:18:20 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 79681 invoked from network); 5 Jan 2009 18:18:09 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 5 Jan 2009 18:18:09 -0000
Received: (qmail 16215 invoked by alias); 5 Jan 2009 18:17:52 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13646
Received: (qmail 16200 invoked from network); 5 Jan 2009 18:17:52 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 5 Jan 2009 18:17:52 -0000
Received: from mail.o2.co.uk (vader.london.02.net [82.132.130.150])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 98C98802720C
	for <zsh-users@sunsite.dk>; Mon,  5 Jan 2009 19:17:48 +0100 (CET)
Received: from sc.homeunix.net (78.105.235.196) by mail.o2.co.uk (8.0.013.3) (authenticated as stephane.chazelas)
        id 494B97CF0428D2E3; Mon, 5 Jan 2009 18:17:33 +0000
Received: from chazelas by sc.homeunix.net with local (Exim 4.69)
	(envelope-from <stephane_chazelas@yahoo.fr>)
	id 1LJu16-0002Cg-40; Mon, 05 Jan 2009 18:17:32 +0000
Date: Mon, 5 Jan 2009 18:17:32 +0000
From: Stephane Chazelas <Stephane_Chazelas@yahoo.fr>
To: Webb Sprague <webb.sprague@gmail.com>
Cc: gak@klanderman.net, zsh-users@sunsite.dk
Subject: Re: Problem with arrays -- "unknown file attribute"
Message-ID: <20090105181731.GA4857@sc.homeunix.net>
Mail-Followup-To: Webb Sprague <webb.sprague@gmail.com>, gak@klanderman.net,
	zsh-users@sunsite.dk
References: <b11ea23c0901050004h4f1825egc01d39c1f74c0ef0@mail.gmail.com> <alpine.LNX.2.00.0901050308270.17470@acer.home.local> <20090105092403.GA7733@sc.homeunix.net> <alpine.LNX.2.00.0901050426390.17470@acer.home.local> <m3fxjxenta.fsf@klanderman.net> <b11ea23c0901050931q790f8804tdbc8807c0c51a086@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-15
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <b11ea23c0901050931q790f8804tdbc8807c0c51a086@mail.gmail.com>
User-Agent: Mutt/1.5.16 (2007-09-19)
X-Virus-Scanned: ClamAV 0.92.1/8837/Mon Jan  5 17:08:06 2009 on bifrost
X-Virus-Status: Clean

On Mon, Jan 05, 2009 at 09:31:31AM -0800, Webb Sprague wrote:
[...]
> > I think you should also be able to use:
> >
> >    TABS=(${(ps:\n: :)"$(sqlite3 $DB .tables)"})
> 
> Hehe... I can't say that really appeals to me in terms of grace and
> simplicity....

I don't think it works, at least not with any version of zsh I
know.

> > Either way, you'll have a problem if table names contain spaces.
> 
> I would have a bigger problem if I wrote databases with tables that
> contain spaces...  Not that it doesn't happen...
> 
> Here is the (so far) working function:
> 
> pop-colnames () {
>     local IFS=$' \t\n'    # both spaces

Or you could keep the default value of IFS which in zsh is
$' \t\n\0' (in other shells it's $' \t\n' as they don't support
the NUL character anyway).

>     setopt errreturn

You may prefer

setopt localoptions errreturn

so that the options are set locally in the variable only.


>     TABS=($(sqlite3 $DB .tables))

Note that in other shells, you would need to disable globbing as
well to avoid problems with characters like *, ? or [. You don't
need that with zsh as zsh doesn't perform filename generation
upon command substitution.

>     for TAB in $TABS; do
>         echo \"$TAB\"

Note that the echo command expands the \n, \a... sequences. You
may prefer the print -r --  or printf commands instead (or echo
-E - which is zsh specific).

>         for COL in $COLS; do
>             echo $COL
>             #sqlite3 $DB "insert into row_meta (tname, colname) values
> ($TAB, ${COL//\"/});"
>         done
>     done
> }
[...]

-- 
Stéphane

