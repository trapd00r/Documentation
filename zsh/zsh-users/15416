From zsh-users-return-15416-mason-zsh=primenet.com.au@zsh.org Mon Sep 20 16:50:24 2010
Return-Path: <zsh-users-return-15416-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 17980 invoked by alias); 20 Sep 2010 16:50:24 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15416
Received: (qmail 23614 invoked from network); 20 Sep 2010 16:50:21 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at irregularexpressions.net does not designate permitted sender hosts)
MIME-Version: 1.0
In-Reply-To: <100920075521.ZM30584@torch.brasslantern.com>
References: <AANLkTinyDC-OoGBzuisMKUg+OqeeqG=HKZrNDuJZL+sD@mail.gmail.com>
	<100916072654.ZM29712@torch.brasslantern.com>
	<4C950347.9060109@gmail.com>
	<100918124147.ZM31152@torch.brasslantern.com>
	<AANLkTimY1T1n9Nq7ePkNdSbJ9zhPobwzwM5SfNYb8qfB@mail.gmail.com>
	<100920075521.ZM30584@torch.brasslantern.com>
Date: Mon, 20 Sep 2010 09:50:13 -0700
Message-ID: <AANLkTikpY9u90sfKn4Ew0jc4CTq=PQB3=VdJoGs2Bccf@mail.gmail.com>
Subject: Re: Waiting for a process without using pid
From: PJ Weisberg <pj@irregularexpressions.net>
To: Bart Schaefer <schaefer@brasslantern.com>
Cc: zsh-users@zsh.org
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

On Mon, Sep 20, 2010 at 7:55 AM, Bart Schaefer
<schaefer@brasslantern.com> wrote:

> Perhaps I was trying to make my solution too general; i.e., I didn't
> want to care how many children were started or whether their PIDs had
> been remembered. =A0But if you always have exactly two children, why not
> this?
>
> =A0 =A0coproc read -E
> =A0 =A0trap "print -p" CHLD
>
> =A0 =A0./child.sh &
> =A0 =A0pid1=3D$!
> =A0 =A0./child.sh &
> =A0 =A0pid2=3D$!
>
> =A0 =A0read -p
> =A0 =A0kill $pid1 >&/dev/null
> =A0 =A0kill $pid2 >&/dev/null

You *can* rewrite that to not care how many children there are.

for thing in $stuff; do
    ./child.sh $thing
    set -A pids $pids $!
done

for child in $pids; do
    kill $child >&/dev/null
done

