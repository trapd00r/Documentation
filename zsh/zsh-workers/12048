From zsh-workers-return-12048-mason-zsh=primenet.com.au@sunsite.auc.dk Fri Jun 23 10:42:08 2000
Return-Path: <zsh-workers-return-12048-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4107 invoked from network); 23 Jun 2000 10:42:07 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 23 Jun 2000 10:42:07 -0000
Received: (qmail 7865 invoked by alias); 23 Jun 2000 10:41:49 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 12048
Received: (qmail 7858 invoked from network); 23 Jun 2000 10:41:49 -0000
Date: Fri, 23 Jun 2000 12:41:38 +0200 (MET DST)
Message-Id: <200006231041.MAA07978@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: "Andrej Borsenkow"'s message of Fri, 23 Jun 2000 14:37:27 +0400
Subject: RE: About word splitting in read


Andrej Borsenkow wrote:

> >
> > Errr... in what way does `read -r foo' not do what you want?
> >
> 
> Sorry, I was (completely) wrong. The actual problem is not field
> splitting, but rather backslash elimination.
> 
> About 'read -r' - manual states, it just does not treat final backslash
> as line continuation. Look:
> 
> bor@itsrm2% read -r foo
> a   b   \
> bor@itsrm2% print $foo
> a   b   \
> 
> but
> 
> bor@itsrm2% read -r foo
> q\ g\ b
> bor@itsrm2% print $foo
> q g b
> bor@itsrm2% read -r foo
> q\ g\ b \
> bor@itsrm2% print $foo
> q g b \
> 
> Hmm ... is it a bug?

Try `print -r $foo'.

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

