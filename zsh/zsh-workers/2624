From zsh-workers-request@euclid.skiles.gatech.edu Tue Dec 24 03:34:57 1996
Return-Path: <zsh-workers-request@euclid.skiles.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 4462 invoked from network); 24 Dec 1996 03:34:56 -0000
Received: from unknown (HELO euclid.skiles.gatech.edu) (list@130.207.146.50)
  by coral.primenet.com.au with SMTP; 24 Dec 1996 03:34:56 -0000
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id WAA28938; Mon, 23 Dec 1996 22:36:06 -0500 (EST)
Resent-Date: Mon, 23 Dec 1996 22:36:06 -0500 (EST)
From: Zoltan Hidvegi <hzoli@cs.elte.hu>
Message-Id: <199612240250.DAA02636@hzoli.ppp.cs.elte.hu>
Subject: Re: new module
To: zefram@dcs.warwick.ac.uk (Zefram)
Date: Tue, 24 Dec 1996 03:50:57 +0100 (MET)
Cc: zsh-workers@math.gatech.edu
In-Reply-To: <4232.199612232001@stone.dcs.warwick.ac.uk> from Zefram at "Dec 23, 96 08:01:15 pm"
X-Mailer: ELM [version 2.4ME+ PL17 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"2UU4R.0.147.b-qlo"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/2624
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

> Here's a useful module.  It implements the most basic file-manipulation
> commands.  (I could have used this last week, when I filled up the
> process table and needed to remove a file in order to unfill it.)

It's really nice, the patch below fixes a little bug in it.

> Zoltan, why does addbuiltin() not allow the funcid and defopts members of
> the builtin structure to be set?  They would be helpful in implementing
> mv in this module.

Only because I did not see its usefullness here and I wanted a slimple
interface.  It may be added of course.

Zoltan


*** Src/Modules/files.c~	Tue Dec 24 02:33:06 1996
--- Src/Modules/files.c	Tue Dec 24 03:45:10 1996
***************
*** 453,459 ****
  int
  cleanup_files(Module m)
  {
!     int fail;
      struct bin *bin;
  
      for(bin = bins; bin->name; bin++)
--- 453,459 ----
  int
  cleanup_files(Module m)
  {
!     int fail = 0;
      struct bin *bin;
  
      for(bin = bins; bin->name; bin++)

