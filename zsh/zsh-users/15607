From zsh-users-return-15607-mason-zsh=primenet.com.au@zsh.org Sun Dec 05 13:59:33 2010
Return-Path: <zsh-users-return-15607-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4241 invoked by alias); 5 Dec 2010 13:59:33 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15607
Received: (qmail 3227 invoked from network); 5 Dec 2010 13:59:29 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <101205055913.ZM32440@torch.brasslantern.com>
Date: Sun, 05 Dec 2010 05:59:11 -0800
In-reply-to: <86tyisv48o.fsf@gmail.com>
Comments: In reply to Anonymous <swell.k@gmail.com>
 "Re: time builtin vs. time(1): difference in memory numbers" (Dec  5,  2:38pm)
References: <868w06l3cq.fsf@gmail.com>
	<101204102844.ZM5983@torch.brasslantern.com>	<86tyisv48o.fsf@gmail.com>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-users@zsh.org
Subject: Re: time builtin vs. time(1): difference in memory numbers
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

[Further discussion on this thread probably should go to zsh-workers.]

On Dec 5,  2:38pm, Anonymous wrote:
} Subject: Re: time builtin vs. time(1): difference in memory numbers
}
} According to getrusage(2) on BSDs ixrss/idrss/isrss are "expressed in
} units of kilobytes * ticks-of-execution". So, I've made a quick hack
} 
}   http://www.freebsd.org/cgi/query-pr.cgi?pr=ports/152820

Looks like it'd be appropriate to wrap that first hunk in
#ifdef _SC_CLK_TCK
??

I'm curious if FreeBSD has anything like this (from <asm/param.h>
on RHEL4):

#define HZ sysconf(_SC_CLK_TCK)

} Bart Schaefer <schaefer@brasslantern.com> writes:
} > } - zsh manual page claims that %M stands for memory in Kbytes while it
} > }   displays them in Mbytes
} >
} > Hm.  %M stands for ru_maxrss / 1024.  Zsh would only be displaying
} > that in Mbytes if ru_maxrss is expressed in Gbytes internally.  Has
} > FreeBSD changed the base units of maxrss in rusage?
} 
} maxrss like ixrss/idrss/isrss is expressed "in kilobytes"

D'oh, I'm backwards on the multiplication there, so that makes sense.

Some quick searching indicates that ru_maxrss is in fact commonly
returned in KB, but linux kernels prior to Dec 2008 may have used
different units (and even earlier, didn't have this at all).

The code in jobs.c dates from 2004 and the ChangeLog says it's restoring
even older code that was removed at some point, so it is probably based
on neither linux nor FreeBSD.  Unless someone can figure out what that
may have been, it's probably safe to remove the "/ 1024".

-- 

