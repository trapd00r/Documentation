From zsh-workers-return-22097-mason-zsh=primenet.com.au@sunsite.dk Mon Dec 19 09:08:35 2005
Return-Path: <zsh-workers-return-22097-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4382 invoked from network); 19 Dec 2005 09:08:31 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.0 (2005-09-13) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=BAYES_00,FORGED_RCVD_HELO,
	UNPARSEABLE_RELAY autolearn=ham version=3.1.0
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 19 Dec 2005 09:08:31 -0000
Received: (qmail 55496 invoked from network); 19 Dec 2005 09:08:25 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 19 Dec 2005 09:08:25 -0000
Received: (qmail 24097 invoked by alias); 19 Dec 2005 09:08:22 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 22097
Received: (qmail 24087 invoked from network); 19 Dec 2005 09:08:21 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 19 Dec 2005 09:08:21 -0000
Received: (qmail 55218 invoked from network); 19 Dec 2005 09:08:21 -0000
Received: from rcpt-expgw.biglobe.ne.jp (202.225.89.166)
  by a.mx.sunsite.dk with SMTP; 19 Dec 2005 09:08:19 -0000
Received: from smtp-gw.biglobe.ne.jp
	by rcpt-expgw.biglobe.ne.jp (mssh/3613031104) with ESMTP id jBJ98GAp005574
	for <zsh-workers@sunsite.dk>; Mon, 19 Dec 2005 18:08:16 +0900 (JST)
X-Biglobe-Sender: <takimoto-j@kba.biglobe.ne.jp>
Received: from [133.24.86.96] (133.24.86.96 [133.24.86.96]) by smtp-gw.biglobe.ne.jp
	id SBDNC0A82750; Mon, 19 Dec 2005 18:08:15 +0900 (JST)
Mime-Version: 1.0
X-Mailer: QUALCOMM MacOS X Eudora Version 6.2J rev3.1
Message-Id: <a06001001bfcc00a7dc70@kba.biglobe.ne.jp>
In-Reply-To: <200512181826.21268.arvidjaar@newmail.ru>
References: <200512141831.jBEIV3qQ028002@news01.csr.com>
 <a06001000bfcb1deaed2f@kba.biglobe.ne.jp>
 <200512181826.21268.arvidjaar@newmail.ru>
Date: Mon, 19 Dec 2005 18:08:12 +0900
To: zsh-workers@sunsite.dk
From: "Jun T." <takimoto-j@kba.biglobe.ne.jp>
Subject: Re: PATCH: multibyte FAQ (MacOS X)
Content-Type: text/plain; charset="us-ascii"

(I have subscribed to zsh-workers so no need to reply to me)

At 6:26 PM +0300 05.12.18, Andrey Borzenkov wrote:
>I wonder, when decomposition happens?

It seems that open(2) and opendir(2) accept both precomposed and decomposed form, but they internally convert the filename/dirname into decomposed form. For example

/* a-umlaut: precomposed */
name[0] = 0xc3; name[1] = 0xa4;
name[2] = 0x00;
fd = open(name,O_CREAT,mode);

has the same effect as

/* a + umlaut: decomposed */
name[0] = 0x61;			/* 'a' */
name[1] = 0xcc; name[2] = 0x88;	/* umlaut */
name[3] = 0x00;
fd = open(name,O_CREAT,mode);

and the created file has a filename in decomposed form.
readdir(2) always returns filenames in decomposed form (and UTF-8 encoding).

If a user input a-umlaut from his keyboard, then it is in precomposed form (at least for US and Japanese keyboards). But I think zsh need not to convert it into decomposed form. For example,

zsh% echo hello > Xa-umlaut    (two characters, 'X' and 'a-umlaut')

this works fine even if the 'a-umlaut' is in precomposed form. The created file has filename in decomposed form, and if I use filename completion

zsh% cat X<TAB>

then I get

zsh% cat Xa+umlaut

and the a+umlaut is in decomposed form. The decomposed char is displayed correctly both in Apple's Terminal (which runs in Apple's Aqua window system) and in xterm (with Unicode font, of course), but I can't edit the command line correctly.

You can test decomposed char as follows
(I assume insert-unicode-cahr is bound to ^XU)

zsh% echo ^XU61^XU^XU308^XU
a+umlaut
zsh% (go up in the history stack and try to edit it)


>To be sure - do you mean that e.g. accented characters are internally kept as 
>two characters? Does it agree with <http://www.unicode.org/reports/tr15/>?

How Apple decomposes characters can be found in
http://developer.apple.com/technotes/tn/tn1150table.html

I don't know whether this exactly follows the "Canonical Decomposition (Normalization Form D)" in the Unicode Standard; probably not. 

