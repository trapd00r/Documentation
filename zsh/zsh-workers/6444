From zsh-workers-return-6444-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Jun 03 04:13:35 1999
Return-Path: <zsh-workers-return-6444-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20787 invoked from network); 3 Jun 1999 04:13:34 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 3 Jun 1999 04:13:34 -0000
Received: (qmail 4676 invoked by alias); 3 Jun 1999 04:13:30 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 6444
Received: (qmail 4669 invoked from network); 3 Jun 1999 04:13:28 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <990603041318.ZM2604@candle.brasslantern.com>
Date: Thu, 3 Jun 1999 04:13:18 +0000
In-Reply-To: <199906030250.TAA19950@news.idiom.com>
Comments: In reply to Nik Gervae <nik@linna.com>
        "export limit in zsh and other shells?" (Jun  2,  7:49pm)
References: <199906030250.TAA19950@news.idiom.com> 
	<slrn7lbuel.jpd.mason@coral.primenet.com.au>
In-Reply-To: <slrn7lbuel.jpd.mason@coral.primenet.com.au>
Comments: In reply to mason@primenet.com.au (Geoff Wing)
        "Re: export limit in zsh and other shells?" (Jun  3,  3:43am)
X-Mailer: Z-Mail (5.0.0 30July97)
To: Nik Gervae <nik@linna.com>, zsh-workers@sunsite.auc.dk
Subject: Re: export limit in zsh and other shells?
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Jun 2,  7:49pm, Nik Gervae wrote:
} Subject: export limit in zsh and other shells?
}
} Here at PDI we use a TON of environment variables to control many aspects of
} our animation jobs. Just today a user came to me complaining that when he
} loaded *all* of these variables into his zsh session he got output like
} this:
} 
}   % ls
}   zsh: arg list too long: ls

On Jun 3,  3:43am, Geoff Wing wrote:
} Subject: Re: export limit in zsh and other shells?
}
} And all the shells spew out the same message.  It's an operating system
} limit on argument lists.
} 
} 	% sysctl kern.argmax
} 	kern.argmax = 262144
} which is described as "The maximum bytes of argument to execve(2)."

The important point to note here is that "argument to execve(2)" includes
both the `argv' and `envp' arrays.  Although passed to execve() as two
pointers (char*[]), when the kernel prepares a new process image for
execution it copies the entirety of both arrays into a contiguous chunk
of memory.  The `argmax' kernel parameter in Geoff's example sets the
size of that chunk.

In short, you may have to find a different way to control your animations.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

