From zsh-workers-return-28987-mason-zsh=primenet.com.au@zsh.org Sun Apr 10 18:50:46 2011
Return-Path: <zsh-workers-return-28987-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 9926 invoked by alias); 10 Apr 2011 18:50:46 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28987
Received: (qmail 9894 invoked from network); 10 Apr 2011 18:50:44 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <110410115034.ZM9746@torch.brasslantern.com>
Date: Sun, 10 Apr 2011 11:50:33 -0700
In-reply-to: <BANLkTim6qkDneK7fhVJOoBXyQ2T1U=ttXg@mail.gmail.com>
Comments: In reply to Mikael Magnusson <mikachu@gmail.com>
 "Re: menu-select interactive mode" (Apr 10,  5:37pm)
References: <BANLkTik_Ugey6bgCRXBz-fzgheod8htJYA@mail.gmail.com>
	<BANLkTinRkfcNJWnYnooqSDWTYG2q1VrcZQ@mail.gmail.com>
	<110409131236.ZM16037@torch.brasslantern.com>
	<BANLkTinLajYcSEmfBXsbNYf+QAR126_6EQ@mail.gmail.com>
	<110410074855.ZM9428@torch.brasslantern.com>
	<BANLkTim6qkDneK7fhVJOoBXyQ2T1U=ttXg@mail.gmail.com>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh workers <zsh-workers@zsh.org>
Subject: Re: menu-select interactive mode
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Apr 10,  5:37pm, Mikael Magnusson wrote:
}
} Intuitively I feel like the very place that checks if the 'menu' style
} contains 'select' should also check if the widget is called
} 'menu-select'.

The only other possibility is a few lines farther up, like so:

Index: Completion/Base/Core/_main_complete
===================================================================
RCS file: /extra/cvsroot/zsh/zsh-4.0/Completion/Base/Core/_main_complete,v
retrieving revision 1.12
diff -c -r1.12 _main_complete
--- _main_complete	21 Dec 2010 16:41:14 -0000	1.12
+++ _main_complete	10 Apr 2011 18:22:22 -0000
@@ -260,7 +260,7 @@
       fi
     fi
     if [[ "$MENUSELECT" != 00 ]]; then
-      sel=( "${(@M)_menu_style:#select*}" )
+      sel=( "${(@M)_menu_style:#select*}" ${(M)WIDGET#menu-select} )
 
       if (( $#sel )); then
 	min=9999999

That has the effect of setting MENUSELECT=0 as if the style had been
set, but the side-effect is that MENUSELECT *remains* set to 0 after
_main_complete finishes, which my other patch doesn't do (both leave
MENUMODE set).

} menu-complete doesn't imply selection, does it?

No, but you wrote "using menu-complete" so I wanted to be sure what
behavior you were expecting.

} > There are still some bugs in the interactive mode.

I just managed to hit a really alarming one.  Starting zsh -f with
the ESC-m binding we've been discussing:

torch% MENUSELECT=0 MENUMODE=interactive

Next hit TAB after ls:

torch% ls
BUILD              config.log         Etc/               Src/             
Completion/        config.modules     Functions/         stamp-h          
Config/            config.modules.sh  local              stamp-h.in       
config.h           config.status*     Makefile           Test/            
config.h-xx        Doc/               sleep              ul*              

Now hit TAB again to enter menu completion:

torch% ls BUILD
BUILD              config.log         Etc/               Src/             
Completion/        config.modules     Functions/         stamp-h          
Config/            config.modules.sh  local              stamp-h.in       
config.h           config.status*     Makefile           Test/            
config.h-xx        Doc/               sleep              ul*              

And TAB again:

torch% ls Completion/
BUILD              config.log         Etc/               Src/
Completion/        config.modules     Functions/         stamp-h
Config/            config.modules.sh  local              stamp-h.in
config.h           config.status*     Makefile           Test/
config.h-xx        Doc/               sleep              ul*

Now hit ESC-m to enter menu-selection.  I'm not even going to attempt
to copy-paste the result, it's a screenful of garbage memory contents.

} Yeah, I noticed a couple of things too, if you complete some levels of
} directories and accept, then undo it all, you're left with the bits
} you typed manually, only the completion-inserted parts are removed.

Hmm.  I don't know whether the right thing would be to add those to the
undo system or something else.  Internally menu-select is handling it's
own undos; I'm not familiar enough with how the undo entries are kept
to know if extraneous entries would confuse things.

} You can also not use more complex patterns than a simple * or ?, as
} soon as you type a non-matching glob it drops you back into the main
} shell.

Yes, menu-select exits any time the number of matching completions is
zero after any single key press, and an incomplete glob pattern is
one such circumstance.

} Even if you manage to type a ( or | it will just start
} completing commands or worse instead of files :).

Actually for me it starts completing glob qualifiers.

} I don't know if this is a bug or not, the documentation doesn't really
} say what you can type in it.

It's pretty much exactly as if every alternate keystroke was a TAB,
and as soon as one of those returns no matches it bails out.

