From zsh-workers-return-9801-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Feb 21 07:27:48 2000
Return-Path: <zsh-workers-return-9801-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 14628 invoked from network); 21 Feb 2000 07:27:47 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 21 Feb 2000 07:27:47 -0000
Received: (qmail 9645 invoked by alias); 21 Feb 2000 07:27:40 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 9801
Received: (qmail 9637 invoked from network); 21 Feb 2000 07:27:39 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer goliath.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: "Bart Schaefer" <schaefer@candle.brasslantern.com>,
        <zsh-workers@sunsite.auc.dk>
Subject: RE: Path completion causing ambiguous path tail to disappear
Date: Mon, 21 Feb 2000 10:26:50 +0300
Message-ID: <000201bf7c3d$05027680$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)
In-Reply-To: <1000221041119.ZM21973@candle.brasslantern.com>
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6700
Importance: Normal

 causing ambiguous path tail to disappear
>
>
> This is not exactly a complaint, because I can (almost) get the behavior I
> want by using a style ... rather it's a question of whether the default
> behavior should be different.
>
> I have my zsh sources under /usr/src/local/zsh/.  With dev-19:
>
> zagzig[36] cd /usr/s/l/<TAB>
>
> The valid completions at this point should be
>
> /usr/src/local	/usr/src/linux /usr/share/libtool /usr/share/locale
>
> However, what happens is that the word on the command line is *shortened*,
> leaving me with
>
> zagzig[36] cd /usr/s/
>

I noted this as well. It was introduced at some time fairly recently, I
believe.

But I think, it shortens path if some possibility is invalid. E.g. I have
/u1/lager directory; if I try

ls /u/l/l<TAB> I get

bor@itsrm2% l /u/l
u1@   usr/

because /u1/lager/l* do not exist (or so my explanation).

In your case ... do you have /usr/s<anyhing> that cause the above to fail
(just as me?) May it be, that trailing '/' makes zsh look, if subdirectorues
exist?

Yes, I believe, zsh is oversmart here. And it was different at some point.

/andrej

