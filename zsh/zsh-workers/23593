From zsh-workers-return-23593-mason-zsh=primenet.com.au@sunsite.dk Sun Jun 24 14:56:35 2007
Return-Path: <zsh-workers-return-23593-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 25582 invoked from network); 24 Jun 2007 14:56:33 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.1 (2007-05-02) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.1
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 24 Jun 2007 14:56:33 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 38685 invoked from network); 24 Jun 2007 14:56:21 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 24 Jun 2007 14:56:21 -0000
Received: (qmail 1997 invoked by alias); 24 Jun 2007 14:56:19 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 23593
Received: (qmail 1988 invoked from network); 24 Jun 2007 14:56:18 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 24 Jun 2007 14:56:18 -0000
Received: (qmail 38450 invoked from network); 24 Jun 2007 14:56:18 -0000
Received: from acolyte.scowler.net (216.254.112.45)
  by a.mx.sunsite.dk with SMTP; 24 Jun 2007 14:56:15 -0000
Received: by acolyte.scowler.net (Postfix, from userid 1000)
	id D8E645C3C6; Sun, 24 Jun 2007 10:56:13 -0400 (EDT)
Date: Sun, 24 Jun 2007 10:56:13 -0400
From: Clint Adams <clint@zsh.org>
To: zsh-workers@sunsite.dk
Subject: PATCH: _git annotate
Message-ID: <20070624145613.GA1888@scowler.net>
Mail-Followup-To: zsh-workers@sunsite.dk
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable
User-Agent: Mutt/1.5.13 (2006-08-11)

git annotate from Nikolai Weibull's repo.

Index: Completion/Unix/Command/_git
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
RCS file: /cvsroot/zsh/zsh/Completion/Unix/Command/_git,v
retrieving revision 1.4
diff -u -r1.4 _git
--- Completion/Unix/Command/_git	14 Jun 2007 14:42:37 -0000	1.4
+++ Completion/Unix/Command/_git	24 Jun 2007 14:53:37 -0000
@@ -1,4 +1,4 @@
-#compdef git git-apply git-checkout-index git-commit-tree git-hash-object =
git-index-pack git-init-db git-merge-index git-mktag git-pack-objects git-p=
rune-packed git-read-tree git-unpack-objects git-update-index git-write-tre=
e git-cat-file git-diff-index git-diff-files git-diff-stages git-diff-tree =
git-fsck-objects git-ls-files git-ls-tree git-merge-base git-name-rev git-r=
ev-list git-show-index git-tar-tree git-unpack-file git-var git-verify-pack=
 git-clone-pack git-fetch-pack git-http-fetch git-local-fetch git-peek-remo=
te git-receive-pack git-send-pack git-ssh-fetch git-ssh-upload git-update-s=
erver-info git-upload-pack git-add git-am git-applymbox git-bisect git-bran=
ch git-checkout git-cherry-pick git-clone git-commit git-diff git-fetch git=
-format-patch git-grep git-log git-ls-remote git-merge git-mv git-octopus g=
it-pull git-push git-rebase git-repack git-reset git-resolve git-revert git=
-shortlog git-show-branch git-status git-verify-tag git-whatchanged git-app=
lypatch git-archimport git-convert-objects git-cvsimport git-lost-found git=
-merge-one-file git-prune git-relink git-svnimport git-symbolic-ref git-tag=
 git-update-ref git-check-ref-format git-cherry git-count-objects git-daemo=
n git-get-tar-commit-id git-mailinfo git-mailsplit git-patch-id git-request=
-pull git-send-email git-stripspace
+#compdef git git-annotate git-apply git-checkout-index git-commit-tree git=
-hash-object git-index-pack git-init-db git-merge-index git-mktag git-pack-=
objects git-prune-packed git-read-tree git-unpack-objects git-update-index =
git-write-tree git-cat-file git-diff-index git-diff-files git-diff-stages g=
it-diff-tree git-fsck-objects git-ls-files git-ls-tree git-merge-base git-n=
ame-rev git-rev-list git-show-index git-tar-tree git-unpack-file git-var gi=
t-verify-pack git-clone-pack git-fetch-pack git-http-fetch git-local-fetch =
git-peek-remote git-receive-pack git-send-pack git-ssh-fetch git-ssh-upload=
 git-update-server-info git-upload-pack git-add git-am git-applymbox git-bi=
sect git-branch git-checkout git-cherry-pick git-clone git-commit git-diff =
git-fetch git-format-patch git-grep git-log git-ls-remote git-merge git-mv =
git-octopus git-pull git-push git-rebase git-repack git-reset git-resolve g=
it-revert git-shortlog git-show-branch git-status git-verify-tag git-whatch=
anged git-applypatch git-archimport git-convert-objects git-cvsimport git-l=
ost-found git-merge-one-file git-prune git-relink git-svnimport git-symboli=
c-ref git-tag git-update-ref git-check-ref-format git-cherry git-count-obje=
cts git-daemon git-get-tar-commit-id git-mailinfo git-mailsplit git-patch-i=
d git-request-pull git-send-email git-stripspace
=20
 # Commands not completed:
 # git-sh-setup
@@ -82,6 +82,7 @@
   commands=3D(
     'add:add paths to the index'
     'am:apply patches from a mailbox (cooler than applymbox)'
+    'annotate:annotate file lines with commit info'
     'apply:apply patch on a git index file and a work tree'
     'applymbox:apply patches from a mailbox'
     'applypatch:apply one patch extracted from an e-mail'
@@ -196,6 +197,29 @@
   _call_function ret _$words[1]
 fi
=20
+_git-annotate () {
+  _arguments -S \
+    '-b[show blank SHA-1 for boundary commits]' \
+    '--root[do not treat root commits as boundaries]' \
+    '--show-stats[include additional statistics at the end of blame output=
]' \
+    '-c[undocumented]' \
+    '-l[show long rev]' \
+    '-t[show raw timestamp]' \
+    '-S[use revs from revs-file]:revs-file:_files' \
+    '-M-[detect moving lines in the file as well]:: :_guard "[[\:digit\:]]=
" "number of characters"' \
+    '*-C-[detect copied lines from other files from same commit as well]::=
 :_guard "[[\:digit\:]]" "number of characters"' \
+    '-L[annotate only the given line range]:line range' \
+    '--contents[annotate against the given file if no rev is specified]:fi=
le:_files' \
+    '--incremental[show results incrementally for machine processing]' \
+    '--score-debug[uncodumented]' \
+    '(-f --show-name)'{-f,--show-name}'[undocumented]' \
+    '(-n --show-number)'{-n,--show-number}'[undocumented]' \
+    '(-p --porcelain)'{-p,--porcelain}'[show results designed for machine =
processing]' \
+    '(-h --help)'{-h,--help}'[show help message]' \
+    ':file:__git_cached_files' \
+    '::revision:__git_revisions' && ret=3D0
+}
+
 _git-apply () {
   _arguments \
     $nul_arg \
@@ -1204,6 +1228,10 @@
   _wanted files expl 'index file' _multi_parts $@ - / files
 }
=20
+__git_cached_files () {
+  __git_files $* --cached
+}
+
 __git_modified_files () {
   __git_files $* --modified
 }

