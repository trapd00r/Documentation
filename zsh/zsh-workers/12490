From zsh-workers-return-12490-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Aug 02 15:02:23 2000
Return-Path: <zsh-workers-return-12490-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 23111 invoked from network); 2 Aug 2000 15:02:19 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 2 Aug 2000 15:02:19 -0000
Received: (qmail 5409 invoked by alias); 2 Aug 2000 15:01:52 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 12490
Received: (qmail 5401 invoked from network); 2 Aug 2000 15:01:39 -0000
Date: Wed, 2 Aug 2000 16:01:31 +0100
From: Adam Spiers <adam@spiers.net>
To: zsh-workers@sunsite.auc.dk
Subject: Re: PATCH: completion caching layer
Message-ID: <20000802160131.B19975@thelonious.new.ox.ac.uk>
Reply-To: Adam Spiers <adam@spiers.net>
Mail-Followup-To: zsh-workers@sunsite.auc.dk
References: <200008021413.QAA11687@beta.informatik.hu-berlin.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0.1i
In-Reply-To: <200008021413.QAA11687@beta.informatik.hu-berlin.de>; from wischnow@informatik.hu-berlin.de on Wed, Aug 02, 2000 at 04:13:29PM +0200
X-Home-Page: http://www.new.ox.ac.uk/~adam/
X-OS: RedHat Linux

Sven Wischnowsky (wischnow@informatik.hu-berlin.de) wrote:
> 
> Adam Spiers wrote:
> 
> > Sven Wischnowsky (wischnow@informatik.hu-berlin.de) wrote:
> > > It's a bit unfortunate that _cache_invalid can be called twice (in
> > > your examples), once directly and once from _retrieve_cache. I think.
> > 
> > Yes, I didn't like that either, but couldn't think of a better
> > design.  The problem is that there are actually two caching layers -
> > the parameters, and the cache files on disk, but the _cache_invalid
> > check needs to be invoked if either is about to be used.  Suggestions
> > for how to avoid this welcome.
> 
> Couldn't we stuff everything in _retrieve_cache? So that one only
> needs to call:
> 
>   if ! _retrieve_cache RPMs _rpms; then
>     _rpms=(...)
>     _store_cache RPMs _rpms
>   fi

I had thought of that, and then decided against it, probably for no
good reason whatsoever, as I was exhausted at the time :-) 

> > > About the lookup: I /think/ it would be more convenient if the type of 
> > > information cached would appear in the context, so that you could say
> > > `zstyle ":completion:*:rpms" cache-policy ...'. Haven't really played
> > > with it yet, though.
> > 
> > I agree entirely.  That way also I could make _perl_modules set a
> > default style (if one is not already set) when the function is loaded,
> > rather than each time it's invoked.  But where would it appear in the
> > context?  My knowledge of this stuff is slightly weak, I'm afraid.
> 
> After the last colon:
> 
>   zstyle -t ":completion:${curcontext}:" ...
>                                        ^here
> 
> I.e., instead of the tag (if you would use tags).

OK.  Although that doesn't solve the problem of having to set a
default for each of the commands _perl_modules completes.  Maybe

  zstyle ':completion:::::RPMs' cache-policy _rpms_caching_policy

would work?

Incidentally I couldn't find anything in the documentation to explain
the difference between e.g. ::: and :*:*: in contexts.  Did I miss it?

> One problem is your
> naming scheme (upper-case) which is different from what we've used so
> far.

That's easily fixed...

I just noticed I forgot hunks for cache-policy.  Coming up in the next
patch ...

