From zsh-users-return-13214-mason-zsh=primenet.com.au@sunsite.dk Wed Sep 10 18:52:08 2008
Return-Path: <zsh-users-return-13214-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 13883 invoked from network); 10 Sep 2008 18:52:05 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00,HTML_MESSAGE
	autolearn=ham version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 10 Sep 2008 18:52:05 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 92035 invoked from network); 10 Sep 2008 18:51:53 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 10 Sep 2008 18:51:53 -0000
Received: (qmail 2905 invoked by alias); 10 Sep 2008 18:51:23 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13214
Received: (qmail 2879 invoked from network); 10 Sep 2008 18:51:19 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 10 Sep 2008 18:51:19 -0000
Received: from mail-gx0-f19.google.com (mail-gx0-f19.google.com [209.85.217.19])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 29708802710A
	for <zsh-users@sunsite.dk>; Wed, 10 Sep 2008 20:51:10 +0200 (CEST)
Received: by gxk12 with SMTP id 12so14292226gxk.21
        for <zsh-users@sunsite.dk>; Wed, 10 Sep 2008 11:51:05 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:to
         :subject:cc:in-reply-to:mime-version:content-type:references;
        bh=vgNScxiQRluKfyxiE7NIvQ9bKmjzlDiL1o4l2RH0ZMA=;
        b=icmIEvUoxXCxXRIGgdD5LYkkIMINiaa6u/rPNT/SViwCcWG1Dc06xBXLwTTPsDERvt
         4DAb5Pf0hHxwGn9UTauxltR/QyJkdDnqYWnPt7ft9j84qKJ/bcb7IYDrwR0SBqS3+KDL
         +n8o1WfTS24lUeaSlg5Cs1knPfnYSpCiO9z9I=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:to:subject:cc:in-reply-to:mime-version
         :content-type:references;
        b=oYGmMeGXxKdafBXc1ph16OtAe6giQLw4T5p6qynLdsCfaKA27ArSo9HZzEYfq1nbgH
         lPDewb6yCrthWGhEzkEzPC4KIi+5d4HEYAbt60tGaTpLR9E28mJOQexnEpXO1rWoVw9N
         eBA+6Yqv2IDcNnFGbqHTA0UsLoWEbYRnhtDdE=
Received: by 10.115.16.1 with SMTP id t1mr1174693wai.19.1221072665024;
        Wed, 10 Sep 2008 11:51:05 -0700 (PDT)
Received: by 10.114.159.2 with HTTP; Wed, 10 Sep 2008 11:51:04 -0700 (PDT)
Message-ID: <6cd6de210809101151q4d0a2a35p452fe656e0ee7dd5@mail.gmail.com>
Date: Wed, 10 Sep 2008 14:51:04 -0400
From: "Rocky Bernstein" <rocky.bernstein@gmail.com>
To: "Bart Schaefer" <schaefer@brasslantern.com>
Subject: Re: preventing the leading space in process substitution
Cc: "zsh users mailing list" <zsh-users@sunsite.dk>
In-Reply-To: <080910090554.ZM19272@torch.brasslantern.com>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_6188_7970834.1221072664996"
References: <20080909144101.GA30693@lapse.rw.madduck.net>
	 <200809101124.m8ABOlKI005063@news01.csr.com>
	 <080910074842.ZM19151@torch.brasslantern.com>
	 <200809101510.m8AFAajX007203@news01.csr.com>
	 <080910090554.ZM19272@torch.brasslantern.com>
X-Virus-Scanned: ClamAV 0.92.1/8210/Wed Sep 10 18:26:19 2008 on bifrost
X-Virus-Status: Clean

------=_Part_6188_7970834.1221072664996
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

On Wed, Sep 10, 2008 at 12:05 PM, Bart Schaefer
<schaefer@brasslantern.com>wrote:

> On Sep 10,  4:10pm, Peter Stephenson wrote:
> } Subject: Re: preventing the leading space in process substitution
> }
> } Bart Schaefer wrote:
> } > On Sep 10, 12:24pm, Peter Stephenson wrote:
> } > } For reasons buried in history that I don't understand, the <(...) is
> } > } parsed as a single complete argument.
> } >
> } > I think that's because the "<" is treated like a redirection operator.
> }
> } You mean we initially parse it the same way whether or not there's a "("
> } coming up next or not, and later, when we've already finished the
> } previous argument at that point, decide it's not a redirection after all?
>
> Something like that, yes.
>
> Returning briefly to the =(...) analogy:  Note =(...) actually has to be
> *written* as a separate word, except in an assignment, because otherwise
> the parens are parsed as part of filename generation.  So it's not as
> badly inconsistent as I first thought to treat <(...) as a word also.
>
> } But both ">file" and "> file" work, too, so presumably if we were able
> } to change it so that "<(...)" and ">(...)" also worked in the middle of
> } an argument it wouldn't create any new problems.
>
> Well ... it would if anyone has previously written scripts etc. that
> rely on the implicit splitting.
>
> } We already need to look ahead for the "(" ... but probably not at
> } the point where we first read the "<" and decide it's time to stop
> } the current argument. At that point we'd have to look ahead two
> } characters. That might be the real fly in the ointment.
>
> Yes.
>
> As an aside, this is also one reason that it's hard to make zsh handle
>
>    typeset -a foo=(list)
>
> the way that bash does.


the way bash and ksh do.

Also (mentioned previously), I think the multiple function definition with a
single body syntax should be removed when sh or bash emulation is in effect.
Those POSIX shell variants neither support this form and having it around
allows it to get confused causing a more obscure error message when one
writes "typeset -a foo=(list)" which is valid in those other POSIX shell
variants.

------=_Part_6188_7970834.1221072664996
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

<div dir="ltr"><br><br><div class="gmail_quote">On Wed, Sep 10, 2008 at 12:05 PM, Bart Schaefer <span dir="ltr">&lt;<a href="mailto:schaefer@brasslantern.com">schaefer@brasslantern.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
On Sep 10, &nbsp;4:10pm, Peter Stephenson wrote:<br>
} Subject: Re: preventing the leading space in process substitution<br>
}<br>
} Bart Schaefer wrote:<br>
} &gt; On Sep 10, 12:24pm, Peter Stephenson wrote:<br>
} &gt; } For reasons buried in history that I don&#39;t understand, the &lt;(...) is<br>
} &gt; } parsed as a single complete argument.<br>
} &gt;<br>
} &gt; I think that&#39;s because the &quot;&lt;&quot; is treated like a redirection operator.<br>
}<br>
} You mean we initially parse it the same way whether or not there&#39;s a &quot;(&quot;<br>
} coming up next or not, and later, when we&#39;ve already finished the<br>
} previous argument at that point, decide it&#39;s not a redirection after all?<br>
<br>
Something like that, yes.<br>
<br>
Returning briefly to the =(...) analogy: &nbsp;Note =(...) actually has to be<br>
*written* as a separate word, except in an assignment, because otherwise<br>
the parens are parsed as part of filename generation. &nbsp;So it&#39;s not as<br>
badly inconsistent as I first thought to treat &lt;(...) as a word also.<br>
<br>
} But both &quot;&gt;file&quot; and &quot;&gt; file&quot; work, too, so presumably if we were able<br>
} to change it so that &quot;&lt;(...)&quot; and &quot;&gt;(...)&quot; also worked in the middle of<br>
} an argument it wouldn&#39;t create any new problems.<br>
<br>
Well ... it would if anyone has previously written scripts etc. that<br>
rely on the implicit splitting.<br>
<br>
} We already need to look ahead for the &quot;(&quot; ... but probably not at<br>
} the point where we first read the &quot;&lt;&quot; and decide it&#39;s time to stop<br>
} the current argument. At that point we&#39;d have to look ahead two<br>
} characters. That might be the real fly in the ointment.<br>
<br>
Yes.<br>
<br>
As an aside, this is also one reason that it&#39;s hard to make zsh handle<br>
<br>
 &nbsp; &nbsp;typeset -a foo=(list)<br>
<br>
the way that bash does.</blockquote><div><br>the way bash and ksh do.<br><br>Also (mentioned previously), I think the multiple function definition with a single body syntax should be removed when sh or bash emulation is in effect. Those POSIX shell variants neither support this form and having it around allows it to get confused causing a more obscure error message when one writes &quot;typeset -a foo=(list)&quot; which is valid in those other POSIX shell variants.<br>
</div></div><br></div>

------=_Part_6188_7970834.1221072664996--

