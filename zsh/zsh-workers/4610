From zsh-workers-request@math.gatech.edu Thu Nov 12 09:26:06 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 23150 invoked from network); 12 Nov 1998 09:26:05 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 12 Nov 1998 09:26:05 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.9.1/8.9.1) id EAA23097;
	Thu, 12 Nov 1998 04:25:24 -0500 (EST)
Resent-Date: Thu, 12 Nov 1998 04:25:24 -0500 (EST)
From: "Bart Schaefer" <schaefer@brasslantern.com>
Message-Id: <981112012358.ZM9722@candle.brasslantern.com>
Date: Thu, 12 Nov 1998 01:23:58 -0800
In-Reply-To: <m3d86t7235.fsf@ganesh.ftlsol.com>
Comments: In reply to Timothy Writer <Tim.Writer@ftlsol.com>
        "Re: PATCH: 3.1.5 - sample associative array implementation" (Nov 12,  3:22am)
References: <9811111358.AA51361@ibmth.df.unipi.it> 
	<vb1znanvcm.fsf@snake.isode.com> 
	<m3iugmj8y8.fsf@ganesh.ftlsol.com> 
	<981111125236.ZM3587@candle.brasslantern.com> 
	<m3d86t7235.fsf@ganesh.ftlsol.com>
X-Mailer: Z-Mail (4.0b.820 20aug96)
To: zsh-workers@math.gatech.edu
Subject: Re: PATCH: 3.1.5 - sample associative array implementation
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-Message-ID: <"JOLkq1.0.qe5.4cgIs"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4610
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

On Nov 12,  3:22am, Timothy Writer wrote:
} Subject: Re: PATCH: 3.1.5 - sample associative array implementation
}
} > On Nov 11,  3:00pm, Timothy Writer wrote:
} > } The following special notation is used to get all keys:
} > } 
} > }     "${!arrayname[@]}"
} 
} As far as I can tell, only "!" and (of course) "#" are "special" in that
} position.  However, "${!variable}" is also special syntax for name reference
} variables [...]
} 
} Does zsh have namerefs?

No, zsh does not.  It wouldn't be hard to implement, though.  Can you tell
what ${!arrayname} would do?  (My recent patch simply ignores the `!' in
that event.)

} "Bart Schaefer" <schaefer@brasslantern.com> writes:
} > How can you (or can you not) assign to multiple elements simultaneously?
} 
} I don't know, I don't think you can.
[...]
} I don't think there's a way to get both keys and values in a single
} expression.

Thanks for the info.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

