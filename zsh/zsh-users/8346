From zsh-users-return-8346-mason-zsh=primenet.com.au@sunsite.dk Tue Jan 11 16:28:40 2005
Return-Path: <zsh-users-return-8346-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 53 invoked from network); 11 Jan 2005 16:28:40 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 11 Jan 2005 16:28:40 -0000
Received: (qmail 11710 invoked from network); 11 Jan 2005 16:28:34 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 11 Jan 2005 16:28:34 -0000
Received: (qmail 28122 invoked by alias); 11 Jan 2005 16:28:25 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 8346
Received: (qmail 28112 invoked from network); 11 Jan 2005 16:28:24 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 11 Jan 2005 16:28:24 -0000
Received: (qmail 10678 invoked from network); 11 Jan 2005 16:28:24 -0000
Received: from rproxy.gmail.com (64.233.170.194)
  by a.mx.sunsite.dk with SMTP; 11 Jan 2005 16:28:21 -0000
Received: by rproxy.gmail.com with SMTP id a41so1912rng
        for <zsh-users@sunsite.dk>; Tue, 11 Jan 2005 08:28:19 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:reply-to:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:references;
        b=iHSj2glZgmv/qUdBljalF8iFfmYvPAsx8KB5z5LFQ3/pXqWQh0Q9p4yykpr7rKZ1AKP/K5KGDXgAK4B2bdPv/SK/+rSUY7Ld0ne7lZZM6dOLcsJpK+hYq0+2earc/jPnbWM79kp/tsV8CcpRGjamIHg7smhkM4bTxVJjOiwVbKY=
Received: by 10.38.125.7 with SMTP id x7mr621620rnc;
        Tue, 11 Jan 2005 08:28:19 -0800 (PST)
Received: by 10.38.125.23 with HTTP; Tue, 11 Jan 2005 08:28:19 -0800 (PST)
Message-ID: <dc507f4a05011108283de6d89e@mail.gmail.com>
Date: Tue, 11 Jan 2005 08:28:19 -0800
From: Felix Rosencrantz <f.rosencrantz@gmail.com>
Reply-To: Felix Rosencrantz <f.rosencrantz@gmail.com>
To: Wayne Davison <wayned@users.sourceforge.net>, zsh-users@sunsite.dk
Subject: Re: how to clean a history entry?
In-Reply-To: <20050104210301.GA17730@blorf.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
References: <200501030017.37221.toshiro@internet.com.uy>
	 <20050104184011.E5D078636@pwstephenson.fsnet.co.uk>
	 <20050104210301.GA17730@blorf.net>
X-Spam-Checker-Version: SpamAssassin 2.63 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, hits=0.0 required=6.0 tests=none autolearn=no version=2.63
X-Spam-Hits: 0.0

I wouldn't mind hearing additional ideas on finding previous history
lines.  Some of the widgets  that exist now could be improved (like
incremental search, and "infer"ing, )
I've started a rough draft of some ideas I've had about improving
incremental search on the wiki:
http://zshwiki.org/ImprovedIncrementalSearch

The "infer" widgets seem ripe for improvement.  Currently those
widgets only use one simple strategy based on the previous history
line.   There are several other simple schemes that could be used for
inferring lines from the history (e.g. inferring based on a deeper
matching into history, or searching a previously primed area of
history or a file, looking further back for other matches.)  Also, the
infer widgets could build a list of possible choices that  be cycled
through.
 
Also maybe mechanisms to make automatic edits to previous command
lines to make new commands lines that are wanted.  With incremental
search and inferring you have two history lines, the one that is
found, and the one that is actually "accept"ed.  With two lines it is
possible to look at the difference and maybe infer a likely edit, or
at least where the user might want to edit.

-FR. 


On Tue, 4 Jan 2005 13:03:01 -0800, Wayne Davison
<wayned@users.sourceforge.net> wrote:
> On Tue, Jan 04, 2005 at 06:40:10PM +0000, Peter Stephenson wrote:
> > Might not be difficult to add as a feature, since internally history
> > is held as a linked list.  I can certainly see the use in it when
> > you're reexecuting chunks of the history.
> 
> The basic idea would be quite easy to implement, but it gets a little
> more complicated if the user is using an option such as SHARE_HISTORY
> since the history item might have already made its way into other shell
> instances through the shared history file.  I suppose just making the
> current shell dump the line and then re-writing the history file to
> remove the line would be a good enough first implementation, though (as
> the user could manually deal with any propagation of the command).
> 
> And, as long as I'm talking about history-related items, it would be
> nice to brain-storm some ideas on how to improve the recall of desirable
> prior commands.  I tend to use HIST_IGNORE_SPACE and an absurd amount of
> leading-space commands to keep my history list limited to mainly just
> the commands that I think I will need to re-run.  I also use the kill
> ring and Ctrl-Q to remember various commands that I need to re-run in
> the near term, but that I don't want to get in the way of my use of
> Ctrl-R to find prior well-used commands.  This means that I tend to
> inconvenience myself by needing to take extra steps to re-run less-used
> commands, and that I don't use word-delete much at all.
> 
> It would be nice to improve on this somehow (perhaps via options that
> I'm not aware of) so that the history could go back to being a list of
> all the (non-sensitive) commands I typed and still allow me to find my
> favorite commands easily.  Perhaps some sort of a "bookmark" system that
> allows me to store off and recall my most favorite commands.  Or perhaps
> a way to search through the history in most-used order (in addition to
> most-recent order) so that a recently-run rsync command doesn't get in
> the way of my most-used rsync commands (unless I want it to).  It would
> be nice to have a way to specify user-selectable matching for commands
> that should not be stored.  Perhaps even a rewriting system that could
> let a command be stored, but with its sensitive info XXXed out (allowing
> the user to re-run it by just re-inserting the missing info).  And an
> option to expire the history list based on LRU order might be good too.
> 
> Does any of that sound good?  Am I missing some existing zsh features?
> Any other ideas for how to make command-reuse easier?
> 
> ..wayne..
>

