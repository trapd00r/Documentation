From zsh-workers-return-13389-mason-zsh=primenet.com.au@sunsite.dk Fri Jan 26 11:01:30 2001
Return-Path: <zsh-workers-return-13389-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2700 invoked from network); 26 Jan 2001 11:01:29 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 26 Jan 2001 11:01:29 -0000
Received: (qmail 12189 invoked by alias); 26 Jan 2001 11:01:21 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 13389
Received: (qmail 12178 invoked from network); 26 Jan 2001 11:01:20 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer goliath.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: "ZSH workers mailing list" <zsh-workers@sunsite.auc.dk>
Subject: PATCH: cd d:/foo under Cygwin
Date: Fri, 26 Jan 2001 14:01:13 +0300
Message-ID: <000101c08787$4c125b20$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="koi8-r"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400

Absolute path with drive name in it was treated as relative by zsh. I was
unsure how to handle it; finally I just added conversion to posix path (it was
less messy than adding check for initial driver letter).

It has interesting side effect. In default installation if you cd /bin it is
O.K. but if you cd c:/cygwin/bin (that should be the same directory) you end
up in /usr/bin. This is due to mount tables set up by Cygwin.

-andrej

Have a nice DOS!
B >>

Index: Src/builtin.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/builtin.c,v
retrieving revision 1.40
diff -u -r1.40 builtin.c
--- Src/builtin.c       2001/01/16 13:44:20     1.40
+++ Src/builtin.c       2001/01/26 10:15:16
@@ -836,14 +836,31 @@
 {
     char **pp, *ret;
     int hasdot = 0, eno = ENOENT;
-    /* nocdpath indicates that cdpath should not be used.  This is the case
iff
-    dest is a relative path whose first segment is . or .., but if the path
is
-    absolute then cdpath won't be used anyway. */
-    int nocdpath = dest[0] == '.' &&
-    (dest[1] == '/' || !dest[1] || (dest[1] == '.' &&
+    /*
+     * nocdpath indicates that cdpath should not be used.
+     * This is the case iff dest is a relative path
+     * whose first segment is . or .., but if the path is
+     * absolute then cdpath won't be used anyway.
+     */
+    int nocdpath;
+#ifdef __CYGWIN__
+    /*
+     * Normalize path under Cygwin to avoid messing with
+     * DOS style names with drives in them
+     */
+    static char buf[PATH_MAX];
+    void cygwin_conv_to_posix_path(const char *, char *);
+
+    cygwin_conv_to_posix_path(dest, buf);
+    dest = buf;
+#endif
+    nocdpath = dest[0] == '.' &&
+               (dest[1] == '/' || !dest[1] || (dest[1] == '.' &&
                                    (dest[2] == '/' || !dest[2])));

-    /* if we have an absolute path, use it as-is only */
+    /*
+     * If we have an absolute path, use it as-is only
+     */
     if (*dest == '/') {
        if ((ret = cd_try_chdir(NULL, dest, hard)))
            return ret;

