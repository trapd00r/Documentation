From zsh-workers-return-15132-mason-zsh=primenet.com.au@sunsite.dk Wed Jun 27 14:10:52 2001
Return-Path: <zsh-workers-return-15132-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2598 invoked from network); 27 Jun 2001 14:10:51 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 27 Jun 2001 14:10:51 -0000
Received: (qmail 10672 invoked by alias); 27 Jun 2001 14:10:01 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 15132
Received: (qmail 10649 invoked from network); 27 Jun 2001 14:10:00 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer goliath.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: "Zsh hackers list" <zsh-workers@sunsite.dk>
Subject: RE: Modules dependencies RE: PATCH: zftp/tcp abstraction 
Date: Wed, 27 Jun 2001 18:10:41 +0400
Message-ID: <004401c0ff12$f2d62ab0$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="koi8-r"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
In-Reply-To: <Tc0a88d015466d4d56c@mailsweeper01.cambridgesiliconradio.com>
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2479.0006
Importance: Normal

>
> Clint Adams wrote:
> > What about just embedding the module dependencies in the module itself?
> > If it could be scanned without loading the module, it would be less
> > messy than maintaining "helper files".
>
> The other advantage of this is that, as Sven has pointed out, we
> can handle
> systems with RTLD_LAZY by loading first and asking questions afterwards.
> The difference between these two methods is then transparent to the user
> --- we don't have extra files on some systems and not on others.
>

Zeram/14786

This was my original suggestion. Zefram had arguments against it.

> At least, I hope we can handle RTLD_LAZY like that... only
> function objects
> can be lazy, data objects can't be, at least under Solaris.  There may be
> cases where we have data dependencies and this won't work.
>

I never liked inter-module data references. Is there any chance we can get
rid of them and replace by wrappers/hooks/callbacks/what-ever? At least, as
long-term goal?

-andrej

