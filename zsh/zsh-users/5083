From zsh-users-return-5083-mason-zsh=primenet.com.au@sunsite.dk Fri Jun 21 23:45:16 2002
Return-Path: <zsh-users-return-5083-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 15746 invoked from network); 21 Jun 2002 23:45:15 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 21 Jun 2002 23:45:15 -0000
Received: (qmail 5172 invoked by alias); 21 Jun 2002 23:45:05 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 5083
Received: (qmail 5159 invoked from network); 21 Jun 2002 23:45:04 -0000
KRecCount: 1
X-Authentication-Warning: hamster.int.radiomaranon.org.pe: spiegl set sender to zsh.Andy@spiegl.de using -f
Date:	Fri, 21 Jun 2002 18:40:06 -0500
From:	Andy Spiegl <zsh.Andy@spiegl.de>
To:	zsh-users@sunsite.dk
Subject: Re: howto avoid ~irc in %~ ?
Message-ID: <20020621184005.A23074@radiomaranon.org.pe>
Mail-Followup-To: zsh-users@sunsite.dk
References: <1020615232225.ZM2169@candle.brasslantern.com> <Pine.LNX.4.44.0206170009100.18681-100000@miketv.blorf.net> <20020621175139.A16301@radiomaranon.org.pe> <20020621231150.GA59715@dan.emsphone.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-15
Content-Disposition: inline
Content-Transfer-Encoding: 8BIT
In-Reply-To: <20020621231150.GA59715@dan.emsphone.com>
User-Agent: Mutt/1.3.23i
X-PGP-GPG-Keys:	finger pgp.andy@spiegl.de  OR  mail -s "send pgp" auto@spiegl.de
Organization: Radio =?iso-8859-15?B?TWFyYfHzbiw=?= Peru

Oops, I reacted too fast :-)

> chpwd() { unhash -d irc }
This works great, if irc still is in the hash, but throws:
  unhash: no such hash table element: irc
after every directory change if it isn't.

Hm, how would I test if it is in the hash before removing it?
 Andy.

-- 
           http://peru.spiegl.de  Our project
      http://radiomaranon.org.pe  Radio Marañón, Jaén, Perú
                              o      _     _         _
  ------- __o       __o      /\_   _ \\o  (_)\__/o  (_)          -o)
  ----- _`\<,_    _`\<,_    _>(_) (_)/<_    \_| \   _|/' \/       /\\
  ---- (_)/ (_)  (_)/ (_)  (_)        (_)   (_)    (_)'  _\o_    _\_v
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 When I shop for hardware I always look for the "Designed for Windows"
 logo.  I really thank Microsoft(TM) for encouraging manufacturers to
 label their products this way, so I know what to AVOID.

