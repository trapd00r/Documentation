From zsh-workers-request@math.gatech.edu  Sat Nov  4 03:12:57 1995
Received: from math.gatech.edu (euclid.skiles.gatech.edu [130.207.146.50]) by werple.net.au (8.7/8.7.1) with SMTP id DAA05517 for <mason@werple.mira.net.au>; Sat, 4 Nov 1995 03:12:53 +1100 (EST)
Received: by math.gatech.edu (SMI-8.6/SMI-SVR4)
	id KAA03791; Fri, 3 Nov 1995 10:41:15 -0500
Resent-Date: Fri, 3 Nov 1995 10:41:15 -0500
Old-Return-Path: <zefram@dcs.warwick.ac.uk>
From: Zefram <A.Main@dcs.warwick.ac.uk>
Message-Id: <22061.199511031547@stone.dcs.warwick.ac.uk>
Subject: Re: Background jobs with no job control / disown bug?
To: zsh-workers@math.gatech.edu (Z Shell workers mailing list)
Date: Fri, 3 Nov 1995 15:47:22 +0000 (GMT)
In-Reply-To: <199511031506.QAA08638@bolyai.cs.elte.hu> from "Zoltan Hidvegi" at Nov 3, 95 04:05:45 pm
X-Loop: zefram@dcs.warwick.ac.uk
X-Stardate: [-31]6538.28
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"ZTqUE3.0.9x.QWZcm"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/525
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

>> I had thought that adding a new pre-command `nojob' would be
>> a good idea.  But to do this right would probably require some
>> work.
>
>Zefram posted a solution for that which I like quite much.  It is part of my
>releases sine it appeared.  I had to rewrite it for the latest test releases
>and now it is much simpler than the original.  The large patch to zsh.h only
>renumbers the symbols.

Indeed, that's a lot simpler than what I wrote.  Making the Z_* flags
ORable was a good move.

I think this functionality should get into zsh at some point, but I'm
not sure which syntax would be better.  I think nojob is a little
cleaner, but generally these prefixes indicate that the command will
actually be treated differently (cf. noglob, nocorrect).  &! is similar
in effect to &, so the similarity in form is appropriate.  But then
there's coproc...  On the whole I think I favour the &! syntax, partly
on the assumption that someone will implement an option to support the
ksh coprocess syntax (|&).  Then again, how will we do a disowned
coprocess?  (|&! is rather ugly.)

There's one more issue I'd like to resolve concerning this
functionality, which I didn't get working in my patch the way I wanted
it.  I think it actually adds the job to the job table and then deletes
it again, whereas it would be preferable to have the job never entered
into the table at all.  I think my patch is OK w.r.t. keeping %+ and %-
the same, though.

-zefram

