From zsh-users-return-15850-mason-zsh=primenet.com.au@zsh.org Wed Mar 09 14:18:02 2011
Return-Path: <zsh-users-return-15850-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 12946 invoked by alias); 9 Mar 2011 14:18:02 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15850
Received: (qmail 18215 invoked from network); 9 Mar 2011 14:17:51 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,SPF_HELO_PASS
	autolearn=ham version=3.3.1
Received-SPF: none (ns2.melb.primenet.com.au: domain at csr.com does not designate permitted sender hosts)
Date: Wed, 9 Mar 2011 14:11:39 +0000
From: Peter Stephenson <Peter.Stephenson@csr.com>
To: <zsh-users@zsh.org>
Subject: Re: ZSH's way to bind function to a key in a script?
Message-ID: <20110309141139.09b8f984@pwslap01u.europe.root.pri>
In-Reply-To: <dc64f3246d1cac04e3dfa582a9e1ad16.squirrel@gameframe.net>
References: <dc64f3246d1cac04e3dfa582a9e1ad16.squirrel@gameframe.net>
Organization: Cambridge Silicon Radio
X-Mailer: Claws Mail 3.7.8 (GTK+ 2.22.0; i386-redhat-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-Originating-IP: [10.103.11.49]
X-Scanned-By: MailControl A_10_80_00 (www.mailcontrol.com) on 10.71.0.132

On Wed, 9 Mar 2011 15:46:44 +0200
<nix@myproxylists.com> wrote:
> Hi everyone. I was reading last night about "bindkey" etc. , and i
> could not get it working.
> 
> #!/bin/zsh
> 
> function foo () {
> 
> echo "Foo ooo"
> }
> 
> In this script, how to bind function "foo" to a key. So lets say i
> press the Space button and it should trigger foo?

The standard examples of bindkey assume you're binding editor commands
rather than normal commands, i.e. something that helps you edit a
command line.

To bind a command to a keystroke, you need the "-s" option to bindkey.
However, note it's doing something rather different --- basically just
dumping the keys you type into the command line.  One idiom for running
"foo" this way is to use ^q to ensure there's nothing else in the buffer
(if there is, you don't lose it, you get it back after running foo), and
put a newline at the end.  Luckily you can use the same abbreviations
for keys as in the keystroke part of the command:

bindkey -s '<keystroke>' '^qfoo\n'

This assumes ^q is bound to the editor command push-line.  You can
remove the ^q if you only want to use this on an empty command line.

-- 
Peter Stephenson <pws@csr.com>            Software Engineer
Tel: +44 (0)1223 692070                   Cambridge Silicon Radio Limited
Churchill House, Cambridge Business Park, Cowley Road, Cambridge, CB4 0WZ, UK


Member of the CSR plc group of companies. CSR plc registered in England and Wales, registered number 4187346, registered office Churchill House, Cambridge Business Park, Cowley Road, Cambridge, CB4 0WZ, United Kingdom

