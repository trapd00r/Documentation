From zsh-users-return-2814-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Dec 27 13:54:31 1999
Return-Path: <zsh-users-return-2814-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 13734 invoked from network); 27 Dec 1999 13:09:18 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 27 Dec 1999 13:09:18 -0000
Received: (qmail 20231 invoked by alias); 27 Dec 1999 13:09:05 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 2814
Received: (qmail 20224 invoked from network); 27 Dec 1999 13:09:05 -0000
X-Authentication-Warning: venom.lysator.liu.se: davidk set sender to davidk@lysator.liu.se using -f
Sender: davidk@lysator.liu.se
To: zsh-users@sunsite.auc.dk
Subject: Re: is this a feature of zsh-3.1.6?
References: <slrn86e3od.9r2.mason@coral.primenet.com.au> <Pine.BSF.4.21.9912270108070.2876-100000@c74763-a.aurora1.co.home.com> <19991227230913.A12761@primenet.com.au>
From: davidk@lysator.liu.se (David=?iso-8859-1?q?_K=E5gedal?=)
Date: 27 Dec 1999 14:09:00 +0100
In-Reply-To: Geoff Wing's message of "Mon, 27 Dec 1999 23:09:13 +1100"
Message-ID: <jpn1qwcyz7.fsf@venom.lysator.liu.se>
Lines: 28
User-Agent: Gnus/5.0803 (Gnus v5.8.3) Emacs/20.4
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: quoted-printable

Geoff Wing <gcw@pobox.com> writes:

> User ALEX wrote about Re: is this a feature of zsh-3.1.6?:
> :On 27 Dec 1999, Geoff Wing wrote:
> :: % setopt nopromptcr	# (or unsetopt promptcr)
> :Thanks for the answer. Do you know why this option is enabled by def=
ault?!
>=20
> A couple of reasons are:
> 1) It's always been enabled by default (in the first widespread relea=
se
>    version 2.0 it was called no_prompt_clobber and changed to no_prom=
pt_cr
>    in 2.2) so it's still enabled for backward compatibility.
> 2) It means that when line editing in command mode, the shell can rel=
iably
>    move the cursor (and text) around the line.  Without knowing where=
 the
>    cursor is in absolute (horizontal) terms the shell can't know if i=
t has
>    crossed a line boundary;  how the cursor behaves on crossing line
>    boundaries has widely different behaviours depending upon the term=
inal.
>    In short, if you use this then you're pretty much stuck with using
>    short single line command lines (and no right prompt) when any tex=
t is
>    spewed up prior to the prompt.

I use no_prompt_cr, and I have a right prompt and stuff.  Of course
the command line gets a little messes up when programs don't finish
their output with a newline, but that can easily be cleared up with
ctrl-L.  I prefer to clear the mess up myselft rather than having zsh
hide output.

--=20
David K=E5gedal

