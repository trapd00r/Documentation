From zsh-workers-return-17262-mason-zsh=primenet.com.au@sunsite.dk Thu May 30 15:44:36 2002
Return-Path: <zsh-workers-return-17262-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 12978 invoked from network); 30 May 2002 15:44:35 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 30 May 2002 15:44:35 -0000
Received: (qmail 24921 invoked by alias); 30 May 2002 15:44:19 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 17262
Received: (qmail 24818 invoked from network); 30 May 2002 15:44:16 -0000
Date: Thu, 30 May 2002 08:44:12 -0700 (PDT)
From: Bart Schaefer <schaefer@brasslantern.com>
Sender: schaefer@ns1.sodaware.com
To: Zsh workers <zsh-workers@sunsite.dk>
Subject: Re: zsh: Strange feature with 'jobs' commmand
In-Reply-To: <E17DPx8-00067B-00@bimbo.logica.co.uk>
Message-ID: <Pine.LNX.4.44.0205300708110.3617-100000@ns1.sodaware.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

On Thu, 30 May 2002, Oliver Kiddle wrote:

> Tricks like jobs > >(cat -) sort-of work so I was thinking a special
> case hack for jobs might not need a big rewrite. But I've never gone
> near that part of zsh's code so wouldn't know.

jobs >>(cat) works because >>(...) forces cat into a subshell, leaving
jobs in the foreground.  That's an entirely different flow of control.

It's relatively easy to add a new `cl' arg value to entersubsh() as a flag
when the command to be executed is the `jobs' builtin, to leave the job
table un-erased.  However, the code that does the traversing/printing of
the job table is littered with tests to silence it when the process is not
the foreground shell -- it's be really tricky to make `jobs' do something
useful while still preventing `bg' and `fg' from doing something broken.

