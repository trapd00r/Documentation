From zsh-workers-return-18944-mason-zsh=primenet.com.au@sunsite.dk Sat Aug 16 08:36:22 2003
Return-Path: <zsh-workers-return-18944-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 15462 invoked from network); 16 Aug 2003 08:36:21 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 16 Aug 2003 08:36:21 -0000
Received: (qmail 16611 invoked by alias); 16 Aug 2003 08:36:17 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 18944
Received: (qmail 16601 invoked from network); 16 Aug 2003 08:36:16 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 16 Aug 2003 08:36:16 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [203.109.249.143] by sunsite.dk (MessageWall 1.0.8) with SMTP; 16 Aug 2003 8:36:15 -0000
Received: from p137-tnt2.syd.ihug.com.au (localhost.localdomain) [203.173.130.137] 
	by grunt23.ihug.com.au with esmtp (Exim 3.35 #1 (Debian))
	id 19nwXk-0001LJ-00; Sat, 16 Aug 2003 18:36:13 +1000
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by localhost.localdomain (8.12.5/8.12.5) with ESMTP id h7G8tfB4006773
	for <zsh-workers@sunsite.dk>; Sat, 16 Aug 2003 18:55:42 +1000
Received: (from doug@localhost)
	by localhost.localdomain (8.12.5/8.12.5/Submit) id h7G8tebr006771
	for zsh-workers@sunsite.dk; Sat, 16 Aug 2003 18:55:40 +1000
X-Authentication-Warning: localhost.localdomain: doug set sender to djkea2@mugca.its.monash.edu.au using -f
Date: Sat, 16 Aug 2003 18:55:40 +1000
From: Doug Kearns <djkea2@mugca.its.monash.edu.au>
To: zsh-workers@sunsite.dk
Subject: PATCH: ruby completion - update for 1.8.0
Message-ID: <20030816085539.GA5755@localhost.localdomain>
Mail-Followup-To: zsh-workers@sunsite.dk
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.4i

Updated _ruby for version 1.8.0 with some minor improvements.

Regards,
Doug

Index: Completion/Unix/Command/_ruby
===================================================================
RCS file: /cvsroot/zsh/zsh/Completion/Unix/Command/_ruby,v
retrieving revision 1.2
diff -u -r1.2 _ruby
--- Completion/Unix/Command/_ruby	6 Mar 2003 03:47:45 -0000	1.2
+++ Completion/Unix/Command/_ruby	16 Aug 2003 08:28:36 -0000
@@ -1,45 +1,45 @@
 #compdef ruby
 
-# http://www.ruby-lang.org/
+# ruby 1.8.0 (2003-08-14) [i686-linux]
 
-local expl curcontext="$curcontext" line state
+local expl curcontext="$curcontext" line state ret=1
 typeset -A opt_args
 local dirs
 
 _arguments -C -s -S \
-  '(1 * -)--version[print version]' \
-  '-c[syntax check]' \
-  '-w[verbose mode without printing version message at the beginning]' \
-  '(-d --debug)'{-d,--debug}'[debug mode]' \
+  '-0-[specify record separator]:input record separator in octal (default\: \0):' \
+  '-a[autosplit mode with -n or -p (splits $_ into $F)]' \
+  '-c[check syntax only]' \
+  '-C+[cd to directory, before executing your script]:directory:_files -/' \
+  '(-d --debug)'{-d,--debug}'[set debugging flags (set $DEBUG to true)]' \
+  "(1)*-e+[one line of script (several -e's allowed, omit program file)]:one line of script:" \
+  '-F-[split() pattern for autosplit (-a)]:input field separator:' \
+  '-i-[edit ARGV files in place (make backup if extension supplied)]:suffix for in-place-edit mode:(.bak)' \
+  '*-I+[specify $LOAD_PATH directory (may be used more than once)]:library directory:_files -/' \
+  '-K-[specifies KANJI (Japanese) code-set]:KANJI encoding:((e\:EUC-JP s\:Shift_JIS u\:UTF-8 N\:None))' \
+  "-l[assume 'while gets(); ... end' loop around your script]" \
+  "(-p)-n[assume 'while gets(); ... end' loop around your script]" \
+  '(-n)-p[assume loop like -n but print line also like sed]' \
+  '*-r+[require the library, before executing your script]:library name:->library' \
+  '-s[enable some switch parsing for switches after script name]' \
+  '-S[look for the script using PATH environment variable]' \
+  '-T-[turn on tainting checks]:taint level (default\: 0):((0\:strings\ from\ streams/environment/ARGV\ are\ tainted 1\:no\ dangerous\ operation\ by\ tainted\ value 2\:process/file\ operations\ prohibited 3\:all\ generated\ objects\ are\ tainted 4\:no\ global\ \(non-tainted\)\ variable\ modification/no\ direct\ output))' \
+  '(-v --verbose)'{-v,--verbose}'[print version number, then turn on verbose mode]' \
+  '-w[turn warnings on for your script]' \
+  '-W-[set warning level]:warning level (default\: 2):((0\:silent 1\:medium 2\:verbose))' \
+  '(-y --yydebug)'{-y,--yydebug}'[enable yacc debugging in the parser]' \
+  '-x-[strip off text before #!ruby line and perhaps cd to directory]:directory:_files -/' \
+  '(1 * -)--copyright[print the copyright]' \
   '(1 * -)'{-h,--help}'[print help message]' \
-  '-l[automatic line-ending processing]' \
-  '(-n)-p[loop and print]' \
-  '(-p)-n[loop]' \
-  '-a[auto-split mode]' \
-  '-s[switch parsing]' \
-  '-0-[input record separator]:input record separator in octal:' \
-  '-K-[specifies KANJI (Japanese) encoding]:KANJI encoding:((e\:EUC-JP s\:Shift_JIS u\:UTF-8 N\:None))' \
-  '-F-[input field separator]:input field separator:' \
-  '-i-[in-place-edit mode]:suffix for in-place-edit mode:(.bak)' \
-  '*-I+[library directory]:library directory:_files -/' \
-  '*-r+[require library]:library name:->library' \
-  '-S[search ruby script in PATH]' \
-  '(-v --verbose)'{-v,--verbose}'[verbose mode]' \
-  '-x-[embedded script]:directory:_files -/' \
-  '-C+[chdir]:directory:_files -/' \
-  '(-y --yydebug)'{-y,--yydebug}'[compiler debug mode]' \
-  '(1 * -)--copyright[copyright notice]' \
-  '-T-[taint check]:taint level:({0..4})' \
-  '(1)*-e+[ruby command]:ruby command:' \
+  '(1 * -)--version[print the version]' \
   '(-)1:script file:_files -g \*.rb' \
-  '*:script argument:_files' && return 0
+  '*:script argument:_files' && ret=0
 
 case $state in
   library)
-    dirs=($(_call_program directories $words[1] -e 'print\ \$:.join\(\"\\n\"\)'))
-    _wanted directories expl library \
-      _path_files -W dirs && return 0
+    dirs=($(_call_program directories $words[1] -e 'puts\ \$:'))
+    _wanted directories expl library _path_files -W dirs && ret=0
   ;;
 esac
 
-return 1
+return ret

