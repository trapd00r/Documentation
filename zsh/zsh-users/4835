From zsh-users-return-4835-mason-zsh=primenet.com.au@sunsite.dk Tue Apr 16 08:12:21 2002
Return-Path: <zsh-users-return-4835-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 7785 invoked from network); 16 Apr 2002 08:12:20 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 16 Apr 2002 08:12:20 -0000
Received: (qmail 6531 invoked by alias); 16 Apr 2002 08:12:01 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 4835
Received: (qmail 6508 invoked from network); 16 Apr 2002 08:12:00 -0000
From: Sven Wischnowsky <wischnow@berkom.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <15547.56477.871277.502684@wischnow.berkom.de>
Date: Tue, 16 Apr 2002 10:11:09 +0200
To: zsh-users@sunsite.dk
Subject: Re: How to get prefix with quotes in completion widgets?
In-Reply-To: <39E723A47AE4D211A9E800A0C9DEB9F605B0E910@slon11308.csfp.co.uk>
References: <39E723A47AE4D211A9E800A0C9DEB9F605B0E910@slon11308.csfp.co.uk>
X-Mailer: VM 6.95 under 21.5 (patch 3) "asparagus" XEmacs Lucid


Ebourne, Martin wrote:

> Hi,
> 
> How do I get access to a version of $PREFIX which includes the quotes within a completion widget?

Quoting in completion is (and always was) a *very* complicated matter,
because ultimately we just can't reproduce the original quoting in all
cases (e.g. we have f'oo<TAB> on the line and the completion code adds
foobar as a match -- and that's a simple example). So instead of
trying to be perfect the code tries to produce at least correct
results even if that means that some of the special quoting on the
line will be lost. Internally the code uses an unquoted form which is
turned into some kind of generically quoted form when listed or
inserted into the line. In most cases this means backslashes before
special characters. Then we added a bit of special treatment for
strings *starting* with single or double quotes to be able to preserve
at least these.

And these single or double quotes can be found in $compstate[quote]
and $compstate[all_quotes] (and $QIPREFIX, for a different purpose,
but usable anyway). However, this of course only works for correct
shell syntax on the line and in your example:

> ...
> 
> example insert ( 'foo', 'bar' )
>                         ^^^
>                         123

the whole `(...)' is reported to the completion code (from the lexer
invoked by it) as one string, with quotes inside it, not at the
beginning, so the completion code doesn't handle them specially.

So, to answer your question: in *this* case, with the probably not
intended interpretation of the command line which can't be changed in
the completion code, there is no way to find the quotes other than by
looking e.g. at $BUFFER and $CURSOR of $words[CURRENT] (the former two
are zle-parameters accessible read-only in the completion code).

But if the stuff you want to complete really looks different from what
you sent, there might be a way. And anyway I'd like to know in which
real-world case you need it, we might have other ideas to help you.

Bye
  Sven

-- 
Sven Wischnowsky                          wischnow@berkom.de

