From zsh-workers-request@math.gatech.edu Tue Jan 13 12:15:35 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 9310 invoked from network); 13 Jan 1998 12:15:34 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 13 Jan 1998 12:15:34 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.8.5/8.8.5) id GAA26504;
	Tue, 13 Jan 1998 06:55:30 -0500 (EST)
Resent-Date: Tue, 13 Jan 1998 06:55:30 -0500 (EST)
Date: Tue, 13 Jan 1998 12:56:43 +0100 (MET)
Message-Id: <199801131156.MAA00827@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@math.gatech.edu
In-reply-to: Andrew Main's message of Mon, 12 Jan 1998 11:27:05 GMT
Subject: Re:  zsh-3.1.2-zefram3
Resent-Message-ID: <"n9sgm2.0.3U6.nOrkq"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/3693
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu


Andrew Main wrote:

>...
>
> N  3503 wischnow lots of nifty completion options
> 	This I did not include.  AUTO_GLOB_COMPLETE really has very
> 	little to do with GLOB_COMPLETE -- all it does is complete from
> 	the beginning of the word as well as the end.  This is the sort
> 	of thing that multicomp is for.  COMPLETE_FOLD_CASE I would
> 	have used had it been separate from the rest of the patch; it
> 	does something useful that can't easily be done in user space.
> 	The other compctl options (-. and -:) I do not like.  They seem
> 	to require an awful lot of code for something that, again,
> 	should really be part of a completion function.
> 

I'm all for doing this in shell functions, but zsh isn't strong enough
for that (yet). The problem is that things like multicomp only work
with menu-completion.

Question is, what excatly do we need to allow building arbitrary
completion lists in shell functions and have the code make them
conveniently accessible with normal completion. Maybe something like
`replace the current word with the prefix <a> and the suffix <b>,
placing the cursor between them'. But we would also need to be able to
return the whole completion list for automenu. Taking multicomp
(i.e. path) completion as an example that would mean to present either
the list of full paths or only the list of ambiguous path name
components.
Thinking about the latter leads to the suggestion that such functions
may return: `we split the current word into <prefix><ambig><suffix>
at positions <p0> and <p1> and want <prefix> be replaced by <a>,
suffix by <b>, and for <ambig> we offer the list of possible
completions in $reply, now present that to the user'. But that sounds
pretty complex (in fact this is near to what the compctl code does
internally), so does anyone see a simpler solution?


Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

