From zsh-workers-return-25228-mason-zsh=primenet.com.au@sunsite.dk Sat Jun 21 12:31:05 2008
Return-Path: <zsh-workers-return-25228-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 5411 invoked from network); 21 Jun 2008 12:31:04 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 21 Jun 2008 12:31:04 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 63265 invoked from network); 21 Jun 2008 12:30:59 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 21 Jun 2008 12:30:59 -0000
Received: (qmail 50 invoked by alias); 21 Jun 2008 12:30:55 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 25228
Received: (qmail 35 invoked from network); 21 Jun 2008 12:30:54 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 21 Jun 2008 12:30:54 -0000
Received: from mail.o2.co.uk (yoda.london.02.net [82.132.130.151])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 775CC8084FA0
	for <zsh-workers@sunsite.dk>; Sat, 21 Jun 2008 14:30:51 +0200 (CEST)
Received: from sc.homeunix.net (78.105.216.138) by mail.o2.co.uk (8.0.013.3) (authenticated as stephane.chazelas)
        id 4851DD95018C1954 for zsh-workers@sunsite.dk; Sat, 21 Jun 2008 13:30:50 +0100
Received: from chazelas by sc.homeunix.net with local (Exim 4.69)
	(envelope-from <stephane_chazelas@yahoo.fr>)
	id 1KA2F0-0002Rt-1Q
	for zsh-workers@sunsite.dk; Sat, 21 Jun 2008 13:30:50 +0100
Date: Sat, 21 Jun 2008 13:30:50 +0100
From: Stephane Chazelas <Stephane_Chazelas@yahoo.fr>
To: zsh-workers@sunsite.dk
Subject: Re: environment settings
Message-ID: <20080621123049.GA7027@sc.homeunix.net>
Mail-Followup-To: zsh-workers@sunsite.dk
References: <20080616074651.GB26165@marcus> <20080616080556.GA5091@sc.homeunix.net> <20080616123045.GC26165@marcus> <20080616124450.GC5091@sc.homeunix.net> <slrng5etlu.mft.joerg@alea.gnuu.de> <20080621062649.GA28022@blorf.net> <20080621113659.GA20796@prunille.vinc17.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-15
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <20080621113659.GA20796@prunille.vinc17.org>
User-Agent: Mutt/1.5.16 (2007-09-19)
X-Virus-Scanned: ClamAV 0.92.1/7526/Sat Jun 21 11:05:07 2008 on bifrost
X-Virus-Status: Clean

On Sat, Jun 21, 2008 at 01:36:59PM +0200, Vincent Lefevre wrote:
> On 2008-06-20 23:26:49 -0700, Wayne Davison wrote:
> > The problem I ran into with setting variables in .zshenv is that they
> > can override settings you want to affect a program and/or script when
> > you don't expect it.  For instance, if you need to debug a C program
> > that is run inside a script with a custom PATH.  You setup the custom
> > PATH and run the C program under gdb, and discover that your PATH isn't
> > set right for the C program.  This is because gdb starts the program
> > under an instance of $SHELL, which will source .zshenv, and if you're
> > setting PATH inside, that blasts the PATH setting you're expecting.
> 
> I'd say that this is a bug of gdb if it doesn't restore the intended
> $PATH (a bit like what libtool does, AFAIK). BTW, isn't $SHELL for
> the user?
> 
> Note this I really want zsh subshells I start to be run with a
> cleaned-up environment (this is a *user* choice).
[...]

I think this is what Wayne had in mind:

$ echo A=x >> ~/.zshenv
$ env -i A=y SHELL=zsh strace -vfe execve =gdb --args env
execve("/usr/bin/gdb", ["/usr/bin/gdb", "--args", "env"], ["A=y", "SHELL=zsh"]) = 0
[...]
(gdb) run
Starting program: /home/chazelas/env
[...]
[pid  9335] execve("/bin/zsh", ["zsh", "-c", "exec /home/chazelas/env "], ["A=y", "SHELL=zsh", "LINES=52", "COLUMNS=144"]) = 0
[pid  9335] execve("/home/chazelas/env", ["/home/chazelas/env"], ["A=x", "SHELL=zsh", "LINES=52", "COLUMNS=144", "HOME=/home/chazelas", "LOGNAME=chazelas", "SHLVL=0", "PWD=/home/chazelas", "OLDPWD=/home/chazelas", "_=/home/chazelas/env"]) = 0
A=x
[...]

The program to debug (here env) is run through $SHELL which
sources ~/.zshenv which overrides the setting of the A variable.
(PATH in Wayne's case).

It's not gdb's fault and there's nothing it can do about it.

-- 
Stéphane

