From zsh-workers-return-6284-mason-zsh=primenet.com.au@sunsite.auc.dk Fri May 14 12:04:59 1999
Return-Path: <zsh-workers-return-6284-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 29551 invoked from network); 14 May 1999 12:04:58 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 14 May 1999 12:04:58 -0000
Received: (qmail 9452 invoked by alias); 14 May 1999 12:04:31 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 6284
Received: (qmail 9445 invoked from network); 14 May 1999 12:04:30 -0000
Message-Id: <9905141140.AA42353@ibmth.df.unipi.it>
To: "ZSH workers mailing list" <zsh-workers@sunsite.auc.dk>
Subject: PATCH: try again: Re: LFS notes
In-Reply-To: ""Andrej Borsenkow""'s message of "Fri, 14 May 1999 13:54:40 DFT."
             <003b01be9def$c8d43e90$21c9ca95@mow.siemens.ru> 
Date: Fri, 14 May 1999 13:40:05 +0200
From: Peter Stephenson <pws@ibmth.df.unipi.it>

"Andrej Borsenkow" wrote:
> I just realized, that this message is titled with "PATCH:", but the patch
> itself is missing (at least, I have not got it).

That's strange.

--- INSTALL.lfs	Tue Mar  2 09:42:37 1999
+++ INSTALL	Wed May 12 10:16:33 1999
@@ -244,3 +244,12 @@
      zprofile=pathname   # the full pathname of the global zprofile script
      zlogout=pathname    # the full pathname of the global zlogout script
      dynamic             # allow dynamically loaded binary modules
+     lfs                 # allow configure check for large files
+
+The option --enable-lfs turns on the configure check for support for large
+files; some 32-bit systems use this as a way of getting across the 2GB
+barrier.  It is a configure option because it is not yet completely
+supported internally:  zsh still mostly uses long integers internally,
+which are 32-bit on such systems.  However, the system part of this is
+expected to work, e.g. it should be possible to use redirection to write to
+files larger than 2GB.
--- Src/system.h.lfs	Mon Mar  1 10:46:51 1999
+++ Src/system.h	Wed May 12 09:54:57 1999
@@ -609,3 +609,12 @@
 #ifndef O_NOCTTY
 # define O_NOCTTY 0
 #endif
+
+#ifdef _LARGEFILE_SOURCE
+#ifdef HAVE_FSEEKO
+#define fseek fseeko
+#endif
+#ifdef HAVE_FTELLO
+#define ftell ftello
+#endif
+#endif
--- aczsh.m4.lfs	Thu May  6 16:58:50 1999
+++ aczsh.m4	Wed May 12 09:49:40 1999
@@ -38,15 +38,14 @@
 ac_shellvars='CPPFLAGS LDFLAGS LIBS'
 for ac_shellvar in $ac_shellvars; do
   case $ac_shellvar in
-  CPPFLAGS) ac_lfsvar=LFS_CFLAGS ac_lfs64var=LFS64_CFLAGS ;;
-  *) ac_lfsvar=LFS_$ac_shellvar ac_lfs64var=LFS64_$ac_shellvar ;;
+  CPPFLAGS) ac_lfsvar=LFS_CFLAGS ;;
+  *) ac_lfsvar=LFS_$ac_shellvar ;;
   esac
   eval test '"${'$ac_shellvar'+set}"' = set && ac_set=$ac_shellvar
   (getconf $ac_lfsvar) >/dev/null 2>&1 || { ac_result=no; break; }
   ac_getconf=`getconf $ac_lfsvar`
-  ac_getconf64=`getconf $ac_lfs64var`
-  ac_getconfs=$ac_getconfs$ac_getconf\ $ac_getconf64
-  eval ac_test_$ac_shellvar="\$ac_getconf\ \$ac_getconf64"
+  ac_getconfs=$ac_getconfs$ac_getconf
+  eval ac_test_$ac_shellvar="\$ac_getconf"
 done
 case "$ac_result$ac_getconfs" in
 yes) ac_result=no ;;
--- configure.in.lfs	Wed May 12 09:39:53 1999
+++ configure.in	Wed May 12 10:13:41 1999
@@ -97,6 +97,12 @@
   AC_DEFINE(ZSH_HASH_DEBUG)
 fi])
 
+dnl Do you want large file support, if available (mostly Solaris)?
+dnl Currently this is only partially implemented.
+undefine([lfs])dnl
+AC_ARG_ENABLE(lfs,
+[  --enable-lfs               turn on support for large files])
+
 dnl Pathnames for global zsh scripts
 undefine([zshenv])dnl
 AC_ARG_ENABLE(etcdir,
@@ -206,7 +212,9 @@
 
 dnl Check for large file support (Solaris).
 dnl This needs to be done early to get the stuff into the flags.
+if test x$enable_lfs != x; then
 zsh_LARGE_FILE_SUPPORT
+fi
 
 dnl if the user hasn't specified CFLAGS, then
 dnl   if compiler is gcc, then use -O2 and some warning flags
@@ -641,7 +649,8 @@
               sigblock sigsetmask sigrelse sighold killpg sigaction getrlimit \
               sigprocmask setuid seteuid setreuid setresuid setsid strerror \
               nis_list initgroups fchdir cap_get_proc readlink nice \
-	      getgrgid getgrnam getpwent getpwnam getpwuid setpgrp)
+	      getgrgid getgrnam getpwent getpwnam getpwuid setpgrp \
+	      fseeko ftello)
 
 dnl ---------------
 dnl CHECK FUNCTIONS
@@ -1253,6 +1262,7 @@
 host operating system     : ${host_cpu}-${host_vendor}-${host_os}
 source code location      : ${srcdir}
 compiler                  : ${CC}
+preprocessor flags        : ${CPPFLAGS}
 executable compiler flags : ${CFLAGS}"
 if test "$dynamic" = yes; then
   echo "\

-- 
Peter Stephenson <pws@ibmth.df.unipi.it>       Tel: +39 050 844536
WWW:  http://www.ifh.de/~pws/
Dipartimento di Fisica, Via Buonarroti 2, 56127 Pisa, Italy

