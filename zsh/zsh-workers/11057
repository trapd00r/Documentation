From zsh-workers-return-11057-mason-zsh=primenet.com.au@sunsite.auc.dk Tue May 02 09:51:46 2000
Return-Path: <zsh-workers-return-11057-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 10468 invoked from network); 2 May 2000 09:51:45 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 2 May 2000 09:51:45 -0000
Received: (qmail 23228 invoked by alias); 2 May 2000 09:51:32 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 11057
Received: (qmail 23213 invoked from network); 2 May 2000 09:51:32 -0000
Date: Tue, 02 May 2000 10:50:52 +0100
From: Peter Stephenson <pws@cambridgesiliconradio.com>
Subject: Re: List of unresolved issues (update)
In-reply-to: "Your message of Mon, 01 May 2000 05:21:27 -0000."
 <1000501052127.ZM8590@candle.brasslantern.com>
To: zsh-workers@sunsite.auc.dk (Zsh hackers list)
Message-id: <0FTX00MCWFCRAU@la-la.cambridgesiliconradio.com>
Content-transfer-encoding: 7BIT

> Of those, I think 9095 is the only really crucial one.  The others might
> warrant mention on the BUGS list or some such.

The bug was this:

function oops {
    while getopts :m: f
    do
        echo $OPTIND is $f with $OPTARG
        shift $((OPTIND - 1))
    done
    print -r - $*
}

% oops -m 664
2 is m with 664
2 is ? with k
funky

(Note that the apparently correct display of `funky' is a coincidence, it
comes from incorrectly shifting by 2-1 twice.)

The fix looks easy, which in this particular chunk of code makes me very
suspicious (see the comment).  However, I'll commit it anyway until we find
the drawback.  We need comprehensive tests for getopts, including nested
functions, asap.

I now get:

% oops -m 664 funky
3 is m with 664
funky
% oops -m664 funky
2 is m with 664
funky

which I think is right.

Index: Src/builtin.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/builtin.c,v
retrieving revision 1.10
diff -u -r1.10 builtin.c
--- Src/builtin.c	2000/04/30 14:48:49	1.10
+++ Src/builtin.c	2000/05/02 09:47:05
@@ -3077,7 +3077,15 @@
 	    p = ztrdup(args[zoptind++]);
 	} else
 	    p = metafy(str+optcind, lenstr-optcind, META_DUP);
-	optcind = ztrlen(args[zoptind - 1]);
+	/*
+	 * Careful:  I've just changed the following two lines from
+	 *   optcind = ztrlen(args[zoptind - 1]);
+	 * and it's a rigorous theorem that every change in getopts breaks
+	 * something.  See zsh-workers/9095 for the bug fixed here.
+	 *   PWS 2000/05/02
+	 */
+	optcind = 0;
+	zoptind++;
 	zsfree(zoptarg);
 	zoptarg = p;
     } else {

-- 
Peter Stephenson <pws@cambridgesiliconradio.com>
Cambridge Silicon Radio, Unit 300, Science Park, Milton Road,
Cambridge, CB4 0XL, UK                          Tel: +44 (0)1223 392070

