From zsh-workers-return-6440-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Jun 03 02:51:12 1999
Return-Path: <zsh-workers-return-6440-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20023 invoked from network); 3 Jun 1999 02:51:08 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 3 Jun 1999 02:51:08 -0000
Received: (qmail 29979 invoked by alias); 3 Jun 1999 02:51:00 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 6440
Received: (qmail 29961 invoked from network); 3 Jun 1999 02:50:59 -0000
Message-Id: <199906030250.TAA19950@news.idiom.com>
Date: Wed,  2 Jun 1999 19:49:20 -0700
From: Nik Gervae <nik@linna.com>
Subject: export limit in zsh and other shells?
To: zsh-workers@sunsite.auc.dk
X-Priority: 3
MIME-Version: 1.0
Content-Type: text/plain; Charset=US-ASCII
X-Mailer: Mailsmith 1.1.3 (Bluto)

Here at PDI we use a TON of environment variables to control many aspects of
our animation jobs. Just today a user came to me complaining that when he
loaded *all* of these variables into his zsh session he got output like
this:

  % ls
  zsh: arg list too long: ls

I did a little research and have discovered that just about every shell we
have here--sh, bash, csh, tcsh, and zsh--exhibit this behavior when presented
with a couple hundred exported/environment variables. Many of these variables
are strings, by the way, so I suspect this might cause some kind of memory
buffer overrrun. Don't quote me on that, though.

Here's what I used to generate a test file to source:

  (i=0; while [[ ${i} -lt 600 ]] ; do
  echo "foo${i}=\"a nice long string to see what happens ${i}\""
  i=$[i + 1]
  done) >>| /tmp/vartest

--

Nik Gervae < nik at linna dot com >
Writer, coder, vegan, dilettante


