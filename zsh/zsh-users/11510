From zsh-users-return-11510-mason-zsh=primenet.com.au@sunsite.dk Fri May 25 12:07:04 2007
Return-Path: <zsh-users-return-11510-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16171 invoked from network); 25 May 2007 12:07:02 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.0 (2007-05-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00 autolearn=no
	version=3.2.0
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 25 May 2007 12:07:02 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 67162 invoked from network); 25 May 2007 12:06:56 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 25 May 2007 12:06:56 -0000
Received: (qmail 9577 invoked by alias); 25 May 2007 12:06:48 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 11510
Received: (qmail 9566 invoked from network); 25 May 2007 12:06:48 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 25 May 2007 12:06:48 -0000
Received: (qmail 65993 invoked from network); 25 May 2007 12:06:48 -0000
Received: from s1tank.virtdom.com (216.240.101.50)
  by a.mx.sunsite.dk with SMTP; 25 May 2007 12:06:44 -0000
Received: (qmail 12000 invoked by uid 89); 25 May 2007 12:20:57 -0000
Received: from ool-44c5a2de.dyn.optonline.net (HELO venti) (brian@aljex.com@68.197.162.222)
  by s1tank.virtdom.com with SMTP; 25 May 2007 12:20:57 -0000
Message-ID: <011a01c79ec5$2525f920$6800000a@venti>
From: "Brian K. White" <brian@aljex.com>
To: <zsh-users@sunsite.dk>
References: <fb3648c60705240913pedbd3afx957b60b804b33d1a@mail.gmail.com> <237967ef0705240918w6a923e7fk9e7f28164037715e@mail.gmail.com> <fb3648c60705240929i16bb6b3br260bb24b1192cde6@mail.gmail.com> <237967ef0705241011k61e67d42ic905efa86e7179f1@mail.gmail.com> <fb3648c60705241151q3a22e8c8i8f9e89fff77f5912@mail.gmail.com>
Subject: Re: If then Prompt
Date: Fri, 25 May 2007 08:06:37 -0400
Organization: Aljex Software
MIME-Version: 1.0
Content-Type: text/plain;
	format=flowed;
	charset="iso-8859-1";
	reply-type=response
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2900.3028
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3028


----- Original Message ----- 
From: "fREW" <frioux@gmail.com>
To: "Mikael Magnusson" <mikachu@gmail.com>
Cc: "Zsh users list" <zsh-users@sunsite.dk>
Sent: Thursday, May 24, 2007 2:51 PM
Subject: Re: If then Prompt


> On 5/24/07, Mikael Magnusson <mikachu@gmail.com> wrote:
>> On 24/05/07, fREW <frioux@gmail.com> wrote:
>> > On 5/24/07, Mikael Magnusson <mikachu@gmail.com> wrote:
>> > > On 24/05/07, fREW <frioux@gmail.com> wrote:
>> > > > Hey all,
>> > > >
>> > > > I was thinking that it would be cool to show the number of jobs if
>> > > > there were more than 0 jobs.  I know you can do this with things 
>> > > > like
>> > > > the return value, is there any way to do it with jobs?
>> > >
>> > > Sure,
>> > > PS1=$'%(1j.%j jobs .)'
>> > >
>> > > --
>> > > Mikael Magnusson
>> > >
>> >
>> > Awesome!  Thanks!  If anyone cares or wants to see it, here is my
>> > current prompt.
>> [...]
>> > if [[ $TERM == linux ]]; then
>> > else
>> >     precmd () { print -Pn "\e]0;%m: %~\a" }
>> > fi
>> >
>> >
>> > It doesn't show the username, because it usually doesn't matter to me
>> > what user I am logged into (it's just a user or root) so I don't show
>> > that.  Also the last part which will put the current directory in the
>> > title of an xterm doesn't work if you are in a screen session.
>>
>> if [[ $TERM == screen]; then
>>     function precmd() {
>>       print -Pn "\033]0;S $TTY:t{%100<...<%~%<<}\007"
>>     }
>> elsif etc
>>
>> personally i use a case $TERM in ... screen) ... *) ... construct
>> --
>> Mikael Magnusson
>>
>
> What does that do?  I put it in my config and I don't see any
> differences anywhere.

case "$TERM" in
    screen) some stuff that works for screen ;;
    xterm*|*xvt*) some stuff that only works in xterms ;;
    *) some generic stuff that works anywhere ;;
esac

It gets worse.
I have to do similar things that hinge off yet other variables besides $TERM 
for the same reason as the screen issue you ran into.
My users use several different terminal emulators that all set $TERM, 
correctly, to some appropriate standard like "linux" or "ansi" or "scoansi" 
or "xterm" etc...
But they all also support various special extra functionality via escape 
codes that they recognize and act on regardless what emulation mode they are 
in. I have to know do I send FacetWin codes? or Anzio? or xterm? (Xfree86 
version6 &up? or SCO's built in? or Sun's?"  or TUNemu? or Anita? etc...

There are various ways to try to figure out what the user really has. Most 
emulators have built in environment variables, or they allow you to define 
your own in the client-side config, that you can look for on the server side 
in *profile , if the server daemon supports the client setting arbitrary 
variables which many don't. Plus if you hop from machine to machine or use 
su to switch users, you lose the initial environment anyways. Then there is 
answerback, where you send a \005 immediately followed by a timed read to 
collect the answerback response, if the emulator supports it.
(present for ya, one line answerback that takes advantage of bash's timed 
read option, using reads prompt to send the ^E and hiding the response from 
going to the screen.)
[ -z "$MYTERM" ] && read -s -t 1 -p `echo -en "\005"` MYTERM    # bash only
if I could just get rid of those backticks...maybe binary edit the script, 
never tried...
(pathetic attempt at topicality: how to do a timed read in zsh? If you can't 
do a read that times out then you shouldn't do this at all since not all 
terminals respond to answerback and so the read will just sit there until 
the user presses a key. You need to specify a ^M at the end of your 
answerback string on the client side for this. Putty's syntax is "PuTTY^M")

I need stty comands in there too that hinge off both `uname -s` and $TERM 
because I use a mix of OS's and stty intr & erase collide when telnet/sshing 
between platforms.

If you are going to try to get that fancy, then hinging off of $TERM like 
above is just grazing the surface of the problem. :)
You should always quote "$TERM" in the case statement too because sometimes 
it's empty and that makes an invalid case statement at run time.


