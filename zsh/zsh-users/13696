From zsh-users-return-13696-mason-zsh=primenet.com.au@sunsite.dk Sun Jan 11 02:55:16 2009
Return-Path: <zsh-users-return-13696-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 27121 invoked from network); 11 Jan 2009 02:55:03 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 11 Jan 2009 02:55:03 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 78205 invoked from network); 11 Jan 2009 02:54:50 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 11 Jan 2009 02:54:50 -0000
Received: (qmail 3536 invoked by alias); 11 Jan 2009 02:54:27 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13696
Received: (qmail 3514 invoked from network); 11 Jan 2009 02:54:25 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 11 Jan 2009 02:54:25 -0000
Received: from mx.spodhuis.org (redoubt.spodhuis.org [193.202.115.177])
	by bifrost.dotsrc.org (Postfix) with ESMTPS id 24F8C808A1CD
	for <zsh-users@sunsite.dk>; Sun, 11 Jan 2009 03:54:20 +0100 (CET)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws; s=d200807; d=spodhuis.org;
	h=Received:Date:From:To:Cc:Subject:Message-ID:Mail-Followup-To:References:MIME-Version:Content-Type:Content-Disposition:In-Reply-To;
	b=gnU3rJ7lXzgvhNbw7D+cRbpe2ovcS+GorUNbxolewrHOhFYcJTxe9vGRymGVB+ew0oswzbyqq6xTqO9KcYT/n9n27JcNkuwbi2FcqBOCetGVEry6/2QlSSnclSkok9EBR3+YZjFoMOrMn88iMaQT9UbJJfUn9WOwoGRIcjHh1o4=;
Received: by smtp.spodhuis.org with local 
	id 1LLqSx-0003v8-2c; Sun, 11 Jan 2009 02:54:19 +0000
Date: Sat, 10 Jan 2009 18:54:19 -0800
From: Phil Pennock <zsh-workers+phil.pennock@spodhuis.org>
To: Greg Klanderman <gak@klanderman.net>
Cc: Zsh users <zsh-users@sunsite.dk>
Subject: Re: some way to inherit kill ring in su'd shell?
Message-ID: <20090111025418.GA7272@redoubt.spodhuis.org>
Mail-Followup-To: Greg Klanderman <gak@klanderman.net>,
	Zsh users <zsh-users@sunsite.dk>
References: <18789.30656.261463.382208@gargle.gargle.HOWL> <20090110095231.GA61601@redoubt.spodhuis.org> <m33afq97gg.fsf@klanderman.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <m33afq97gg.fsf@klanderman.net>
X-Virus-Scanned: ClamAV 0.92.1/8850/Sun Jan 11 00:20:01 2009 on bifrost
X-Virus-Status: Clean

On 2009-01-10 at 16:28 -0500, Greg Klanderman wrote:
> >>>>> Phil Pennock <zsh-workers+phil.pennock@spodhuis.org> writes:
> > Grotesque and there's probably a more elegant way which I'm missing, but
> > you could rebind ^M from accept-line to a custom widget which does some
> 
> I guess I could just stuff the killring (I'd even be happy with just
> CUTBUFFER) into an exported environment variable unconditionally for
> every command.  Both ways I normally su preserve the environment.
> 
> Is the only way to do that to replace accept-line and friends with
> custom widgets?  Could I instead use zle from a preexec hook somehow?

Pass.  ZLE is an area I've stayed away from, more than I should.  You
could always send zsh-users a patch to add the variables you want to the
zsh/zleparameter module.  :)  If you do that, then it's much easier,
since you just do something like:

 if is-at-least 4.3.10 ; then
   zmodload -i zsh/zleparameter
   function su { PARENT_CUTBUFFER="$CUTBUFFER" command su "$@" }
 fi

> When not preserving the environment, you'd have the problem that each
> user's shell startup needs to be hacked appropriately to look for and
> slurp in the killring/CUTBUFFER; probably not worth it.
> 
> > check if the file is less than a minute old and, if so, source it.
> 
> Can you be more specific about how to slurp the killring/CUTBUFFER
> back into the su'd to shell?

If not using an environment variable?

Hrm.  I was just thinking of having it be available in a variable to
reference, not to initialise the new killring with it.  Sorry.  You'd
probably want to add an init API to zsh/zleparameter too.  Unless
someone else points out an approach I'm missing.

I only realised this was probably what you meant when I was thinking
about what could be done if extending zsh/zleparameter anyway, so had
already written a bunch of reply which I now suspect is beneath the
level you are at, but I'll include it here in case I'm wrong or it helps
someone else.  *cough*

Regards,
-Phil

[....]
The actual slurp would just be a source, since typeset -p would have
emitted shell commands to set variables, dealing with all quoting.  Thus
the importance of checking paths appropriately.

Hrm, I tend to just have zsh/stat and zsh/datetime loaded, so I'd do it
with something like:

  function grab_killring {
    local krstat timediff fn
    fn="/home/$1/.killring"
    zstat -L -H krstat "$fn"
    [[ $? -ne 0 ]] && return 0
    if [[ -n $krstat[link] ]]; then
      print -u2 "Not reading symlink killring: $fn"
      return 1
    fi
    (( timediff = $EPOCHSECONDS - $krstat[mtime] ))
    if [[ $timediff -gt 0 && $timediff -le 60 ]]; then
      # if file can't be read, just let . report that
      . "$fn"
    fi
  }
  # ...
  case $SUDO_USER in
    fred|wilma) grab_killring $SUDO_USER ;;
  esac

This treats absence of a file (or parent dir access problems) and a
too-old file as silent non-issues and a symlink or unreadable file as
reportable ones.  The ACL checks for permitted users can then be done
separately -- I tend to use sudo, thus $SUDO_USER.

Creating a file I/O operation for _every_ command executed would not be
my preferred method, thus the dispatch based on command-type, but as
long as there's never sensitive data in the killring that shouldn't be
exposed via the process env of run commands (or you have an OS that
restricts who can see the process env) then you should be fine with your
approach.

-Phil

