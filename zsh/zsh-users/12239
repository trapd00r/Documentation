From zsh-users-return-12239-mason-zsh=primenet.com.au@sunsite.dk Tue Nov 20 13:08:13 2007
Return-Path: <zsh-users-return-12239-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16273 invoked from network); 20 Nov 2007 13:08:05 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.3 (2007-08-08) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.3
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 20 Nov 2007 13:08:05 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 50220 invoked from network); 20 Nov 2007 13:08:01 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 20 Nov 2007 13:08:01 -0000
Received: (qmail 4214 invoked by alias); 20 Nov 2007 13:07:50 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12239
Received: (qmail 4202 invoked from network); 20 Nov 2007 13:07:49 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 20 Nov 2007 13:07:49 -0000
Received: (qmail 48936 invoked from network); 20 Nov 2007 13:07:49 -0000
Received: from cluster-g.mailcontrol.com (85.115.41.190)
  by a.mx.sunsite.dk with SMTP; 20 Nov 2007 13:07:42 -0000
Received: from cameurexb01.EUROPE.ROOT.PRI ([62.189.241.200])
	by rly12g.srv.mailcontrol.com (MailControl) with ESMTP id lAKD7WEl005804
	for <zsh-users@sunsite.dk>; Tue, 20 Nov 2007 13:07:35 GMT
Received: from news01.csr.com ([10.103.143.38]) by cameurexb01.EUROPE.ROOT.PRI with Microsoft SMTPSVC(6.0.3790.1830);
	 Tue, 20 Nov 2007 13:07:30 +0000
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.14.1/8.13.4) with ESMTP id lAKD7UX4013231
	for <zsh-users@sunsite.dk>; Tue, 20 Nov 2007 13:07:30 GMT
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.14.1/8.14.1/Submit) with ESMTP id lAKD7Ups013227
	for <zsh-users@sunsite.dk>; Tue, 20 Nov 2007 13:07:30 GMT
Message-Id: <200711201307.lAKD7Ups013227@news01.csr.com>
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: "ZSH Users" <zsh-users@sunsite.dk>
Subject: Re: [[ -n $v ]] versus (( $#v > 0 ))
In-reply-to: <dbfc82860711200445g19cd0177s1755ddfcfb246990@mail.gmail.com>
References: <dbfc82860711200445g19cd0177s1755ddfcfb246990@mail.gmail.com>
Comments: In-reply-to "Nikolai Weibull" <now@bitwi.se>
   message dated "Tue, 20 Nov 2007 13:45:07 +0100."
Date: Tue, 20 Nov 2007 13:07:30 +0000
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 20 Nov 2007 13:07:30.0281 (UTC) FILETIME=[4E79F590:01C82B76]
X-Scanned-By: MailControl A-06-00-00 (www.mailcontrol.com) on 10.71.0.122

"Nikolai Weibull" wrote:
> What does the (imaginary) Zsh Scripting Style Guide say about
> 
> if [[ -n $v ]]; then
>   ...
> fi
> 
> versus
> 
> if (( $#v > 0 )); then
>   ...
> fi

I tend to use the former because it strikes me as more straightforward.
I'm "really" testing "is the string given by this parameter substitution
non-empty" rather than "is the number that I get by inquiring about the
length of the value stored in this parameter a positive one".

As this indicates, I don't think there's much more to this in practice
than psychology, so I wouldn't lose much sleep over it.

> Which version is "faster"?

I suppose the computer scientist's answer is that the second is faster
since there's no operation proportional to the size of the string stored
in the parameter v.

That's already a bit fishy when you think about why you might be testing
to see if the parameter is empty.  It's more likely to be a case of
"did I set this variable to 'yes' earlier on, or didn't I?" rather
than "does this string contain the complete works of Shakespeare, or is
it empty?"

In most cases the practical difference is likely to be tiny since
there's so much else going on in the shell to do with command handling and
substitution.

Internally, the second form goes through a full math evaluation which
includes a parameter substitution (which happens not to have to copy the
string---unless the string is huge that's a minor effect if you look at
all the goings on in subst.c:paramsubst(), which I advise against)
whereas the first one does a standard parameter substitution and looks
at the first byte of the result.  So the first is probably
faster in a lot of cases, but, again, the difference is typically
trivial and it's entirely possible some difference I haven't thought of
dominates.

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070

