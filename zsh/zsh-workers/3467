From zsh-workers-request@math.gatech.edu Tue Aug 26 18:39:54 1997
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 21651 invoked from network); 26 Aug 1997 18:39:53 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by coral.primenet.com.au with SMTP; 26 Aug 1997 18:39:53 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.8.5/8.8.5) id OAA16827;
	Tue, 26 Aug 1997 14:25:42 -0400 (EDT)
Resent-Date: Tue, 26 Aug 1997 14:25:42 -0400 (EDT)
From: <hzoli@VNET.IBM.COM> (Zoltan T. Hidvegi)
Message-Id: <9708261824.AA14166@belgium.fishkill.ibm.com>
Subject: Re: libzglob?
In-Reply-To: <199708261526.QAA27029@taos.demon.co.uk> from Andrew Main at "Aug 26, 97 04:26:29 pm"
To: zefram@tao.co.uk (Andrew Main)
Date: Tue, 26 Aug 1997 14:24:15 -0400 (EDT)
Cc: hzoli@VNET.IBM.COM, zsh-workers@math.gatech.edu
X-Mailer: ELM [version 2.4ME+ PL31H (25)]
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"H0po52.0.s64.c-n0q"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/3467
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Andrew Main wrote:
> Zoltan T. Hidvegi wrote:
> >Yes, for zsh.  But the question was to use the zsh glob within perl, which
> >already have the regexp engine.  I'd thing that even for zsh the regexp
> >engine would be superior, but it is quite big, and zsh is big enough even
> >without regexps.  Of course a loadable regexp module can be added to zsh.
>
> That's not what I meant.  We're talking about doing globbing.  A normal
> regexp engine answers questions of the form "does this string match this
> pattern?", but for globbing we need an engine that can answer "what are
> all the filenames that match this pattern?".  libzglob would really have
> to contain its own globbing engine -- Perl currently doesn't have one,
> though it has a good regexp engine.

But glob.c really has three main functions: pattern compiler to struct
comp, pattern matcher (domatch()) and scanner.  The scanner scans the
filesystem, and calls domatch() to see if a filename matches a pattern.
This is a bit simplified description, but not completely far from reality.
domatch() can be replaced by a regexp engine.

Zoltan

