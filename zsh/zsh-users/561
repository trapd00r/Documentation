From zsh-workers-request@euclid.skiles.gatech.edu Fri Dec 20 21:54:30 1996
Return-Path: <zsh-workers-request@euclid.skiles.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 11169 invoked from network); 20 Dec 1996 21:54:29 -0000
Received: from euclid.skiles.gatech.edu (list@130.207.146.50)
  by coral.primenet.com.au with SMTP; 20 Dec 1996 21:54:29 -0000
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id QAA02644; Fri, 20 Dec 1996 16:43:03 -0500 (EST)
Resent-Date: Fri, 20 Dec 1996 16:25:09 -0500 (EST)
Message-Id: <199612202126.QAA04412@ashanti.webmaster.net>
To: zsh-users@math.gatech.edu
From: "Jason R. Mastaler" <jason@Mastaler.COM>
Subject: virtual symlinks
Reply-To: jason@Mastaler.COM
Date: Fri, 20 Dec 1996 16:26:04 -0500
Sender: jason@ashanti.webmaster.net
Resent-Message-ID: <"wdrE91.0.nZ.rGmko"@euclid>
Resent-From: zsh-users@math.gatech.edu
X-Mailing-List: <zsh-users@math.gatech.edu> archive/latest/561
X-Loop: zsh-users@math.gatech.edu
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

I am looking for a way to fool my shell into bypassing the correct
filesystem and adhering to the "fake" directory I choose when I access
that directory.

For example, when I "cd /usr/local" I want to really end up in
"/tmp/local" on the filesystem, but want my shell to think I am in 
/usr/local.  I need to do this because I have a ton of compiled source
trees which I need to install into a temporary directory instead of
it's target directory on the filesystem which is /usr/local for most.

For some, it will be as easy as copying into /tmp/local, but others
have already been configured with /usr/local as the target directory
and will be installed there when I do a "make install" or equivalent.
The number of source trees is so vast, I don't have time to
reconfigure them.  An equivalent way to accomplish this would be to
make a symbolic link from /usr/local --> /tmp/local, and then run the
installs, but I would like to be able to accomplish this without using
root priveleges and without interrupting a running system which this
symlink would do.

I hope this makes sense.  I am only subscribed to zsh-announce, so
please CC: me if you want to reply to the list.  I will post
a summary of results if desired.  Thanks.

Jason R. Mastaler                                 jason@Mastaler.COM


