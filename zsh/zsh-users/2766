From zsh-users-return-2766-mason-zsh=primenet.com.au@sunsite.auc.dk Fri Dec 10 18:34:06 1999
Return-Path: <zsh-users-return-2766-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 27358 invoked from network); 10 Dec 1999 18:34:04 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 10 Dec 1999 18:34:04 -0000
Received: (qmail 7118 invoked by alias); 10 Dec 1999 18:33:50 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 2766
Received: (qmail 7105 invoked from network); 10 Dec 1999 18:33:47 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <991210183337.ZM27395@candle.brasslantern.com>
Date: Fri, 10 Dec 1999 18:33:37 +0000
In-Reply-To: <19991210184036.A29989@br-online.de>
Comments: In reply to Andy Spiegl <zsh.Andy@spiegl.de>
        "two completion questions" (Dec 10,  6:40pm)
References: <19991210184036.A29989@br-online.de>
X-Mailer: Z-Mail (5.0.0 30July97)
To: Andy Spiegl <zsh.Andy@spiegl.de>, zsh-users@sunsite.auc.dk
Subject: Re: two completion questions
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Dec 10,  6:40pm, Andy Spiegl wrote:
} Subject: two completion questions
}
} Now:  (cursor position at "_")
}  hamster:/tmp/zsh>cat a_<TAB>
} leads to
}  hamster:/tmp/zsh>cat a _
} 
} However I would expect zsh to do this:
}  hamster:/tmp/zsh>cat a_
}  file
}  a     ab    abc 
} 
} Maybe there is a switch I missed?

It would appear that you have "setopt REC_EXACT".  With that set, zsh
accepts immediately any prefix that exactly matches an existing file,
even if there are longer names that also match.

} The other problem is that zsh doesn't append a / after .. although it's a
} directory.  Here's an example again:
}  hamster:/tmp/zsh>cd .._<TAB>
} This just beeps instead of leading to this:
}  hamster:/tmp/zsh>cd ../_

I'm not precisely sure why zsh handles ".." that way.  You can fix this
with compctl completion as follows:

	compctl -D -f + -g .. -S / -q

If you're using the new function-based completion in 3.1.6, it's going to
require some editing of the _path_files completer.  Hey, Sven, do you (or
any other zsh-workers) remember the rationale for this handling of ".."?

} Actually this just reminded me of a third annoyance. :-)
} zsh removes a (previously completed) / or a space in the middle of the
} input line after C-e or C-a.

That's because you're using expand-or-complete-prefix.  (Which you must
be, or else this ...

}  hamster:/tmp>echo zs_ab     (...press TAB...)
}  hamster:/tmp>echo zsh/_ab   (...now Ctrl-E to go to the end of line...)

... would not happen at all; you'd just get a feep.)

With expand-or-complete-prefix, the stuff to the right of the cursor is
not considered to be part of the result of the completion, so as far as
zsh can tell when you follow the completion with a cursor motion rather
than an character insertion it means you didn't want the slash.

} Off course "unsetopt AUTO_REMOVE_SLASH" removes this behavior, but
} then the slash is never removed. I would expect zsh to remove the
} slash/space only if there is no character below (or to the right of)
} the cursor. Am I wrong?

Autoremoval is not based on what's on the line, it's based on what the
next action is.  Essentially, insertions cause it to remain (unless the
inserted character is the same as the suffix) and anything else causes
it to be removed.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

