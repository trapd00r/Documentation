From zsh-users-return-3962-mason-zsh=primenet.com.au@sunsite.dk Wed Jun 27 06:56:08 2001
Return-Path: <zsh-users-return-3962-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 22622 invoked from network); 27 Jun 2001 06:56:07 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 27 Jun 2001 06:56:07 -0000
Received: (qmail 26242 invoked by alias); 27 Jun 2001 06:55:11 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 3962
Received: (qmail 26223 invoked from network); 27 Jun 2001 06:55:10 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1010627065301.ZM4769@candle.brasslantern.com>
Date: Wed, 27 Jun 2001 06:53:00 +0000
In-Reply-To: =?iso-8859-1?Q?=3C20010626233100=2EA3153=40acmex=2Egatech=2Ee?=
 =?iso-8859-1?Q?du=3E?=
 =?iso-8859-1?Q?Comments=3A_In_reply_to_J=F6rg_Ziefle_=3Cgt4556a=40prism?=
 =?iso-8859-1?Q?=2Egatech=2Eedu=3E?=
 =?iso-8859-1?Q?________=22Re=3A_problem=2Fbug=3A_array_definition_from_co?=
 =?iso-8859-1?Q?mmand_=28backticks=29_-_solved=22_=28Jun_26=2C_11=3A24pm?=
 =?iso-8859-1?Q?=29?=
References: <20010626220704.A25876@acmey.gatech.edu> 
	<20010626231214.A25363@dman.com> 
	<20010626233100.A3153@acmex.gatech.edu>
X-Mailer: Z-Mail (5.0.0 30July97)
To: =?iso-8859-1?Q?J=F6rg_Ziefle?= <gt4556a@prism.gatech.edu>
Subject: Re: problem/bug: array definition from command (backticks) - solved
Cc: zsh-users@sunsite.dk
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: quoted-printable

On Jun 26, 11:24pm, J=F6rg Ziefle wrote:
}
} mailpath=3D("$($HOME/bin/printmailfolders-zsh.pl)")
} =

} does The Right Thing (TM).

If it does, it does so by accident.  If printmailfolders-zsh.pl is the
same script you sent in a later message, what the above statement does
is set mailpath to an array consisting of a single element that is a
string with embedded double quotes and backslash-n sequences.  Try a

    print -lr "$mailpath[@]"

after the above and you'll see what I mean: you get one long line with
a lot of quote-backslash-n-quote in it.  I can't possibly see how that's
the result you intended, or how it could report the right thing when new
mail arrives.

Change the last two lines of your perl script to:

    @folders =3D map { m,^.*/([^/]+)$,; "$_?New mail in $1."} @folders;
    print join "\n", @folders;

Then change your assignment to:

    mailpath=3D( "${(f)$($HOME/bin/printmailfolders-zsh.pl)}" )

Now try `print -lr "$mailpath[@]"', you should get one line per mailbox.

} > mailpath=3D(${(f)"$(for i in $HOME/{Mail,savenews}/[^.]*(.rNL+0) ; pr=
int $i\?New mail in ${i:t})"})
} =

} Unfortunately, this doesn't work for me.

That's because you still have 3.1.6 and the quoting Clint used only works=

after 3.1.9 or thereabouts.

However, did you notice this part of the documentation for `mailpath'?

    The message will undergo parameter expansion, command substitution
    and arithmetic expansion with the variable $_ defined as the name
    of the file that has changed. [...] If an element is a directory
    instead of a file the shell will recursively check every file in
    every subdirectory of the element.

In other words, with no perl at all,

    maildirs=3D( $HOME/{Mail,savenews} )
    mailpath=3D( $^maildirs'?New mail in $_' )

will probably do almost everything that you want.

-- =

Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net  =
 =

