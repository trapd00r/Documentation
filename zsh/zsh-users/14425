From zsh-users-return-14425-mason-zsh=primenet.com.au@sunsite.dk Mon Sep 21 21:35:39 2009
Return-Path: <zsh-users-return-14425-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 27952 invoked from network); 21 Sep 2009 21:35:36 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from new-brage.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.254.104)
  by ns1.primenet.com.au with SMTP; 21 Sep 2009 21:35:36 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 62063 invoked from network); 21 Sep 2009 21:35:24 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 21 Sep 2009 21:35:24 -0000
Received: (qmail 1127 invoked by alias); 21 Sep 2009 21:35:13 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 14425
Received: (qmail 1115 invoked from network); 21 Sep 2009 21:35:13 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 21 Sep 2009 21:35:13 -0000
Received: from smtprelay04.ispgateway.de (smtprelay04.ispgateway.de [80.67.31.27])
	by bifrost.dotsrc.org (Postfix) with ESMTP id C2722804CE03
	for <zsh-users@sunsite.dk>; Mon, 21 Sep 2009 23:35:06 +0200 (CEST)
Received: from [212.117.84.69] (helo=fsst.voodoo.lan)
	by smtprelay04.ispgateway.de with esmtpsa (TLSv1:AES256-SHA:256)
	(Exim 4.68)
	(envelope-from <ft@bewatermyfriend.org>)
	id 1MpqVW-00006S-42
	for zsh-users@sunsite.dk; Mon, 21 Sep 2009 23:33:14 +0200
Received: from hawk by fsst.voodoo.lan with local (Exim 4.69)
	(envelope-from <ft@bewatermyfriend.org>)
	id 1MpqXA-0002Jq-Oi
	for zsh-users@sunsite.dk; Mon, 21 Sep 2009 23:34:56 +0200
Date: Mon, 21 Sep 2009 23:34:56 +0200
From: Frank Terbeck <ft@bewatermyfriend.org>
To: zsh-users@sunsite.dk
Subject: Re: _expand completer and hashed dirs
Message-ID: <20090921213456.GG10174@fsst.voodoo.lan>
Mail-Followup-To: zsh-users@sunsite.dk
References: <20090921134728.GA10174@fsst.voodoo.lan> <090921074027.ZM4381@torch.brasslantern.com> <20090921150150.GD10174@fsst.voodoo.lan> <090921092333.ZM4626@torch.brasslantern.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
In-Reply-To: <090921092333.ZM4626@torch.brasslantern.com>
User-Agent: Mutt/1.5.18 (2008-05-17)
X-Df-Sender: 430444
X-Virus-Scanned: ClamAV 0.94.2/9820/Mon Sep 21 18:39:04 2009 on bifrost
X-Virus-Status: Clean

[me in another message]:
>> So, now my completer line reads like this:
>> 
>> zstyle ':completion:*' completer _tilde _expand _complete _ignored _approximate
>> 
>> And that seems to do what I want so far. :-)

Bart Schaefer <schaefer@brasslantern.com>:
> I'm glad the _tilde completer fixed you up.  Just a word of caution to
> others reading this thread:  Not all completion functions can be dropped
> into the completers list that way.

Yeah, and I should have though twice before doing so, too.

Because, after a while, I realizes that I had just screwed up my
entire completion setup. Stuff like 'git <tab>' started to act weird,
because all of a sudden, the _tilde at the start of my configured
completers tried to treat *everything* as a user name or hashed
directory...

So, I sat myself down and wrote up the following (it does something
special if $BUFFER is empty, too; that's an older idea):

[snip]
function ft-complete() {
    emulate -L zsh
    setopt extendedglob
    local action context widget word

    if [[ -z ${BUFFER} ]]; then
        context=empty
        zstyle -s ":zle:ft-complete:${context}" action action || action=empty
        zstyle -s ":zle:ft-complete:${context}" widget widget || widget=complete-word
        case ${action} in
            dot-slash-complete)
                BUFFER='./'
                CURSOR=2
                zle ${widget} -w
                ;;
            empty)
                ;;
            *)
                zle ${widget} -w
                ;;
        esac

        return 0
    fi

    word=${LBUFFER##* }
    if [[ ${word} == \~* ]] ; then
        context=tilde
        zstyle -s ":zle:ft-complete:${context}" widget widget || widget=complete-word
        zle ${widget} -w
        return 0
    fi
    context=default
    zstyle -s ":zle:ft-complete:${context}" widget widget || widget=complete-word
    zle ${widget} -w
    return 0
}

zle -N ft-complete
[snap]

And then I do this for configuration:

[snip]
zle -C ft-complete-tilde complete-word _generic
zstyle ':completion:ft-complete-tilde:*' completer _tilde _expand _complete _ignored _approximate

zstyle ':zle:ft-complete:tilde' widget ft-complete-tilde
[snap]

My main completer style now is this again:

    zstyle ':completion:*' completer _expand _complete _ignored _approximate

This seems to work rather nicely. Without screwing everything up in
the process. :-)

I just thought, I'd let people know before they waste time on trying
out my previous stupidities.

Regards, Frank

