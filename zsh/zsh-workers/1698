From A.Main@dcs.warwick.ac.uk Fri Jul 19 01:49:35 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by melb.werple.net.au (8.7.5/8.7.3/2) with ESMTP id BAA12343 for <mason@werple.mira.net.au>; Fri, 19 Jul 1996 01:49:31 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id LAA05965; Thu, 18 Jul 1996 11:21:35 -0400 (EDT)
Resent-Date: Thu, 18 Jul 1996 11:21:35 -0400 (EDT)
From: Zefram <A.Main@dcs.warwick.ac.uk>
Message-Id: <12106.199607181520@granite.dcs.warwick.ac.uk>
Subject: caching in configure
To: zsh-workers@math.gatech.edu (Z Shell workers mailing list)
Date: Thu, 18 Jul 1996 15:22:35 +0100 (BST)
X-Patch: 117
X-Loop: zefram@dcs.warwick.ac.uk
X-Stardate: [-31]7827.99
X-US-Congress: Moronic fuckers
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: zefram@dcs.warwick.ac.uk
Resent-Message-ID: <"Vp_T63.0.5T1.-Pbxn"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/1698
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu
Content-Length: 21941
Status: OR

-----BEGIN PGP SIGNED MESSAGE-----

This patch fixes caching in configure.

Currently the "broken signed to unsigned casting" check isn't actually
cached, though there is an attempt at it -- the problem is that the
cache parameter name must include _cv_, as config.cache is generated
using `set`, with a grep for _cv_.  (This system has the advantage that
parameters in the cache that we don't know about will be preserved.)
I changed the name to one including _cv_.

The pathnames of signal.h, utmp and wtmp are currently not cached
at all.  I added caching.  This is particularly helpful on systems
where the configure check gets these paths wrong, as they only need to
be changed manually once -- thereafter the cached value will be used,
without regenerating the incorrect paths.

I also changed many of the cache parameter names to match autoconf
standards.

 -zefram

      Index: configure.in
      ===================================================================
      RCS file: /home/zefram/usr/cvsroot/zsh/configure.in,v
      retrieving revision 1.8
      diff -c -r1.8 configure.in
      *** configure.in	1996/07/16 14:26:26	1.8
      --- configure.in	1996/07/18 10:18:39
      ***************
      *** 222,232 ****
        
        dnl  Checking if compiler correctly cast signed to unsigned.
        AC_CACHE_CHECK(if signed to unsigned casting is broken,
      ! zsh_broken_signed_to_unsigned_casting,
        [AC_TRY_RUN([main(){return((int)(unsigned char)((char) -1) == 255);}],
      !   zsh_broken_signed_to_unsigned_casting=yes,
      !   zsh_broken_signed_to_unsigned_casting=no)])
      ! if test $zsh_broken_signed_to_unsigned_casting = yes; then
          AC_DEFINE(BROKEN_SIGNED_TO_UNSIGNED_CASTING)
        fi
        
      --- 222,232 ----
        
        dnl  Checking if compiler correctly cast signed to unsigned.
        AC_CACHE_CHECK(if signed to unsigned casting is broken,
      ! zsh_cv_c_broken_signed_to_unsigned_casting,
        [AC_TRY_RUN([main(){return((int)(unsigned char)((char) -1) == 255);}],
      !   zsh_cv_c_broken_signed_to_unsigned_casting=yes,
      !   zsh_cv_c_broken_signed_to_unsigned_casting=no)])
      ! if test $zsh_cv_c_broken_signed_to_unsigned_casting = yes; then
          AC_DEFINE(BROKEN_SIGNED_TO_UNSIGNED_CASTING)
        fi
        
      ***************
      *** 253,284 ****
        dnl Some SCO systems cannot include both sys/time.h and sys/select.h
        if test $ac_cv_header_sys_time_h = yes -a $ac_cv_header_sys_select_h = yes; then
          AC_CACHE_CHECK(for conflicts in sys/time.h and sys/select.h,
      !   zsh_cv_time_h_select_h_conflicts,
          [AC_TRY_COMPILE([#include <sys/time.h>
        #include <sys/select.h>], [int i;],
      !   zsh_cv_time_h_select_h_conflicts=no,
      !   zsh_cv_time_h_select_h_conflicts=yes)])
      !   if test $zsh_cv_time_h_select_h_conflicts = yes; then
            AC_DEFINE(TIME_H_SELECT_H_CONFLICTS)
          fi
        fi
        
      ! AC_CACHE_CHECK(ut_host in struct utmp, zsh_cv_func_ut_host_in_utmp,
        [AC_TRY_COMPILE(
        [#include <sys/types.h>
        #include <utmp.h>], [struct utmp ut; ut.ut_host;],
      ! zsh_cv_func_ut_host_in_utmp=yes, zsh_cv_func_ut_host_in_utmp=no)])
      ! if test $zsh_cv_func_ut_host_in_utmp = yes; then
          have_ut_host=1
          AC_DEFINE(HAVE_UT_HOST)
        fi
        
        if test -z "$have_ut_host"; then
      !   AC_CACHE_CHECK(ut_host in struct utmpx, zsh_cv_func_ut_host_in_utmpx,
          [AC_TRY_COMPILE([#include <sys/types.h>
        #include <utmpx.h>], [struct utmpx ut; ut.ut_host;],
      !   zsh_cv_func_ut_host_in_utmpx=yes, zsh_cv_func_ut_host_in_utmpx=no)])
      !   if test $zsh_cv_func_ut_host_in_utmpx = yes; then
            AC_DEFINE(HAVE_UTMPX_H)
            AC_DEFINE(HAVE_UT_HOST)
          fi
      --- 253,284 ----
        dnl Some SCO systems cannot include both sys/time.h and sys/select.h
        if test $ac_cv_header_sys_time_h = yes -a $ac_cv_header_sys_select_h = yes; then
          AC_CACHE_CHECK(for conflicts in sys/time.h and sys/select.h,
      !   zsh_cv_header_time_h_select_h_conflicts,
          [AC_TRY_COMPILE([#include <sys/time.h>
        #include <sys/select.h>], [int i;],
      !   zsh_cv_header_time_h_select_h_conflicts=no,
      !   zsh_cv_header_time_h_select_h_conflicts=yes)])
      !   if test $zsh_cv_header_time_h_select_h_conflicts = yes; then
            AC_DEFINE(TIME_H_SELECT_H_CONFLICTS)
          fi
        fi
        
      ! AC_CACHE_CHECK(ut_host in struct utmp, zsh_cv_struct_utmp_ut_host,
        [AC_TRY_COMPILE(
        [#include <sys/types.h>
        #include <utmp.h>], [struct utmp ut; ut.ut_host;],
      ! zsh_cv_struct_utmp_ut_host=yes, zsh_cv_struct_utmp_ut_host=no)])
      ! if test $zsh_cv_struct_utmp_ut_host = yes; then
          have_ut_host=1
          AC_DEFINE(HAVE_UT_HOST)
        fi
        
        if test -z "$have_ut_host"; then
      !   AC_CACHE_CHECK(ut_host in struct utmpx, zsh_cv_struct_utmpx_ut_host,
          [AC_TRY_COMPILE([#include <sys/types.h>
        #include <utmpx.h>], [struct utmpx ut; ut.ut_host;],
      !   zsh_cv_struct_utmpx_ut_host=yes, zsh_cv_struct_utmpx_ut_host=no)])
      !   if test $zsh_cv_struct_utmpx_ut_host = yes; then
            AC_DEFINE(HAVE_UTMPX_H)
            AC_DEFINE(HAVE_UT_HOST)
          fi
      ***************
      *** 294,318 ****
        
        if test $zsh_cv_sys_posix_termios = yes; then
          AC_CACHE_CHECK(TIOCGWINSZ in termios.h,
      !   zsh_cv_sys_tiocgwinsz_in_termios_h,
          [AC_TRY_LINK([#include <sys/types.h>
        #include <termios.h>],
          [int x = TIOCGWINSZ;],
      !   zsh_cv_sys_tiocgwinsz_in_termios_h=yes,
      !   zsh_cv_sys_tiocgwinsz_in_termios_h=no)])
        else
      !   zsh_cv_sys_tiocgwinsz_in_termios_h=no
        fi
         
      ! if test $zsh_cv_sys_tiocgwinsz_in_termios_h = no; then
          AC_CACHE_CHECK(TIOCGWINSZ in sys/ioctl.h,
      !   zsh_cv_sys_tiocgwinsz_in_sys_ioctl_h,
          [AC_TRY_LINK([#include <sys/types.h>
        #include <sys/ioctl.h>],
          [int x = TIOCGWINSZ;],
      !   zsh_cv_sys_tiocgwinsz_in_sys_ioctl_h=yes,
      !   zsh_cv_sys_tiocgwinsz_in_sys_ioctl_h=no)])
      !   if test $zsh_cv_sys_tiocgwinsz_in_sys_ioctl_h = yes; then
            AC_DEFINE(GWINSZ_IN_SYS_IOCTL)
          fi
        fi
      --- 294,318 ----
        
        if test $zsh_cv_sys_posix_termios = yes; then
          AC_CACHE_CHECK(TIOCGWINSZ in termios.h,
      !   zsh_cv_header_termios_h_tiocgwinsz,
          [AC_TRY_LINK([#include <sys/types.h>
        #include <termios.h>],
          [int x = TIOCGWINSZ;],
      !   zsh_cv_header_termios_h_tiocgwinsz=yes,
      !   zsh_cv_header_termios_h_tiocgwinsz=no)])
        else
      !   zsh_cv_header_termios_h_tiocgwinsz=no
        fi
         
      ! if test $zsh_cv_header_termios_h_tiocgwinsz = no; then
          AC_CACHE_CHECK(TIOCGWINSZ in sys/ioctl.h,
      !   zsh_cv_header_sys_ioctl_h_tiocgwinsz,
          [AC_TRY_LINK([#include <sys/types.h>
        #include <sys/ioctl.h>],
          [int x = TIOCGWINSZ;],
      !   zsh_cv_header_sys_ioctl_h_tiocgwinsz=yes,
      !   zsh_cv_header_sys_ioctl_h_tiocgwinsz=no)])
      !   if test $zsh_cv_header_sys_ioctl_h_tiocgwinsz = yes; then
            AC_DEFINE(GWINSZ_IN_SYS_IOCTL)
          fi
        fi
      ***************
      *** 346,352 ****
        dnl ---------------------
        dnl Checks for external variable ospeed in the termcap library.
        AC_CACHE_CHECK(if an include file defines ospeed,
      ! zsh_cv_include_defines_ospeed,
        [AC_TRY_LINK(
        [#include <sys/types.h>
        #if HAVE_TERMIOS_H
      --- 346,352 ----
        dnl ---------------------
        dnl Checks for external variable ospeed in the termcap library.
        AC_CACHE_CHECK(if an include file defines ospeed,
      ! zsh_cv_decl_ospeed_include_defines,
        [AC_TRY_LINK(
        [#include <sys/types.h>
        #if HAVE_TERMIOS_H
      ***************
      *** 355,385 ****
        #if HAVE_TERMCAP_H
        #include <termcap.h>
        #endif], [ospeed = 0;],
      ! zsh_cv_include_defines_ospeed=yes,
      ! zsh_cv_include_defines_ospeed=no)])
        
      ! if test $zsh_cv_include_defines_ospeed = no; then
          AC_CACHE_CHECK(if you must define ospeed,
      !   zsh_cv_must_define_ospeed,
          [AC_TRY_LINK( ,[extern short ospeed; ospeed = 0;],
      !   zsh_cv_must_define_ospeed=yes,
      !   zsh_cv_must_define_ospeed=no)])
        fi
        
      ! if test $zsh_cv_include_defines_ospeed = yes; then
          AC_DEFINE(HAVE_OSPEED)
      ! elif test $zsh_cv_must_define_ospeed = yes; then
          AC_DEFINE(HAVE_OSPEED)
          AC_DEFINE(MUST_DEFINE_OSPEED)
        fi
        
        dnl  Check if tgetent accepts NULL (and will allocate its own termcap buffer)
        AC_CACHE_CHECK(if tgetent accepts NULL,
      ! zsh_cv_tgetent_accepts_null,
        [AC_TRY_RUN([main(){int i = tgetent((char*)0,"vt100");exit(!i || i == -1);}],
      !   zsh_cv_tgetent_accepts_null=yes,
      !   zsh_cv_tgetent_accepts_null=no)])
      ! if test $zsh_cv_tgetent_accepts_null = yes; then
          AC_DEFINE(TGETENT_ACCEPTS_NULL)
        fi
        
      --- 355,385 ----
        #if HAVE_TERMCAP_H
        #include <termcap.h>
        #endif], [ospeed = 0;],
      ! zsh_cv_decl_ospeed_include_defines=yes,
      ! zsh_cv_decl_ospeed_include_defines=no)])
        
      ! if test $zsh_cv_decl_ospeed_include_defines = no; then
          AC_CACHE_CHECK(if you must define ospeed,
      !   zsh_cv_decl_ospeed_must_define,
          [AC_TRY_LINK( ,[extern short ospeed; ospeed = 0;],
      !   zsh_cv_decl_ospeed_must_define=yes,
      !   zsh_cv_decl_ospeed_must_define=no)])
        fi
        
      ! if test $zsh_cv_decl_ospeed_include_defines = yes; then
          AC_DEFINE(HAVE_OSPEED)
      ! elif test $zsh_cv_decl_ospeed_must_define = yes; then
          AC_DEFINE(HAVE_OSPEED)
          AC_DEFINE(MUST_DEFINE_OSPEED)
        fi
        
        dnl  Check if tgetent accepts NULL (and will allocate its own termcap buffer)
        AC_CACHE_CHECK(if tgetent accepts NULL,
      ! zsh_cv_func_tgetent_accepts_null,
        [AC_TRY_RUN([main(){int i = tgetent((char*)0,"vt100");exit(!i || i == -1);}],
      !   zsh_cv_func_tgetent_accepts_null=yes,
      !   zsh_cv_func_tgetent_accepts_null=no)])
      ! if test $zsh_cv_func_tgetent_accepts_null = yes; then
          AC_DEFINE(TGETENT_ACCEPTS_NULL)
        fi
        
      ***************
      *** 396,407 ****
        dnl Check for sigset_t.  Currently I'm looking in
        dnl <sys/types.h> and <signal.h>.  Others might need
        dnl to be added.
      ! AC_CACHE_CHECK(for sigset_t, zsh_cv_sigset_t,
        [AC_TRY_COMPILE(
        [#include <sys/types.h>
        #include <signal.h>], [sigset_t tempsigset;],
      !   zsh_cv_sigset_t=yes, zsh_cv_sigset_t=no)])
      ! if test $zsh_cv_sigset_t = no; then
          AC_DEFINE(sigset_t, unsigned int)
        fi
        
      --- 396,407 ----
        dnl Check for sigset_t.  Currently I'm looking in
        dnl <sys/types.h> and <signal.h>.  Others might need
        dnl to be added.
      ! AC_CACHE_CHECK(for sigset_t, zsh_cv_type_sigset_t,
        [AC_TRY_COMPILE(
        [#include <sys/types.h>
        #include <signal.h>], [sigset_t tempsigset;],
      !   zsh_cv_type_sigset_t=yes, zsh_cv_type_sigset_t=no)])
      ! if test $zsh_cv_type_sigset_t = no; then
          AC_DEFINE(sigset_t, unsigned int)
        fi
        
      ***************
      *** 449,511 ****
        AC_MSG_RESULT($signals_style)
        
        dnl Where is <signal.h> located?  Needed as input for signals.awk
      ! AC_MSG_CHECKING(where signal.h is located)
      ! for SIGNAL_H in /usr/include/bsd/sys/signal.h   dnl Next
      !                 /usr/include/asm/signal.h       dnl Linux 1.3.0 and above
      !                 /usr/include/linux/signal.h     dnl Linux up to 1.2.11
      !                 /usr/include/sys/signal.h       dnl Almost everybody else
      !                 /dev/null;                      dnl Just in case we fall through
        do
          test -f $SIGNAL_H && \
          grep '#[ 	]*define[ 	][ 	]*SIG[0-9A-Z]*[ 	]*[0-9][0-9]*' $SIGNAL_H > /dev/null && \
          break
        done
      ! AC_MSG_RESULT($SIGNAL_H)
        AC_SUBST(SIGNAL_H)dnl
        
        dnl ----------------------------
        dnl CHECK FOR /dev/fd FILESYSTEM
        dnl ----------------------------
      ! AC_CACHE_CHECK(for /dev/fd filesystem, zsh_cv_have_dev_fd,
      ! [test -d /dev/fd && zsh_cv_have_dev_fd=yes || zsh_cv_have_dev_fd=no])
      ! if test $zsh_cv_have_dev_fd = yes; then
          AC_DEFINE(HAVE_DEV_FD)
        fi
        
        dnl ---------------------------------
        dnl CHECK FOR RFS SUPERROOT DIRECTORY
        dnl ---------------------------------
      ! AC_CACHE_CHECK(for RFS superroot directory, zsh_cv_have_superroot,
      ! [test -d /../.LOCALROOT && zsh_cv_have_superroot=yes || zsh_cv_have_superroot=no])
      ! if test $zsh_cv_have_superroot = yes; then
          AC_DEFINE(HAVE_SUPERROOT)
        fi
        
        dnl -------------
        dnl CHECK FOR NIS
        dnl -------------
      ! AC_CACHE_CHECK(for NIS, zsh_cv_have_nis,
        [test -f /usr/bin/ypcat && /usr/bin/ypcat passwd.byname > /dev/null 2>&1 && \
      ! zsh_cv_have_nis=yes || zsh_cv_have_nis=no])
      ! if test $zsh_cv_have_nis = yes; then
          AC_DEFINE(HAVE_NIS)
        fi
        
        dnl -----------------
        dnl CHECK FOR NISPLUS
        dnl -----------------
      ! AC_CACHE_CHECK(for NIS+, zsh_cv_have_nis_plus,
        [test -f /usr/bin/nisls && /usr/bin/nisls > /dev/null 2>&1 && \
      ! zsh_cv_have_nis_plus=yes || zsh_cv_have_nis_plus=no])
      ! if test $zsh_cv_have_nis_plus = yes; then
          AC_DEFINE(HAVE_NIS_PLUS)
        fi
        
        dnl -------------------------------
        dnl CHECK FOR LOCATION OF UTMP FILE
        dnl -------------------------------
      ! AC_MSG_CHECKING(where utmp is located)
      ! for utmp_file in /etc/utmp       dnl
                         /usr/etc/utmp   dnl
                         /var/adm/utmp   dnl
                         /usr/adm/utmp   dnl
      --- 449,513 ----
        AC_MSG_RESULT($signals_style)
        
        dnl Where is <signal.h> located?  Needed as input for signals.awk
      ! AC_CACHE_CHECK(where signal.h is located, zsh_cv_path_signal_h,
      ! [for SIGNAL_H in /usr/include/bsd/sys/signal.h  dnl Next
      !                  /usr/include/asm/signal.h      dnl Linux 1.3.0 and above
      !                  /usr/include/linux/signal.h    dnl Linux up to 1.2.11
      !                  /usr/include/sys/signal.h      dnl Almost everybody else
      !                  /dev/null;                     dnl Just in case we fall through
        do
          test -f $SIGNAL_H && \
          grep '#[ 	]*define[ 	][ 	]*SIG[0-9A-Z]*[ 	]*[0-9][0-9]*' $SIGNAL_H > /dev/null && \
          break
        done
      ! zsh_cv_path_signal_h=$SIGNAL_H
      ! ])
      ! SIGNAL_H=$zsh_cv_path_signal_h
        AC_SUBST(SIGNAL_H)dnl
        
        dnl ----------------------------
        dnl CHECK FOR /dev/fd FILESYSTEM
        dnl ----------------------------
      ! AC_CACHE_CHECK(for /dev/fd filesystem, zsh_cv_sys_dev_fd,
      ! [test -d /dev/fd && zsh_cv_sys_dev_fd=yes || zsh_cv_sys_dev_fd=no])
      ! if test $zsh_cv_sys_dev_fd = yes; then
          AC_DEFINE(HAVE_DEV_FD)
        fi
        
        dnl ---------------------------------
        dnl CHECK FOR RFS SUPERROOT DIRECTORY
        dnl ---------------------------------
      ! AC_CACHE_CHECK(for RFS superroot directory, zsh_cv_sys_superroot,
      ! [test -d /../.LOCALROOT && zsh_cv_sys_superroot=yes || zsh_cv_sys_superroot=no])
      ! if test $zsh_cv_sys_superroot = yes; then
          AC_DEFINE(HAVE_SUPERROOT)
        fi
        
        dnl -------------
        dnl CHECK FOR NIS
        dnl -------------
      ! AC_CACHE_CHECK(for NIS, zsh_cv_sys_nis,
        [test -f /usr/bin/ypcat && /usr/bin/ypcat passwd.byname > /dev/null 2>&1 && \
      ! zsh_cv_sys_nis=yes || zsh_cv_sys_nis=no])
      ! if test $zsh_cv_sys_nis = yes; then
          AC_DEFINE(HAVE_NIS)
        fi
        
        dnl -----------------
        dnl CHECK FOR NISPLUS
        dnl -----------------
      ! AC_CACHE_CHECK(for NIS+, zsh_cv_sys_nis_plus,
        [test -f /usr/bin/nisls && /usr/bin/nisls > /dev/null 2>&1 && \
      ! zsh_cv_sys_nis_plus=yes || zsh_cv_sys_nis_plus=no])
      ! if test $zsh_cv_sys_nis_plus = yes; then
          AC_DEFINE(HAVE_NIS_PLUS)
        fi
        
        dnl -------------------------------
        dnl CHECK FOR LOCATION OF UTMP FILE
        dnl -------------------------------
      ! AC_CACHE_CHECK(where utmp is located, zsh_cv_path_utmp,
      ! [for utmp_file in /etc/utmp      dnl
                         /usr/etc/utmp   dnl
                         /var/adm/utmp   dnl
                         /usr/adm/utmp   dnl
      ***************
      *** 514,527 ****
        do
          test -f $utmp_file && break
        done
      ! AC_MSG_RESULT($utmp_file)
      ! AC_DEFINE_UNQUOTED(UTMP_FILE_CONFIG, "$utmp_file")
        
        dnl -------------------------------
        dnl CHECK FOR LOCATION OF WTMP FILE
        dnl -------------------------------
      ! AC_MSG_CHECKING(where wtmp is located)
      ! for wtmp_file in /etc/wtmp      dnl
                         /usr/etc/wtmp  dnl
                         /var/adm/wtmp  dnl
                         /usr/adm/wtmp  dnl
      --- 516,530 ----
        do
          test -f $utmp_file && break
        done
      ! zsh_cv_path_utmp=$utmp_file
      ! ])
      ! AC_DEFINE_UNQUOTED(UTMP_FILE_CONFIG, "$zsh_cv_path_utmp")
        
        dnl -------------------------------
        dnl CHECK FOR LOCATION OF WTMP FILE
        dnl -------------------------------
      ! AC_CACHE_CHECK(where wtmp is located, zsh_cv_path_wtmp,
      ! [for wtmp_file in /etc/wtmp     dnl
                         /usr/etc/wtmp  dnl
                         /var/adm/wtmp  dnl
                         /usr/adm/wtmp  dnl
      ***************
      *** 530,537 ****
        do
          test -f $wtmp_file && break
        done
      ! AC_DEFINE_UNQUOTED(WTMP_FILE_CONFIG, "$wtmp_file")
      ! AC_MSG_RESULT($wtmp_file)
        
        dnl ----------------------------
        dnl TYPEAHEAD KLUDGE FOR ULTRIX
      --- 533,541 ----
        do
          test -f $wtmp_file && break
        done
      ! zsh_cv_path_wtmp=$wtmp_file
      ! ])
      ! AC_DEFINE_UNQUOTED(WTMP_FILE_CONFIG, "$zsh_cv_path_wtmp")
        
        dnl ----------------------------
        dnl TYPEAHEAD KLUDGE FOR ULTRIX
      ***************
      *** 541,550 ****
        dnl I don't know how to check this with configure, so I am using the
        dnl system names directly.
        dnl The doubled square brackets are necessary because autoconf uses m4.
      ! AC_CACHE_CHECK(if typeahead needs FIONREAD, zsh_cv_clobbers_typeahead,
        [test `echo $host_os | sed 's/^\([[a-z]]*\).*/\1/'` = ultrix &&
      ! zsh_cv_clobbers_typeahead=yes || zsh_cv_clobbers_typeahead=no])
      ! if test $zsh_cv_clobbers_typeahead = yes; then
          AC_DEFINE(CLOBBERS_TYPEAHEAD)
        fi
        
      --- 545,554 ----
        dnl I don't know how to check this with configure, so I am using the
        dnl system names directly.
        dnl The doubled square brackets are necessary because autoconf uses m4.
      ! AC_CACHE_CHECK(if typeahead needs FIONREAD, zsh_cv_sys_clobbers_typeahead,
        [test `echo $host_os | sed 's/^\([[a-z]]*\).*/\1/'` = ultrix &&
      ! zsh_cv_sys_clobbers_typeahead=yes || zsh_cv_sys_clobbers_typeahead=no])
      ! if test $zsh_cv_sys_clobbers_typeahead = yes; then
          AC_DEFINE(CLOBBERS_TYPEAHEAD)
        fi
        
      ***************
      *** 552,571 ****
        dnl brk/sbrk PROTOTYPES
        dnl -------------------
        AC_CACHE_CHECK(for brk() prototype in <unistd.h>,
      ! zsh_cv_brk_proto_in_unistd_h,
        [AC_TRY_COMPILE([#include <unistd.h>
        double brk();], [int i;],
      ! zsh_cv_brk_proto_in_unistd_h=no, zsh_cv_brk_proto_in_unistd_h=yes)])
      ! if test $zsh_cv_brk_proto_in_unistd_h = yes; then
          AC_DEFINE(HAVE_BRK_PROTO)
        fi
        
        AC_CACHE_CHECK(for sbrk() prototype in <unistd.h>,
      ! zsh_cv_sbrk_proto_in_unistd_h,
        [AC_TRY_COMPILE([#include <unistd.h>
        double sbrk();], [int i;],
      ! zsh_cv_sbrk_proto_in_unistd_h=no, zsh_cv_sbrk_proto_in_unistd_h=yes)])
      ! if test $zsh_cv_sbrk_proto_in_unistd_h = yes; then
          AC_DEFINE(HAVE_SBRK_PROTO)
        fi
        
      --- 556,575 ----
        dnl brk/sbrk PROTOTYPES
        dnl -------------------
        AC_CACHE_CHECK(for brk() prototype in <unistd.h>,
      ! zsh_cv_header_unistd_h_brk_proto,
        [AC_TRY_COMPILE([#include <unistd.h>
        double brk();], [int i;],
      ! zsh_cv_header_unistd_h_brk_proto=no, zsh_cv_header_unistd_h_brk_proto=yes)])
      ! if test $zsh_cv_header_unistd_h_brk_proto = yes; then
          AC_DEFINE(HAVE_BRK_PROTO)
        fi
        
        AC_CACHE_CHECK(for sbrk() prototype in <unistd.h>,
      ! zsh_cv_header_unistd_h_sbrk_proto,
        [AC_TRY_COMPILE([#include <unistd.h>
        double sbrk();], [int i;],
      ! zsh_cv_header_unistd_h_sbrk_proto=no, zsh_cv_header_unistd_h_sbrk_proto=yes)])
      ! if test $zsh_cv_header_unistd_h_sbrk_proto = yes; then
          AC_DEFINE(HAVE_SBRK_PROTO)
        fi
        

-----BEGIN PGP SIGNATURE-----
Version: 2.6.2

iQCVAwUBMe4SB3D/+HJTpU/hAQFZNAP+KMWSfAuA63HdgDsQASkZ/K6bOmHqRKP5
J0hIJxRd7HWvDCBcQuUbGxrLu4xVCMNxx+1/IwjidXOxUQbstgWh88uXJnG+4Gvp
c2LRHk7f7dCR1lbQIkdm5efHwvBFOucwbNv8Akos1G0NPH3vlAbVHkmyC7lI4OTX
lPuKm8UlICU=
=vnMV
-----END PGP SIGNATURE-----


