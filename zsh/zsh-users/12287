From zsh-users-return-12287-mason-zsh=primenet.com.au@sunsite.dk Tue Dec 04 13:10:37 2007
Return-Path: <zsh-users-return-12287-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 17155 invoked from network); 4 Dec 2007 13:10:29 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.3 (2007-08-08) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.3
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 4 Dec 2007 13:10:29 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 17090 invoked from network); 4 Dec 2007 13:10:24 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 4 Dec 2007 13:10:24 -0000
Received: (qmail 27175 invoked by alias); 4 Dec 2007 13:10:09 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12287
Received: (qmail 27158 invoked from network); 4 Dec 2007 13:10:08 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 4 Dec 2007 13:10:08 -0000
Received: (qmail 15696 invoked from network); 4 Dec 2007 13:10:08 -0000
Received: from cluster-g.mailcontrol.com (85.115.41.190)
  by a.mx.sunsite.dk with SMTP; 4 Dec 2007 13:10:01 -0000
Received: from cameurexb01.EUROPE.ROOT.PRI ([62.189.241.200])
	by rly09g.srv.mailcontrol.com (MailControl) with ESMTP id lB4D9j8H015554
	for <zsh-users@sunsite.dk>; Tue, 4 Dec 2007 13:09:57 GMT
Received: from news01.csr.com ([10.103.143.38]) by cameurexb01.EUROPE.ROOT.PRI with Microsoft SMTPSVC(6.0.3790.1830);
	 Tue, 4 Dec 2007 13:09:49 +0000
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.14.1/8.13.4) with ESMTP id lB4D9nWx006240
	for <zsh-users@sunsite.dk>; Tue, 4 Dec 2007 13:09:49 GMT
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.14.1/8.14.1/Submit) with ESMTP id lB4D9nrk006237
	for <zsh-users@sunsite.dk>; Tue, 4 Dec 2007 13:09:49 GMT
Message-Id: <200712041309.lB4D9nrk006237@news01.csr.com>
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: Zsh Users <zsh-users@sunsite.dk>
Subject: Re: outputting quotes in a command
In-reply-to: <20071204124228.GA31450@fruitcom.com>
References: <20071204124228.GA31450@fruitcom.com>
Comments: In-reply-to Eric Smith <es@fruitcom.com>
   message dated "Tue, 04 Dec 2007 13:42:28 +0100."
Date: Tue, 04 Dec 2007 13:09:49 +0000
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 04 Dec 2007 13:09:50.0005 (UTC) FILETIME=[F38AA650:01C83676]
X-Scanned-By: MailControl A-06-00-00 (www.mailcontrol.com) on 10.71.0.119

Eric Smith wrote:
> I want to output from a script the following command
> (obviously where I will have foo bar as variables).
> 
>  $  mutt -f foo -e 'push "<limit> ~f bar ~d <2w^M"'
> Where ^M represents a carriage return

(I presume you're outputting to a file, otherwise the carriage return
will cause the last couple of characters to be output at the beginning
of the line.)

There are various ways. One way is to avoid having to
quote the form of quotation you're using at that point:

print "mutt -f foo -e 'push "'"<limit> ~f bar ~d <2w\r"'"'"

although it might be better with a bit of backslashing just to avoid
confusingly swapping quotes:

print "mutt -f foo -e 'push \"<limit> ~f bar ~d <2w\r\"'"

If foo and bar can themselves include arbitrary characters, the best
thing to do is use the parameter substitution flags to quote them, and
use raw print while getting $'...' to do the work of the carriage return:

print -r "mutt -f" ${(q):-foo} -e "'push \"<limit> ~f" ${(q):-bar} \
  $'~d <2w\r"\''

(I've done that rather pedantically by quoting a literal foo or bar to
get what I had before; omit the ":-"s when you have real variables.)

However, assuming the line you've output is to be reinterpreted by zsh,
it might well be better still to output the code to output a carriage
return, if you see what I mean, rather than have it raw in the file:

print -r "mutt -f" ${(q):-foo} -e "'push \"<limit> ~f" ${(q):-bar} \
  "~d <2w'\$'\\r\"'"

That's really quite hairy:  you're outputting

mutt -f foo -e 'push "<limit> ~f bar ~d <2w'$'\r"'

in which the \r is interpreted when the line is evaluated by the shell,
so that the final argument appears as the single string

push "<limit> ~f bar ~d <2w^M"

where ^M is now a literal carriage return.  I think.

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070

