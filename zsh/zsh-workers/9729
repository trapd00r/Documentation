From zsh-workers-return-9729-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Feb 14 19:10:29 2000
Return-Path: <zsh-workers-return-9729-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 9099 invoked from network); 14 Feb 2000 19:10:28 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 14 Feb 2000 19:10:28 -0000
Received: (qmail 10960 invoked by alias); 14 Feb 2000 19:10:23 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 9729
Received: (qmail 10953 invoked from network); 14 Feb 2000 19:10:22 -0000
To: "ZSH workers mailing list" <zsh-workers@sunsite.auc.dk>
Subject: Re: RFD: Zsh styles and OOP ... 
In-reply-to: ""Andrej Borsenkow""'s message of "Mon, 14 Feb 2000 13:50:06 +0300."
             <000101bf76d9$415ce110$21c9ca95@mow.siemens.ru> 
Date: Mon, 14 Feb 2000 19:13:53 +0000
From: Peter Stephenson <pws@pwstephenson.fsnet.co.uk>
Message-Id: <E12KQsz-0003hV-00.2000-02-14-19-10-18@mail1.svr.pol.co.uk>

"Andrej Borsenkow" wrote:
> I believe, it would be of real help to developers as well to
> 
> - clear define what sorts of objects exist
> - what properties do they have
> - use context names, that refelect actual object hierarchy without need of
> dummy placeholders or fake "match it all" entries
> 
> It would of much help to users if they had context/tags/styles descriprion
> divided into subgroups for every object type instead of current long list.
> 
> Not sure how interesting it is ...

This is certainly interesting.  Unfortunately it's going to make the whole
thing even more complicated, both for implementation and use.  Furthermore,
we really need this to be right in 3.1.7 --- I would be against rewriting
the configuration for completion yet again.  So unless we can come up with
something reasonably simple quite quickly --- such as an extension of
the notion of context in a more object-oriented way --- we're probably
stuck with what we've got.  I don't think it's so bad; I agree it's a bit
of a nuisance that you can often only use bits of the context, but if you
think of it as an array of entries --- which was the point of the change to
fixed elements --- it's more logical.  It's not any worse than X fonts.

One half-formed idea in my mind is that you specify styles with a set of
key/value pairs, which maps to a hash internally, in other words you can
specify "system => completion, completer => complete, tag => directories",
or something like that; the values are patterns as before, and anything not
specified is a wildcard.  I don't know whether or not that has legs.

-- 
Peter Stephenson <pws@pwstephenson.fsnet.co.uk>

