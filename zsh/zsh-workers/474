From zsh-workers-request@math.gatech.edu  Wed Oct 18 19:56:30 1995
Received: from gatech.edu (gatech.edu [130.207.244.244]) by werple.net.au (8.7/8.7) with SMTP id TAA06525 for <mason@werple.mira.net.au>; Wed, 18 Oct 1995 19:56:08 +1000 (EST)
Received: from euclid (euclid.skiles.gatech.edu) by gatech.edu with SMTP id AA26935
  (5.65c/Gatech-10.0-IDA for <mason@werple.mira.net.au>); Wed, 18 Oct 1995 05:53:21 -0400
Received: by euclid (5.x/SMI-SVR4)
	id AA04114; Wed, 18 Oct 1995 05:51:21 -0400
Resent-Date: Wed, 18 Oct 1995 19:51:13 +1000 (EST)
Old-Return-Path: <pbray@ind.tansu.com.au>
From: Peter Bray <pbray@ind.tansu.com.au>
Message-Id: <199510180951.TAA09136@elk.cssc-syd.tansu.com.au>
Subject: !$ expansion error in 2.6 betas
To: zsh-workers@math.gatech.edu
Date: Wed, 18 Oct 1995 19:51:13 +1000 (EST)
Cc: pbray@ind.tansu.com.au (Peter Bray)
X-Mailer: ELM [version 2.4 PL24]
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-Id: <"_EUEc2.0.801.OuCXm"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/474
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu


Greetings,

	In the versions of 2.6 beta I've tried 5,7,9,10 we are experiencing
a problem which does not seem to happen in 2.5.03

	type "echo hello" and press return => hello
	type "echo !$" and press return    => echo hello

	type "echo ^[_" and the line say "echo hello"
	type "echo !$^I" (ie tab) and you get "echo echo hello"

	So the function z_insertlastword works but how ever the !$ is
	interpretted (I couldnt work that out) it not being done correctly

	The same thing happens with its equivalent !!:$

	Advice or a patch would be greatfully appreciated

Many Thanks in Advance
Peter

------------------------------------------------------------------------------
Peter Bray: Intelligent Network Development           Phone : (02) 395 3958
            Network Technology Group - Telstra        Fax   : (02) 395 3225
Street    : Lvl 9, Telecom Plaza, 320 Pitt St, Sydney Email : 
Mail      : Locked Bag 6581, GPO Sydney, NSW, 2001     pbray@ind.tansu.com.au
------------------------------------------------------------------------------
After hacking reporter to use /usr/ccs/lib/cpp and gawk for completions we have


# START zsh saveset
# uname:  SunOS swan 5.4 generic sun4m sparc

# Aliases.

alias run-help='man'
alias which-command='whence'

# Key bindings.

bindkey -r "^@"
bindkey -r "^A"
bindkey -r "^B"
bindkey -r "^C"
bindkey -r "^D"
bindkey -r "^E"
bindkey -r "^F"
bindkey -r "^G"
bindkey -r "^H"
bindkey -r "^I"
bindkey -r "^J"
bindkey -r "^K"
bindkey -r "^L"
bindkey -r "^M"
bindkey -r "^N"
bindkey -r "^O"
bindkey -r "^P"
bindkey -r "^Q"
bindkey -r "^R"
bindkey -r "^S"
bindkey -r "^T"
bindkey -r "^U"
bindkey -r "^V"
bindkey -r "^W"
bindkey -r "^X"
bindkey -r "^Y"
bindkey -r "^Z"
bindkey -r "\e"
bindkey -r "^_"
bindkey -r "^?"
bindkey -r "^X^B"
bindkey -r "^X^F"
bindkey -r "^X^J"
bindkey -r "^X^K"
bindkey -r "^X^N"
bindkey -r "^X^O"
bindkey -r "^X^U"
bindkey -r "^X^V"
bindkey -r "^X^X"
bindkey -r "^X*"
bindkey -r "^XG"
bindkey -r "^Xg"
bindkey -r "^Xr"
bindkey -r "^Xs"
bindkey -r "^Xu"
bindkey -r "\e^D"
bindkey -r "\e^G"
bindkey -r "\e^H"
bindkey -r "\e^I"
bindkey -r "\e^J"
bindkey -r "\e^L"
bindkey -r "\e^M"
bindkey -r "\e^_"
bindkey -r "\e "
bindkey -r "\e!"
bindkey -r "\e\""
bindkey -r "\e$"
bindkey -r "\e'"
bindkey -r "\e-"
bindkey -r "\e."
bindkey -r "\e0"
bindkey -r "\e1"
bindkey -r "\e2"
bindkey -r "\e3"
bindkey -r "\e4"
bindkey -r "\e5"
bindkey -r "\e6"
bindkey -r "\e7"
bindkey -r "\e8"
bindkey -r "\e9"
bindkey -r "\e<"
bindkey -r "\e>"
bindkey -r "\e?"
bindkey -r "\eA"
bindkey -r "\eB"
bindkey -r "\eC"
bindkey -r "\eD"
bindkey -r "\eF"
bindkey -r "\eG"
bindkey -r "\eH"
bindkey -r "\eL"
bindkey -r "\eN"
bindkey -r "\eP"
bindkey -r "\eQ"
bindkey -r "\eR"
bindkey -r "\eS"
bindkey -r "\eT"
bindkey -r "\eU"
bindkey -r "\eW"
bindkey -r "\e[A"
bindkey -r "\e[B"
bindkey -r "\e[C"
bindkey -r "\e[D"
bindkey -r "\e_"
bindkey -r "\ea"
bindkey -r "\eb"
bindkey -r "\ec"
bindkey -r "\ed"
bindkey -r "\ef"
bindkey -r "\eg"
bindkey -r "\eh"
bindkey -r "\el"
bindkey -r "\en"
bindkey -r "\ep"
bindkey -r "\eq"
bindkey -r "\er"
bindkey -r "\es"
bindkey -r "\et"
bindkey -r "\eu"
bindkey -r "\ew"
bindkey -r "\ex"
bindkey -r "\ey"
bindkey -r "\ez"
bindkey -r "\e|"
bindkey -r "\e^?"

bindkey "^@"	set-mark-command
bindkey "^A"	beginning-of-line
bindkey "^B"	backward-char
bindkey "^C"	undefined-key
bindkey "^D"	delete-char-or-list
bindkey "^E"	end-of-line
bindkey "^F"	forward-char
bindkey "^G"	send-break
bindkey "^H"	backward-delete-char
bindkey "^I"	expand-or-complete
bindkey "^J"	accept-line
bindkey "^K"	kill-line
bindkey "^L"	clear-screen
bindkey "^M"	accept-line
bindkey "^N"	down-line-or-history
bindkey "^O"	accept-line-and-down-history
bindkey "^P"	up-line-or-history
bindkey "^Q"	push-line
bindkey "^R"	history-incremental-search-backward
bindkey "^S"	history-incremental-search-forward
bindkey "^T"	transpose-chars
bindkey "^U"	kill-whole-line
bindkey "^V"	quoted-insert
bindkey "^W"	backward-kill-word
bindkey "^X"	prefix
bindkey "^Y"	yank
bindkey "^Z"	undefined-key
bindkey "\e"	prefix
bindkey "^_"	undo
bindkey "^?"	backward-delete-char
bindkey "^X^B"	vi-match-bracket
bindkey "^X^F"	vi-find-next-char
bindkey "^X^J"	vi-join
bindkey "^X^K"	kill-buffer
bindkey "^X^N"	infer-next-history
bindkey "^X^O"	overwrite-mode
bindkey "^X^U"	undo
bindkey "^X^V"	vi-cmd-mode
bindkey "^X^X"	exchange-point-and-mark
bindkey "^X*"	expand-word
bindkey "^XG"	list-expand
bindkey "^Xg"	list-expand
bindkey "^Xr"	history-incremental-search-backward
bindkey "^Xs"	history-incremental-search-forward
bindkey "^Xu"	undo
bindkey "\e^D"	list-choices
bindkey "\e^G"	send-break
bindkey "\e^H"	backward-kill-word
bindkey "\e^I"	self-insert-unmeta
bindkey "\e^J"	self-insert-unmeta
bindkey "\e^L"	clear-screen
bindkey "\e^M"	self-insert-unmeta
bindkey "\e^_"	copy-prev-word
bindkey "\e "	expand-history
bindkey "\e!"	expand-history
bindkey "\e\""	quote-region
bindkey "\e$"	spell-word
bindkey "\e'"	quote-line
bindkey "\e-"	neg-argument
bindkey "\e."	insert-last-word
bindkey "\e0"	digit-argument
bindkey "\e1"	digit-argument
bindkey "\e2"	digit-argument
bindkey "\e3"	digit-argument
bindkey "\e4"	digit-argument
bindkey "\e5"	digit-argument
bindkey "\e6"	digit-argument
bindkey "\e7"	digit-argument
bindkey "\e8"	digit-argument
bindkey "\e9"	digit-argument
bindkey "\e<"	beginning-of-buffer-or-history
bindkey "\e>"	end-of-buffer-or-history
bindkey "\e?"	which-command
bindkey "\eA"	accept-and-hold
bindkey "\eB"	backward-word
bindkey "\eC"	capitalize-word
bindkey "\eD"	kill-word
bindkey "\eF"	forward-word
bindkey "\eG"	get-line
bindkey "\eH"	run-help
bindkey "\eL"	down-case-word
bindkey "\eN"	history-search-forward
bindkey "\eP"	history-search-backward
bindkey "\eQ"	push-line
bindkey "\eR"	toggle-literal-history
bindkey "\eS"	spell-word
bindkey "\eT"	transpose-words
bindkey "\eU"	up-case-word
bindkey "\eW"	copy-region-as-kill
bindkey "\e[A"	up-line-or-history
bindkey "\e[B"	down-line-or-history
bindkey "\e[C"	forward-char
bindkey "\e[D"	backward-char
bindkey "\e_"	insert-last-word
bindkey "\ea"	accept-and-hold
bindkey "\eb"	backward-word
bindkey "\ec"	capitalize-word
bindkey "\ed"	kill-word
bindkey "\ef"	forward-word
bindkey "\eg"	get-line
bindkey "\eh"	run-help
bindkey "\el"	down-case-word
bindkey "\en"	history-search-forward
bindkey "\ep"	history-search-backward
bindkey "\eq"	push-line
bindkey "\er"	toggle-literal-history
bindkey "\es"	spell-word
bindkey "\et"	transpose-words
bindkey "\eu"	up-case-word
bindkey "\ew"	copy-region-as-kill
bindkey "\ex"	execute-named-cmd
bindkey "\ey"	yank-pop
bindkey "\ez"	execute-last-named-cmd
bindkey "\e|"	vi-goto-column
bindkey "\e^?"	backward-kill-word

# Completions.

compctl  -b  bindkey
compctl  -c  builtin
compctl  -v  export
compctl  -o  setopt
compctl  -v  typeset
compctl  -v  unset
compctl  -o  unsetopt
compctl  -v  vared
compctl  -c  which
compctl -C -c 
compctl -D -f 
compctl   FIRST

# Undefined functions.


# Defined functions.


# Limits.

limit datasize        2047MB
limit stacksize       8MB
limit descriptors     64

# Non-array variables.

TERMCAP=''
TERM='xterm'
ARGC="0"
BASH="/pkgs/gnu/bin/bash"
BAUD="9600"
CDPATH=".:{/opt/home/pbray}"
COLUMNS="80"
DIRSTACKSIZE="-1"
DISPLAY=":0.0"
EGID="10"
ERRNO="9"
EUID="100"
FCEDIT="vi"
FIGNORE=""
FPATH=""
GID="10"
HISTSIZE="1000"
HOME="/opt/home/pbray"
HOST="swan"
HOSTNAME="swan"
HOSTTYPE="solaris2.4"
KEYTIMEOUT="40"
LANG=""
LINENO="354"
LINES="57"
LISTMAX="100"
LITHISTSIZE="1000"
LOGCHECK="60"
LOGNAME="pbray"
MACHTYPE="sparc"
MAIL=""
MAILCHECK="60"
MAILPATH=""
MANPATH="/usr/man:/pkgs/X11R6/man:/pkgs/misc/man:/pkgs/gnu/man:/pkgs/contrib/man:/pkgs/tex/bin:/usr/openwin/man"
NULLCMD="cat"
OLDPWD="/tmp/zsh-2.6-beta10/Util"
OPENWINHOME="/usr/openwin"
OPTARG=""
OPTIND="1"
OSTYPE="solaris2.4"
OS_VERSION="Solaris_2.x"
PATH="/usr/sbin:/usr/bin:/usr/ccs/bin:/usr/opt/SUNWmd/sbin:/opt/SUNWssa/bin:/pkgs/X11R6/bin:/pkgs/misc/bin:/pkgs/gnu/bin:/pkgs/contrib/bin:/pkgs/tex/bin:/usr/openwin/bin"
PERIOD="0"
POSTEDIT=""
PPID="2855"
PROMPT="[%n@%m] %~ > "
PROMPT2="> "
PROMPT3="?# "
PROMPT4="+ "
PS1="[%n@%m] %~ > "
PS2="> "
PS3="?# "
PS4="+ "
PSVAR=""
PS_OPTIONS="-ef"
PWD="/tmp/zsh-2.6-beta10/Util"
RANDOM="12855"
READNULLCMD="more"
REPORTTIME="-1"
RPROMPT=""
RPS1=""
SAVEHIST="100"
SECONDS="4"
SHELL="/pkgs/misc/bin/zsh"
SHLVL="4"
SPROMPT="zsh: correct \`%R\' to \`%r\' [nyae]? "
TIMEFMT="%J  %U user %S system %P cpu %*E total"
TMOUT="0"
TMPPREFIX="/tmp/zsh"
TTY="/dev/pts/4"
UID="100"
USER="pbray"
USERNAME="pbray"
VENDOR="sun"
WATCH=""
WATCHFMT="%n has %a %l from %m."
WINDOWID="50331661"
WORDCHARS="*?_-.[]~=/&;!#$%^(){}<>"
XUSERFILESEARCHPATH="/pkgs/contrib/lib/X11/app-defaults/%N:/pkgs/contrib/lib/X11/app-defaults/%N%C"
ZSH="/build/SRC/zsh"
ZSH_NAME="zsh"
ZSH_VERSION="2.6-beta10"
each="unix"
histchars="!^#"
reporter_junkiequotes="no"
status="1"
str="SunOS swan 5.4 generic sun4m sparc"
prompt='test%'

# Array variables.

argv=()
cdpath=(. {/opt/home/pbray})
fignore=()
fpath=()
mailpath=()
manpath=(/usr/man /pkgs/X11R6/man /pkgs/misc/man /pkgs/gnu/man /pkgs/contrib/man /pkgs/tex/bin /usr/openwin/man)
path=(/usr/sbin /usr/bin /usr/ccs/bin /usr/opt/SUNWmd/sbin /opt/SUNWssa/bin /pkgs/X11R6/bin /pkgs/misc/bin /pkgs/gnu/bin /pkgs/contrib/bin /pkgs/tex/bin /usr/openwin/bin)
psvar=()
signals=(EXIT HUP INT QUIT ILL TRAP IOT EMT FPE KILL BUS SEGV SYS PIPE ALRM TERM USR1 USR2 CLD PWR WINCH URG POLL STOP TSTP CONT TTIN TTOU VTALRM PROF XCPU XFSZ WAITING LWP FREEZE THAW RTMIN 37 38 39 40 41 42 RTMAX ZERR DEBUG)
watch=()

# Exported variables.

export TERMCAP
export TERM
export BASH
export CDPATH
export COLUMNS
export DISPLAY
export HISTSIZE
export HOME
export HOST
export HOSTNAME
export HOSTTYPE
export LINES
export LITHISTSIZE
export LOGNAME
export MANPATH
export OPENWINHOME
export OSTYPE
export OS_VERSION
export PATH
export PROMPT
export PS_OPTIONS
export PWD
export SAVEHIST
export SHELL
export SHLVL
export TERM
export USER
export WINDOWID
export XUSERFILESEARCHPATH
export ZSH

# Setopt.

setopt bgnice
setopt hashcmds
setopt hashdirs
setopt hashlistall
setopt notify

# END zsh saveset

