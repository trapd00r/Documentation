From zsh-workers-return-25237-mason-zsh=primenet.com.au@sunsite.dk Mon Jun 23 13:37:06 2008
Return-Path: <zsh-workers-return-25237-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 9377 invoked from network); 23 Jun 2008 13:37:04 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 23 Jun 2008 13:37:04 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 67173 invoked from network); 23 Jun 2008 13:37:00 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 23 Jun 2008 13:37:00 -0000
Received: (qmail 9549 invoked by alias); 23 Jun 2008 13:36:58 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 25237
Received: (qmail 9539 invoked from network); 23 Jun 2008 13:36:57 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 23 Jun 2008 13:36:57 -0000
Received: from cluster-g.mailcontrol.com (cluster-g.mailcontrol.com [208.87.233.190])
	by bifrost.dotsrc.org (Postfix) with ESMTPS id 819A8808A214
	for <zsh-workers@sunsite.dk>; Mon, 23 Jun 2008 15:36:51 +0200 (CEST)
Received: from cameurexb01.EUROPE.ROOT.PRI ([193.128.72.68])
	by rly28g.srv.mailcontrol.com (MailControl) with ESMTP id m5NDalpM026022
	for <zsh-workers@sunsite.dk>; Mon, 23 Jun 2008 14:36:49 +0100
Received: from news01.csr.com ([10.103.143.38]) by cameurexb01.EUROPE.ROOT.PRI with Microsoft SMTPSVC(6.0.3790.3959);
	 Mon, 23 Jun 2008 14:36:47 +0100
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.14.2/8.13.4) with ESMTP id m5NDalKY006837
	for <zsh-workers@sunsite.dk>; Mon, 23 Jun 2008 14:36:47 +0100
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.14.2/8.14.2/Submit) with ESMTP id m5NDalrH006834
	for <zsh-workers@sunsite.dk>; Mon, 23 Jun 2008 14:36:47 +0100
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: PATCH: tcp_on_open return status
X-Mailer: MH-E 8.0.3; nmh 1.3-RC1; GNU Emacs 22.1.1
Date: Mon, 23 Jun 2008 14:36:47 +0100
Message-ID: <6833.1214228207@csr.com>
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 23 Jun 2008 13:36:47.0671 (UTC) FILETIME=[2F306470:01C8D536]
X-Scanned-By: MailControl A-08-50-03 (www.mailcontrol.com) on 10.71.0.138
X-Virus-Scanned: ClamAV 0.92.1/7538/Mon Jun 23 13:26:48 2008 on bifrost
X-Virus-Status: Clean

This enhances the TCP function handlers so that a bad return status from
tcp_on_open causes the open to fail.  This is actually an
incompatibility, but I doubt if enough people are using the system to
make this a significant problem.

Index: Doc/Zsh/tcpsys.yo
===================================================================
RCS file: /cvsroot/zsh/zsh/Doc/Zsh/tcpsys.yo,v
retrieving revision 1.13
diff -u -r1.13 tcpsys.yo
--- Doc/Zsh/tcpsys.yo	29 May 2008 12:51:19 -0000	1.13
+++ Doc/Zsh/tcpsys.yo	23 Jun 2008 13:35:05 -0000
@@ -71,6 +71,7 @@
 In the second case, one or more sessions to be opened are given by name.
 A single session name is given after tt(-s) and a comma-separated list
 after tt(-l); both options may be repeated as many times as necessary.
+A failure to open any session causes tt(tcp_open) to abort.
 The host and port are read from the file tt(.ztcp_sessions) in the same
 directory as the user's zsh initialisation files, i.e. usually the home
 directory, but tt($ZDOTDIR) if that is set.  The file consists of lines
@@ -117,6 +118,9 @@
 calls to tt(tcp_open) do not change it.  The current session is stored
 in the parameter tt($TCP_SESS); see below for more detail about the
 parameters used by the system.
+
+The function tt(tcp_on_open), if defined, is called when a session
+is opened.  See the description below.
 )
 findex(tcp_close)
 item(tt(tcp_close [-qn] [ -a | -l) var(sess)tt(,... |) var(sess) tt(... ]))(
@@ -483,7 +487,10 @@
 findex(tcp_on_open)
 item(tt(tcp_on_open) var(sess) var(fd))(
 This is called after a new session has been defined with the session name
-and file descriptor as arguments.
+and file descriptor as arguments.  If it returns a non-zero status,
+opening the session is assumed to fail and the session is closed
+again; however, tt(tcp_open) will continue to attempt to open any
+remaining sessions given on the command line.
 )
 findex(tcp_on_rename)
 item(tt(tcp_on_rename) var(oldsess) var(fd) var(newsess))(
Index: Functions/TCP/tcp_open
===================================================================
RCS file: /cvsroot/zsh/zsh/Functions/TCP/tcp_open,v
retrieving revision 1.4
diff -u -r1.4 tcp_open
--- Functions/TCP/tcp_open	8 Aug 2005 16:49:10 -0000	1.4
+++ Functions/TCP/tcp_open	23 Jun 2008 13:35:05 -0000
@@ -180,6 +180,29 @@
     tcp_by_name[$sess]=$fd
 
     [[ -o zle && -z $nozle ]] && zle -F $fd tcp_fd_handler
+
+    # needed for new completion system, so I'm not too sanguine
+    # about requiring this here...
+    if zmodload -i zsh/parameter; then
+	if (( ${+functions[tcp_on_open]} )); then
+	    if ! tcp_on_open $sess $fd; then
+	        if [[ -z $quiet ]]; then
+		    if (( ${#sessargs} )); then
+		        print "Session $sess" \
+"(host $sessargs[1], port $sessargs[2] fd $fd): tcp_on_open FAILED."
+		    else
+		        print "Session $sess (fd $fd) tcp_on_open FAILED."
+		    fi
+		    tcp_close -- $sess
+		else
+		    tcp_close -q -- $sess
+	        fi
+		stat=1
+		continue
+	    fi
+	fi
+    fi
+
     if [[ -z $quiet ]]; then
 	if (( ${#sessargs} )); then
 	    print "Session $sess" \
@@ -188,14 +211,6 @@
 	    print "Session $sess (fd $fd) opened OK."
 	fi
     fi
-
-    # needed for new completion system, so I'm not too sanguine
-    # about requiring this here...
-    if zmodload -i zsh/parameter; then
-	if (( ${+functions[tcp_on_open]} )); then
-	    tcp_on_open $sess $fd
-	fi
-    fi
 done
 
 if [[ -z $TCP_SESS ]]; then


-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070

