From zsh-workers-return-28626-mason-zsh=primenet.com.au@zsh.org Tue Jan 11 09:38:39 2011
Return-Path: <zsh-workers-return-28626-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 13274 invoked by alias); 11 Jan 2011 09:38:39 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28626
Received: (qmail 13401 invoked from network); 11 Jan 2011 09:38:37 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_LOW,
	SPF_HELO_PASS autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at csr.com does not designate permitted sender hosts)
Date: Tue, 11 Jan 2011 09:38:29 +0000
From: Peter Stephenson <Peter.Stephenson@csr.com>
To: <zsh-workers@zsh.org>
Subject: Re: 4.3.11 TRAPEXIT() on cygwin
Message-ID: <20110111093829.115a9c96@pwslap01u.europe.root.pri>
In-Reply-To: <AANLkTi=ZzYr4RPVSME=3B3YSnd2G_tvYaG9G8=Xz5R4c@mail.gmail.com>
References: <1294704977.26846.1414490063@webmail.messagingengine.com>
	<AANLkTikQfZrm9hra-q3y_VRgxP5JdmtuW5cGiORrNNAa@mail.gmail.com>
	<1294710389.18824.1414500371@webmail.messagingengine.com>
	<AANLkTimgbQmZfHDUGmxOvA6+wED-WcL=Ke_Nag0h57wu@mail.gmail.com>
	<1294714469.3446.1414534693@webmail.messagingengine.com>
	<AANLkTimsL-iNb6oeSS3OiDQ-yRQQCmVs6om5yGAh40Du@mail.gmail.com>
	<AANLkTi=ZzYr4RPVSME=3B3YSnd2G_tvYaG9G8=Xz5R4c@mail.gmail.com>
Organization: Cambridge Silicon Radio
X-Mailer: Claws Mail 3.7.8 (GTK+ 2.20.1; i386-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 11 Jan 2011 09:38:29.0866 (UTC) FILETIME=[4E077CA0:01CBB173]
X-Scanned-By: MailControl A_10_80_00 (www.mailcontrol.com) on 10.71.0.134

This tries to summarize the differences I know about.

Index: Doc/Zsh/func.yo
===================================================================
RCS file: /cvsroot/zsh/zsh/Doc/Zsh/func.yo,v
retrieving revision 1.25
diff -p -u -r1.25 func.yo
--- Doc/Zsh/func.yo	18 Feb 2009 17:17:27 -0000	1.25
+++ Doc/Zsh/func.yo	11 Jan 2011 09:34:58 -0000
@@ -348,19 +348,28 @@ enditem()
 
 findex(trap, use of)
 The functions beginning `tt(TRAP)' may alternatively be defined with the
-tt(trap) builtin:  this may be preferable for some uses, as they are then
-run in the environment of the calling process, rather than in their own
-function environment.  Apart from the difference in calling procedure and
-the fact that the function form appears in lists of functions, the forms
+tt(trap) builtin:  this may be preferable for some uses.  The forms
 
 example(TRAPNAL+LPAR()RPAR() { 
  # code
 })
 
-and
+('function traps') and
 
 example(trap '
  # code
 ' NAL)
 
-are equivalent.
+('list traps') are equivalent in most ways, the exceptions being the
+following:
+
+startitemize()
+itemiz(Function traps have all the properties of normal functions,
+appearing in the list of functions and being called with their own
+function context rather than the context where the trap was triggered.)
+itemiz(The return status from function traps is special, whereas a return
+from a list trap causes the surrounding context to return with the given
+status.)
+itemiz(Function traps are not reset within subshells, in accordance with
+zsh behaviour; list traps are reset, in accordance with POSIX behaviour.)
+enditemize()

-- 
Peter Stephenson <pws@csr.com>            Software Engineer
Tel: +44 (0)1223 692070                   Cambridge Silicon Radio Limited
Churchill House, Cambridge Business Park, Cowley Road, Cambridge, CB4 0WZ, UK


Member of the CSR plc group of companies. CSR plc registered in England and Wales, registered number 4187346, registered office Churchill House, Cambridge Business Park, Cowley Road, Cambridge, CB4 0WZ, United Kingdom

