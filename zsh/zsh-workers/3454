From zsh-workers-request@math.gatech.edu Sat Aug 23 22:46:43 1997
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 1626 invoked from network); 23 Aug 1997 22:46:42 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 23 Aug 1997 22:46:42 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.8.5/8.8.5) id SAA04751;
	Sat, 23 Aug 1997 18:31:35 -0400 (EDT)
Resent-Date: Sat, 23 Aug 1997 18:31:35 -0400 (EDT)
Date: Sun, 24 Aug 1997 01:32:07 +0300 (EET DST)
Message-Id: <199708232232.BAA25694@alpha.hut.fi>
To: zsh-workers@math.gatech.edu
Subject: libzglob?
From: Jarkko Hietaniemi <jhi@iki.fi>
Reply-To: jhi@iki.fi
Organization: IKI ry, Finland
X-URL: http://www.iki.fi/~jhi/
X-Attribution: jhi
X-Mayan-Date: Long count = 12.19.4.8.0; tzolkin = 7 Ahau; haab = 18 Yaxkin
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
Resent-Message-ID: <"dfmiH2.0.7A1.7Js_p"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/3454
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu


Hi,

has there been any talk / thought / action as to separate the zsh
globbing code into its own library?  (as Zle nowadays seems to be,
sort of)

Background: I am one of the Perl Porters and there is one sore wound:
Perl uses csh for filename globbing (you may boo now).  Using external
program is a) ugly b) slow c) security risk d) in certain environments
csh globbing is plain broken (`glob *.c` may not return NUL-separated
string of filenames, glob cannot return >1kB stuff, things like that).
All that goes against the grain of Perl. *)

We briefly looked into tcsh -- but why stop there when there is a
much better glob out there.

What would be needed would be as small subdirectory as possible
in addition to zsh's glob.c that could be built stand alone into
a (at least) libzglob.a.

I realize that this is not trivial because the glob.c seems to
use a lot of general zsh structs and call other zsh functions,
ansi2knr, makepro.sh, for some things it may be useful to use
the "parent" software's (Perl in this case) function instead of
the zsh ones (for example garbage collection comes to mind).
But some of you zsh-workers is interested I am prepared to
co-operate with you in modularizing the Zsh Glob.

If this happens I can see one zsh API change need right now: glob()
should be 'thread-safe' in that the various glob options should be
passed in as arguments (a bitmask? a struct?) instead of being part of
the 'global' zsh state -- as there is no zsh opts[] if only the glob
lib is being used.

*) somebody might argue the a) point here :-)

-- 
$jhi++; # http://www.iki.fi/~jhi/
        # There is this special biologist word we use for 'stable'.
        # It is 'dead'. -- Jack Cohen

