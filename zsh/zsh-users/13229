From zsh-users-return-13229-mason-zsh=primenet.com.au@sunsite.dk Wed Sep 17 23:35:36 2008
Return-Path: <zsh-users-return-13229-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 19467 invoked from network); 17 Sep 2008 23:35:33 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 17 Sep 2008 23:35:33 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 39714 invoked from network); 17 Sep 2008 23:35:02 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 17 Sep 2008 23:35:02 -0000
Received: (qmail 28931 invoked by alias); 17 Sep 2008 23:34:33 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13229
Received: (qmail 28909 invoked from network); 17 Sep 2008 23:34:31 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 17 Sep 2008 23:34:31 -0000
Received: from mx.spodhuis.org (redoubt.spodhuis.org [193.202.115.177])
	by bifrost.dotsrc.org (Postfix) with ESMTPS id 843BF802720D
	for <zsh-users@sunsite.dk>; Thu, 18 Sep 2008 01:34:26 +0200 (CEST)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws; s=d200807; d=spodhuis.org;
	h=Received:Date:From:To:Subject:Message-ID:Mail-Followup-To:References:MIME-Version:Content-Type:Content-Disposition:In-Reply-To;
	b=tPlJg2KIy45rOQu7UCT95osvmeEtio0S07KrylFf1ISRgmeWpEwLgD4N4Wlj+tUEARqC2QrkkOqio90CHq6AUIUIWjZHyo7W1w/krqProCzXZnUGw6Q4k4zZUf5l4gmYakxqtLBPENJG+c0k070lxjeQyUnrZYD0sP5HxmMLKPk=;
Received: by smtp.spodhuis.org with local 
	id 1Kg6XQ-0007C9-2y; Wed, 17 Sep 2008 23:34:24 +0000
Date: Wed, 17 Sep 2008 16:34:24 -0700
From: Phil Pennock <zsh-workers+phil.pennock@spodhuis.org>
To: zsh users <zsh-users@sunsite.dk>
Subject: Re: Submitting vcs_info function
Message-ID: <20080917233423.GA26158@redoubt.spodhuis.org>
Mail-Followup-To: zsh users <zsh-users@sunsite.dk>
References: <20080917201859.GU2182@fsst.voodoo.lan>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20080917201859.GU2182@fsst.voodoo.lan>
X-Virus-Scanned: ClamAV 0.92.1/8273/Thu Sep 18 00:31:35 2008 on bifrost
X-Virus-Status: Clean

On 2008-09-17 at 22:18 +0200, Frank Terbeck wrote:
>               All functions named VCS_INFO_* are for internal use only.
> 
> 
>        Variable description
> 
>               ${VCS_INFO_message_N_} (Note the trailing underscore)

It's a rather confusing distinction that functions named VCS_INFO_* are
internal but variables named VCS_INFO_* are how you get access to the
results.

> Comments welcome. :)

In general, this looks great and I intend to use it.

> VCS_INFO_svn_get_data () { # {{{
>     setopt localoptions noksharrays extendedglob
>     local svnbase svnbranch
>     local -a svninfo
> 
>     svnbase="."
>     while [[ -d "${svnbase}/../.svn" ]]; do
>         svnbase="${svnbase}/.."
>     done

However, this is a deal-breaker for me at present, since it doesn't
handle svn:externals so will chase up to the top-level.  For many cases,
for personal development, on my server, that means getting up to my
home directory svn repo, as various other repositories, including some
dev ones, are things I automatically get (unless I use --no-externals).

I suspect that you're going to need to use svn info at each step up and
stop, using previous results, if .svn doesn't exist or the value of
"Repository UUID" differs in the new directory.

This might be another case where the simple branch option logic is
helpful?  Although "svn info" is a lightweight local operation, I'm not
so sure about calling it N times before every prompt.

>     svnbase="$(VCS_INFO_realpath ${svnbase})"
>     svninfo=( ${${${(M)${(f)"$( svn info )"}:#(#s)(URL|Revision)*}/*: /}/*\//} )
> 
>     rrn=${svnbase:t}
>     zstyle -s ":vcs_info:${vcs}:${usercontext}:${rrn}" branchformat svnbranch || svnbranch="%b:%r"
>     zformat -f svnbranch "${svnbranch}" "b:${svninfo[1]}" "r:${svninfo[2]}"
>     VCS_INFO_formats '' "${svnbranch}" "${svnbase}"
>     return 0
> }

I note that svn info has the --non-interactive option, which you
probably want here.

Also, I don't believe that "svn info" makes any guarantees about output
ordering.

This appears to work for me:

----------------------------8< cut here >8------------------------------
VCS_INFO_svn_get_data () {
    setopt localoptions noksharrays extendedglob
    local svnbase svnbranch a b rrn
    local -A svninfo parentinfo

    svnbase=".";
    svninfo=()
    svn info --non-interactive | while IFS=: read a b; do svninfo[${a// /_}]="${b## #}"; done
    while [[ -d "${svnbase}/../.svn" ]]; do 
        parentinfo=()
        svn info --non-interactive "${svnbase}/.." | while IFS=: read a b; do parentinfo[${a// /_}]="${b## #}"; done
        [[ $parentinfo[Repository_UUID] != $svninfo[Repository_UUID] ]] && break
        svninfo=(${(kv)parentinfo})
        svnbase="${svnbase}/.."
    done

    svnbase="$(VCS_INFO_realpath ${svnbase})"

    rrn=${svnbase:t}
    zstyle -s ":vcs_info:${vcs}:${usercontext}:${rrn}" branchformat svnbranch || svnbranch="%b:%r"
    zformat -f svnbranch "${svnbranch}" "b:${svninfo[URL]##*/}" "r:${svninfo[Revision]}"
    VCS_INFO_formats '' "${svnbranch}" "${svnbase}"
    return 0
}   
----------------------------8< cut here >8------------------------------

Regards,
-Phil

