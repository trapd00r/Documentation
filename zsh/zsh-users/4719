From zsh-users-return-4719-mason-zsh=primenet.com.au@sunsite.dk Thu Feb 28 21:01:29 2002
Return-Path: <zsh-users-return-4719-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20653 invoked from network); 28 Feb 2002 21:01:29 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 28 Feb 2002 21:01:29 -0000
Received: (qmail 2898 invoked by alias); 28 Feb 2002 21:01:15 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 4719
Received: (qmail 2887 invoked from network); 28 Feb 2002 21:01:14 -0000
Date: Thu, 28 Feb 2002 13:00:06 -0800 (PST)
From: Bart Schaefer <schaefer@brasslantern.com>
Sender: schaefer@ns1.sodaware.com
To: Ian Lynagh <igloo@earth.li>
cc: zsh-users@sunsite.dk
Subject: Re: Length of %? in prompt
In-Reply-To: <20020228171254.GA32284@stu163.keble.ox.ac.uk>
Message-ID: <Pine.LNX.4.44.0202281150320.710-100000@ns1.sodaware.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

On Thu, 28 Feb 2002, Ian Lynagh wrote:

> What I'm doing is something like this:
>
> /--stuff--more stuff--some more stuff--------------------
>
> and I am then truncating this to the screen width with \ (using / and \
> for top-left and top-right corner characters respectively). The border
> is in graphics mode and bold cyan while the various stuffs are in
> various colours and normal text mode, so if it gets truncated in the
> middle of them I am getting a text letter k in whatever colour happens
> to be there. Therefore I want to set the colour and have a ^N in the
> truncating string.

OK, the point is that you don't want the upper right corner to be a
different color or character just because the string was truncated.  Thus
what you want to do here is sacrifice one additional character so that the
"truncating string" (let's call it the "ellipsis" since it plays the role
of the "..." in a truncated sentence) and the truncated string (let's call
that the "sentence" for the same reason) both end with the same character,
and that character is not a terminal control sequence.  Then, _after_ the
%<< that closes the sentence, you emit the correct color and the upper
right corner.  Don't worry about changing the color only if it's wrong,
just always force it to be right.

So something like (still using / and \ rather than graphics chars):

UL="$fg_bold[cyan]/"	# upper left
UR="$fg_bold[cyan]\\"	# upper right
PS1='$UL%$((COLUMNS-4))>->-stuff--more stuff--some more stuff---%<<$UR
\$ $reset_color'

(There's an embedded newline in that PS1 example.)

For a much more complicated example of this same thing, see

	Functions/Prompts/prompt_adam2_setup

in the 4.0.4 distribution.

