From zsh-workers-return-7930-mason-zsh=primenet.com.au@sunsite.auc.dk Sat Sep 18 21:45:47 1999
Return-Path: <zsh-workers-return-7930-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 12714 invoked from network); 18 Sep 1999 21:45:45 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 18 Sep 1999 21:45:45 -0000
Received: (qmail 24358 invoked by alias); 18 Sep 1999 21:44:19 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 7930
Received: (qmail 24351 invoked from network); 18 Sep 1999 21:44:18 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <990918214341.ZM6544@candle.brasslantern.com>
Date: Sat, 18 Sep 1999 21:43:41 +0000
In-Reply-To: <199909171101.NAA02384@beta.informatik.hu-berlin.de>
Comments: In reply to Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
        "Re: odd completion behavior" (Sep 17,  1:01pm)
References: <199909171101.NAA02384@beta.informatik.hu-berlin.de>
X-Mailer: Z-Mail (5.0.0 30July97)
To: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>,
        zsh-workers@sunsite.auc.dk
Subject: Re: odd completion behavior
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Sep 17,  1:01pm, Sven Wischnowsky wrote:
} Subject: Re: odd completion behavior
}
} (gdb) where
} #7  0x8063d4b in runshfunc (list=0x816ae30, wrap=0x0, 
}     name=0x81559a8 "_main_complete") at exec.c:3032
} #8  0x40198481 in comp_setunset () from /usr/lib/zsh/3.1.6-debian/compctl.so
} #9  0x8063cc8 in runshfunc (list=0x816ae30, wrap=0x4019a784, 
}     name=0x81559a8 "_main_complete") at exec.c:3019
} 
} We can't really trust this because it shows (inter alia) the same
} problem as the one from 7673: #8->#7 is impossible.
} 
} The weird strings made me think that this is a memory allocation
} problem with `compstate'.

If I had to guess, I'd say that the stack is getting trashed because
the VARARR() at exec.c:3019 is not allocating the right number of bytes.

That wouldn't show up in any of the zsh memory testing stuff because it
is using alloca() or the equivalent to create space on the stack, and
it would explain how the bogus frame #8 got stuck in there.

Could the global underscorelen be messed up at that point?

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

