From zsh-workers-return-9800-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Feb 21 04:12:29 2000
Return-Path: <zsh-workers-return-9800-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 26511 invoked from network); 21 Feb 2000 04:12:27 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 21 Feb 2000 04:12:27 -0000
Received: (qmail 15598 invoked by alias); 21 Feb 2000 04:11:25 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 9800
Received: (qmail 15589 invoked from network); 21 Feb 2000 04:11:23 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1000221041119.ZM21973@candle.brasslantern.com>
Date: Mon, 21 Feb 2000 04:11:19 +0000
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-workers@sunsite.auc.dk
Subject: Path completion causing ambiguous path tail to disappear
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

This is not exactly a complaint, because I can (almost) get the behavior I
want by using a style ... rather it's a question of whether the default
behavior should be different.

I have my zsh sources under /usr/src/local/zsh/.  With dev-19:

zagzig[36] cd /usr/s/l/<TAB>

The valid completions at this point should be

/usr/src/local	/usr/src/linux /usr/share/libtool /usr/share/locale

However, what happens is that the word on the command line is *shortened*,
leaving me with

zagzig[36] cd /usr/s/

with the cursor on top of the final `/'.  Now, I don't mind the cursor
moving back to that point if that's where I need to disambiguate, but I
was surprised that zsh deleted the tail of the path rather than simply
feeping, or displaying the list.

Note that if I start with no trailing slash, i.e.

zagzig[36] cd /usr/s/l<TAB>

*then* the behavior is what I expect; the cursor moves back to the `/'
but the `l' remains on the line.

If I use

	zstyle ':completion:*:paths' expand prefix

Then I get the behavior I want from expand-or-complete, but not from
complete-word (which causes predict-on to break, which is how I really
noticed all of this in the first place).

Why does the trailing slash cause the `l/' to be deleted?

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

