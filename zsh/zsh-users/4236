From zsh-users-return-4236-mason-zsh=primenet.com.au@sunsite.dk Tue Sep 18 10:10:54 2001
Return-Path: <zsh-users-return-4236-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 23067 invoked from network); 18 Sep 2001 10:10:53 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 18 Sep 2001 10:10:53 -0000
Received: (qmail 27858 invoked by alias); 18 Sep 2001 10:10:21 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 4236
Received: (qmail 27844 invoked from network); 18 Sep 2001 10:10:20 -0000
Date: Tue, 18 Sep 2001 11:53:42 +0100
From: Adam Spiers <adam@spiers.net>
To: Zsh users list <zsh-users@sunsite.dk>
Subject: Re: retrieving invocation arguments
Message-ID: <20010918115342.B6902@thelonious.new.ox.ac.uk>
Reply-To: Adam Spiers <adam@spiers.net>
Mail-Followup-To: Zsh users list <zsh-users@sunsite.dk>
References: <1010917151730.ZM5670@candle.brasslantern.com> <28827.1000741112@csr.com> <20010917215915.A6902@thelonious.new.ox.ac.uk> <20010917162508.A19038@astaroth.sweth.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <20010917162508.A19038@astaroth.sweth.net>; from svc@sweth.net on Mon, Sep 17, 2001 at 04:25:08PM -0400
X-Home-Page: http://www.new.ox.ac.uk/~adam/
X-OS: RedHat Linux

Sweth Chandramouli (svc@sweth.net) wrote:
> On Mon, Sep 17, 2001 at 09:59:15PM +0100, Adam Spiers wrote:
> > To give some context to this, some machines I use have RedHat
> > brokenness in /etc/zshrc, which I avoid by invoking zsh with -d from
> > my .switch_shell.  If I then tweak something in my .zshrc for
> > instance, or cvs update and reinstall a new zsh, I want to be able to
> > just type `restart' to get a fresh new shell, hence the need for
> > restart preserving the -d option.
>
> 	Umm... if you know what the flag in question is, why not
> just hardcode it into your restart function, or have your restart
> function call you switch_shell routine, or one of a million other
> ways to not have to parse the entire shell option list just to see if
> an option that you know you want to set happens to be set?

I'm already using a work-around.  I merely wanted to know if there was
a clean and totally generalised way to do it, because I don't use the
same options on all machines I use, and I'd rather not have to code a
different restart function for each one.

