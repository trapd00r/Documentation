From zsh-users-return-13560-mason-zsh=primenet.com.au@sunsite.dk Tue Dec 09 18:32:16 2008
Return-Path: <zsh-users-return-13560-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 28789 invoked from network); 9 Dec 2008 18:32:12 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 9 Dec 2008 18:32:12 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 68462 invoked from network); 9 Dec 2008 18:31:59 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 9 Dec 2008 18:31:59 -0000
Received: (qmail 18900 invoked by alias); 9 Dec 2008 18:31:39 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13560
Received: (qmail 18887 invoked from network); 9 Dec 2008 18:31:39 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 9 Dec 2008 18:31:39 -0000
Received: from winston.telenet-ops.be (winston.telenet-ops.be [195.130.137.75])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 8F35380308BE
	for <zsh-users@sunsite.dk>; Tue,  9 Dec 2008 19:31:34 +0100 (CET)
Received: from localhost (localhost.localdomain [127.0.0.1])
	by winston.telenet-ops.be (Postfix) with SMTP id AD970A009F
	for <zsh-users@sunsite.dk>; Tue,  9 Dec 2008 19:31:34 +0100 (CET)
Received: from [172.16.1.3] (d54C04090.access.telenet.be [84.192.64.144])
	by winston.telenet-ops.be (Postfix) with ESMTP id 9010FA0097
	for <zsh-users@sunsite.dk>; Tue,  9 Dec 2008 19:31:34 +0100 (CET)
Message-Id: <68E8E638-FBA2-49D2-9951-9CF05620BE2B@rocteur.cc>
From: "@ Rocteur CC" <macosx@rocteur.cc>
To: zsh-users@sunsite.dk
In-Reply-To: <20081209155740.GD5462@sc.homeunix.net>
Content-Type: multipart/signed; boundary=Apple-Mail-623--715292382; micalg=sha1; protocol="application/pkcs7-signature"
Mime-Version: 1.0 (Apple Message framework v929.2)
Subject: Re: Unsetting Array
Date: Tue, 9 Dec 2008 19:31:34 +0100
References: <54348.153.98.68.197.1228831457.squirrel@webmail.rocteur.com> <200812091418.mB9EIYrR005933@news01.csr.com> <20081209155740.GD5462@sc.homeunix.net>
X-Mailer: Apple Mail (2.929.2)
X-Virus-Scanned: ClamAV 0.92.1/8737/Tue Dec  9 17:59:48 2008 on bifrost
X-Virus-Status: Clean


--Apple-Mail-623--715292382
Content-Type: text/plain;
	charset=US-ASCII;
	format=flowed;
	delsp=yes
Content-Transfer-Encoding: 7bit


On 09 Dec 2008, at 16:57, Stephane Chazelas wrote:

> On Tue, Dec 09, 2008 at 02:18:34PM +0000, Peter Stephenson wrote:
>> "Jerry Rocteur" wrote:
>>> I'm using ZSH_VERION 4.2.6 on Redhat 5 to test some Korn shell  
>>> scripts.
>>>
>>> Note that /usr/bin/ksh is a link to /bin/zsh
>>>
>>> I am unsetting an array like this unset variable[$i] and get
>>> ..
>>> What is the correct way to unset an array element.
>>
>> You can't strictly *unset* an element to an array.  In zsh, an  
>> array is
>> always a set of strings that has a particular length.  So what you  
>> can
>> do is limited to changing the length of the array or setting an  
>> element
>> of the array to be an empty string.  The latter is probably nearest  
>> to
>> what you want, but (in places where it makes a difference) the shell
>> will always treat the empty element as a string with zero length,  
>> not as
>> an unset parameter.  The syntax for that is
>>
>>  variable[$i]=
> [...]
>
> Yes, contrary to ksh, zsh arrays are not sparse arrays but
> normal arrays as for instance in C (though indices start at 1,
> not 0). You could implement a sparse array with an associative
> array.
>
> Another thing to be aware of is that $array in zsh expands to
> the non-empty elements of the array.
>
> ~$ a[5]=foo
> ~$ printf '<%s>\n' $a
> <foo>
> ~$ printf '<%s>\n' "$a[@]"
> <>
> <>
> <>
> <>
> <foo>
>
> a[100000]=
>
> declares an array of 100000 elements, all of them empty.
>
> But you could do:
>
> typeset -A a
> a[100000]=
>
> Which would declare an associative array with only one element
> of key "100000" (beware 100000 is a string)
>
> "$a[@]" would then expand to the list of values (here only one
> empty value) but beware that you cannot guarantee the order in
> which the values will be displayed.

Thanks Stephane and Peter, I set it to an empty string to get by the  
problem. I'll definitely play around with your ideas there Stephane!

I'm starting to worry about these issues... We have thousands of  
scripts, this is going to take some time if little things in ksh break  
in zsh.

Is there somewhere a good document or site where other who have  
migrated from ksh to zsh have listed all these things they have come  
up against.

Cheers and thanks,

Jerry



--Apple-Mail-623--715292382
Content-Disposition: attachment;
	filename=smime.p7s
Content-Type: application/pkcs7-signature;
	name=smime.p7s
Content-Transfer-Encoding: base64

MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAQAAoIIGIzCCAtww
ggJFoAMCAQICEBAKBtY/Ftix985rqrfjhe8wDQYJKoZIhvcNAQEFBQAwYjELMAkGA1UEBhMCWkEx
JTAjBgNVBAoTHFRoYXd0ZSBDb25zdWx0aW5nIChQdHkpIEx0ZC4xLDAqBgNVBAMTI1RoYXd0ZSBQ
ZXJzb25hbCBGcmVlbWFpbCBJc3N1aW5nIENBMB4XDTA4MDMyMjE3MjY0N1oXDTA5MDMyMjE3MjY0
N1owQzEfMB0GA1UEAxMWVGhhd3RlIEZyZWVtYWlsIE1lbWJlcjEgMB4GCSqGSIb3DQEJARYRbWFj
b3N4QHJvY3RldXIuY2MwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC+Cw8L8fo1C9aY
GFMKdduaRnIH6Zojs4CEVay9FPY9hnpAlr4D5IvptcFqZB1PFbtWgvuR47HiIP4uojE19nFbN4mm
HXZ5sgWAHNf+1O7XL4P6ATzosK2eZZyjXN2vf+4RT06lATwzySNGpjdEKA72nFkYPx2/Pld0GCcG
ucxwyppZJd2Rm2TM/JSdVZ5qbvJ/YRSQ0o2aRfwOAtVvtqirn2FbcmKo5W2InxanT0wS3WdaXEc8
S+MI/AavzLLfBD2+m7UUW8ORji1/GdKNSqTngyChFahvRkqSCduur/keGSC3iQJ1WX9Q+N8WH/Hr
VsAIw/RY2CxnKfGxjmWEUeLvAgMBAAGjLjAsMBwGA1UdEQQVMBOBEW1hY29zeEByb2N0ZXVyLmNj
MAwGA1UdEwEB/wQCMAAwDQYJKoZIhvcNAQEFBQADgYEAgx0d51PzN0o3FIOP6RTpXlPup/ZSEafI
Vq1LZHSu0i9hVf0IHGVAPPxB4OmslmPAHtkTKC7Gxwv6qpc0MDKdlaIeSbbG8VFWkU2pb5jBr6Pw
SI+m5sYsjvr+oUCKMzM2w4G4Nu4yrr+UIymltpE/CClMVE/qdpQ0chHCRbqJgrkwggM/MIICqKAD
AgECAgENMA0GCSqGSIb3DQEBBQUAMIHRMQswCQYDVQQGEwJaQTEVMBMGA1UECBMMV2VzdGVybiBD
YXBlMRIwEAYDVQQHEwlDYXBlIFRvd24xGjAYBgNVBAoTEVRoYXd0ZSBDb25zdWx0aW5nMSgwJgYD
VQQLEx9DZXJ0aWZpY2F0aW9uIFNlcnZpY2VzIERpdmlzaW9uMSQwIgYDVQQDExtUaGF3dGUgUGVy
c29uYWwgRnJlZW1haWwgQ0ExKzApBgkqhkiG9w0BCQEWHHBlcnNvbmFsLWZyZWVtYWlsQHRoYXd0
ZS5jb20wHhcNMDMwNzE3MDAwMDAwWhcNMTMwNzE2MjM1OTU5WjBiMQswCQYDVQQGEwJaQTElMCMG
A1UEChMcVGhhd3RlIENvbnN1bHRpbmcgKFB0eSkgTHRkLjEsMCoGA1UEAxMjVGhhd3RlIFBlcnNv
bmFsIEZyZWVtYWlsIElzc3VpbmcgQ0EwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMSmPFVz
VftOucqZWh5owHUEcJ3f6f+jHuy9zfVb8hp2vX8MOmHyv1HOAdTlUAow1wJjWiyJFXCO3cnwK4Va
qj9xVsuvPAsH5/EfkTYkKhPPK9Xzgnc9A74r/rsYPge/QIACZNenprufZdHFKlSFD0gEf6e20Txh
BEAeZBlyYLf7AgMBAAGjgZQwgZEwEgYDVR0TAQH/BAgwBgEB/wIBADBDBgNVHR8EPDA6MDigNqA0
hjJodHRwOi8vY3JsLnRoYXd0ZS5jb20vVGhhd3RlUGVyc29uYWxGcmVlbWFpbENBLmNybDALBgNV
HQ8EBAMCAQYwKQYDVR0RBCIwIKQeMBwxGjAYBgNVBAMTEVByaXZhdGVMYWJlbDItMTM4MA0GCSqG
SIb3DQEBBQUAA4GBAEiM0VCD6gsuzA2jZqxnD3+vrL7CF6FDlpSdf0whuPg2H6otnzYvwPQcUCCT
cDz9reFhYsPZOhl+hLGZGwDFGguCdJ4lUJRix9sncVcljd2pnDmOjCBPZV+V2vf3h9bGCE6u9uo0
5RAaWzVNd+NWIXiC3CEZNd4ksdMdRv9dX2VPMYIDEDCCAwwCAQEwdjBiMQswCQYDVQQGEwJaQTEl
MCMGA1UEChMcVGhhd3RlIENvbnN1bHRpbmcgKFB0eSkgTHRkLjEsMCoGA1UEAxMjVGhhd3RlIFBl
cnNvbmFsIEZyZWVtYWlsIElzc3VpbmcgQ0ECEBAKBtY/Ftix985rqrfjhe8wCQYFKw4DAhoFAKCC
AW8wGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMDgxMjA5MTgzMTM0
WjAjBgkqhkiG9w0BCQQxFgQURiWACOukEc3Kbxa69HqfP3HiAp4wgYUGCSsGAQQBgjcQBDF4MHYw
YjELMAkGA1UEBhMCWkExJTAjBgNVBAoTHFRoYXd0ZSBDb25zdWx0aW5nIChQdHkpIEx0ZC4xLDAq
BgNVBAMTI1RoYXd0ZSBQZXJzb25hbCBGcmVlbWFpbCBJc3N1aW5nIENBAhAQCgbWPxbYsffOa6q3
44XvMIGHBgsqhkiG9w0BCRACCzF4oHYwYjELMAkGA1UEBhMCWkExJTAjBgNVBAoTHFRoYXd0ZSBD
b25zdWx0aW5nIChQdHkpIEx0ZC4xLDAqBgNVBAMTI1RoYXd0ZSBQZXJzb25hbCBGcmVlbWFpbCBJ
c3N1aW5nIENBAhAQCgbWPxbYsffOa6q344XvMA0GCSqGSIb3DQEBAQUABIIBAJSVibUAV8lQG9yX
gfNYdGfmCu/IRGDJX6CE59r70x4cVAlqYsinZwRDcplbpKL4kFuXau9smRwxD+ixhA3fPd1bq5r7
Ast67REiFu4qMxAf0Ir84yINSqj9ak9S4DkOIgRR+EBo2orVr15qrVvzZKuJoRJA62N6qOghJ5ZQ
9WmWyvUysKlFOb+//ag5A+N0Scyp1jJkXQeQVrcwr/SErV/d1O2ZimuOKVhY2KeE6M7OQWG8lgMh
9TXwOl5nRIAsdvato/85O+Uh/xogh60P82sAkdgzCfo6q/9/j4pxVHRFSNstN7xqPSlMcGgx/+mI
dDs2kaDFetW0K2RksUbPqY8AAAAAAAA=

--Apple-Mail-623--715292382--

