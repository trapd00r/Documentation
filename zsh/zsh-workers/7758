From zsh-workers-return-7758-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Sep 09 15:44:48 1999
Return-Path: <zsh-workers-return-7758-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 720 invoked from network); 9 Sep 1999 15:44:46 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 9 Sep 1999 15:44:46 -0000
Received: (qmail 22177 invoked by alias); 9 Sep 1999 15:44:42 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 7758
Received: (qmail 22170 invoked from network); 9 Sep 1999 15:44:36 -0000
To: <zsh-workers@sunsite.auc.dk>
Subject: Re: Silly questions about _arguments & Co (and probably bugs)
References: <000301befad6$1d396a80$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0 (generated by AKEMI 1.13.2 - =?ISO-2022-JP?B?Ig==?=
 =?ISO-2022-JP?B?GyRCQTA0Y0s8GyhCIg==?=)
Content-Type: text/plain; charset=US-ASCII
From: Tanaka Akira <akr@jaist.ac.jp>
Date: 10 Sep 1999 00:44:34 +0900
In-Reply-To: "Andrej Borsenkow"'s message of "Thu, 9 Sep 1999 19:15:13 +0400"
Message-ID: <rsqk8q0nl7h.fsf@crane.jaist.ac.jp>
Lines: 55
User-Agent: Chao-gnus/6.12.5 AKEMI/1.13.2 (=?ISO-2022-JP?B?GyRCQTAbKEI=?=
 =?ISO-2022-JP?B?GyRCNGNLPBsoQg==?=) FLAM-DOODLE/1.12.6
 (=?ISO-2022-JP?B?GyRCM3cbKEI=?= 10R4.0/5.0) Emacs/20.4
 (sparc-sun-solaris2.6) MULE/4.0 (HANANOEN)

In article <000301befad6$1d396a80$21c9ca95@mow.siemens.ru>,
  "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru> writes:

> BTW I find the --use-index-line really useful. I have constant problems with
> cvs-generated patches - either index line is ignored (non-POSIX) or new files
> are not created (POSIX). Anybody knows, how to fix it in pure patch?

Remove the following lines in pch.c.

        if (! posixly_correct && (name[OLD] || name[NEW]) && name[INDEX])
          {
            free (name[INDEX]);
            name[INDEX] = 0;
          }

In article <000401befad6$ad291a50$21c9ca95@mow.siemens.ru>,
  "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru> writes:

> Running under dtterm with 24x80 size and doing
> 
> patch TAB
> 
> creates a select listing longer than screen size. At least, if I do it in a
> directory with ~ 15 files.

I think `compconf option_prefix=all' is useful.

And, I found another problem. `patch -f<TAB>' does not show list of
completion candidates. However completion itself works well.

is27e1u11% bindkey -e; fpath=($PWD/Completion/*(/)); autoload -U compinit; compinit -D; compdef _tst tst
is27e1u11% compconf group_matches=yes message_format='%d' description_format='%d' describe_options=yes   
is27e1u11% patch -f<TAB>
option

is27e1u11% set -x
is27e1u11% patch -f<TAB>
...
+_display:31> compadd -D _arr -  --backup-if-mismatch --backup --basename-prefix --batch --binary --context --directory --dry-run --ed --force --forward --fuzz --get --help --ifdef --ignore-whitespace --input --no-backup-if-mismatch --normal --output --patch-root --posix --prefix --quiet --quoting-style --reject-file --remove-empty-files --reverse --set-time --set-utc --strip --suffix --unified --use-index-line --verbose --version-control --version -B -D -E -F -N -R -S -T -V -Y -Z -b -d -g -i -l -n -p -s -t -u -v -z
+_display:33> [[ o != ( ]]
+_display:33> eval odescr=( "$_arr[@]" )
+_display:33> odescr=( ) 
+_display:35> ((  0  ))
+_display:79> eval tmp=''
+_display:79> tmp= 
+_display:80> return 1
+_arguments:826> compadd -J option -X option -Q -M r:|[_-]=* r:|=* -y tmp - -fR -fS -fT -fZ -fb -fl -fn -fs -ft -fu -fv -fE -fN -fB -fd -fD -fV -fg -fF -fi -fz -fY -fp
...
+_main_complete:101> return ret

option

So, I think this is the problem of `_display'.
-- 
Tanaka Akira

