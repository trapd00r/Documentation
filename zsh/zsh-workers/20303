From zsh-workers-return-20303-mason-zsh=primenet.com.au@sunsite.dk Thu Sep 02 09:20:29 2004
Return-Path: <zsh-workers-return-20303-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 23347 invoked from network); 2 Sep 2004 09:20:28 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 2 Sep 2004 09:20:28 -0000
Received: (qmail 9961 invoked from network); 2 Sep 2004 09:20:20 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 2 Sep 2004 09:20:20 -0000
Received: (qmail 24699 invoked by alias); 2 Sep 2004 09:20:07 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 20303
Received: (qmail 24678 invoked from network); 2 Sep 2004 09:20:05 -0000
Received: from unknown (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 2 Sep 2004 09:20:05 -0000
Received: (qmail 9507 invoked from network); 2 Sep 2004 09:19:06 -0000
Received: from lhuumrelay3.lnd.ops.eu.uu.net (62.189.58.19)
  by a.mx.sunsite.dk with SMTP; 2 Sep 2004 09:19:05 -0000
Received: from MAILSWEEPER01.csr.com (mailhost1.csr.com [62.189.183.235])
	by lhuumrelay3.lnd.ops.eu.uu.net (8.11.0/8.11.0) with ESMTP id i829J4v27088
	for <zsh-workers@sunsite.dk>; Thu, 2 Sep 2004 09:19:04 GMT
Received: from EXCHANGE02.csr.com (unverified [192.168.137.45]) by MAILSWEEPER01.csr.com
 (Content Technologies SMTPRS 4.3.12) with ESMTP id <T6bcb0f8436c0a88d011d8@MAILSWEEPER01.csr.com> for <zsh-workers@sunsite.dk>;
 Thu, 2 Sep 2004 10:18:12 +0100
Received: from news01.csr.com ([192.168.143.38]) by EXCHANGE02.csr.com with Microsoft SMTPSVC(5.0.2195.6713);
	 Thu, 2 Sep 2004 10:19:45 +0100
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.12.11/8.12.11) with ESMTP id i829J1le012236
	for <zsh-workers@sunsite.dk>; Thu, 2 Sep 2004 10:19:01 +0100
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.12.11/8.12.11/Submit) with ESMTP id i829J0eC012233
	for <zsh-workers@sunsite.dk>; Thu, 2 Sep 2004 10:19:01 +0100
Message-Id: <200409020919.i829J0eC012233@news01.csr.com>
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-workers@sunsite.dk
Subject: Re: zsh exits after delete-char-or-list and two ^Cs 
In-reply-to: "Bart Schaefer"'s message of "Wed, 01 Sep 2004 12:44:02 PDT."
             <Pine.LNX.4.61.0409011241500.16233@toltec.zanshin.com> 
Date: Thu, 02 Sep 2004 10:19:00 +0100
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 02 Sep 2004 09:19:45.0040 (UTC) FILETIME=[FC652900:01C490CD]
X-Spam-Checker-Version: SpamAssassin 2.63 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, hits=0.0 required=6.0 tests=none autolearn=no version=2.63
X-Spam-Hits: 0.0

Bart Schaefer wrote:
> The effect of this is going to be that "zle -I" has no effect when called
> from completion widgets, where previously it could.  Is that really the
> intent?
>
> I'd think you wanted something more like:
> 
>   if (zleactive) {
>       if (!trashedzle)
>           trashzle();
>       return zle_usable()? 0 : 1;
>   }
> 
> (Though perhaps not precisely that either.)

Well, that would do, if suitably documented.

It looks like it would be more sensible to have the test for whether a
zle widget is callable separate from the return status for zle -I.
However, it's a bit late now.

Index: Doc/Zsh/zle.yo
===================================================================
RCS file: /cvsroot/zsh/zsh/Doc/Zsh/zle.yo,v
retrieving revision 1.39
diff -u -r1.39 zle.yo
--- Doc/Zsh/zle.yo	29 Jul 2004 14:22:21 -0000	1.39
+++ Doc/Zsh/zle.yo	2 Sep 2004 09:15:35 -0000
@@ -505,9 +505,12 @@
 Note that there are normally better ways of manipulating the display from
 within zle widgets; see, for example, `tt(zle -R)' above.
 
-The status is zero if zle is active and the current zle display has
-been invalidated (even if this was by a previous call to `tt(zle -I)'),
-else one.
+The returned status is zero if a zle widget can be called immediately.
+Note this is independent of whether the display has been invalidated.
+For example, if a completion widget is active a zle widget cannot be used
+and the status is one even if the display was invalidated; on the other
+hand, the status may be zero if the display was invalidated by a previous
+call to `tt(zle -I)'.
 )
 item(var(widget) tt([ -n) var(num) tt(]) tt([ -N ]) var(args) ...)(
 Invoke the specified widget.  This can only be done when ZLE is
Index: Src/Zle/zle_thingy.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/Zle/zle_thingy.c,v
retrieving revision 1.13
diff -u -r1.13 zle_thingy.c
--- Src/Zle/zle_thingy.c	2 Jun 2004 22:15:02 -0000	1.13
+++ Src/Zle/zle_thingy.c	2 Sep 2004 09:15:36 -0000
@@ -619,6 +619,23 @@
 
 /**/
 static int
+zle_usable()
+{
+    return zleactive && !incompctlfunc && !incompfunc
+#if 0
+	/*
+	 * PWS experiment: commenting this out allows zle widgets
+	 * in signals, hooks etc.  I'm not sure if this has a down side;
+	 * it ought to be that zleactive is good enough to test whether
+	 * widgets are callable.
+	 */
+	&& sfcontext == SFC_WIDGET
+#endif
+	   ;
+}
+
+/**/
+static int
 bin_zle_call(char *name, char **args, UNUSED(Options ops), UNUSED(char func))
 {
     Thingy t;
@@ -629,10 +646,9 @@
     if (!wname) {
 	if (saveflag)
 	    zmod = modsave;
-	return (!zleactive || incompctlfunc || incompfunc ||
-		sfcontext != SFC_WIDGET);
+	return !zle_usable();
     }
-    if(!zleactive || incompctlfunc || incompfunc || sfcontext != SFC_WIDGET) {
+    if(!zle_usable()) {
 	zwarnnam(name, "widgets can only be called when ZLE is active",
 	    NULL, 0);
 	return 1;
@@ -685,10 +701,15 @@
 static int
 bin_zle_invalidate(UNUSED(char *name), UNUSED(char **args), UNUSED(Options ops), UNUSED(char func))
 {
+    /*
+     * Trash zle if trashable, but only indicate that zle is usable
+     * if it's possible to call a zle widget next.  This is not
+     * true if a completion widget is active.
+     */
     if (zleactive) {
 	if (!trashedzle)
 	    trashzle();
-	return 0;
+	return !zle_usable();
     } else
 	return 1;
 }

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR Ltd., Science Park, Milton Road,
Cambridge, CB4 0WH, UK                          Tel: +44 (0)1223 692070


**********************************************************************
This email and any files transmitted with it are confidential and
intended solely for the use of the individual or entity to whom they
are addressed. If you have received this email in error please notify
the system manager.

This footnote also confirms that this email message has been swept by
MIMEsweeper for the presence of computer viruses.

www.mimesweeper.com
**********************************************************************

