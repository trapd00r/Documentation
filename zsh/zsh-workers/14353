From zsh-workers-return-14353-mason-zsh=primenet.com.au@sunsite.dk Tue May 15 14:43:25 2001
Return-Path: <zsh-workers-return-14353-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 12798 invoked from network); 15 May 2001 14:43:25 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 15 May 2001 14:43:25 -0000
Received: (qmail 8743 invoked by alias); 15 May 2001 14:43:15 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 14353
Received: (qmail 8681 invoked from network); 15 May 2001 14:43:12 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1010515144108.ZM12147@candle.brasslantern.com>
Date: Tue, 15 May 2001 14:41:07 +0000
In-Reply-To: <200105151418.QAA10209@beta.informatik.hu-berlin.de>
Comments: In reply to Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
        "Re: destructive list-expand" (May 15,  4:18pm)
References: <200105151418.QAA10209@beta.informatik.hu-berlin.de>
X-Mailer: Z-Mail (5.0.0 30July97)
To: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>,
        zsh-workers@sunsite.dk
Subject: Re: destructive list-expand
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On May 15,  4:18pm, Sven Wischnowsky wrote:
} Subject: Re: destructive list-expand
}
} Peter Stephenson wrote:
} 
} > Sven wrote:
} > > The patch makes it keep all quotes *inside* parameter expansions when
} > > *not* completing a parameter name.  For the simple things I tried, this
} > > worked.  And for the case we were discussing, this gives the right
} > > string to the shell code.

This now gives the right thing for me with list-expand, but still fails
on _list_expansions (or _expand_word).  The command line isn't de-quoted
in either case, but _expand_word still just feeps at me.

schaefer<506> echo ${(M)${(f)"$(<=(print -l *))"}:#*conf*}<TAB>
No matches for `file' or `corrections'
schaefer<506> echo ${(M)${(f)"$(<=(print -l *))"}:#*conf*}<C-x g>
acconfig.h    config.h.in   config.sub    configure.in  
config.guess  config.log    configure     

Then there's this problem -- move the quotes outside the parameter:

schaefer<507> echo "${(M)${(f)$(<=(print -l *))}:#*conf*}"<C-x g>
[expansion elided]
schaefer<507> echo ${(M)${(f)$(<=(print -l *))}:#*conf*}"

Now the leading quote has been removed, but the trailing quote is there.
(They used to both disappear.)

} > Are we sure the zle_tricky.c change doesn't cause some knock-on problem,
} > e.g. in old-style completion? 

Obviously we're not.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

