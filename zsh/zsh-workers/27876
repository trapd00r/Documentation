From zsh-workers-return-27876-mason-zsh=primenet.com.au@zsh.org Mon Apr 12 13:21:20 2010
Return-Path: <zsh-workers-return-27876-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 11686 invoked by alias); 12 Apr 2010 13:21:20 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 27876
Received: (qmail 9230 invoked from network); 12 Apr 2010 13:21:19 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at zsh.org does not designate permitted sender hosts)
Date: Mon, 12 Apr 2010 13:14:15 +0000
From: Clint Adams <clint@zsh.org>
To: zsh-workers@zsh.org
Subject: PATCH: _axi-cache
Message-ID: <20100412131415.GA28771@scru.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.18 (2008-05-17)

For apt-xapian-index.  There is a --tabcomplete=partial as well, but
I didn't use it.

Index: Completion/Debian/Command/_axi-cache
===================================================================
RCS file: Completion/Debian/Command/_axi-cache
diff -N Completion/Debian/Command/_axi-cache
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ Completion/Debian/Command/_axi-cache	12 Apr 2010 13:13:04 -0000
@@ -0,0 +1,29 @@
+#compdef axi-cache
+
+local expl
+
+_arguments \
+  '--version[version]' \
+  '(-h --help)'{-h,--help}'[help]' \
+  '(-s --sort)'{-s,--sort=}':sort value:('${(j: :)${${(M)${(f)"$(</var/lib/apt-xapian-index/values)"}:#[a-z]*}%%	*}}')' \
+  '--tags[show tags, not packages]' \
+  '*:args:->args' && return 0
+
+if (( CURRENT == 2 )); then
+  _wanted tag expl 'axi-cache commands' \
+    compadd help search more last show again
+else
+  case "$words[2]" in
+    (search|show|again)
+      _wanted tag expl 'terms/query' \
+        compadd -- $($service $words[2] --tabcomplete=plain -- $words[CURRENT])
+    ;;
+    (more|last)
+      _wanted tag expl 'count' \
+        compadd -- 1 2 3 4 5 6 7 8 9 0
+    ;;
+    (*)
+      _files
+    ;;
+    esac
+fi

