From hzoli@cs.elte.hu Mon May 13 01:35:21 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by melb.werple.net.au (8.7.5/8.7.3) with ESMTP id BAA11161 for <mason@werple.mira.net.au>; Mon, 13 May 1996 01:33:42 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id LAA07769; Sun, 12 May 1996 11:11:36 -0400 (EDT)
Resent-Date: Sun, 12 May 1996 11:11:36 -0400 (EDT)
From: Zoltan Hidvegi <hzoli@cs.elte.hu>
Message-Id: <199605121509.RAA02649@hzoli.ppp.cs.elte.hu>
Subject: Coredump on autoloaded chpwd fix
To: zsh-workers@math.gatech.edu (Zsh hacking and development)
Date: Sun, 12 May 1996 17:09:21 +0200 (MET DST)
Reply-To: hzoli@unicorn.sch.bme.hu
X-Mailer: ELM [version 2.4ME+ PL11 (25)]
MIME-Version: 1.0
Content-Type: application/pgp; format=text; x-action=sign
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"sn7233.0.Jv1.d-Vbn"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/1055
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu
Content-Length: 2007
Status: O

-----BEGIN PGP SIGNED MESSAGE-----

If chpwd is autoloaded zsh segfaults after a cd.  The problem is that
permanent allocation is used cd autoloaded chpwd.  This caused a memory
leak, but it is just a small problem.  Zsh stores command structures
permanently in a compack format.  It stores LinkLists as arrays and if a
list consists of just a single command it stores just the command instead
of list->sublist->pipeline->command.  But parser always creats LinkLists
and dupnode thinks it is an array since it permanently allocated.  This
means that it is a bug when permanent allocation is in effect when
parse_list() is called.  The patch below fixes the bug, and adds a
debugging test to parse_list().

Zoltan

 *** Src/exec.c	1996/05/12 02:11:53	2.24
 --- Src/exec.c	1996/05/12 14:49:03
 ***************
 *** 2434,2440 ****
   		if (read(fd, d, len) == len) {
   		    close(fd);
   		    d = metafy(d, len, META_REALLOC);
 ! 		    r = parse_string(d);
   		    zfree(d, len + 1);
   		    return r;
   		} else {
 --- 2434,2446 ----
   		if (read(fd, d, len) == len) {
   		    close(fd);
   		    d = metafy(d, len, META_REALLOC);
 ! 		    if (useheap)
 ! 			r = parse_string(d);
 ! 		    else {
 ! 			heapalloc();
 ! 			r = parse_string(d);
 ! 			permalloc();
 ! 		    }
   		    zfree(d, len + 1);
   		    return r;
   		} else {
 *** Src/parse.c	1996/05/02 23:21:30	2.3
 --- Src/parse.c	1996/05/12 14:49:42
 ***************
 *** 128,133 ****
 --- 128,139 ----
   {
       List ret;
   
 + #ifdef DEBUG
 +     if (!useheap) {
 + 	fprintf(stderr, "BUG: permanent allocation in parse_list\n");
 + 	fflush(stderr);
 +     }
 + #endif
       tok = ENDINPUT;
       incmdpos = 1;
       yylex();

-----BEGIN PGP SIGNATURE-----
Version: 2.6.3i
Charset: noconv

iQCVAwUBMZX9WgupSCiLN749AQH6CAQAh4luFQTEtWnwdQwhovFPkkoko8cV/bzA
+W9n/2KGkn/A7TNHv7lHEFU1byBkHVg4TnxoumBgogtW4Zvh4pAj4WdpQbP9fYqz
SobJOkuXh7HyfHxf9CFfiPt9t7D7nr0IB+BBAr4Gh3LQs8FDP3sVvnE3wnrPgWr5
OHeikNqBAeI=
=A+K4
-----END PGP SIGNATURE-----


