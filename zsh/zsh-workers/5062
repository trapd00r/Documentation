Delivered-To: mason-zsh@primenet.com.au
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
Message-ID: <19990127141125.A7513@fysh.org>
Date: Wed, 27 Jan 1999 14:11:25 +0000
From: Phil Pennock <comet@fysh.org>
To: Zsh Development Workers <zsh-workers@sunsite.auc.dk>
Subject: Re: Two questions
Mail-Followup-To: Zsh Development Workers <zsh-workers@sunsite.auc.dk>
References: <19990126183201.A27794@fysh.org> <990126223651.ZM26737@candle.brasslantern.com> <19990127105955.A5407@fysh.org> <vbd8416jkw.fsf@snake.isode.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 0.91.2
In-Reply-To: <vbd8416jkw.fsf@snake.isode.com>; from "Bruce Stephens" on Wed 27 Jan 1999 (11:28 +0000)
Organisation: Organisation?  Here?  No, over there ---->
X-Disclaimer: Any views expressed in this message, where not explicitly
	attributed otherwise, are mine and mine alone.  Such views
	do not necessarily coincide with those of any organisation
	or company with which I am or have been affiliated.
X-Mailing-List: <zsh-workers@sunsite.auc.dk> 5062

Typing away merrily, Bruce Stephens produced the immortal words:
> > I'm not a key developer, feel free to tell me to get lost or
> > whatever.  But IMNSHO some aspects of the ksh associative-array
> > syntax suck.  Mightily.
> 
> I'm sure that constructive suggestions of associative array syntax
> would be looked at.  Probably for this particular aspect of syntax,
> compatibility with ksh isn't critical, although other things being
> equal, compatibility is better than incompatibility.

I don't have my archives with me, but looking through the web-based
archives, I can verify that my memory is correct (A Good Thing given the
redirect fiasco).  Also I don't have access to the pws-patched versions
at the moment.  *sigh*

Bart introduced the associative array stuff with some reasonably clean
syntax, all things considered.  It was changed to be compatible with
ksh.  <http://www.zsh.org/mla/workers/1998/msg00925.html> shows that he
used 'typeset -H'.

Personally, I think that Bart was correct in his judgement and that ksh
is daft in this respect.  Bart, any chance of restoring 'typeset -H' and
making 'typeset -A' (was it?) a compatibility way in, for ksh
compatibility?  Doesn't need an option to enable it, just documented,
perhaps deprecated, and all examples using the cleaner 'typeset -H'.

Generally, the array/Associative array thing could do with becoming an
array/Hash thing.  And sorting out what needs to be in 'set' and what in
'typeset'.  This is a user-interface thing as much as anything else, so
any one person declaring correctness wouldn't be as good as discussion
and consensus (hence these posts).

The other 'issue' is something I'd need to check on before making an
utter fool of myself again.  ;^)

And to quote the article that started this, from Bruce Stephens,
<http://www.zsh.org/mla/workers/1998/msg00927.html>:
>What does ksh93 provide in the way of associative array functionality?
>(I don't have it installed at work, so I can't look it up right not.)
>
>I'm not suggesting that ksh93 is always right about everything, but it
>would surely be a good starting point, and a zsh which contained ksh93
>as a subset would be much more convenient than having gratuitous
>syntactic differences.  Except in those places where ksh93 is just
>wrong, of course.

I'm inclined to agree with that last sentence.  :^)

PS: did anything ever come of adding namerefs?
-- 
--> Phil Pennock ; GAT d- s+:+ a23 C++(++++) UL++++/I+++/S+++/B++/H+$ P++@$
L+++ E-@ W(+) N>++ o !K w--- O>+ M V !PS PE Y+ PGP+ t-- 5++ X+ R !tv b++>+++
DI+ D+ G+ e+ h* r y?

