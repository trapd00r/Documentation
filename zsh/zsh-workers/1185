From coleman@math.gatech.edu Mon May 27 14:44:21 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by melb.werple.net.au (8.7.5/8.7.3) with ESMTP id OAA08316 for <mason@werple.mira.net.au>; Mon, 27 May 1996 14:44:19 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id AAA23198; Mon, 27 May 1996 00:30:16 -0400 (EDT)
Resent-Date: Mon, 27 May 1996 00:30:16 -0400 (EDT)
Message-Id: <199605270430.AAA29508@redwood.skiles.gatech.edu>
X-Mailer: exmh version 1.6.6 3/24/96
To: zsh-workers@math.gatech.edu
Subject: Re: seg fault on $(dgqhghdqwdhqwjq) : beta19 
In-reply-to: Your message of "Mon, 27 May 1996 03:13:45 +0200."
             <199605270113.DAA01134@hzoli.ppp.cs.elte.hu> 
Mime-Version: 1.0
Content-Type: text/plain
Date: Mon, 27 May 1996 00:29:59 -0400
From: Richard Coleman <coleman@math.gatech.edu>
Resent-Message-ID: <"2ps4Q2.0.Og5.N_Ign"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/1185
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu
Content-Length: 1102
Status: OR

> > res1% $(wekdwqw)
> > zsh: command not found: wekdwqw
> > zsh: 21441 segmentation fault  $(wekdwqw)
> 
> It always happens when prefork() in execcmd() removes all arguments.
> Eg. $foo triggers the bug if foo is not set.  Richard did several changes
> related to this and I think this bug appeared with these changes.  Richard,
> could you check it?
> 
> Zoltan
> 

I recently removed the piece of code

    if (empty(args)) {
        zerr("no command", NULL, 0);
        _exit(1);
    }

from the beginning of execute() in exec.c since `args' should not
be empty at this point.  It appears this uncovered a bug higher up
the execution pipeline (this was my very intention, of course).
Rather than putting this piece of code back, we should probably fix
this in execcmd() or prefork().

There were a couple of other places I removed such checks.  I hate
these types of checks since they cover up bugs rather than fix them.
In my opinion, the check in dotrap() for errflag (which was recently
added) is in this category.  If errflag=1, then you shouldn't have
called dotrap in the first place.

rc



