From zsh-workers-request@math.gatech.edu Wed Aug 19 06:50:57 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 14211 invoked from network); 19 Aug 1998 06:50:56 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 19 Aug 1998 06:50:56 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.9.1/8.9.1) id CAA27021;
	Wed, 19 Aug 1998 02:43:40 -0400 (EDT)
Resent-Date: Wed, 19 Aug 1998 02:43:40 -0400 (EDT)
Date: Wed, 19 Aug 1998 08:45:59 +0200 (MET DST)
Message-Id: <199808190645.IAA13686@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@math.gatech.edu
In-reply-to: Peter Stephenson's message of Tue, 18 Aug 1998 18:28:45 +0200
Subject: Re: zsh - new user with questions
Resent-Message-ID: <"zvXjc3.0.8c6.SGdsr"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4323
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu


Peter Stephenson wrote:

> 
> "Stephen Riehm" wrote:
> >      extreme short cuts. ie: with tcsh's enhanced completions, to complete
> > the file named: ReadMe.First
> >      all I would type id: r.f<tab> - is there a way to do this sort of
> > thing in zsh?
> 
> You can write your own function.  See Functions/multicomp in the
> source distribution for examples.  If you really can't type uppercase
> characters, you're going to have to redo the globbing there so
> that every lowercase character becomes e.g. [rR], then you'll
> need to handle .'s in the way /'s are handled there.  Ignoring case
> may happen one day, but I doubt there's ever going to be a built-in
> way of saying 'look and see if there are any characters preceeding a
> dot to be added earlier on in the completion'. 

Ahem. I already said this... I had a patch for this which Zefram
didn't include, combining a simple partial-word-completion mechanism,
cas fold completions and the autoglob option (which gave the
possibility requested by Johan Sundström some time ago).
Most people think of completion functions when thinking about that,
but that, of course, would solve the problem only for one kind of
completions (one function for files, one for options, ...) which I
consider unacceptable.
I don't want to make that old patch of mine be accepted now (I even
don't know if we can get it applied nowadays). But I am really
thinking about making the matching mechanism definable in a way that
at least gives us the possibility to get case-fold completions, the
partial-word-completion mentioned above and some other goodies.
There are still some open questions I have to think about, but since I 
should have some time in this and the next week, I may be able to
offer you an implementation to play with.

Bye
 Sven

P.S.: The fact that tcsh can do this has been nagging at me for quite some
      time now ;-)


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

