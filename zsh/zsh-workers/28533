From zsh-workers-return-28533-mason-zsh=primenet.com.au@zsh.org Fri Dec 17 16:52:57 2010
Return-Path: <zsh-workers-return-28533-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 18751 invoked by alias); 17 Dec 2010 16:52:57 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28533
Received: (qmail 27131 invoked from network); 17 Dec 2010 16:52:52 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,FREEMAIL_FROM,RCVD_IN_DNSWL_LOW autolearn=ham
	version=3.3.1
Received-SPF: pass (ns1.primenet.com.au: SPF record at _spf.google.com designates 209.85.214.49 as permitted sender)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:from:to:cc:subject
         :in-reply-to:references:user-agent:date:message-id:mime-version
         :content-type;
        bh=IOAf4nof5ne16tOcRMo/zUHuBlD4lZ5vQ4NocHddQPo=;
        b=AojAc8nWh4VsvUz1G2N6rxYW1kTMCQFw379BJUqUTdmtNd57fcfJbJgcHDv9ambUk8
         BapJUp1zTU9jvt8niEI0sf+NH9XRL2hNZopv+FPDwCrTlbsdh4Y2YQy7HFE/zHhiljDe
         D3asmDi+EcRtPmxzZ69uS5gPd8tw2J52YmKGo=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=from:to:cc:subject:in-reply-to:references:user-agent:date
         :message-id:mime-version:content-type;
        b=H6kqxR5oklpnS6lR+PbCKftg33WG7bPw+zUdeQ3g0mW0xhcOaa8F3p9ZODiZ3iKNot
         uBt76yJXvq/31ddO8h+1nSTATFvTIgVctIh+bNh4uysYroob0RgQNV/9f5u+dnujQKmC
         CSt6J8CuWiSq5JU9RwvnXvLsfNyJWdPzRuDQI=
From: =?utf-8?B?xaB0xJtww6FuIE7Em21lYw==?= <stepnem@gmail.com>
To: Mikael Magnusson <mikachu@gmail.com>
Cc: zsh workers <zsh-workers@zsh.org>
Subject: [PATCH] Re: Some small typo fixes
In-Reply-To: <AANLkTi=oPuJnD9x_OjkiFcoLCMH4Okme011ctXzoorj7@mail.gmail.com>
	(Mikael Magnusson's message of "Thu, 16 Dec 2010 13:38:51 +0100")
References: <AANLkTi=oPuJnD9x_OjkiFcoLCMH4Okme011ctXzoorj7@mail.gmail.com>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/24.0.50 (gnu/linux)
Date: Fri, 17 Dec 2010 17:44:25 +0100
Message-ID: <87hbec4ady.fsf@gmail.com>
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="=-=-="

--=-=-=
Content-Type: text/plain

Mikael Magnusson <mikachu@gmail.com> writes:

> Well, I finally accumulated enough of these to not feel incredibly
> silly sending them.

That's the spirit! Here are mine:


--=-=-=
Content-Type: text/x-diff
Content-Disposition: inline; filename=typos.patch

diff --git a/Doc/Zsh/compsys.yo b/Doc/Zsh/compsys.yo
index cf5ae20..4a24df7 100644
--- a/Doc/Zsh/compsys.yo
+++ b/Doc/Zsh/compsys.yo
@@ -279,7 +279,7 @@ ifnzman(noderef(The zsh/complist Module))\
 
 When one of the var(key-sequences) is typed, the function in the file will
 be invoked to generate the matches.  Note that a key will not be re-bound
-if if it already was (that is, was bound to something other than
+if it already was (that is, was bound to something other than
 tt(undefined-key)).  The widget created has the same name as the file and
 can be bound to any other keys using tt(bindkey) as usual.
 )
@@ -1198,7 +1198,7 @@ item(tt(call-command))(
 This style is used in the function for commands such as tt(make) and
 tt(ant) where calling the command directly to generate matches suffers
 problems such as being slow or, as in the case of tt(make) can
-potentially causes actions in the makefile to be executed. If it is set
+potentially cause actions in the makefile to be executed. If it is set
 to `true' the command is called to generate matches. The default value
 of this style is `false'.
 )
@@ -1246,7 +1246,7 @@ the two strings `tt(start)' and `tt(stop)'.
 kindex(complete, completion style)
 item(tt(complete))(
 This is used by the tt(_expand_alias) function when invoked as a
-bindable command.  If it set to `true' and the word on the command
+bindable command.  If set to `true' and the word on the command
 line is not the name of an alias, matching alias names will be
 completed.
 )
@@ -2040,7 +2040,7 @@ zstyle ':completion:*:foo:*' matcher-list \
 If the style is unset in any context no match specification is applied.
 Note also that some completers such as tt(_correct) and tt(_approximate)
 do not use the match specifications at all, though these completers will
-only ever called once even if the tt(matcher-list) contains more than
+only ever be called once even if the tt(matcher-list) contains more than
 one element.
 
 Where multiple specifications are useful, note that the em(entire)
@@ -2720,7 +2720,7 @@ attempt).
 kindex(use-perl, completion style)
 item(tt(use-perl))(
 Various parts of the function system use awk to extract words from
-files or command output as this universally available.  However, many
+files or command output as it is universally available.  However, many
 versions of awk have arbitrary limits on the size of input.  If this
 style is set, perl will be used instead.  This is almost always
 preferable if perl is available on your system.
@@ -3422,7 +3422,7 @@ example(_alternative \
 offers usernames and hostnames as possible matches,
 generated by the tt(_users) and tt(_hosts) functions respectively.
 
-Like tt(_arguments), this functions uses tt(_all_labels) to execute 
+Like tt(_arguments), this function uses tt(_all_labels) to execute 
 the actions, which will loop over all sets of tags.  Special handling is
 only required if there is an additional valid tag, for example inside a
 function called from tt(_alternative).
@@ -3887,7 +3887,7 @@ Note also that tt(_arguments) tries to find out automatically if the
 argument for an option is optional.  This can be specified explicitly by
 doubling the colon before the var(message).
 
-If the var(pattern) ends in `tt((-))', this will removed from the
+If the var(pattern) ends in `tt((-))', this will be removed from the
 pattern and the var(action) will be used only directly after the
 `tt(=)', not in the next word.  This is the behaviour of a normal
 specification defined with the form `tt(=-)'.
@@ -3963,8 +3963,8 @@ findex(_call_function)
 item(tt(_call_function) var(return) var(name) [ var(args) ... ])(
 If a function var(name) exists, it is called with the arguments
 var(args).  The var(return) argument gives the name of a parameter in which
-the return status from the function var(name); if var(return) is empty or a
-single hyphen it is ignored.
+the return status from the function var(name) should be stored; if var(return)
+is empty or a single hyphen it is ignored.
 
 The return status of tt(_call_function) itself is zero if the function
 var(name) exists and was called and non-zero otherwise.
@@ -4049,7 +4049,7 @@ line.  In this case tt(_describe) uses the tt(prefix-hidden),
 tt(prefix-needed) and tt(verbose) styles to find out if the strings should
 be added as completions and if the descriptions should be shown.  Without
 the `tt(-o)' option, only the tt(verbose) style is used to decide how
-descriptions are shown.  If `tt(-O)' is used instead of `tt(-O)', command
+descriptions are shown.  If `tt(-O)' is used instead of `tt(-o)', command
 options are completed as above but tt(_describe) will not handle the
 tt(prefix-needed) style.
 
diff --git a/Doc/Zsh/compwid.yo b/Doc/Zsh/compwid.yo
index b8786dd..0668974 100644
--- a/Doc/Zsh/compwid.yo
+++ b/Doc/Zsh/compwid.yo
@@ -546,7 +546,7 @@ item(tt(-J) var(name))(
 Gives the name of the group of matches the words should be stored in.
 )
 item(tt(-V) var(name))(
-Like tt(-J) but naming a unsorted group. These are in a different name 
+Like tt(-J) but naming an unsorted group. These are in a different name
 space than groups created with the tt(-J) flag.
 )
 item(tt(-1))(
@@ -671,8 +671,8 @@ option stores the `tt(foo)' originally given.
 item(tt(-D) var(array))(
 As with tt(-O), the var(words) are not added to the set of possible
 completions.  Instead, the completion code tests whether each var(word) 
-in turn matches what is on the line.  If the var(n)'th var(word) does not
-match, the var(n)'th element of the var(array) is removed.  Elements
+in turn matches what is on the line.  If the var(n)th var(word) does not
+match, the var(n)th element of the var(array) is removed.  Elements
 for which the corresponding var(word) is matched are retained.
 )
 item(tt(-C))(
@@ -732,8 +732,8 @@ matches the var(pattern), the matched portion is removed from
 tt(PREFIX) and appended to tt(IPREFIX).
 
 Without the optional var(number), the longest match is taken, but
-if var(number) is given, anything up to the var(number)'th match is
-moved.  If the var(number) is negative, the var(number)'th longest
+if var(number) is given, anything up to the var(number)th match is
+moved.  If the var(number) is negative, the var(number)th longest
 match is moved. For example, if tt(PREFIX) contains the string
 `tt(a=b=c)', then tt(compset -P '*\=') will move the string `tt(a=b=)' 
 into the tt(IPREFIX) parameter, but tt(compset -P 1 '*\=') will move only
@@ -750,7 +750,7 @@ matched portion to the front of the value of tt(ISUFFIX).
 item(tt(-n) var(begin) [ var(end) ])(
 If the current word position as specified by the parameter tt(CURRENT) 
 is greater than or equal to var(begin), anything up to the
-var(begin)'th word is removed from the tt(words) array and the value
+var(begin)th word is removed from the tt(words) array and the value
 of the parameter tt(CURRENT) is decremented by var(begin).
 
 If the optional var(end) is given, the modification is done only if
@@ -799,7 +799,7 @@ ignored by the completion code.
 item(tt(compcall) [ tt(-TD) ])(
 This allows the use of completions defined with the tt(compctl) builtin
 from within completion widgets.  The list of matches will be generated as
-if one of the non-widget completion function (tt(complete-word), etc.)
+if one of the non-widget completion functions (tt(complete-word), etc.)
 had been called, except that only tt(compctl)s given for specific commands
 are used. To force the code to try completions defined with the tt(-T)
 option of tt(compctl) and/or the default completion (whether defined by
@@ -1051,7 +1051,7 @@ in the middle of the string on the command line and the option
 tt(COMPLETE_IN_WORD) is set. In this case the completion code would
 normally try to match trial completions that end with the string as
 typed so far, i.e. it will only insert new characters at the cursor
-position rather then at the end.  However in our example we would like
+position rather than at the end.  However in our example we would like
 the code to recognise matches which contain extra characters after the
 string on the line (the `tt(nix)' in the example).  Hence we say that the
 empty string at the end of the string on the line matches any characters
diff --git a/Doc/Zsh/contrib.yo b/Doc/Zsh/contrib.yo
index 52efe90..0903d9d 100644
--- a/Doc/Zsh/contrib.yo
+++ b/Doc/Zsh/contrib.yo
@@ -306,7 +306,7 @@ var(hook) is one of tt(chpwd), tt(periodic), tt(precmd) or tt(preexec),
 the special functions in question.
 
 var(functions) is name of an ordinary shell function.  If no options
-are given this will be added to the array of functions to be executed.
+are given this will be added to the array of functions to be executed
 in the given context.
 
 If the option tt(-d) is given, the var(function) is removed from
@@ -408,7 +408,7 @@ enditem()
 
 subsect(Configuration)
 
-Configuration is by mean of the styles mechanism that should be familiar
+Configuration is by means of the styles mechanism that should be familiar
 from completion; if not, see the description of the tt(zstyle) command in
 ifzman(see zmanref(zshmodules))\
 ifnzman(noderef(The zsh/zutil Module)).  The context for setting styles
@@ -518,7 +518,7 @@ If present, changing directly down by any number of directories
 causes the current directory to be overwritten.  For example,
 changing from ~pws to ~pws/some/other/dir causes ~pws not to be
 left on the recent directory stack.  This only applies to direct
-changes to descendant diretories; earlier directories on the
+changes to descendant directories; earlier directories on the
 list are not pruned.  For example, changing from ~pws/yet/another
 to ~pws/some/other/dir does not cause ~pws to be pruned.
 )
@@ -732,7 +732,7 @@ for looking up its styles.
 The initial value of tt(<repo-root-name>) is var(-all-) and it is replaced
 with the actual name, as soon as it is known. Only use this part of the
 context for defining the var(formats), var(actionformats) or
-var(branchformat) styles. As it is guaranteed that tt(<repo-root-name>) is
+var(branchformat) styles, as it is guaranteed that tt(<repo-root-name>) is
 set up correctly for these only. For all other styles, just use tt('*')
 instead.
 
@@ -755,9 +755,9 @@ A list of formats, used when actionformats is not used
 )
 kindex(actionformats)
 item(tt(actionformats))(
-A list of formats, used if a there is a special
-action going on in your current repository; like an interactive rebase or
+A list of formats, used if there is a special
+action going on in your current repository, like an interactive rebase or
 a merge conflict.
 )
 kindex(branchformat)
@@ -1020,7 +1020,7 @@ subsect(Oddities)
 
 If you want to use the tt(%b) (bold off) prompt expansion in var(formats),
 which expands tt(%b) itself, use tt(%%b). That will cause the var(vcs_info)
-expansion to replace tt(%%b) with tt(%b). So zsh's prompt expansion
+expansion to replace tt(%%b) with tt(%b), so that zsh's prompt expansion
 mechanism can handle it. Similarly, to hand down tt(%b) from
 var(branchformat), use tt(%%%%b). Sorry for this inconvenience, but it
 cannot be easily avoided. Luckily we do not clash with a lot of prompt
@@ -2019,7 +2019,7 @@ endsitem()
 item(Special letters)(
 Characters found in various variants of the Latin alphabet:
 startsitem()
-sitem(tt(ss))(Eszett (scafes S))
+sitem(tt(ss))(Eszett (scharfes S))
 sitem(tt(D-), tt(d-))(Eth)
 sitem(tt(TH), tt(th))(Thorn)
 sitem(tt(kk))(Kra)
diff --git a/Doc/Zsh/expn.yo b/Doc/Zsh/expn.yo
index cb11e4a..d246c3c 100644
--- a/Doc/Zsh/expn.yo
+++ b/Doc/Zsh/expn.yo
@@ -852,7 +852,7 @@ em(arithmetic expansion) on the result. Such expansions can be
 nested but too deep recursion may have unpredictable effects.
 )
 item(tt(f))(
-Split the result of the expansion to lines. This is a shorthand
+Split the result of the expansion at newlines. This is a shorthand
 for `tt(ps:\n:)'.
 )
 item(tt(F))(
@@ -1077,7 +1077,7 @@ item(tt(m))(
 Only useful together with one of the flags tt(l) or tt(r) or with the
 tt(#) length operator when the tt(MULTIBYTE) option
 is in effect.  Use the character width reported by the system in
-calculating the how much of the string it occupies or the overall
+calculating how much of the string it occupies or the overall
 length of the string.  Most printable characters have a width of one
 unit, however certain Asian character sets and certain special effects
 use wider characters; combining characters have zero width.
@@ -2200,7 +2200,7 @@ item(tt(F))(
 `full' (i.e. non-empty) directories.  Note that the
 opposite sense tt(LPAR()^F)tt(RPAR()) expands to empty directories
 and all non-directories.  Use tt(LPAR()/^F)tt(RPAR()) for
-empty directories
+empty directories.
 )
 item(tt(.))(
 plain files
diff --git a/Doc/Zsh/params.yo b/Doc/Zsh/params.yo
index 5d85f58..d0255af 100644
--- a/Doc/Zsh/params.yo
+++ b/Doc/Zsh/params.yo
@@ -900,7 +900,7 @@ If set, is treated as a pattern during spelling correction.  Any
 potential correction that matches the pattern is ignored.  For example,
 if the value is `tt(_*)' then completion functions (which, by
 convention, have names beginning with `tt(_)') will never be offered
-as spelling corrections.  The pattern does not apply the correction
+as spelling corrections.  The pattern does not apply to the correction
 of file names, as applied by the tt(CORRECT_ALL) option (so with the
 example just given files beginning with `tt(_)' in the current
 directory would still be completed).
diff --git a/Doc/Zsh/zle.yo b/Doc/Zsh/zle.yo
index 92b5f20..591593d 100644
--- a/Doc/Zsh/zle.yo
+++ b/Doc/Zsh/zle.yo
@@ -618,7 +618,7 @@ simply to perform some small action.  The ZLE commands that key sequences
 in keymaps are bound to are in fact widgets.  Widgets can be user-defined
 or built in.
 
-The standard widgets built in to ZLE are listed in Standard Widgets below.
+The standard widgets built into ZLE are listed in Standard Widgets below.
 Other built-in widgets can be defined by other modules (see
 ifzman(zmanref(zshmodules))\
 ifnzman(noderef(Zsh Modules))\
@@ -695,8 +695,8 @@ cursor being moved to the appropriate end of the buffer.
 )
 vindex(CUTBUFFER)
 item(tt(CUTBUFFER) (scalar))(
-The last item to be cut using one of the `tt(kill-)' commands; the
-string which the next yank would insert in the line.  Later entries in
+The last item cut using one of the `tt(kill-)' commands; the string
+which the next yank would insert in the line.  Later entries in
 the kill ring are in the array tt(killring).  Note that the
 command `tt(zle copy-region-as-kill) var(string)' can be used to
 set the text of the cut buffer from a shell function and cycle the kill
@@ -784,7 +784,7 @@ vindex(PREDISPLAY)
 item(tt(PREDISPLAY) (scalar))(
 Text to be displayed before the start of the editable text buffer.  This
 does not have to be a complete line; to display a complete line, a newline
-must be appended explicitly.    The text is reset on each new invocation
+must be appended explicitly.  The text is reset on each new invocation
 (but not recursive invocation) of zle.
 )
 vindex(POSTDISPLAY)
@@ -936,7 +936,7 @@ widget to be called.
 The value tt($KEYMAP) within the function reflects the new keymap.  The
 old keymap is passed as the sole argument.
 
-This can been used for detecting switches between the vi command
+This can be used for detecting switches between the vi command
 (tt(vicmd)) and insert (usually tt(main)) keymaps.
 )
 enditem()
@@ -1362,11 +1362,11 @@ the same way to pick a word from that event.
 
 When called from a shell function invoked from a user-defined widget, the
 command can take one to three arguments.  The first argument specifies a
-history offset which applies to successive calls to this widget: if is -1,
+history offset which applies to successive calls to this widget: if it is -1,
 the default behaviour is used, while if it is 1, successive calls will move
 forwards through the history.  The value 0 can be used to indicate that the
 history line examined by the previous execution of the command will be
-reexamined.  Note that negative numbers should be preceded with a
+reexamined.  Note that negative numbers should be preceded by a
 `tt(-)tt(-)' argument to avoid confusing them with options.
 
 If two arguments are given, the second specifies the word on the command
diff --git a/Functions/Chpwd/cdr b/Functions/Chpwd/cdr
index d4e6ffa..3025a9d 100644
--- a/Functions/Chpwd/cdr
+++ b/Functions/Chpwd/cdr
@@ -154,7 +154,7 @@
 #         causes the current directory to be overwritten.  For example,
 #         changing from ~pws to ~pws/some/other/dir causes ~pws not to be
 #         left on the recent directory stack.  This only applies to direct
-#         changes to descendant diretories; earlier directories on the
+#         changes to descendant directories; earlier directories on the
 #         list are not pruned.  For example, changing from ~pws/yet/another
 #         to ~pws/some/other/dir does not cause ~pws to be pruned.
 #       pattern:<pattern>
diff --git a/README b/README
index 94f7cb0..c8b810e 100644
--- a/README
+++ b/README
@@ -255,7 +255,7 @@ Doc/zsh.texi	Everything the man pages have, but in texinfo format.  These
 		top level Makefile.  Version 4.0 or above of the
 		Texinfo tools are recommended for processing this file.
 
-Also include in the distribution are:
+Also included in the distribution are:
 
 Doc/intro.ms	An introduction to zsh in troff format using the ms
 		macros.  This document explains many of the features

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: base64

DQogIMWgdMSbcMOhbg0K
--=-=-=--

