From zsh-workers-return-16183-mason-zsh=primenet.com.au@sunsite.dk Fri Oct 26 22:51:31 2001
Return-Path: <zsh-workers-return-16183-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 13417 invoked from network); 26 Oct 2001 22:51:31 -0000
Received: from ns2.primenet.com.au (HELO primenet.com.au) (?/Un4c5DUt2sQ+XdsNETq7ePalpcr/wuR?@203.24.36.3)
  by ns1.primenet.com.au with SMTP; 26 Oct 2001 22:51:31 -0000
Received: (qmail 6821 invoked from network); 26 Oct 2001 22:51:29 -0000
Received: from sunsite.dk (130.225.247.90)
  by proxy.melb.primenet.com.au with SMTP; 26 Oct 2001 22:51:29 -0000
Received: (qmail 14792 invoked by alias); 26 Oct 2001 22:51:22 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16183
Received: (qmail 14781 invoked from network); 26 Oct 2001 22:51:21 -0000
From: Bart Schaefer <schaefer@brasslantern.com>
Message-Id: <011026155103.ZM10856@candle.brasslantern.com>
Date: Fri, 26 Oct 2001 15:51:03 -0700
In-Reply-To: <Pine.LNX.4.21.0110261110100.7802-100000@life.blorf.net>
Comments: In reply to Wayne Davison <wayned@users.sourceforge.net>
        "Re: .zsh_history bugreport" (Oct 26, 11:26am)
References: <Pine.LNX.4.21.0110261110100.7802-100000@life.blorf.net>
X-Mailer: Z-Mail Lite (5.0.0 30July97)
To: Wayne Davison <wayned@users.sourceforge.net>
Subject: Re: .zsh_history bugreport
Cc: zsh-workers@sunsite.dk
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Oct 26, 11:26am, Wayne Davison wrote:
> Subject: Re: .zsh_history bugreport
> On Fri, 26 Oct 2001, Bart Schaefer wrote:
> > This was fixed by the patch in users/4269 and should be working in the
> > zsh-4.0.4 release from earlier today.
> 
> Hmm.  The start >= l (ell) check can only error-out if the null byte
> is at the start of the line (since once a section gets measured, it
> can't ever get any shorter).

No, that's not true.  Look at the recursive call.  The value passed in
for start is the value of the previous l.  So if fgets() returns nonzero
but buf didn't get any longer, start == l and (start >= l) is true and so
we return -1.  The greater-than check is just in there for completeness;
only the equivalence should happen in practice.

It doesn't matter where the null byte is.

