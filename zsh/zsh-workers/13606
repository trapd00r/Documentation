From zsh-workers-return-13606-mason-zsh=primenet.com.au@sunsite.dk Mon Mar 12 13:14:03 2001
Return-Path: <zsh-workers-return-13606-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 6588 invoked from network); 12 Mar 2001 13:14:02 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 12 Mar 2001 13:14:02 -0000
Received: (qmail 27988 invoked by alias); 12 Mar 2001 13:13:56 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 13606
Received: (qmail 27977 invoked from network); 12 Mar 2001 13:13:55 -0000
Date: Mon, 12 Mar 2001 13:13:52 +0000
From: Oliver Kiddle <opk@u.genie.co.uk>
To: zsh-workers@sunsite.dk
Subject: Re: Possible bug with parameter expansion
Message-ID: <20010312131352.A24971@rambo.logica.co.uk>
References: <20010307113659.A13689@rambo.logica.co.uk> <1010308163315.ZM25025@candle.brasslantern.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <1010308163315.ZM25025@candle.brasslantern.com>; from schaefer@candle.brasslantern.com on Thu, Mar 08, 2001 at 04:33:15PM +0000
Sender: Oliver Kiddle <kiddleo@logica.com>

On Thu, Mar 08, 2001 at 04:33:15PM +0000, Bart Schaefer wrote:

> If you read Peter's 11-step "summary of the rules for substitution" you
> will see that (4. *Double-Quoted Joining*) comes before (6. *Modifiers*).

fair enough. Thanks.

> Because they do.  I don't recall why joining happens before modifiers,
> but I'm pretty sure there was a good reason for it at the time.  Does
> this disagree with other shells that support ${var#pat}, e.g. ksh?

In ksh, there is no way I know of making var refer to an array because it
expands to the first element of the array and with [@], you get a bad
substitution.

Comparing with bash, I have to use [@] to get an array before the
modifier. With the [@], both bash and zsh work the same regardless of
quotes. So basically, I haven't been able to create a comparable situation
in bash or ksh.

I still think the behaviour seems odd mainly because I'm used to reading
these substitutions from the inside out and the double quotes are on the
outside.

Oliver

