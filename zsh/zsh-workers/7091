From zsh-workers-return-7091-mason-zsh=primenet.com.au@sunsite.auc.dk Fri Jul 09 16:12:31 1999
Return-Path: <zsh-workers-return-7091-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1959 invoked from network); 9 Jul 1999 16:12:28 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 9 Jul 1999 16:12:28 -0000
Received: (qmail 9799 invoked by alias); 9 Jul 1999 16:12:09 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 7091
Received: (qmail 9792 invoked from network); 9 Jul 1999 16:12:08 -0000
Message-Id: <9907091543.AA40388@ibmth.df.unipi.it>
To: "ZSH workers mailing list" <zsh-workers@sunsite.auc.dk>
Subject: Re: --enable-dynamic and --enable-lfs in 3.1.6 
In-Reply-To: ""Andrej Borsenkow""'s message of "Fri, 09 Jul 1999 17:13:42 DFT."
             <000601beca0c$dda7e9e0$21c9ca95@mow.siemens.ru> 
Date: Fri, 09 Jul 1999 17:43:26 +0200
From: Peter Stephenson <pws@ibmth.df.unipi.it>

"Andrej Borsenkow" wrote:
> Should they not default to "yes" in released version? Else there are good
> chances that users will miss them. I think it is vital that these be
> tested on as many systems as possible. This will also show, how good our
> configure tests are :-)

I agree the defaults need changing at some point --- and it might as well
be now for the reasons you give.  This turns them on by default (I got a
little confused between $lfs and $enable_lfs, but that's par for the
course) and changes INSTALL accordingly.  Ideally, turning on large file
support should be completely transparent.  Ha.

--- INSTALL.enable	Fri Jul  9 16:58:13 1999
+++ INSTALL	Fri Jul  9 17:41:38 1999
@@ -36,15 +36,18 @@
 Dynamic loading
 ---------------
 
-Zsh-3.1 has support for dynamically loadable modules.  To enable this run
-configure with the --enable-dynamic option.  Note that dynamic loading
-does not work on all systems.  On these systems this option will have no
-effect, so it is always safe to use --enable-dynamic.  When dynamic
-loading is enabled, major parts of zsh (including the Zsh Line Editor) are
-compiled into modules and not included into the main zsh binary.  Zsh
-autoloads these modules when they are required.  This means that you have
-to execute make install.modules before you try the newly compiled zsh
-executable.
+Zsh-3.1 has support for dynamically loadable modules.  This is now enabled
+by default; to disable it, run configure with the --disable-dynamic option.
+Note that dynamic loading does not work on all systems.  On these systems
+this option will have no effect.  When dynamic loading is enabled, major
+parts of zsh (including the Zsh Line Editor) are compiled into modules and
+not included into the main zsh binary.  Zsh autoloads these modules when
+they are required.  This means that you have to execute make
+install.modules before you try the newly compiled zsh executable, and hence
+also the install paths must be correct.  The installation path for modules
+is EPREFIX/lib/zsh/<zsh-version-number>, where EPREFIX defaults to PREFIX
+unless given explicitly, and PREFIX defaults to /usr/local.  See the end of
+this file for options to configure to change these.
 
 Adding more modules
 -------------------
@@ -271,13 +274,12 @@
 ------------------------------------
 
 Some 32-bit systems allow special compilation modes to get around the 2GB
-file size barrier; the zsh support for this is still experimental, and
-feedback is particularly appreciated.  The option --enable-lfs turns on the
-configure check for support for large files.  Not all systems recognize the
-test used by zsh (via the getconf command), so flags may need to be set by
-hand, but --enable-lfs should be used in any case to compile in the code
-for using 64 bit integers.  On HP-UX 10.20, zsh has been successfully
-compiled with large file support by configuring with
+file size barrier.  The option --enable-lfs turns on the configure check
+for support for large files.  This is now enabled by default; use
+--disable-lfs to turn it off.  Not all systems recognize the test used by
+zsh (via the getconf command), so flags may need to be set by hand.  On
+HP-UX 10.20, zsh has been successfully compiled with large file support by
+configuring with
   CC="cc -Ae" CPPFLAGS="-D_LARGEFILE_SOURCE -D_FILE64" configure \
   --enable-lfs ...
 You can also give a value to --enable-lfs, which will be interpreted as the
--- configure.in.enable	Fri Jul  9 11:48:32 1999
+++ configure.in	Fri Jul  9 17:32:14 1999
@@ -100,7 +100,8 @@
 dnl Do you want large file support, if available?
 undefine([lfs])dnl
 AC_ARG_ENABLE(lfs,
-[  --enable-lfs               turn on support for large files])
+[  --enable-lfs               turn on support for large files],
+[lfs="$enableval"], [lfs=yes])
 
 dnl Pathnames for global zsh scripts
 undefine([etcdir])dnl
@@ -183,7 +184,7 @@
 undefine([dynamic])dnl
 AC_ARG_ENABLE(dynamic,
 [  --enable-dynamic           allow dynamically loaded binary modules],
-[dynamic="$enableval"], [dynamic=no])
+[dynamic="$enableval"], [dynamic=yes])
 
 dnl Do you want to compile as K&R C.
 AC_ARG_ENABLE(ansi2knr,
@@ -243,7 +244,7 @@
 
 dnl Check for large file support.
 dnl This needs to be done early to get the stuff into the flags.
-if test "x$enable_lfs" != x; then
+if test $lfs != no; then
 zsh_LARGE_FILE_SUPPORT
 fi
 
@@ -595,12 +596,11 @@
     AC_DEFINE(INO_T_IS_64_BIT)
   fi
 
-  if test "x$enable_lfs" != xno -o $zsh_cv_off_t_is_64_bit = yes \
+  if test $lfs != no -o $zsh_cv_off_t_is_64_bit = yes \
   -o $zsh_cv_ino_t_is_64_bit = yes; then
     AC_CACHE_CHECK(if compiler has a 64 bit type, zsh_cv_64_bit_type,
-    [if test "x$enable_lfs" != x -a "x$enable_lfs" != xyes \
-     -a "x$enable_lfs" != xno; then
-      zsh_64_BIT_TYPE(${enable_lfs}, zsh_cv_64_bit_type, force)
+    [if test $lfs != xyes -a $lfs != xno; then
+      zsh_64_BIT_TYPE(${lfs}, zsh_cv_64_bit_type, force)
      else
        zsh_64_BIT_TYPE(long long, zsh_cv_64_bit_type)
        if test "$zsh_cv_64_bit_type" = no; then

-- 
Peter Stephenson <pws@ibmth.df.unipi.it>       Tel: +39 050 844536
WWW:  http://www.ifh.de/~pws/
Dipartimento di Fisica, Via Buonarroti 2, 56127 Pisa, Italy

