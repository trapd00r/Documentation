From zsh-users-return-13091-mason-zsh=primenet.com.au@sunsite.dk Mon Aug 04 05:12:12 2008
Return-Path: <zsh-users-return-13091-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 12254 invoked from network); 4 Aug 2008 05:12:10 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.4 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 4 Aug 2008 05:12:10 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 49403 invoked from network); 4 Aug 2008 05:10:43 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 4 Aug 2008 05:10:43 -0000
Received: (qmail 12439 invoked by alias); 4 Aug 2008 05:09:43 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13091
Received: (qmail 12420 invoked from network); 4 Aug 2008 05:09:41 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 4 Aug 2008 05:09:41 -0000
Received: from momoland.openchat.com (p84-72.acedsl.com [66.114.84.72])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 1F39F805A42D
	for <zsh-users@sunsite.dk>; Mon,  4 Aug 2008 07:09:35 +0200 (CEST)
Received: from momoland.openchat.com (localhost [127.0.0.1])
	by momoland.openchat.com (Postfix) with ESMTP id 11523F45674B
	for <zsh-users@sunsite.dk>; Mon,  4 Aug 2008 01:09:34 -0400 (EDT)
Date: Mon, 04 Aug 2008 01:09:34 -0400
Message-ID: <87tze1v01d.wl%max@openchat.com>
From: Max Mikhanosha <max@openchat.com>
To: zsh-users@sunsite.dk
Subject: zle widgets coolness: pipe command template
User-Agent: Wanderlust/2.15.3 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.8 (=?ISO-8859-4?Q?Shij=F2?=) APEL/10.6 Emacs/22.0.51
 (x86_64-unknown-linux-gnu) MULE/5.0 (SAKAKI)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
X-Virus-Scanned: ClamAV 0.92.1/7930/Mon Aug  4 02:09:38 2008 on bifrost
X-Virus-Status: Clean

Wrote my first zle widget, thought I'll share:

# define-pipe-widget <widget-name> "template1" "template2" ....
#
# Defines "pipe widget" templates. Its hard to describe the best way
# is through an example:
#
# define-pipe-widget insert_grep  "grep \"@@@\"" "grep -i \"@@@\"" "grep @@@" 
# define-pipe-widget insert_head "head" "head\n"
#
# bindkey "\M-g" insert_grep
# bindkey "\M-h" insert_head
#
# Now pressing Alt-G will insert (| represents cursor position)
#
# On empty command line: grep "|"
#
# On non-empty command line: <old cmdline> | grep "|"
#
# Pressing Alt-G one more time cycles through choices
# ie:
#  ... |  grep "|"
#  ... | grep -i "|"
#  ... | grep
#  
# If template has \n in the end, then it will be auto-accepted:
# 
#      Alt-H does: ... | head <cursor here>
#  2nd Alt-H does  ... | head<Enter>
#
declare -gA pipe_widgets
function define-pipe-widget () {
    local var=$1 
    local templates=_${var}_templates
    declare -ga $templates
    shift
    set -A $templates $@
    zle -N $var insert-pipe-command
}

insert-pipe-command () {
    emulate -L zsh
    local var=$WIDGET
    local templates=_${var}_templates
    local before after auto_accept same patnum

    set nomatch
    # see if command line is same as in our last invocation
    if [[ $CURSOR == ${pipe_widgets[cursor_$var]} 
                && $HISTNO == $pipe_widgets[histno_$var] 
                && $BUFFER == $pipe_widgets[buffer_$var] ]] ; then
        (( patnum = ++pipe_widgets[patnum_$var] ))
        # wrap around
        if [[ $patnum -gt ${#${(P)templates}}  ]] ; then
            (( patnum = pipe_widgets[patnum_$var] = 1 ))
        fi
        BUFFER=$pipe_widgets[buffer_before_$var]
        CURSOR=$pipe_widgets[cursor_before_$var]
    else
       # start from scratch
       (( patnum = pipe_widgets[patnum_$var] = 1 ))
       pipe_widgets[buffer_before_$var]=$BUFFER
       pipe_widgets[cursor_before_$var]=$CURSOR
    fi
    local tmp=${${(P)templates}[$patnum]}
    if [[ $tmp == *\\n ]] ; then
        auto_accept=1
        tmp=$tmp[1,-3]
    fi
    # cursor in the end if not specified
    if [[ $tmp != *@@@* ]] ; then
        tmp="${tmp}@@@"
    fi
    before=${tmp%@@@*}
    after=${tmp#*@@@}
    if [[ -n ${LBUFFER## *} ]] ; then
        RBUFFER+=" | "
    else
        if [[ $after == '' && $before[-1] != " " ]] ; then
            before+=" "
        fi
        auto_accept=
    fi
    RBUFFER+=$before$after
    CURSOR=$(( $#BUFFER - $#after))
    # incase we were in vi mode
    builtin zle vi-insert 
    if [[ $auto_accept == 1 ]] ; then
        builtin zle accept-line
    fi
    pipe_widgets[histno_$var]=$HISTNO
    pipe_widgets[buffer_$var]=$BUFFER
    pipe_widgets[cursor_$var]=$CURSOR
}

