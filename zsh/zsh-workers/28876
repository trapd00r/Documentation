From zsh-workers-return-28876-mason-zsh=primenet.com.au@zsh.org Thu Mar 10 00:29:38 2011
Return-Path: <zsh-workers-return-28876-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 24642 invoked by alias); 10 Mar 2011 00:29:38 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28876
Received: (qmail 29063 invoked from network); 10 Mar 2011 00:29:36 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-4.3 required=5.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,RCVD_IN_DNSWL_MED autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at spodhuis.org does not designate permitted sender hosts)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=spodhuis.org; s=d200912;
	h=In-Reply-To:Content-Type:MIME-Version:References:Message-ID:Subject:Cc:To:From:Date; bh=V6JBHgdqQk6xEmgAJUgqjOzDleI6mn3tHFN4vQbR7Es=;
	b=maiCO9SXMcMzEsvQJTzYs1tCU+laf5X4bnq2rFzxiMgnI+S8DbTazM6l9PAnQFhxgE95vnCReEO6sxMu1b7kTw4O7QlfPpzKPPSjFOEFu3tO+1u87Kn5lRtebu0aLtVeY4ZQt0qQnj0wQu0ClyKw0Qv4SJOJpksxrvnGOoQSiew=;
Date: Wed, 9 Mar 2011 19:29:31 -0500
From: Phil Pennock <zsh-workers+phil.pennock@spodhuis.org>
To: Mikael Magnusson <mikachu@gmail.com>
Cc: zsh workers <zsh-workers@zsh.org>
Subject: Re: funny subshell effect
Message-ID: <20110310002931.GA40551@redoubt.spodhuis.org>
Mail-Followup-To: Mikael Magnusson <mikachu@gmail.com>,
	zsh workers <zsh-workers@zsh.org>
References: <AANLkTi=VUkvqOxo+OANG2AVYko-Zbq7LwLQoF68fbLev@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <AANLkTi=VUkvqOxo+OANG2AVYko-Zbq7LwLQoF68fbLev@mail.gmail.com>

On 2011-03-10 at 00:18 +0100, Mikael Magnusson wrote:
> This confused me for a few minutes, I was trying to play a random midi file with
> pmidi *(oe:REPLY=\$RANDOM:[1])
> but it plays the same one each time, but when i tried
> echo *(oe:REPLY=\$RANDOM:[1])
> it printed a different one each time
> 
> % repeat 3; do echo .(e:REPLY=\$RANDOM:); done
> 17
> 25549
> 6369
> % repeat 3; do command echo .(e:REPLY=\$RANDOM:); done
> 5801
> 5801
> 5801
> 
> Is this something that must be so? (My guess is yes, but it can't hurt to ask).
> (I know I can work around it easily by assigning to a var first).

If you assign to RANDOM in the subshell, that's a call to srand() which
will re-seed the RNG.

At present, the retrieval is just:
zlong
randomgetfn(UNUSED(Param pm))
{
    return rand() & 0x7fff;
}

Given the amount of forking going on normally, reseeding on every fork
would be bad, but perhaps something similar to the code I added to Exim
would work, so:

zlong
randomgetfn(UNUSED(Param pm))
{
  static pid_t last_rand_pid = 0;
  pid_t p;

  p = getpid()
  if (p != last_rand_pid)
    {
    last_rand_pid = p;
#ifdef HAVE_SRANDOMDEV_OR_WHATEVER_ZSH_HAS_AS_GUARD
    srandomdev();
#else
    gettimeofday(&tv, NULL);
    srandom(tv.tv_sec | tv.tv_usec | getpid());
#endif
    }
  return rand() & 0x7fff;
}

Except that I actually made Exim prefer arc4random()/arc4random_stir()
if available, and actually uses much stronger randomness from OpenSSL if
linked against that, but that's because people cook up homebrew access
token stuff and I wanted to provide something "not guaranteed
cryptographically strong, but at least not a complete nightmare".

Anyway, does this look like a reasonable approach?

-Phil

