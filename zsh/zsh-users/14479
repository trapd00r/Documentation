From zsh-users-return-14479-mason-zsh=primenet.com.au@sunsite.dk Sun Oct 11 11:17:11 2009
Return-Path: <zsh-users-return-14479-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2385 invoked from network); 11 Oct 2009 11:16:59 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.2.5
Received: from new-brage.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.254.104)
  by ns1.primenet.com.au with SMTP; 11 Oct 2009 11:16:59 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 15535 invoked from network); 11 Oct 2009 11:16:50 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 11 Oct 2009 11:16:50 -0000
Received: (qmail 9091 invoked by alias); 11 Oct 2009 11:16:41 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 14479
Received: (qmail 9076 invoked from network); 11 Oct 2009 11:16:40 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 11 Oct 2009 11:16:40 -0000
Received: from biskalar.biskalar.de (sesamstrafe.de [213.133.108.195])
	by bifrost.dotsrc.org (Postfix) with ESMTPS id 137C1805D09E
	for <zsh-users@sunsite.dk>; Sun, 11 Oct 2009 13:16:32 +0200 (CEST)
Received: from [78.43.3.91] (helo=[192.168.1.151])
	by biskalar.biskalar.de with esmtpsa (TLS-1.0:RSA_AES_128_CBC_SHA:16)
	(Exim 4.50)
	id 1MwwPa-0000Db-1m; Sun, 11 Oct 2009 13:16:26 +0200
References: <544dda350910092001r28997c41x5ef1ffe2e6d71982@mail.gmail.com> <87ab002aev.fsf@old-tantale.fifi.org> <544dda350910100053s499c0827yd54408b7f82b696d@mail.gmail.com> <544dda350910100233r6954f653wee358fc568e3a1a8@mail.gmail.com>
In-Reply-To: <544dda350910100233r6954f653wee358fc568e3a1a8@mail.gmail.com>
Mime-Version: 1.0 (Apple Message framework v1076)
Content-Type: text/plain; charset=windows-1252; format=flowed; delsp=yes
Message-Id: <7591F47B-F5AA-42EE-849A-9D8B1EC5FCFF@biskalar.de>
Content-Transfer-Encoding: quoted-printable
Cc: zsh-users@sunsite.dk
From: Sebastian Stark <seb-zsh@biskalar.de>
Subject: Re: noquote for quotes as in noglob for filename generation?
Date: Sun, 11 Oct 2009 13:07:36 +0200
To: Nazri Ramliy <ayiehere@gmail.com>
X-Mailer: Apple Mail (2.1076)
X-Virus-Scanned: ClamAV 0.94.2/9881/Sat Oct 10 11:21:35 2009 on bifrost
X-Virus-Status: Clean


Am 10.10.2009 um 11:33 schrieb Nazri Ramliy:
>> The mechanism you want is:
>>
>>  ${(q)variable}    # Escaped
>>  ${(qq)variable}   # Single quoted
>>  ${(qqq)variable}  # Double quoted
>
> Thank you Philippe for the tip (I learned something new). But I don't
> think that's what I want here (or maybe I'm just too stupid to see =20
> how I
> can make use of it to do what I want :)

You can=92t prevent zsh from removing the quotes if you add them to the =20=

command line of your sql script, as far as I know.

But using the (q..) expansion flag you can re-add the quotes later.

> What I want is for the script to receive the quotes that I gave it =20
> from
> the command line 'unscathed'.
>
> For example, if I ran:
>
>    $ sql select * from Artist where first_name like 'Michael %=91

In the sql script the word =82Michael %=91 will end up in some variable, =
=20
without the quotes. The script won=92t even see that it was quoted =20
before. If you expand this variable, add the (qq) flag.

I guess your main problem in this is that you=92re using $* to simply =20=

pass all positional parameters of the script to the actual mysql =20
command.

What you need is a mechanism that finds out which of those parameters =20=

should be single quoted (sql strings). Maybe it is enough if you quote =20=

all words that have a space in them, very roughly:

for a in $*
do
   if [[ -z ${a:#* *} ]]
   then
     print ${(qq)a}
   else
     print $a
   fi
done


Sebastian=

