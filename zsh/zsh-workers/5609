From zsh-workers-return-5609-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Mar 02 17:21:21 1999
Return-Path: <zsh-workers-return-5609-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 23111 invoked from network); 2 Mar 1999 17:21:19 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 2 Mar 1999 17:21:19 -0000
Received: (qmail 17601 invoked by alias); 2 Mar 1999 17:20:56 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 5609
Received: (qmail 17593 invoked from network); 2 Mar 1999 17:20:55 -0000
From: "Andrej Borsenkow" <borsenkow.msk@sni.de>
To: <B.Stephens@isode.com>,
        "ZSH workers mailing list" <zsh-workers@sunsite.auc.dk>
Subject: RE: Reading completion manual
Date: Tue, 2 Mar 1999 20:20:12 +0300
Message-ID: <000201be64d0$ee20e160$21c9ca95@mowp.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="Windows-1252"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)
In-Reply-To: <vbzp5vu8bv.fsf@snake.isode.com>
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2013.2901


>
> >  - use new option character (do we have one free?)
> >  - implement long options
> >  - (really wild one) implement name spaces.
> >
> > I'd like the last one, but it is probably impossible. A command name
> > may have any character, so there is simply no char that can be
> > (safely) used as delimiter. So, long options is probably the only
> > viable solution. And quite useful in other places as well.
>
> I thought namespaces had been discussed before?  What's the objection
> to allowing "." in variable names, and regarding it as a component
> delimiter in function/command names?

I spoke about functions not variables. Variables names are limited to
alphanumeric, so you can safely use ``.'' as delimiter. Function names can
be arbitrary (am I wrong?)

 Hmm, this isn't a good idea; I
> quite often use things like "cp $i $i.bak" and stuff.

If I remember correctly, it should start with a dot. And of course, you can
use braces as usual

cp ${.myvars.i} ${.myvars.i}.bak

But you are right, it can break some scripts

>
> (So if you have a function foo.WRITE, then that gets called when you
> try to write to foo.  Something like that, anyway.  A better interface
> might be to copy the Perl tie ideas---allowing special associative
> arrays and things as Bart suggested; you wouldn't need name spaces for
> this, of course.)
>

May be, simply add ZSH emulation module to Perl :-))) But yes, what you've
just described is my long cherished idea.

/andrej

