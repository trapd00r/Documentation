From zsh-workers-request@math.gatech.edu Mon Jan 11 02:41:12 1999
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 18383 invoked from network); 11 Jan 1999 02:41:11 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 11 Jan 1999 02:41:11 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.9.1/8.9.1) id VAA25745;
	Sun, 10 Jan 1999 21:39:18 -0500 (EST)
Resent-Date: Sun, 10 Jan 1999 21:39:18 -0500 (EST)
From: "Bart Schaefer" <schaefer@brasslantern.com>
Message-Id: <990110183828.ZM5039@candle.brasslantern.com>
Date: Sun, 10 Jan 1999 18:38:28 -0800
In-Reply-To: <199812151457.PAA13384@beta.informatik.hu-berlin.de>
Comments: In reply to Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
        "Re: Latest patched development version" (Dec 15,  3:57pm)
References: <199812151457.PAA13384@beta.informatik.hu-berlin.de>
X-Mailer: Z-Mail (4.0b.820 20aug96)
To: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>,
        zsh-workers@math.gatech.edu
Subject: Re: Latest patched development version
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-Message-ID: <"-k02p2.0.CI6.MHMcs"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4890
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

A long time ago, in a year far far away, Sven Wischnowsky wrote:
} Bruce Stephens wrote:
} > Bruce Stephens <b.stephens@isode.com> writes:
} > 
} > > Completion seems to have vanished, but I just tried with zsh -f, and
} > > it works again, so that's presumably just something that's changed
} > > in the compctl syntax that's not being reported as an error.
} > 
} > I've found it.  It was this example completion:
} > 
} > compctl -Tx 's[/home/] C[0,^/home/*/*]'  -S '/' \
} >     -s '$(niscat auto_home.org_dir | \
} > 	awk '\''/export\/[a-zA-Z]*$/ {print $NF}'\'' FS=/)'
} 
} Peter's version contains my patch for completion continuing. With this 
} we almost ever need a `-tc' in the `-T' completion.
} 
} (I said that trouble would come of that...)

Is there any reason that -tc simply can't be implicit?  That is, why not
always continue with the next suitable completion, leaving -t+ -t- and -tx
to change what "next suitable" means?  And then perhaps throw in something
like -tn to mean "no, DON'T continue."

Seems to me it's more often the case that you want to go on trying other
possible completions rather than giving up.  The default should be what
the most common case is.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

