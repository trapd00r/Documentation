From zsh-users-return-15011-mason-zsh=primenet.com.au@zsh.org Wed Apr 14 09:47:58 2010
Return-Path: <zsh-users-return-15011-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 29597 invoked by alias); 14 Apr 2010 09:47:58 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15011
Received: (qmail 24997 invoked from network); 14 Apr 2010 09:47:56 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_LOW,
	SPF_HELO_PASS autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at csr.com does not designate permitted sender hosts)
Message-Id: <201004140947.o3E9llgG010201@news01.csr.com>
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-users@zsh.org
Subject: Re: Zsh autocompletion with no access to a parent directory
In-reply-to: <201004140914.o3E9EPkL009936@news01.csr.com>
References: <3663DC29-7A8F-4A0C-8262-5FFE701C8E3A@sysctl.co.uk> <20100413174533.5a15043a@news01> <361816B9-75B6-4C88-8BE9-097B33CA2283@sysctl.co.uk> <201004140914.o3E9EPkL009936@news01.csr.com>
Comments: In-reply-to Peter Stephenson <pws@csr.com>
   message dated "Wed, 14 Apr 2010 10:14:25 +0100."
Date: Wed, 14 Apr 2010 10:47:47 +0100
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 14 Apr 2010 09:47:47.0720 (UTC) FILETIME=[8A2D4080:01CADBB7]
Content-Type: text/plain
MIME-Version: 1.0
X-Scanned-By: MailControl A_09_40_00 (www.mailcontrol.com) on 10.71.0.121

Peter Stephenson wrote:
> Matt Wright wrote:
> > Another thought, is it possible to get it to /never/ expand directories.
> 
> (i.e. directories up to the / before the cursor).
>...
> you might have imagined that it wouldn't be too
> difficult to extend accept-exact-dirs, which in turn wasn't so difficult
> to add.

Well, it seems to work...  as well as checking this does what I think it
should, it would be good if anyone trying this out could ensure it
corresponds to the documentation, too.  There is at least a reasonable
chance it hasn't broken existing behaviour.

Note I called the style path-completion because expansion is a
completely different activity in zsh terms, and that it's assumed to be
true if you don't set it to get the current behaviour.

Index: Completion/Unix/Type/_path_files
===================================================================
RCS file: /cvsroot/zsh/zsh/Completion/Unix/Type/_path_files,v
retrieving revision 1.49
diff -p -u -r1.49 _path_files
--- Completion/Unix/Type/_path_files	14 Sep 2009 08:40:49 -0000	1.49
+++ Completion/Unix/Type/_path_files	14 Apr 2010 09:44:22 -0000
@@ -32,6 +32,7 @@ local tmp1 tmp2 tmp3 tmp4 i orig eorig p
 local pats haspats ignore pfx pfxsfx sopt gopt opt sdirs ignpar cfopt listsfx
 local nm=$compstate[nmatches] menu matcher mopts sort mid accex fake
 local listfiles listopts tmpdisp origtmp1 Uopt
+local accept_exact_dirs path_completion
 integer npathcheck
 local -a Mopts
 
@@ -191,6 +192,11 @@ zstyle -a ":completion:${curcontext}:" f
 
 zstyle -s ":completion:${curcontext}:" ignore-parents ignpar
 
+zstyle -t ":completion:${curcontext}:paths" accept-exact-dirs &&
+  accept_exact_dirs=1
+zstyle -T ":completion:${curcontext}:paths" path-completion &&
+  path_completion=1
+
 if [[ -n "$compstate[pattern_match]" ]]; then
   if { [[ -z "$SUFFIX" ]] && _have_glob_qual "$PREFIX" complete } ||
     _have_glob_qual "$SUFFIX" complete; then
@@ -350,16 +356,17 @@ for prepath in "$prepaths[@]"; do
   skipped=
   cpre=
 
-  if zstyle -t ":completion:${curcontext}:paths" accept-exact-dirs &&
-    [[ $pre = (#b)(*)/([^/]#) ]]; then
-    # We've been told that we can accept an exact directory
-    # prefix immediately.  Try this with the longest path prefix
-    # first:  this saves stats in the simple case and may get around
-    # automount behaviour if early components don't yet exist.
+  if [[ ( -n $accept_exact_dirs || -z $path_completion ) && \
+        $pre = (#b)(*)/([^/]#) ]]; then
+    # We've been told either that we can accept an exact directory prefix
+    # immediately, or that path expansion is inhibited.  Try the longest
+    # path prefix first: in the first case, this saves stats in the simple
+    # case and may get around automount behaviour if early components don't
+    # yet exist, and in the second case this is the prefix we want to keep.
     tmp1=$match[1]
     tpre=$match[2]
     while true; do
-      if [[ -d $prepath$realpath$donepath$tmp1 ]]; then
+      if [[ -z $path_completion || -d $prepath$realpath$donepath$tmp1 ]]; then
 	donepath=$donepath$tmp1/
 	pre=$tpre
 	break
Index: Doc/Zsh/compsys.yo
===================================================================
RCS file: /cvsroot/zsh/zsh/Doc/Zsh/compsys.yo,v
retrieving revision 1.226
diff -p -u -r1.226 compsys.yo
--- Doc/Zsh/compsys.yo	17 Feb 2010 06:16:31 -0000	1.226
+++ Doc/Zsh/compsys.yo	14 Apr 2010 09:44:23 -0000
@@ -1123,6 +1123,9 @@ When this style is true, any prefix of a
 directory is accepted without any attempt to complete it further.
 Hence, in the given example, the path tt(/usr/bin/) is accepted
 immediately and completion tried in that directory.
+
+If you wish to inhibit this behaviour entirely, set the tt(path-completion)
+style (see below) to tt(false).
 )
 kindex(add-space, completion style)
 item(tt(add-space))(
@@ -2259,6 +2262,20 @@ containing color names in the format of 
 the style is not set but this file is found in one of various standard
 locations it will be used as the default.
 )
+item(tt(path-completion))(
+This is used by filename completion.  By default, filename completion
+examines all components of a path to see if there are completions of
+that component.  For example, tt(/u/b/z) can be completed to
+tt(/usr/bin/zsh).  Explicitly setting this style to tt(false) inhibits this
+behaviour for path components before the cursorl; this overrides the
+setting of tt(accept-exact-dirs).
+
+Even with the style set to tt(false), it is still possible to complete
+multiple paths by setting the option tt(COMPLETE_IN_WORD) and moving the
+cursor back to the first component in the path to be completed.  For
+example, tt(/u/b/z) can be completed to tt(/usr/bin/zsh) if the cursor is
+after the tt(/u).
+)
 kindex(pine-directory, completion style)
 item(tt(pine-directory))(
 If set, specifies the directory containing PINE mailbox files.  There

-- 
Peter Stephenson <pws@csr.com>            Software Engineer
Tel: +44 (0)1223 692070                   Cambridge Silicon Radio Limited
Churchill House, Cambridge Business Park, Cowley Road, Cambridge, CB4 0WZ, UK


Member of the CSR plc group of companies. CSR plc registered in England and Wales, registered number 4187346, registered office Churchill House, Cambridge Business Park, Cowley Road, Cambridge, CB4 0WZ, United Kingdom

