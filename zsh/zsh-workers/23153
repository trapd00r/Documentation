From zsh-workers-return-23153-mason-zsh=primenet.com.au@sunsite.dk Wed Feb 07 10:11:38 2007
Return-Path: <zsh-workers-return-23153-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20411 invoked from network); 7 Feb 2007 10:11:30 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=BAYES_00,FORGED_RCVD_HELO 
	autolearn=ham version=3.1.7
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 7 Feb 2007 10:11:30 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 33450 invoked from network); 7 Feb 2007 10:11:21 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 7 Feb 2007 10:11:21 -0000
Received: (qmail 3763 invoked by alias); 7 Feb 2007 10:11:18 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 23153
Received: (qmail 3754 invoked from network); 7 Feb 2007 10:11:18 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 7 Feb 2007 10:11:18 -0000
Received: (qmail 33156 invoked from network); 7 Feb 2007 10:11:18 -0000
Received: from cluster-c.mailcontrol.com (168.143.177.190)
  by a.mx.sunsite.dk with SMTP; 7 Feb 2007 10:11:08 -0000
Received: from cameurexb01.EUROPE.ROOT.PRI ([62.189.241.200])
	by rly22c.srv.mailcontrol.com (MailControl) with ESMTP id l17AAEMU019152
	for <zsh-workers@sunsite.dk>; Wed, 7 Feb 2007 10:11:00 GMT
Received: from news01.csr.com ([10.103.143.38]) by cameurexb01.EUROPE.ROOT.PRI with Microsoft SMTPSVC(6.0.3790.1830);
	 Wed, 7 Feb 2007 10:10:50 +0000
Date: Wed, 7 Feb 2007 10:10:47 +0000
From: Peter Stephenson <pws@csr.com>
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: Re: PATCH: ordering of hash table scans
Message-Id: <20070207101047.e4bff2a7.pws@csr.com>
In-Reply-To: <200702062142.l16LgOoa007853@pwslaptop.csr.com>
References: <200702062142.l16LgOoa007853@pwslaptop.csr.com>
Organization: Cambridge Silicon Radio
X-Mailer: Sylpheed version 2.2.10 (GTK+ 2.10.8; i386-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 07 Feb 2007 10:10:50.0447 (UTC) FILETIME=[3E5725F0:01C74AA0]
X-Scanned-By: MailControl A-06-00-00 (www.mailcontrol.com) on 10.67.0.132

Peter Stephenson <p.w.stephenson@ntlworld.com> wrote:
> This started off as an attempt to make ztrcmp() handle multibyte
> characters when MULTIBYTE is turned on, which I've done.  ztrcmp() is
> only used when sorting the names of hash nodes for use when scanning
> through hash tables, usually in order to print them out:  this is used
> for commands of various sort, parameters, and a few other miscellaneous
> bist and pieces.
> 
> I have a vague memory that it's deliberate that we don't use strcoll()
> here, which would make the sorting locale dependent and in particular
> possibly case-insensitive.

This gave me a sleepless night.  If we're not using strcoll(), it seems
overkill to convert every single multibyte character to a wide character on
every comparison between two strings when sorting.  So I've put that bit
back and stuck a note at the top.

Index: Src/utils.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/utils.c,v
retrieving revision 1.153
diff -u -r1.153 utils.c
--- Src/utils.c	6 Feb 2007 21:47:55 -0000	1.153
+++ Src/utils.c	7 Feb 2007 10:06:38 -0000
@@ -3693,61 +3693,46 @@
     return fn;
 }
 
-/* Unmetafy and compare two strings, comparing unsigned character values.
- * "a\0" sorts after "a".  */
+/*
+ * Unmetafy and compare two strings, comparing unsigned character values.
+ * "a\0" sorts after "a".
+ *
+ * Currently this is only used in hash table sorting, where the
+ * keys are names of hash nodes and where we don't use strcoll();
+ * it's not clear if that's right but it does guarantee the ordering
+ * of shell structures on output.
+ *
+ * As we don't use strcoll(), it seems overkill to convert multibyte
+ * characters to wide characters for comparison every time.  In the case
+ * of UTF-8, Unicode ordering is preserved when sorted raw, and for
+ * other character sets we rely on an extension of ASCII so the result,
+ * while it may not be correct, is at least rational.
+ */
 
 /**/
 int
 ztrcmp(char const *s1, char const *s2)
 {
-    convchar_t c1 = 0, c2;
-
-#ifdef MULTIBYTE_SUPPORT
-    if (isset(MULTIBYTE)) {
-	mb_metacharinit();
-	while (*s1) {
-	    int clen = mb_metacharlenconv(s1, &c1);
-
-	    if (strncmp(s1, s2, clen))
-		break;
-	    s1 += clen;
-	    s2 += clen;
-	}
-    } else
-#endif
-	while (*s1 && *s1 == *s2) {
-	    s1++;
-	    s2++;
-	}
+    int c1, c2;
 
-    if (!*s1) {
-	if (!*s2)
-	    return 0;
-	return -1;
-    }
-    if (!*s2)
-	return 1;
-#ifdef MULTIBYTE_SUPPORT
-    if (isset(MULTIBYTE)) {
-	/* TODO: shift state for s2 might be wrong? */
-	mb_metacharinit();
-	(void)mb_metacharlenconv(s2, &c2);
-	if (c1 == WEOF)
-	    c1 = STOUC(*s1 == Meta ? s1[1] ^ 32 : *s1);
-	if (c2 == WEOF)
-	    c2 = STOUC(*s2 == Meta ? s2[1] ^ 32 : *s2);
-    }
-    else
-#endif
-    {
-	c1 = STOUC(*s1 == Meta ? s1[1] ^ 32 : *s1);
-	c2 = STOUC(*s2 == Meta ? s2[1] ^ 32 : *s2);
-    }
+    while(*s1 && *s1 == *s2) {
+	s1++;
+	s2++;
+    }
+
+    if(!(c1 = *s1))
+	c1 = -1;
+    else if(c1 == STOUC(Meta))
+	c1 = *++s1 ^ 32;
+    if(!(c2 = *s2))
+	c2 = -1;
+    else if(c2 == STOUC(Meta))
+	c2 = *++s2 ^ 32;
 
-    if (c1 < c2)
-	return -1;
-    else if (c1 == c2)
+    if(c1 == c2)
 	return 0;
+    else if(c1 < c2)
+	return -1;
     else
 	return 1;
 }

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070


To access the latest news from CSR copy this link into a web browser:  http://www.csr.com/email_sig.php

To get further information regarding CSR, please visit our Investor Relations page at http://ir.csr.com/csr/about/overview

