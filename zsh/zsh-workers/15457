From zsh-workers-return-15457-mason-zsh=primenet.com.au@sunsite.dk Mon Jul 23 11:13:54 2001
Return-Path: <zsh-workers-return-15457-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 24790 invoked from network); 23 Jul 2001 11:13:52 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 23 Jul 2001 11:13:52 -0000
Received: (qmail 3493 invoked by alias); 23 Jul 2001 11:13:45 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 15457
Received: (qmail 3482 invoked from network); 23 Jul 2001 11:13:44 -0000
Sender: kiddleo
Message-ID: <3B5C06E6.FFFCCFCC@u.genie.co.uk>
Date: Mon, 23 Jul 2001 12:13:42 +0100
From: Oliver Kiddle <opk@u.genie.co.uk>
X-Mailer: Mozilla 4.76 [en] (X11; U; SunOS 5.7 sun4u)
X-Accept-Language: en
MIME-Version: 1.0
To: Zsh hackers list <zsh-workers@sunsite.dk>
Subject: Re: Enhanced shell
References: <20010722224707.BD7621428E@pwstephenson.fsnet.co.uk>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

Peter Stephenson wrote:
> 
> David Korn is asking for suggestions for features from the various
> shells to be included in a standard, so I've been jotting possible
> things from zsh down.  This is extremely rough at the moment, but before

I had also jotted down a list so I've merged it in with yours and added
a few comments.

> emulate builtin

whence builtin and variants
disown

typeset builtin (yes, it isn't in POSIX). Also, note that bash has
obsoleted `typeset' in favour of `declare' which I think is better.

> ? disable/enable? [bash]
not so useful. they are also common as commands to enable/disable
printers (on AIX and Solaris at least).

> coproc keyword (|& as per csh is already semi-standard and useful)
> ? ZDOTDIR? (or equivalent)
> autoload -U
and various other fpath/autoloading differences

> <<<'word'
multios option (and maybe other redirection extensions)

> precmd, chpwd, periodic
preexec
I'm not too sure about these because of the sort of problems we get
with, for example the prompt themes overwriting the existing functions.
I can think of a few more flexible ways of allowing the same.

> ? [#16]?
possible, not sure

> ${+foo}
yes and some other parameter expansion extensions

> {0..10}, {00..10}
and {a,b} brace expansion

> ? =cmd?
yes

> ? glob qualifiers (perhaps in some standardised NO_BARE_GLOB_QUAL form)
yup.
backreferences (ksh93's possibly being better)
? glob flags
? glob operators: x~y ^x x# x## <x-y>
> ** (both glob and math?)

> CPUTYPE/HOSTYPE/OSTYPE, EGID/GID, EUID/UID,  ERRNO, HOST or HOSTNAME (bash)
VENDOR/MACHTYPE, LOGNAME (USER/USERNAME), PWD, OLDPWD, COLUMNS, LINES,
pipestatus [PIPESTATUS in bash], ARGC/ARGV(?), RANDOM(?), SECONDS(?),
SHLVL, TTY

> `ESS_VERSION' (version no. of extended shell standard)
or possibly take that idea further to cover more details. I like
ksh93's use of a .sh namespace

> ? typeset -T? (possible with discipline functions)
that's a good point about the disciplines

> ? typeset etc. -g?
zsh/bash dynamically scoped local variables.

> command [bash]
-, builtin and noglob. I think command is already in the standard.

> suspend [bash
it's a default alias in ksh

> ? pushd?
not too sure about that because it can be done with a couple of scripts
and because autopushd with the ~ completion is more useful.

cd -
two argument form of cd
cd's handling of symbolic links
directory stack, and access with ~num

process substitution
C style for loop syntax
? repeat loop
prompt percent substitutions
[[ ... ]] conditions
? global aliases
some of the default key bindings (e.g tab for completion)
various history features (shared, duplicate removal etc, fc options, datestamps)
the common -L option to many builtins [similar to typeset -p in ksh]
-l option to the shell - I wish bash would accept -l in addition to --login
array subscripts with start and end
subscripts on a scalar variable

? select, let and function statements (all of which I'd leave out)
I'd also leave out nested substitutions and parameter expansion flags.

I've not gone through the list of options so some of them may be useful.
There may be other builtins too.

Oliver

