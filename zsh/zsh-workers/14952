From zsh-workers-return-14952-mason-zsh=primenet.com.au@sunsite.dk Mon Jun 18 07:33:00 2001
Return-Path: <zsh-workers-return-14952-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 3652 invoked from network); 18 Jun 2001 07:32:59 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 18 Jun 2001 07:32:59 -0000
Received: (qmail 21468 invoked by alias); 18 Jun 2001 07:32:25 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 14952
Received: (qmail 21456 invoked from network); 18 Jun 2001 07:32:24 -0000
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
Date: Mon, 18 Jun 2001 09:31:17 +0200 (MET DST)
Message-Id: <200106180731.JAA11431@beta.informatik.hu-berlin.de>
To: zsh-workers@sunsite.dk
Subject: Re: PATCH: check deleted .zwc files
In-Reply-To: <1010613102249.ZM26263@candle.brasslantern.com>

Bart Schaefer wrote:

> On Jun 13, 10:59am, Sven Wischnowsky wrote:
> }
> } For 3. (zwc rewritten in place): I don't see a solution either, but was
> } thinking about implementing what you suggested (unlinking the file and
> } chmod()ing it). Should we just do that?
> 
> I'd say so, if there are no better ideas.

Nobody spoke up, so here is the patch that makes zcompile unlink() the
zwc file first and makes it use mode 0444 when creating these files.
Should it use 0400, so that system administrators have to chmod it by
hand?

That hunk in zwcstat() avoids a `unused variable' variable warning if
HAVE_FSTAT is not defined.


Bye
  Sven

Index: Src/parse.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/parse.c,v
retrieving revision 1.22
diff -u -r1.22 parse.c
--- Src/parse.c	2001/06/09 18:06:32	1.22
+++ Src/parse.c	2001/06/18 07:29:58
@@ -2544,7 +2544,8 @@
     if (!strsfx(FD_EXT, dump))
 	dump = dyncat(dump, FD_EXT);
 
-    if ((dfd = open(dump, O_WRONLY|O_CREAT, 0600)) < 0) {
+    unlink(dump);
+    if ((dfd = open(dump, O_WRONLY|O_CREAT, 0444)) < 0) {
 	zwarnnam(nam, "can't write zwc file: %s", dump, 0);
 	return 1;
     }
@@ -2675,7 +2676,8 @@
     if (!strsfx(FD_EXT, dump))
 	dump = dyncat(dump, FD_EXT);
 
-    if ((dfd = open(dump, O_WRONLY|O_CREAT, 0600)) < 0) {
+    unlink(dump);
+    if ((dfd = open(dump, O_WRONLY|O_CREAT, 0444)) < 0) {
 	zwarnnam(nam, "can't write zwc file: %s", dump, 0);
 	return 1;
     }
@@ -2779,10 +2781,10 @@
 static int
 zwcstat(char *filename, struct stat *buf, FuncDump dumps)
 {
-    FuncDump f;
-    
     if (stat(filename, buf)) {
 #ifdef HAVE_FSTAT
+        FuncDump f;
+    
 	for (f = dumps; f; f = f->next) {
 	    if (!strncmp(filename, f->filename, strlen(f->filename)) &&
 		!fstat(f->fd, buf))

-- 
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

