From zsh-workers-request@math.gatech.edu Thu Dec 10 23:42:17 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 7936 invoked from network); 10 Dec 1998 23:42:08 -0000
Received: from ns2.primenet.com.au (HELO primenet.com.au) (7795@203.24.36.3)
  by ns1.primenet.com.au with SMTP; 10 Dec 1998 23:42:08 -0000
Received: (qmail 11736 invoked from network); 10 Dec 1998 09:26:40 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns2.primenet.com.au with SMTP; 10 Dec 1998 09:26:40 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.9.1/8.9.1) id EAA17929;
	Thu, 10 Dec 1998 04:25:27 -0500 (EST)
Resent-Date: Thu, 10 Dec 1998 04:25:27 -0500 (EST)
Date: Thu, 10 Dec 1998 10:22:18 +0100 (MET)
Message-Id: <199812100922.KAA03277@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@math.gatech.edu
In-reply-to: Sven Wischnowsky's message of Wed, 9 Dec 1998 15:44:36 +0100
	(MET)
Subject: Re:  PATCH: wrapper functions in modules
Resent-Message-ID: <"3_2wr3.0.4O4.7EvRs"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4740
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu


I wrote:

> ... [patch for adding wrapper functions in modules]

I forgot to mention it: If a module installs such wrapper functions
and there was a function called which caused the `before'-function to
be executed and the module also has a `after'-function which needs to
be called if the `before'-function was called we might have problems,
since the shell function may unload the module so that the `after'
function will not be called.
So the question is: should we add a convention that the module can
export a function that will be called when trying to unload a module
and which says if the module can currently be unloaded?
Alternatively I could change the code so that a module cannot be
unloaded if it has defined `after'-functions and there are currently
shell functions being executed.
I think we could even change the code so that unloading a module
automatically removes builtins, conditions, and wrapper functions
defined by it...

And another question: why is the variable containing the paths to
module-directories named `module_path'? Comparing this with `fpath' I
would have expected `mpath' (and `MPATH') or something like that.

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

