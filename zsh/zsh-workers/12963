From zsh-workers-return-12963-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Oct 11 13:40:45 2000
Return-Path: <zsh-workers-return-12963-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 29315 invoked from network); 11 Oct 2000 13:40:43 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 11 Oct 2000 13:40:43 -0000
Received: (qmail 9314 invoked by alias); 11 Oct 2000 13:39:48 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 12963
Received: (qmail 9303 invoked from network); 11 Oct 2000 13:39:47 -0000
Date: Wed, 11 Oct 2000 15:39:45 +0200 (MET DST)
Message-Id: <200010111339.PAA27899@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: "Andrej Borsenkow"'s message of Wed, 11 Oct 2000 16:37:44 +0400
Subject: RE: PATCH: all completions


Andrej Borsenkow wrote:

> > Here's an improved patch. It gets the string displayed for the
> > all-matches special match right (as described in 12936) and it has
> > another style, `avoid-completer' (any suggestions for a better
> > name?). That gives a list of completer-names for which no all-matches
> > string should be added. It has what I think is a sensible default
> > value.
> 
> The word ``matches'' in manual may be a bit misleading but I fail to suggest
> better. We actually mean ``completion listing'' that completion code
> internally builds. In case of _correct/_approximate or _expand it is actually
> superset of possible matches (original word on line or all expansions).

Somehow I thought that the manual said `... the original string as a
match', but it doesn't. So, yes, maybe. I don't know any better
wording, though.

> Actually, it just occured to me, that exactly in case of _correct or
> _approximate this distinction may be significant. User _may_ want to add all
> *matches* but without original string.

Currently, that special match just uses all other matches. Changing
that internally is quite simple (a flag in the match structure to say
which matches are (not) to be used). And from the shell level side we
could probably use the -F option to supply patterns to tell `compadd -C'
which matches should not be used. Hm, we'll see...

> But this probably needs more user
> feedback.

... then.

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

