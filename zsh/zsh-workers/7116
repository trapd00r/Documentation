From zsh-workers-return-7116-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Jul 13 14:40:25 1999
Return-Path: <zsh-workers-return-7116-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 18440 invoked from network); 13 Jul 1999 14:40:23 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 13 Jul 1999 14:40:23 -0000
Received: (qmail 3486 invoked by alias); 13 Jul 1999 14:40:12 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 7116
Received: (qmail 3479 invoked from network); 13 Jul 1999 14:40:12 -0000
Date: Tue, 13 Jul 1999 16:40:09 +0200 (MET DST)
Message-Id: <199907131440.QAA10500@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
Subject: PATCH: minor doc fixes


Subject says it all... I hope all of them are correct.

Bye
 Sven

diff -u od/Zsh/compwid.yo Doc/Zsh/compwid.yo
--- od/Zsh/compwid.yo	Tue Jul 13 14:45:28 1999
+++ Doc/Zsh/compwid.yo	Tue Jul 13 16:33:11 1999
@@ -410,7 +410,7 @@
 Like tt(-i), but gives an ignored suffix.
 )
 item(tt(-y) var(array))(
-This gives a number of string to display instead of the matches. This
+This gives a number of strings to display instead of the matches. This
 is like the tt(-y) option of the tt(compctl) builtin command but the
 var(array) argument may only be the name of an array parameter or a
 literal array in parentheses containing the strings to display.
@@ -483,7 +483,7 @@
 set are used, but if this set is empty, the words from the alternate
 set are used.
 
-The tt(compadd) builtin does not use tt(fignore) parameter and
+The tt(compadd) builtin does not use the tt(fignore) parameter and
 normally stores all words in the first set.  With the tt(-a)-flag
 given, however, the given var(words) are stored in the alternate set unless
 this flag is overridden by the tt(-F) option.
@@ -518,7 +518,7 @@
 functions that do the matching themselves.
 
 Note that with tt(compadd) this option does not automatically turn on
-menu completion if tt(AUTO_LIST), unlike the corresponding option of
+menu completion if tt(AUTO_LIST) is set, unlike the corresponding option of
 tt(compctl) and tt(compgen) commands.
 )
 item(tt(-O) var(array))(
diff -u od/Zsh/expn.yo Doc/Zsh/expn.yo
--- od/Zsh/expn.yo	Tue Jul 13 14:45:28 1999
+++ Doc/Zsh/expn.yo	Tue Jul 13 16:38:02 1999
@@ -1192,7 +1192,7 @@
 Non-literal parts of the pattern must match exactly, including characters
 in character ranges: hence tt(LPAR()#a1)tt(RPAR()???)  matches strings of
 length four, by applying rule 4 to an empty part of the pattern, but not
-strings of length three, since all the tt(?) must match.  Other characters
+strings of length two, since all the tt(?) must match.  Other characters
 which must match exactly are initial dots in filenames (unless the
 tt(GLOB_DOTS) option is set), and all slashes in file names, so that
 tt(a/bc) is two errors from tt(ab/c) (the slash cannot be transposed with
@@ -1351,7 +1351,7 @@
 
 Thus, `tt(*(f70?))' gives the files for which the owner has read,
 write, and execute permission, and for which other group members have
-no rights, independent of the permissions for other user. The pattern
+no rights, independent of the permissions for other users. The pattern
 `tt(*(f-100))' gives all files for which the owner does not have
 execute permission, and `tt(*(f:gu+w,o-rx))' gives the files for which 
 the owner and the other members of the group have at least write

--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

