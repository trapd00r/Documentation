From zsh-users-return-15563-mason-zsh=primenet.com.au@zsh.org Mon Nov 22 17:22:25 2010
Return-Path: <zsh-users-return-15563-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1181 invoked by alias); 22 Nov 2010 17:22:25 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15563
Received: (qmail 6707 invoked from network); 22 Nov 2010 17:22:23 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.3.1
Received-SPF: pass (ns1.primenet.com.au: SPF record at benizi.com designates 64.130.10.15 as permitted sender)
Date: Mon, 22 Nov 2010 12:12:51 -0500 (EST)
From: "Benjamin R. Haskell" <zsh@benizi.com>
To: Zsh Users <zsh-users@zsh.org>
Subject: Equivalent of Vim's has("feature")?
Message-ID: <alpine.LNX.2.01.1011221149110.2792@hp>
User-Agent: Alpine 2.01 (LNX 1266 2009-07-14)
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; format=flowed; charset=US-ASCII

Vim has a function 'has()' that lets you test for features compiled in 
to the running version of Vim.  So, e.g.:

if has('perl')
 	" do something using the Perl interface for Vim
endif

I suspect there is similar functionality for Zsh, but I'm not quite sure 
where to look.  I'd rather use something like 'has()' than something 
involving ZSH_VERSION or similar.

For commands and widgets I've found the following to work well:

(( $+commands[screen] )) && # do something with screen

(( $+widgets[history-incremental-pattern-search-backward] )) \
&& bindkey "^R" history-incremental-pattern-search-backward

But, 1) I can't seem to rediscover the documentation for those arrays, 
and 2) Is there such an array for things that are more inbuilt?  In 
particular, I'm looking for a test that the ':A' history modifier 
exists.

-- 
Best,
Ben

