From zsh-users-return-13212-mason-zsh=primenet.com.au@sunsite.dk Wed Sep 10 17:34:04 2008
Return-Path: <zsh-users-return-13212-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 6148 invoked from network); 10 Sep 2008 17:34:02 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 10 Sep 2008 17:34:02 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 67024 invoked from network); 10 Sep 2008 17:33:21 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 10 Sep 2008 17:33:21 -0000
Received: (qmail 3470 invoked by alias); 10 Sep 2008 17:32:41 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13212
Received: (qmail 3453 invoked from network); 10 Sep 2008 17:32:40 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 10 Sep 2008 17:32:40 -0000
Received: from vms173003pub.verizon.net (vms173003pub.verizon.net [206.46.173.3])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 8D9DA80307AD
	for <zsh-users@sunsite.dk>; Wed, 10 Sep 2008 19:32:32 +0200 (CEST)
Received: from torch.brasslantern.com ([96.238.220.178])
 by vms173003.mailsrvcs.net
 (Sun Java System Messaging Server 6.2-6.01 (built Apr  3 2006))
 with ESMTPA id <0K6Z00JTZM21K6S5@vms173003.mailsrvcs.net> for
 zsh-users@sunsite.dk; Wed, 10 Sep 2008 11:06:02 -0500 (CDT)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id m8AG5xhC019274	for
 <zsh-users@sunsite.dk>; Wed, 10 Sep 2008 09:06:01 -0700
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id m8AG5sxm019273	for zsh-users@sunsite.dk; Wed,
 10 Sep 2008 09:05:54 -0700
Date: Wed, 10 Sep 2008 09:05:54 -0700
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: preventing the leading space in process substitution
In-reply-to: <200809101510.m8AFAajX007203@news01.csr.com>
To: zsh users mailing list <zsh-users@sunsite.dk>
Message-id: <080910090554.ZM19272@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <20080909144101.GA30693@lapse.rw.madduck.net>
	<200809101124.m8ABOlKI005063@news01.csr.com>
	<080910074842.ZM19151@torch.brasslantern.com>
	<200809101510.m8AFAajX007203@news01.csr.com>
Comments: In reply to Peter Stephenson <pws@csr.com>
 "Re: preventing the leading space in process substitution" (Sep 10,  4:10pm)
X-Virus-Scanned: ClamAV 0.92.1/8210/Wed Sep 10 18:26:19 2008 on bifrost
X-Virus-Status: Clean

On Sep 10,  4:10pm, Peter Stephenson wrote:
} Subject: Re: preventing the leading space in process substitution
}
} Bart Schaefer wrote:
} > On Sep 10, 12:24pm, Peter Stephenson wrote:
} > } For reasons buried in history that I don't understand, the <(...) is
} > } parsed as a single complete argument.
} > 
} > I think that's because the "<" is treated like a redirection operator.
} 
} You mean we initially parse it the same way whether or not there's a "("
} coming up next or not, and later, when we've already finished the
} previous argument at that point, decide it's not a redirection after all?

Something like that, yes.

Returning briefly to the =(...) analogy:  Note =(...) actually has to be
*written* as a separate word, except in an assignment, because otherwise
the parens are parsed as part of filename generation.  So it's not as
badly inconsistent as I first thought to treat <(...) as a word also.
 
} But both ">file" and "> file" work, too, so presumably if we were able
} to change it so that "<(...)" and ">(...)" also worked in the middle of
} an argument it wouldn't create any new problems.

Well ... it would if anyone has previously written scripts etc. that
rely on the implicit splitting.

} We already need to look ahead for the "(" ... but probably not at
} the point where we first read the "<" and decide it's time to stop
} the current argument. At that point we'd have to look ahead two
} characters. That might be the real fly in the ointment.

Yes.

As an aside, this is also one reason that it's hard to make zsh handle

    typeset -a foo=(list)

the way that bash does.

