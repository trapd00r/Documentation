From zsh-workers-request@euclid.skiles.gatech.edu Sat Dec 28 00:43:21 1996
Return-Path: <zsh-workers-request@euclid.skiles.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 20619 invoked from network); 28 Dec 1996 00:43:20 -0000
Received: from euclid.skiles.gatech.edu (list@130.207.146.50)
  by coral.primenet.com.au with SMTP; 28 Dec 1996 00:43:20 -0000
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id TAA01643; Fri, 27 Dec 1996 19:31:52 -0500 (EST)
Resent-Date: Fri, 27 Dec 1996 19:31:52 -0500 (EST)
From: Zoltan Hidvegi <hzoli@cs.elte.hu>
Message-Id: <199612280025.BAA02310@hzoli.ppp.cs.elte.hu>
Subject: Re: parallel makes
To: zefram@dcs.warwick.ac.uk (Zefram)
Date: Sat, 28 Dec 1996 01:25:15 +0100 (MET)
Cc: zsh-workers@math.gatech.edu
In-Reply-To: <6888.199612271128@stone.dcs.warwick.ac.uk> from Zefram at "Dec 27, 96 11:28:49 am"
X-Mailer: ELM [version 2.4ME+ PL17 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"RdW571.0.VP.tf6no"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/2652
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Zefram wrote:
> that do not force rebuilds.  So I think you could get the effect you
> wanted if you did something like
> 
> $(OBJS): .proto
> 
> .proto: FORCE
> 	# make prototypes
> 
> and included a .proto file in the distribution.  This system would have
> the added benefit of totally confusing newcomers to the strange ways of
> zsh Makefiles even more than they are already.

Nice idea, which lead me to an even better solution: add $(PROTO)
proto-recursive dependencies to zsh.h or to prototypes.h.

It is really logical as prototypes.h does include $(PROTO) and every object
file already depends on in.  FORCE is not even necessary since
proto-recursive has no dependencies so it is always forced.  This idea is
so obvious that I do not know why I did not invented this before.

About the more and more complicated Makefile scripts: I think all scripts
that do not fit to a 24 lines terminal display should be moved from the
Makefile to separate scripts.  This makes the Makefile more readable and
the scripts more testable.  Add it would allow us to write even better
dependency rules :-).

Zoltan

