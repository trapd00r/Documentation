From zsh-workers-request@math.gatech.edu  Fri Jul  7 04:30:02 1995
Received: from gatech.edu (gatech.edu [130.207.244.244]) by werple.mira.net.au (8.6.12/8.6.9) with SMTP id EAA03439 for <mason@werple.mira.net.au>; Fri, 7 Jul 1995 04:29:56 +1000
Received: from math (math.skiles.gatech.edu) by gatech.edu with SMTP id AA12511
  (5.65c/Gatech-10.0-IDA for <mason@werple.mira.net.au>); Thu, 6 Jul 1995 14:30:16 -0400
Received: by math (5.x/SMI-SVR4)
	id AA09490; Thu, 6 Jul 1995 14:27:10 -0400
Resent-Date: Thu, 06 Jul 1995 11:28:05 -0700
Old-Return-Path: <yost@Yost.com>
Message-Id: <9507061828.AA00863@Yost.com>
From: Dave@Yost.com
To: zsh-list@sterling.com
Subject: commands sometimes don't execute
Cc: Dave@Yost.com
Reply-To: Dave@Yost.com
Date: Thu, 06 Jul 1995 11:28:05 -0700
Sender: yost@Yost.com
Resent-Message-Id: <"AJvfw1.0.9K2.zh2_l"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/162
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

To see where the zsh bug is, search below for the string "never execute"

The script that exhibits the alleged zsh bug is
a handy little script you might find useful if
you are connected to the internet only on demand.
You run this command when you want to force a connection.

VERSION=zsh 2.5.03

Thanks.

Dave

 = = = = = = = = =
#!/bin/zsh
# or maybe late model ksh

# Force a connection to the Internet
# Dave@Yost.com 95-1-28 Works on SGI
# Dave@Yost.com 95-6-25 when this initiates a connection, print date (doesn't work)

provider=Internex
ppphost=internexppp
# InterNex trouble phone number 800 291 5178
# PacBell priority repair number 811 8081
# ISDN Hotline 800 472 4736

verbose=yes
repeating=
already_connected=yes

case "$1" in
-q) verbose= ;;
-r) repeating=yes ;;
"") ;;
*) echo 1>&2 "
Usage: internet [ -q ]

The -q option suppresses the usual verbose output.
" ;;
esac

jab () {
    ping -qc 1 $ppphost | grep '1 packets received' > /dev/null
    echo $?
}

case "$verbose" in
yes) (sleep  2 ;
      echo 1>&2 "Trying to call ${provider}...\c" ;
      sleep 30 ;
      echo 1>&2 ;
      echo 1>&2 "Trouble number is 800 291 5178" ;
      )&
esac

if [[`jab` != 0]] ; then
    until [[`jab` = 0]] ; do
	case "$verbose" in
	yes)
	    echo 1>&2 ".\c"
	esac
    done

    # The commands from here to fi almost never execute
    # even when execution has clearly traversed the until loop.
    case "$verbose" in
	yes) echo 1>&2 ""
	esac

    echo "If you can see this, it works (but you can't)."
    already_connected=no
fi

case "$verbose" in
yes) kill %%
     case $already_connected in
     yes) when=       ;;
     *)   when=`date` ;;
     esac
     echo 1>&2 Connected $when
esac

