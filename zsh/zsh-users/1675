From zsh-workers-request@math.gatech.edu Thu Jul 16 05:52:09 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 7148 invoked from network); 16 Jul 1998 05:52:07 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 16 Jul 1998 05:52:07 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.8.5/8.8.5) id BAA12333;
	Thu, 16 Jul 1998 01:27:01 -0400 (EDT)
Resent-Date: Thu, 16 Jul 1998 01:12:31 -0400 (EDT)
From: "Bart Schaefer" <schaefer@brasslantern.com>
Message-Id: <980715220851.ZM13527@candle.brasslantern.com>
Date: Wed, 15 Jul 1998 22:08:51 -0700
In-Reply-To: <19980715234957.51065@astaroth.nit.gwu.edu>
Comments: In reply to Sweth Chandramouli <sweth@astaroth.nit.gwu.edu>
        "rolling over high-traffic logfiles?" (Jul 15, 11:49pm)
References: <19980715234957.51065@astaroth.nit.gwu.edu>
X-Mailer: Z-Mail (4.0b.820 20aug96)
To: Sweth Chandramouli <sweth@astaroth.nit.gwu.edu>,
        ZSH Users <zsh-users@math.gatech.edu>
Subject: Re: rolling over high-traffic logfiles?
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-Message-ID: <"GYQ4y3.0.f-2.-kOhr"@math>
Resent-From: zsh-users@math.gatech.edu
X-Mailing-List: <zsh-users@math.gatech.edu> archive/latest/1675
X-Loop: zsh-users@math.gatech.edu
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

On Jul 15, 11:49pm, Sweth Chandramouli wrote:
} Subject: rolling over high-traffic logfiles?
}
} 	is there some easy way to roll over high-traffic logfiles
} in zsh, without losing any possible incoming data?

There isn't any magic for this that is specific to zsh.

} can zsh do some sort of file locking here?

It wouldn't help.  The processes that are writing to the log file would
also have to use the equivalent locking.  (There is such a thing in unix
as "mandatory" file locking, but using that would likely just cause the
logging processes to get errors.  All other locking is "advisory," which
means all processes involved must have been written so as to use the same
cooperative calls.)

} does anyone have any other ideas on how to not lose and log entires?

Use "ln" and "mv" to replace the file, rather than "cp" over it.

	cp /dev/null extlog.new &&
	ln extlog extlog.`date` &&
	mv -f extlog.new extlog ||
	rm -f extlog.new

There's still a race condition where some process could attempt to write
to extlog during the execution of "mv", that is, between unlinking the
old extlog and renaming extlog.new to extlog.  However, the window for
failure is much smaller, and could be made smaller still by using the
"files" module with zsh 3.1.4 so that "ln" and "mv" are shell builtins.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

