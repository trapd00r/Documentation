From zsh-users-return-5447-mason-zsh=primenet.com.au@sunsite.dk Mon Oct 21 14:32:51 2002
Return-Path: <zsh-users-return-5447-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 29589 invoked from network); 21 Oct 2002 14:32:50 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 21 Oct 2002 14:32:50 -0000
Received: (qmail 12727 invoked by alias); 21 Oct 2002 14:32:24 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 5447
Received: (qmail 12708 invoked from network); 21 Oct 2002 14:32:23 -0000
X-VirusChecked: Checked
cc: zsh users <zsh-users@sunsite.dk>
In-reply-to: <20021021134213.GA3967@apartia.org>
From: Oliver Kiddle <okiddle@yahoo.co.uk>
References: <20021021134213.GA3967@apartia.org>
To: Louis-David Mitterrand <vindex@apartia.org>
Subject: Re: complete all "cvs add" matches
MIME-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-ID: <8800.1035210450.1@logica.com>
Date: Mon, 21 Oct 2002 15:27:38 +0100
Sender: kiddleo@logica.com
Message-Id: <E183dWs-0002Hz-00@bimbo.logica.co.uk>

On 21 Oct, you wrote:
> 
> Let's say I have 3 files in a cvs repository that I want to "cvs add",
> so I type:
> 
> % cvs add <TAB>
> 
> Since I have activated cvs completion, zsh offers to "add" only these 3
> files, which appear under my command line.
> 
> How can I get these 3 file names on the command line? Right now I press
> <TAB> again to insert the first match and have to "cvs add" once for
> each file.

This can be done by adding
  compstate[insert]=all
to the end of _cvs_add. I'm not keen on doing this in the distributed
_cvs but you could use your own replacement _cvs_add function.

I don't remember there being a style to do this, perhaps there should
be one.

You might also want to have a look at the _all_matches completer. Don't
be tempted to try to bind the _all_matches completer to the specific
context of cvs-add with zstyle though because completers are determined
long before the context is elaborated to that level of detail and it
won't work. Personally, I bind a key to it which I can use in situations
such as this. The necessary lines from my .zshrc being these:

bindkey '^Xx' all-matches
zstyle ':completion:all-matches::::' completer _all_matches _complete
zstyle ':completion:all-matches:*' old-matches true
zstyle ':completion:all-matches:*' insert true
zle -C all-matches complete-word _generic

Oliver


This e-mail and any attachment is for authorised use by the intended recipient(s) only.  It may contain proprietary material, confidential information and/or be subject to legal privilege.  It should not be copied, disclosed to, retained or used by, any other party.  If you are not an intended recipient then please promptly delete this e-mail and any attachment and all copies and inform the sender.  Thank you.

