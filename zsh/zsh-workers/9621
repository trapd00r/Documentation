From zsh-workers-return-9621-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Feb 08 13:56:05 2000
Return-Path: <zsh-workers-return-9621-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 3104 invoked from network); 8 Feb 2000 13:56:04 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 8 Feb 2000 13:56:04 -0000
Received: (qmail 25259 invoked by alias); 8 Feb 2000 13:55:57 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 9621
Received: (qmail 25251 invoked from network); 8 Feb 2000 13:55:56 -0000
Date: Tue, 8 Feb 2000 14:55:44 +0100 (MET)
Message-Id: <200002081355.OAA03128@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: Tanaka Akira's message of 08 Feb 2000 22:11:53 +0900
Subject: Re: another _arguments problem


Tanaka Akira wrote:

> Z(2):akr@is27e1u11% Src/zsh -f
> is27e1u11% bindkey -e; autoload -U compinit; compinit -D; compdef _tst tst
> is27e1u11% _tst () { _arguments -a ":desc1:(arg1)" "*::desc2:_tst2" }
> is27e1u11% _tst2 () { compadd $CURRENT }
> is27e1u11% tst arg1 -<TAB>
> 
> I think it should insert `a ' but it completes nothing.
> 
> Note that zsh inserts a space in a following case.
> 
> is27e1u11% tst arg1 -a<TAB>

Oops. Somehow I thought I had taken care of that... but that was for a 
slightly different case.

Bye
 Sven

diff -ru ../z.old/Src/Zle/computil.c Src/Zle/computil.c
--- ../z.old/Src/Zle/computil.c	Tue Feb  8 14:12:07 2000
+++ Src/Zle/computil.c	Tue Feb  8 14:52:53 2000
@@ -1006,7 +1006,7 @@
     int nopts;
     Caarg def, ddef;
     Caopt curopt;
-    int opt, arg, argbeg, optbeg, nargbeg, restbeg;
+    int opt, arg, argbeg, optbeg, nargbeg, restbeg, curpos;
     int inopt, inrest, inarg, nth, doff, singles;
     LinkList args;
     LinkList *oargs;
@@ -1055,6 +1055,7 @@
     state.argbeg = state.optbeg = state.nargbeg = state.restbeg =
 	state.nth = state.inopt = state.inarg = state.opt = state.arg = 1;
     state.inrest = state.doff = state.singles = state.doff = 0;
+    state.curpos = compcurrent;
     PERMALLOC {
 	state.args = newlinklist();
 	state.oargs = (LinkList *) zalloc(d->nopts * sizeof(LinkList));
@@ -1409,9 +1410,13 @@
 	}
     case 'O':
 	if ((ca_laststate.opt || (ca_laststate.doff && ca_laststate.def) ||
-	     (ca_laststate.def && ca_laststate.def->type == CAA_OPT)) &&
+	     (ca_laststate.def &&
+	      (ca_laststate.def->type == CAA_OPT ||
+	       ca_laststate.def->type >= CAA_RARGS))) &&
 	    (!ca_laststate.def || ca_laststate.def->type < CAA_RARGS ||
-	     compcurrent == 1)) {
+	     (ca_laststate.def->type == CAA_RARGS ?
+	      (ca_laststate.curpos == ca_laststate.argbeg + 1) :
+	      (compcurrent == 1)))) {
 	    LinkList next = newlinklist();
 	    LinkList direct = newlinklist();
 	    LinkList odirect = newlinklist();

--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

