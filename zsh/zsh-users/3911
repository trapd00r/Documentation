From zsh-users-return-3911-mason-zsh=primenet.com.au@sunsite.dk Wed Jun 06 19:57:37 2001
Return-Path: <zsh-users-return-3911-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 19730 invoked from network); 6 Jun 2001 19:57:36 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 6 Jun 2001 19:57:36 -0000
Received: (qmail 22077 invoked by alias); 6 Jun 2001 19:57:12 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 3911
Received: (qmail 22066 invoked from network); 6 Jun 2001 19:57:11 -0000
X-Authentication-Warning: candle.brasslantern.com: schaefer set sender to lantern@shell10.ba.best.com using -f
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1010606195348.ZM2482@candle.brasslantern.com>
Date: Wed, 6 Jun 2001 19:53:48 +0000
In-Reply-To: <20010606184150.A23107@thelonious.new.ox.ac.uk>
Comments: In reply to Adam Spiers <adam@spiers.net>
        "replacing current word in user-defined widget?" (Jun  6,  6:41pm)
References: <20010606184150.A23107@thelonious.new.ox.ac.uk>
X-Mailer: Z-Mail (5.0.0 30July97)
To: Adam Spiers <adam@spiers.net>,
        zsh users mailing list <zsh-users@sunsite.auc.dk>
Subject: Re: replacing current word in user-defined widget?
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Jun 6,  6:41pm, Adam Spiers wrote:
}
} I was trying to write a make-path-absolute type of widget that
} replaces the pathname which is the current word with an absolute path,

That sounds like a job for a completion widget.  As you say:

} Completion widgets seem to have it a lot easier, since they're given
} the $words array to mess around with.

Something like:

	#compdef -k complete-word ^X^F
	compadd -U -S '' $PWD/$words[CURRENT]

Might be a good idea to test $compstate[quote] etc. but you get the idea.

However ...

} but I got stuck trying to write code which figures out where the
} current word starts and ends.  Presumably it involves looking at
} $BUFFER and $CURSOR, and maybe doing word splitting with ${(z)BUFFER}
} or similar, but beyond that I don't have much of a clue :-)

I messed with this while trying to write an improved transpose-words and
came to the conclusion that it's nearly impossible.  As you noticed, one
can split the command line into words with ${(z)BUFFER} but as that has
the side-effect of removing an unknown amount of whitespace between the
words, you can't map from CURSOR to an index into the resulting array.

You can try taking the last word from ${(z)LBUFFER} and the first word
from ${(z)RBUFFER) and gluing them together, but I'm not sure that'll
work right if the cursor is in the middle of a quoted string, so it's
best to let the completion code deal with it.

Unfortunately transpose-words doesn't have that option, because it has
to deal with two words, not one.  So I eventually gave up.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

