From zsh-workers-request@math.gatech.edu  Tue Oct 10 09:22:18 1995
Received: from gatech.edu (gatech.edu [130.207.244.244]) by werple.net.au (8.7/8.7) with SMTP id JAA17171 for <mason@werple.mira.net.au>; Tue, 10 Oct 1995 09:21:59 +1000 (EST)
Received: from math (math.skiles.gatech.edu) by gatech.edu with SMTP id AA28974
  (5.65c/Gatech-10.0-IDA for <mason@werple.mira.net.au>); Mon, 9 Oct 1995 19:18:07 -0400
Received: by math (5.x/SMI-SVR4)
	id AA13297; Mon, 9 Oct 1995 19:14:30 -0400
Resent-Date: Mon, 9 Oct 1995 22:54:36 +0100 (MET)
Old-Return-Path: <cat@gestalt.freenix.fr>
Message-Id: <199510092154.WAA31519@gestalt.freenix.fr>
Subject: Problem with zsh/mc, zsh hanged
To: zsh-list@sterling.com
Date: Mon, 9 Oct 1995 22:54:36 +0100 (MET)
From: "Jean-Christophe Boggio" <cat@gestalt.freenix.fr>
X-Mailer: ELM [version 2.4 PL24 ME6]
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Resent-Message-Id: <"TiwRX.0.eF3.LpQUm"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/432
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu


Hello, I used to use zsh v2.04beta and it worked well (maybe it was patched
for "SIG" problems under Linux ??? I was told something like this). I
recently compiled zsh 2.5.03, it works great but I can't launch "Midnight
Commander 3.0" anymore.

It starts loading but hangs before displaying anything. If I put back my old
zsh version as /bin/zsh, mc works normally. I tried launching the old zsh
with the -l option (to force login shell) but it does not help.

Just a last word to thank every person working on this exceptionnal program.
I regret a few things from 4DOS (a good shell for dos) but zsh's power is
not comparable. As you will see, I did not customize zsh yet (not even
printed all the docs yet).

This is the reporter output :

# START zsh saveset
# uname:  Linux gestalt 1.3.29 #7 Thu Sep 28 23:43:48 MET 1995 i486

# Aliases.

alias run-help='man'
alias which-command='whence'

# Key bindings.

bindkey -r "^@"
bindkey -r "^A"
bindkey -r "^B"
bindkey -r "^C"
bindkey -r "^D"
bindkey -r "^E"
bindkey -r "^F"
bindkey -r "^G"
bindkey -r "^H"
bindkey -r "^I"
bindkey -r "^J"
bindkey -r "^K"
bindkey -r "^L"
bindkey -r "^M"
bindkey -r "^N"
bindkey -r "^O"
bindkey -r "^P"
bindkey -r "^Q"
bindkey -r "^R"
bindkey -r "^S"
bindkey -r "^T"
bindkey -r "^U"
bindkey -r "^V"
bindkey -r "^W"
bindkey -r "^X"
bindkey -r "^Y"
bindkey -r "^Z"
bindkey -r "\e"
bindkey -r "^_"
bindkey -r "^?"
bindkey -r "^X^B"
bindkey -r "^X^F"
bindkey -r "^X^J"
bindkey -r "^X^K"
bindkey -r "^X^N"
bindkey -r "^X^O"
bindkey -r "^X^U"
bindkey -r "^X^V"
bindkey -r "^X^X"
bindkey -r "^X*"
bindkey -r "^XG"
bindkey -r "^Xg"
bindkey -r "^Xr"
bindkey -r "^Xs"
bindkey -r "^Xu"
bindkey -r "\e^D"
bindkey -r "\e^G"
bindkey -r "\e^H"
bindkey -r "\e^I"
bindkey -r "\e^J"
bindkey -r "\e^L"
bindkey -r "\e^M"
bindkey -r "\e^_"
bindkey -r "\e "
bindkey -r "\e!"
bindkey -r "\e\""
bindkey -r "\e$"
bindkey -r "\e'"
bindkey -r "\e-"
bindkey -r "\e."
bindkey -r "\e0"
bindkey -r "\e1"
bindkey -r "\e2"
bindkey -r "\e3"
bindkey -r "\e4"
bindkey -r "\e5"
bindkey -r "\e6"
bindkey -r "\e7"
bindkey -r "\e8"
bindkey -r "\e9"
bindkey -r "\e<"
bindkey -r "\e>"
bindkey -r "\e?"
bindkey -r "\eA"
bindkey -r "\eB"
bindkey -r "\eC"
bindkey -r "\eD"
bindkey -r "\eF"
bindkey -r "\eG"
bindkey -r "\eH"
bindkey -r "\eL"
bindkey -r "\eN"
bindkey -r "\eP"
bindkey -r "\eQ"
bindkey -r "\eR"
bindkey -r "\eS"
bindkey -r "\eT"
bindkey -r "\eU"
bindkey -r "\eW"
bindkey -r "\e[A"
bindkey -r "\e[B"
bindkey -r "\e[C"
bindkey -r "\e[D"
bindkey -r "\e_"
bindkey -r "\ea"
bindkey -r "\eb"
bindkey -r "\ec"
bindkey -r "\ed"
bindkey -r "\ef"
bindkey -r "\eg"
bindkey -r "\eh"
bindkey -r "\el"
bindkey -r "\en"
bindkey -r "\ep"
bindkey -r "\eq"
bindkey -r "\er"
bindkey -r "\es"
bindkey -r "\et"
bindkey -r "\eu"
bindkey -r "\ew"
bindkey -r "\ex"
bindkey -r "\ey"
bindkey -r "\ez"
bindkey -r "\e|"
bindkey -r "\e^?"

bindkey "^@"	set-mark-command
bindkey "^A"	beginning-of-line
bindkey "^B"	backward-char
bindkey "^C"	undefined-key
bindkey "^D"	delete-char-or-list
bindkey "^E"	end-of-line
bindkey "^F"	forward-char
bindkey "^G"	send-break
bindkey "^H"	backward-delete-char
bindkey "^I"	expand-or-complete
bindkey "^J"	accept-line
bindkey "^K"	kill-line
bindkey "^L"	clear-screen
bindkey "^M"	accept-line
bindkey "^N"	down-line-or-history
bindkey "^O"	accept-line-and-down-history
bindkey "^P"	up-line-or-history
bindkey "^Q"	push-line
bindkey "^R"	history-incremental-search-backward
bindkey "^S"	history-incremental-search-forward
bindkey "^T"	transpose-chars
bindkey "^U"	kill-whole-line
bindkey "^V"	quoted-insert
bindkey "^W"	backward-kill-word
bindkey "^X"	prefix
bindkey "^Y"	yank
bindkey "^Z"	undefined-key
bindkey "\e"	prefix
bindkey "^_"	undo
bindkey "^?"	backward-delete-char
bindkey "^X^B"	vi-match-bracket
bindkey "^X^F"	vi-find-next-char
bindkey "^X^J"	vi-join
bindkey "^X^K"	kill-buffer
bindkey "^X^N"	infer-next-history
bindkey "^X^O"	overwrite-mode
bindkey "^X^U"	undo
bindkey "^X^V"	vi-cmd-mode
bindkey "^X^X"	exchange-point-and-mark
bindkey "^X*"	expand-word
bindkey "^XG"	list-expand
bindkey "^Xg"	list-expand
bindkey "^Xr"	history-incremental-search-backward
bindkey "^Xs"	history-incremental-search-forward
bindkey "^Xu"	undo
bindkey "\e^D"	list-choices
bindkey "\e^G"	send-break
bindkey "\e^H"	backward-kill-word
bindkey "\e^I"	self-insert-unmeta
bindkey "\e^J"	self-insert-unmeta
bindkey "\e^L"	clear-screen
bindkey "\e^M"	self-insert-unmeta
bindkey "\e^_"	copy-prev-word
bindkey "\e "	expand-history
bindkey "\e!"	expand-history
bindkey "\e\""	quote-region
bindkey "\e$"	spell-word
bindkey "\e'"	quote-line
bindkey "\e-"	neg-argument
bindkey "\e."	insert-last-word
bindkey "\e0"	digit-argument
bindkey "\e1"	digit-argument
bindkey "\e2"	digit-argument
bindkey "\e3"	digit-argument
bindkey "\e4"	digit-argument
bindkey "\e5"	digit-argument
bindkey "\e6"	digit-argument
bindkey "\e7"	digit-argument
bindkey "\e8"	digit-argument
bindkey "\e9"	digit-argument
bindkey "\e<"	beginning-of-buffer-or-history
bindkey "\e>"	end-of-buffer-or-history
bindkey "\e?"	which-command
bindkey "\eA"	accept-and-hold
bindkey "\eB"	backward-word
bindkey "\eC"	capitalize-word
bindkey "\eD"	kill-word
bindkey "\eF"	forward-word
bindkey "\eG"	get-line
bindkey "\eH"	run-help
bindkey "\eL"	down-case-word
bindkey "\eN"	history-search-forward
bindkey "\eP"	history-search-backward
bindkey "\eQ"	push-line
bindkey "\eR"	toggle-literal-history
bindkey "\eS"	spell-word
bindkey "\eT"	transpose-words
bindkey "\eU"	up-case-word
bindkey "\eW"	copy-region-as-kill
bindkey "\e[A"	up-line-or-history
bindkey "\e[B"	down-line-or-history
bindkey "\e[C"	forward-char
bindkey "\e[D"	backward-char
bindkey "\e_"	insert-last-word
bindkey "\ea"	accept-and-hold
bindkey "\eb"	backward-word
bindkey "\ec"	capitalize-word
bindkey "\ed"	kill-word
bindkey "\ef"	forward-word
bindkey "\eg"	get-line
bindkey "\eh"	run-help
bindkey "\el"	down-case-word
bindkey "\en"	history-search-forward
bindkey "\ep"	history-search-backward
bindkey "\eq"	push-line
bindkey "\er"	toggle-literal-history
bindkey "\es"	spell-word
bindkey "\et"	transpose-words
bindkey "\eu"	up-case-word
bindkey "\ew"	copy-region-as-kill
bindkey "\ex"	execute-named-cmd
bindkey "\ey"	yank-pop
bindkey "\ez"	execute-last-named-cmd
bindkey "\e|"	vi-goto-column
bindkey "\e^?"	backward-kill-word

# Completions.

compctl -b  bindkey
compctl -c  builtin
compctl -v  export
compctl -o  setopt
compctl -v  typeset
compctl -v  unset
compctl -o  unsetopt
compctl -v  vared
compctl -c  which

# Undefined functions.


# Defined functions.


# Limits.

limit stacksize       8m
limit coredumpsize    0k
limit maxproc         256
limit descriptors     256

# Non-array variables.

TERMCAP=''
TERM='console'
ARGC="0"
BAUD="0"
CDPATH=""
COLUMNS="80"
DIRSTACKSIZE="-1"
EDITOR="/usr/bin/joe"
EGID="0"
ERRNO="9"
EUID="0"
FCEDIT="vi"
FIGNORE=""
FPATH=""
GID="0"
HISTCHARS="!^#"
HISTSIZE="30"
HOME="/home/cat"
HOST="gestalt"
HOSTNAME="gestalt.freenix.fr"
HOSTTYPE="i486"
HZ="50"
KEYTIMEOUT="40"
LESS="-MCQinq"
LESSCHARSET="latin1"
LINENO="294"
LINES="24"
LISTMAX="100"
LITHISTSIZE="5"
LOGCHECK="60"
LOGNAME="cat"
MAIL="/usr/spool/mail/cat"
MAILCHECK="60"
MAILPATH=""
MANPATH="/usr/local/man:/usr/man/preformat:/usr/man:/usr/X11/man"
NNTPSERVER="gestalt.freenix.fr"
NULLCMD="cat"
OLDPWD="/home/cat/zsh-2.5.03/examples/scripts"
OPTARG=""
OPTIND="1"
PAGER="/usr/bin/less"
PATH="/usr/local/bin:/bin:/usr/bin:/usr/local/bin/X11:/usr/bin/X11:/usr/sound:/sbin:/usr/TeX/bin:."
PERIOD="0"
POSTEDIT=""
PPID="30704"
PROMPT="%n@%m %B%#%b\ %/\>"
PROMPT2="> "
PROMPT3="?# "
PROMPT4="+ "
PS1="%n@%m %B%#%b\ %/\>"
PS2="> "
PS3="?# "
PS4="+ "
PSVAR=""
PWD="/home/cat/zsh-2.5.03/examples/scripts"
RANDOM="4840"
READNULLCMD="more"
REPORTTIME="-1"
RPROMPT=""
RPS1=""
SAVEHIST="0"
SECONDS="4"
SHELL="/bin/zsh"
SHLVL="3"
SPROMPT="zsh: correct \`%R\' to \`%r\' [nyae]? "
TIMEFMT="%E real  %U user  %S system  %P %J"
TMOUT="0"
TMPPREFIX="/tmp/zsh"
TTY=""
UID="0"
USERNAME="root"
VERSION="zsh 2.5.03"
VISUAL="/usr/bin/joe"
WATCH=""
WATCHFMT="%n has %a %l from %m."
WORDCHARS="*?_-.[]~=/&;!#$%^(){}<>"
XMCD_LIBDIR="/usr/local/lib/xmcd"
each="__LINE__"
status="1"
str="Linux gestalt 1.3.29 #7 Thu Sep 28 23:43:48 MET 1995 i486"
prompt='test%'

# Array variables.

argv=()
cdpath=()
fignore=()
fpath=()
mailpath=()
manpath=(/usr/local/man /usr/man/preformat /usr/man /usr/X11/man)
path=(/usr/local/bin /bin /usr/bin /usr/local/bin/X11 /usr/bin/X11 /usr/sound /sbin /usr/TeX/bin .)
psvar=()
signals=(EXIT  ZERR DEBUG)
watch=()

# Exported variables.

export TERMCAP
export TERM
export EDITOR=/usr/bin/joe
export HOME=/home/cat
export HOSTNAME=gestalt.freenix.fr
export HZ=50
export LESS=-MCQinq
export LESSCHARSET=latin1
export LOGNAME=cat
export MAIL=/usr/spool/mail/cat
export MANPATH=/usr/local/man:/usr/man/preformat:/usr/man:/usr/X11/man
export NNTPSERVER=gestalt.freenix.fr
export PAGER=/usr/bin/less
export PATH=/usr/local/bin:/bin:/usr/bin:/usr/local/bin/X11:/usr/bin/X11:/usr/sound:/sbin:/usr/TeX/bin:.
export PS1=%n@%m %B%#%b\ %/\>
export PS2=> 
export PWD=/home/cat/zsh-2.5.03/examples/scripts
export SHELL=/bin/zsh
export SHLVL=3
export TERM=console
export VISUAL=/usr/bin/joe
export XMCD_LIBDIR=/usr/local/lib/xmcd

# Setopt.

setopt bgnice
setopt hashcmds
setopt hashdirs
setopt hashlistall
setopt notify

# END zsh saveset


-- 
Jean-Christophe Boggio				cat@gestalt.freenix.fr
Pascal and Linux addict, Dos and Windows independent programmer.

