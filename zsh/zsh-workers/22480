From zsh-workers-return-22480-mason-zsh=primenet.com.au@sunsite.dk Fri Jun 02 13:32:39 2006
Return-Path: <zsh-workers-return-22480-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 12594 invoked from network); 2 Jun 2006 13:32:36 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.2 (2006-05-25) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.4 required=5.0 tests=AWL,BAYES_00,
	FORGED_RCVD_HELO autolearn=ham version=3.1.2
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 2 Jun 2006 13:32:36 -0000
Received: (qmail 40701 invoked from network); 2 Jun 2006 13:32:30 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 2 Jun 2006 13:32:30 -0000
Received: (qmail 28172 invoked by alias); 2 Jun 2006 13:32:27 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 22480
Received: (qmail 28162 invoked from network); 2 Jun 2006 13:32:27 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 2 Jun 2006 13:32:27 -0000
Received: (qmail 40426 invoked from network); 2 Jun 2006 13:32:26 -0000
Received: from cluster-c.mailcontrol.com (168.143.177.190)
  by a.mx.sunsite.dk with SMTP; 2 Jun 2006 13:32:25 -0000
Received: from cameurexb01.EUROPE.ROOT.PRI ([62.189.241.200])
	by rly27c.srv.mailcontrol.com (MailControl) with ESMTP id k52DUPrS025485
	for <zsh-workers@sunsite.dk>; Fri, 2 Jun 2006 14:32:21 +0100
Received: from news01.csr.com ([10.103.143.38]) by cameurexb01.EUROPE.ROOT.PRI with Microsoft SMTPSVC(6.0.3790.1830);
	 Fri, 2 Jun 2006 14:30:09 +0100
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.13.4/8.13.4) with ESMTP id k52DVG0X026728
	for <zsh-workers@sunsite.dk>; Fri, 2 Jun 2006 14:31:16 +0100
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.13.4/8.13.4/Submit) with ESMTP id k52DVFAa026725
	for <zsh-workers@sunsite.dk>; Fri, 2 Jun 2006 14:31:16 +0100
Message-Id: <200606021331.k52DVFAa026725@news01.csr.com>
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: PATCH: zmathfuncdef and zsh/mathfunc
Date: Fri, 02 Jun 2006 14:31:15 +0100
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 02 Jun 2006 13:30:09.0975 (UTC) FILETIME=[AB80CC70:01C68648]
Content-Type: text/plain
MIME-Version: 1.0
X-Scanned-By: MailControl A-07-00-10 (www.mailcontrol.com) on 10.67.0.137

This patch extends zmathfuncdef (the front end to user-defined
mathematical functions) to load zsh/mathfunc if it looks like the
function will need it.

It does it by looking for the names of known functions and if it finds
them generating an autoload call to zsh/mathfunc for the function in
question.  This is as economical as possible in terms of library
loading.

For example, my definition

        zmathfuncdef ppm 'float(abs($1 - $2)) * 1e6 / $1 '

generates the autoloads (from zmodload -af)

        abs (zsh/mathfunc)
        float (zsh/mathfunc)

so that

        print $(( ppm(1, 1.00001) ))

will load zsh/mathfunc if it isn't already loaded and print 10 and a bit.


Index: Functions/Misc/zmathfuncdef
===================================================================
RCS file: /cvsroot/zsh/zsh/Functions/Misc/zmathfuncdef,v
retrieving revision 1.2
diff -u -r1.2 zmathfuncdef
--- Functions/Misc/zmathfuncdef	23 Apr 2006 22:47:04 -0000	1.2
+++ Functions/Misc/zmathfuncdef	2 Jun 2006 13:16:50 -0000
@@ -35,6 +35,32 @@
 
 functions -M $mname $iarg $ioptarg $fname || return 1
 
+# See if we need to autoload a math function from the standard
+# library.
+if ! zmodload -e zsh/mathfunc; then
+  local -a mathfuncs match mbegin mend loads
+  local mathfuncpat bodysearch
+
+  # generate pattern to match all known math functions
+  mathfuncs=(abs acos acosh asin asinh atan atanh cbrt ceil cos cosh erf erfc
+    exp expm1 fabs float floor gamma int j0 j1 lgamma log log10 log1p logb
+    sin sinh sqrt tan tanh y0 y1 signgam copysign fmod hypot nextafter jn yn
+    ldexp scalb rand48)
+  mathfuncpat="(${(j.|.)mathfuncs})"
+  bodysearch=$body
+  while [[ $bodysearch = (#b)(*[^[:alnum]]|)([[:alnum:]]##)\((*) ]]; do
+    # save worrying about search order...
+    bodysearch=$match[1]$match[3]
+    if [[ $match[2] = ${~mathfuncpat} ]]; then
+      # Uses function from math library.
+      loads+=($match[2])
+    fi
+  done
+  if (( ${#loads} )); then
+    zmodload -af zsh/mathfunc $loads
+  fi
+fi
+
 {
   eval "$fname() { (( $body )) }"
 } always {

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070


To access the latest news from CSR copy this link into a web browser:  http://www.csr.com/email_sig.php

