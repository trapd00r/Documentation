From zsh-users-return-11694-mason-zsh=primenet.com.au@sunsite.dk Wed Aug 01 21:55:28 2007
Return-Path: <zsh-users-return-11694-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1052 invoked from network); 1 Aug 2007 21:55:23 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.1 (2007-05-02) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.2.1
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 1 Aug 2007 21:55:23 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 66781 invoked from network); 1 Aug 2007 21:55:16 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 1 Aug 2007 21:55:16 -0000
Received: (qmail 13825 invoked by alias); 1 Aug 2007 21:55:08 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 11694
Received: (qmail 13805 invoked from network); 1 Aug 2007 21:55:08 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 1 Aug 2007 21:55:08 -0000
Received: (qmail 65460 invoked from network); 1 Aug 2007 21:55:08 -0000
Received: from gameframe.net (82.133.193.129)
  by a.mx.sunsite.dk with SMTP; 1 Aug 2007 21:54:58 -0000
Received: (qmail 14372 invoked by uid 1003); 1 Aug 2007 21:58:08 -0000
Received: from 127.0.0.1 by gameframe.net (envelope-from <testuser@gameframe.net>, uid 92) with qmail-scanner-1.25st 
 (uvscan: v5.1.00/v5032. perlscan: 1.25st.  
 Clear:RC:1(127.0.0.1):. 
 Processed in 1.005762 secs); 01 Aug 2007 21:58:08 -0000
GameFrame-Qmail-Scanner-Mail-From: testuser@gameframe.net via gameframe.net
GameFrame-Qmail-Scanner-Rcpt-To: zsh-users@sunsite.dk
GameFrame-Qmail-Scanner: 1.25st (Clear:RC:1(127.0.0.1):. Processed in 1.005762 secs Process 18525)
Received: from localhost (HELO gameframe.net) (127.0.0.1)
  by gameframe.net with SMTP; 1 Aug 2007 21:58:07 -0000
Received: from dsl-tkubras1-ff37c300-115.dhcp.inet.fi ([88.195.55.115])
        (SquirrelMail authenticated user testuser)
        by gameframe.net with HTTP;
        Thu, 2 Aug 2007 00:58:07 +0300 (EEST)
Message-ID: <44438.88.195.55.115.1186005487.squirrel@gameframe.net>
Date: Thu, 2 Aug 2007 00:58:07 +0300 (EEST)
Subject: Zsh problem with script that spawns multiple processes background.
From: testuser@gameframe.net
To: zsh-users@sunsite.dk
User-Agent: SquirrelMail/1.4.9a
MIME-Version: 1.0
Content-Type: text/plain;charset=iso-8859-1
Content-Transfer-Encoding: 8bit
X-Priority: 3 (Normal)
Importance: Normal

Hi!

Im experiencing following problem. I have large Zsh script done, around
4000 lines long at the moment.

I have simple while [ ] loop like this:

$File_Mod_Init = Text file with some information
$my_cat = Precached cat command on Ramdisk

$my_cat $File_Mod_Init | while read File ; do

function FM () {

Here it does lot of things...

}

# Engine that spawns multiple sub processes is like this:

if [ ! "$filemod_procid" -eq "$filemod_threads" ] ; then

[ -z "$auth" ] && {
[ ! -z "$array_proxy" ] && {
rnd_prx
unset http_proxy && http_proxy="$prx" && export http_proxy
 }
}

# Here actual Multithread engine

FM $filemod_procid &
File_Module_Pid=$(echo $!)
Process $File_Module_Pid &
FM_Pids=( "${FM_Pids[@]}" "$File_Module_Pid" )
let "filemod_procid++"

else

wait
filemod_procid=0

fi

done

Problem is that it seem to miss about 15% of processess, they just disappear
and it wont do things inside that FM function for them. Any idea what is
the cause?

If i set above loop without any "multithreads" things works perfectly. Is
there bug somwhere in Zsh? As a reference have a look at:

http://xpkzxc.com/tutorial/ABS/debugging.html#MULTIPLEPROC

Especially part:

# ======================= SCRIPT AUTHOR'S NOTES ======================= #
#  It's not completely bug free.
#  I ran it with limit = 500 and after the first few hundred iterations,
#+ one of the concurrent threads disappeared!
#  Not sure if this is collisions from trap signals or something else.
#  Once the trap is received, there's a brief moment while executing the
#+ trap handler but before the next trap is set.  During this time, it may
#+ be possible to miss a trap signal, thus miss spawning a child process.

#  No doubt someone may spot the bug and will be writing
#+ . . . in the future.

Zsh suffers for same bug? My own maded multiprocess loop is based on this
bash one... I tried this same with latest Bash as well, same behaviour,
about 15% disappears as well :(

