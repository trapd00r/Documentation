From zsh-workers-return-13593-mason-zsh=primenet.com.au@sunsite.dk Thu Mar 08 16:35:16 2001
Return-Path: <zsh-workers-return-13593-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 11751 invoked from network); 8 Mar 2001 16:35:15 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 8 Mar 2001 16:35:15 -0000
Received: (qmail 14163 invoked by alias); 8 Mar 2001 16:35:09 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 13593
Received: (qmail 14152 invoked from network); 8 Mar 2001 16:35:08 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1010308163315.ZM25025@candle.brasslantern.com>
Date: Thu, 8 Mar 2001 16:33:15 +0000
In-Reply-To: <20010307113659.A13689@rambo.logica.co.uk>
Comments: In reply to Oliver Kiddle <opk@u.genie.co.uk>
        "Possible bug with parameter expansion" (Mar  7, 11:36am)
References: <20010307113659.A13689@rambo.logica.co.uk>
X-Mailer: Z-Mail (5.0.0 30July97)
To: Oliver Kiddle <opk@u.genie.co.uk>, zsh-workers@sunsite.dk
Subject: Re: Possible bug with parameter expansion
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Mar 7, 11:36am, Oliver Kiddle wrote:
} Subject: Possible bug with parameter expansion
}
} The ${name:#pattern} form of parameter expansion doesn't work within
} double quotes. It is acting as if the pattern matched all the elements.

If you read Peter's 11-step "summary of the rules for substitution" you
will see that (4. *Double-Quoted Joining*) comes before (6. *Modifiers*).

} % echo "${(M)a:#*=*}"
} a d=rt b=fg c e=yt

zagzig% echo "${(@M)a:#*=*}" 
d=rt b=fg e=yt

} This looks like a bug to me because I can't see why the double quotes
} should be affecting the result.

Because they do.  I don't recall why joining happens before modifiers,
but I'm pretty sure there was a good reason for it at the time.  Does
this disagree with other shells that support ${var#pat}, e.g. ksh?

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

