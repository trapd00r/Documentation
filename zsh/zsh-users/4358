From zsh-users-return-4358-mason-zsh=primenet.com.au@sunsite.dk Tue Oct 09 14:26:17 2001
Return-Path: <zsh-users-return-4358-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 25997 invoked from network); 9 Oct 2001 14:26:17 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 9 Oct 2001 14:26:17 -0000
Received: (qmail 22520 invoked by alias); 9 Oct 2001 14:25:55 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 4358
Received: (qmail 22507 invoked from network); 9 Oct 2001 14:25:53 -0000
X-VirusChecked: Checked
Sender: kiddleo@cav.logica.co.uk
Message-ID: <3BC308CD.272E1CCB@yahoo.co.uk>
Date: Tue, 09 Oct 2001 15:25:17 +0100
From: Oliver Kiddle <okiddle@yahoo.co.uk>
X-Mailer: Mozilla 4.77 [en] (X11; U; Linux 2.2.15 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: zsh-users@sunsite.dk
Subject: Re: Wishlist for zsh: 3 tcsh features
References: <20011008161313.EC4ACD804@mail.cise.ufl.edu> 
		<OF594BCCA9.4364E8B5-ON80256ADF.0059B87C@uk.jpmorgan.com> 
		<3BC1DDEE.FA306604@yahoo.co.uk> <1011008173916.ZM5532@candle.brasslantern.com>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

Bart Schaefer wrote:

> On Oct 8,  6:10pm, Oliver Kiddle wrote:
> } Those two widgets annoyingly don't allow you to navigate up and down in
> } multiple line commands so you may prefer to try `up-line-or-search' and

Of course this only really matters because I'm binding to the cursor
up/down keys.

> I don't think it's possible to get more primitive than up-line-or-history,
> which goes up one line in a multi-line buffer or up one history entry at
> the beginning of the buffer.  Unless you're looking for a primitive that
> won't move out of the multi-line buffer when it reaches the top?

Yes. I had in mind using something like up-line || history-b-s-b

> 
> Meanwhile, something like this should work:
> 
>     function up-line-or-beginning-search {
>         if [[ $LASTWIDGET != $WIDGET ]]
>         then
>             if [[ $BUFFER == *$'\n'* ]]
>             then
>                 __last_up_line=up-line-or-history
>             else
>                 __last_up_line=history-beginning-search-backward
>             fi
>         fi
>         zle .${__last_up_line:-beep}
>     }
> 

That is great, thanks. I never thought to check for multi-line buffers
by looking in BUFFER for a newline.

I presume that the LASTWIDGET check and __last_up_line saving is there
so that if the history search retrieved a multi-line command, it would
continue to use history-beginning-search-backward. Unfortunately, this
means it won't do a history search from the first line of a multi-line
buffer - not that that matters much - so I changed it to this:

  if [[ ${BUFFER[1,CURSOR]} == *$'\n'* ]]; then
    zle up-line-or-history
  else
    zle history-beginning-search-backward
  fi

Please let me know if that has problems which I missed. Next I'll have
to get it to do something more useful from a PS2 prompt.

Oliver

_____________________________________________________________________
This message has been checked for all known viruses by the 
MessageLabs Virus Scanning Service. For further information visit
http://www.messagelabs.com/stats.asp

