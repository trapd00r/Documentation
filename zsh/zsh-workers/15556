From zsh-workers-return-15556-mason-zsh=primenet.com.au@sunsite.dk Wed Aug 01 08:32:33 2001
Return-Path: <zsh-workers-return-15556-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 28040 invoked from network); 1 Aug 2001 08:32:31 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 1 Aug 2001 08:32:31 -0000
Received: (qmail 28314 invoked by alias); 1 Aug 2001 08:32:20 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 15556
Received: (qmail 28295 invoked from network); 1 Aug 2001 08:32:13 -0000
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
Date: Wed, 1 Aug 2001 10:31:09 +0200 (MET DST)
Message-Id: <200108010831.KAA01554@beta.informatik.hu-berlin.de>
To: zsh-workers@sunsite.dk
Subject: Re: XML version of completion function
In-Reply-To: <1010801073909.ZM324@candle.brasslantern.com>

Bart Schaefer wrote:

> ...
> 
> Are you really, seriously suggesting that it's worthwhile to expend
> 50-70 thousand bytes defining the completion for a single command?  
> In the case of zip that's 45% larger than the executable; it's even
> larger than the executable and its manual page combined.
> 
> In find.xml there are about 5500 bytes of actual data, including the
> help text ... the other 89% is XML tags.  I'm sorry, I just can't get
> excited about this.

Well, that's more or less what I expected from using xml ;-)
There is a reason behind terse syntaxes like C and _arguments-as-we-
know-it after all.


But apart from that... some comments:

- I actually like being able to add help texts.  Peter and I
  half-heartedly discussed that around the time _complete_help was
  added.  I still don't know where the help texts could be saved and how
  _complete_help or a similar function could look them up, though.
  Especially if there are versions in different languages.

- I don't understand why <optspec> is always nested in <argspec> -- is
  the latter meant to be an _arguments-arg?  If so, see next point.

- I think this should be more like describing the command than
  describing arguments for _arguments.  That should also make the things
  shorter and more readable.  But whenever I try to describe how that
  would look like, I more or less describe _arguments.  Hm.

- I don't think I'll ever use this format unless someone comes up with a
  tool that converts a much shorter description to it or that generates
  most of this automatically.  How have you generated this?  Typed it
  in?  If so, tell us about your experience with it -- would you like to
  write completions this way?


Bye
  Sven


-- 
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

