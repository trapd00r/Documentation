From zsh-workers-return-21814-mason-zsh=primenet.com.au@sunsite.dk Mon Oct 03 16:53:52 2005
Return-Path: <zsh-workers-return-21814-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2983 invoked from network); 3 Oct 2005 16:53:38 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 3 Oct 2005 16:53:38 -0000
Received: (qmail 76354 invoked from network); 3 Oct 2005 16:50:55 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 3 Oct 2005 16:50:55 -0000
Received: (qmail 29815 invoked by alias); 3 Oct 2005 16:50:52 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 21814
Received: (qmail 29806 invoked from network); 3 Oct 2005 16:50:51 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 3 Oct 2005 16:50:51 -0000
Received: (qmail 76063 invoked from network); 3 Oct 2005 16:50:51 -0000
Received: from vms042pub.verizon.net (206.46.252.42)
  by a.mx.sunsite.dk with SMTP; 3 Oct 2005 16:50:50 -0000
Received: from candle.brasslantern.com ([71.116.81.225])
 by vms042.mailsrvcs.net
 (Sun Java System Messaging Server 6.2 HotFix 0.04 (built Dec 24 2004))
 with ESMTPA id <0INS007WEMSNZCO0@vms042.mailsrvcs.net> for
 zsh-workers@sunsite.dk; Mon, 03 Oct 2005 11:50:48 -0500 (CDT)
Received: from candle.brasslantern.com (IDENT:schaefer@localhost [127.0.0.1])
	by candle.brasslantern.com (8.12.11/8.12.11) with ESMTP id j93GolVY005337	for
 <zsh-workers@sunsite.dk>; Mon, 03 Oct 2005 09:50:47 -0700
Received: (from schaefer@localhost)	by candle.brasslantern.com
 (8.12.11/8.12.11/Submit) id j93GokoZ005336	for zsh-workers@sunsite.dk; Mon,
 03 Oct 2005 09:50:46 -0700
Date: Mon, 03 Oct 2005 16:50:45 +0000
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: Exception handling and "trap" vs. TRAPNAL()
In-reply-to: <5929.1128352251@csr.com>
To: zsh-workers@sunsite.dk
Message-id: <1051003165045.ZM5335@candle.brasslantern.com>
MIME-version: 1.0
X-Mailer: Z-Mail (5.0.0 30July97)
Content-type: text/plain; charset=us-ascii
References: <20050929200741.GA1156@DervishD>
	<20050930124130.45eb0463.pws@csr.com>	<20051001153756.GA12183@DervishD>
	<1051001183818.ZM27904@candle.brasslantern.com>
	<20051001202856.GA134@DervishD>
	<1051002044052.ZM28373@candle.brasslantern.com>
	<20051002190940.437F9866F@pwstephenson.fsnet.co.uk>
	<1051002195518.ZM2163@candle.brasslantern.com>	<20051002230027.GA194@DervishD>
	<1051003013758.ZM3107@candle.brasslantern.com>
	<20051003095738.3de5a059.pws@csr.com>
	<1051003145142.ZM4427@candle.brasslantern.com>	<5929.1128352251@csr.com>
Comments: In reply to Peter Stephenson <pws@csr.com>
 "Re: Exception handling and "trap" vs. TRAPNAL()" (Oct  3,  4:10pm)
X-Spam-Checker-Version: SpamAssassin 3.0.4 (2005-06-05) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00 autolearn=ham 
	version=3.0.4

On Oct 3,  4:10pm, Peter Stephenson wrote:
}
} Bart Schaefer wrote:
} > It could also be argued that, if the trap should behave like an "eval",
} > it ought to set $? = 1 when an error occurs inside the trap (but still
} > not cause an interrupt condition).  The example of bash2 contradicts
} > that position.  Can anyone who is reading this try ksh?
} 
} ksh appears to set the status to 1.

Oh, goody.

} > Here's a possible compromise:  Use my second patch, but propagate the
} > error if and only if we're in the try-block of an always-construct.
} 
} But do you mean how can it test if it's in the try block part?  There's
} no explicit test for that at the moment, but it's easy to add a variable.

Yes, that is what I meant.

That gives us something like this (except I'm only half serious about the
emulation part):

Index: Src/loop.c
===================================================================
diff -c -r1.10 loop.c
--- Src/loop.c	18 Feb 2005 17:05:17 -0000	1.10
+++ Src/loop.c	3 Oct 2005 16:31:57 -0000
@@ -627,13 +627,17 @@
 try_errflag = -1;
 
 /**/
+zlong
+try_tryflag = 0;
+
+/**/
 int
 exectry(Estate state, int do_exec)
 {
     Wordcode end, always;
     int endval;
     int save_retflag, save_breaks, save_loops, save_contflag;
-    zlong save_try_errflag;
+    zlong save_try_errflag, save_try_tryflag;
 
     end = state->pc + WC_TRY_SKIP(state->pc[-1]);
     always = state->pc + 1 + WC_TRY_SKIP(*state->pc);
@@ -642,7 +646,12 @@
     cmdpush(CS_CURSH);
 
     /* The :try clause */
+    save_try_tryflag = try_tryflag;
+    try_tryflag = 1;
+
     execlist(state, 1, do_exec);
+
+    try_tryflag = save_try_tryflag;
 
     /* Don't record errflag here, may be reset. */
     endval = lastval;
Index: Src/signals.c
===================================================================
RCS file: /extra/cvsroot/zsh/zsh-4.0/Src/signals.c,v
retrieving revision 1.13
diff -c -r1.13 signals.c
--- Src/signals.c	28 May 2005 04:32:49 -0000	1.13
+++ Src/signals.c	3 Oct 2005 16:48:34 -0000
@@ -1003,6 +1003,7 @@
     int trapret = 0;
     int obreaks = breaks;
     int isfunc;
+    int traperr;
 
     /* if signal is being ignored or the trap function		      *
      * is NULL, then return					      *
@@ -1097,8 +1098,8 @@
 	 * execrestore.
 	 */
 	trapret = trapreturn + 1;
-    } else if (errflag)
-	trapret = 1;
+    }
+    traperr = errflag;
     execrestore();
     lexrestore();
 
@@ -1110,6 +1111,10 @@
 	    lastval = trapret-1;
 	}
     } else {
+	if (traperr && emulation != EMULATE_SH)
+	    lastval = 1;
+	if (try_tryflag)
+	    errflag = traperr;
 	breaks += obreaks;
 	if (breaks > loops)
 	    breaks = loops;

