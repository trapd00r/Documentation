From zsh-workers-return-13970-mason-zsh=primenet.com.au@sunsite.dk Fri Apr 13 02:08:39 2001
Return-Path: <zsh-workers-return-13970-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 8965 invoked from network); 13 Apr 2001 02:08:38 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 13 Apr 2001 02:08:38 -0000
Received: (qmail 26968 invoked by alias); 13 Apr 2001 02:08:37 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 13970
Received: (qmail 26957 invoked from network); 13 Apr 2001 02:08:36 -0000
Date: Thu, 12 Apr 2001 19:08:29 -0700 (PDT)
From: Wayne Davison <wayned@users.sourceforge.net>
To: Zsh Workers <zsh-workers@sunsite.auc.dk>
Subject: Automatic hash -d
Message-ID: <Pine.LNX.4.30.0104121849180.7928-100000@phong.blorf.net>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

In the old completion system, I can complete a path that includes a
variable prefixed with a ~ without having to first use an explicit
hash -d.  In the new completion system, this only works if I complete
just the ~VAR name first.  In other words:

  # (Assume that there are files in /var/www/html/subdir)

  zsh -f
  % export w=/var/www/html
  % ls ~w/subdir/<TAB>           # Completes as expected
  % hash -dv
  w=/var/www/html
  % exit

  zsh -f
  % export w=/var/www/html
  % autoload -U compinit
  % compinit
  % zstyle ':completion:*' completer _expand _complete
  % bindkey '\t' complete-word
  % ls ~w/subdir/<TAB>           # Beeps.  Nothing added to hash -d.
  % ls ~w<TAB>                   # Expands w.  w added to hash -d.
  % ls ~w/subdir/<TAB>           # Now this works (as expected).

I can work around this, but it would be nice to have the auto hash -d
code work the same in each completion system.

..wayne..

