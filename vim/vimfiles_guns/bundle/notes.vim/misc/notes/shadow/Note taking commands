Note taking commands

To edit existing notes you can use Vim commands such as :edit, :split and
:tabedit with a filename that starts with ‘note:’ followed by (part of) the
title of one of your notes, e.g.:
   {{{vim
   :edit note:todo
   }}}
When you don’t follow ‘note:’ with anything a new note is created.
The following commands can be used to manage your notes:

# :Note starts new notes and edits existing ones

If you don’t pass any arguments to the :Note command it will start editing a
new note. If you pass (part of) of the title of one of your existing notes that
note will be edited. If no notes match the given argument then a new note is
created with its title set to the text you passed to :Note. This command will
fail when changes have been made to the current buffer, unless you use :Note!
which discards any changes.

# :DeleteNote deletes the current note

The :DeleteNote command deletes the current note, destroys the buffer and
removes the note from the internal cache of filenames and note titles. This
fails when changes have been made to the current buffer, unless you use
:DeleteNote! which discards any changes.

# :SearchNotes searches your notes

This command wraps :vimgrep and enables you to search through your notes using
a regular expression pattern or keywords. To search for a pattern you pass a
single argument that starts & ends with a slash:

  :SearchNotes /TODO\|FIXME\|XXX/

To search for one or more keywords you can just omit the slashes, this matches
notes containing all of the given keywords:

  :SearchNotes syntax highlighting

After collecting a fair amount of notes (say >= 5 MB) you will probably start
to get annoyed at how long it takes Vim to search through all of your notes. To
make searching more scalable the notes plug-in includes a Python script which
uses a full text index of your notes stored in an SQLite database.

The first time the Python script is run it will need to build the complete
index which can take a few minutes, but after the index has been initialized
updates and searches should be more or less instantaneous.

# :RelatedNotes finds related notes

This command makes it easy to find all notes related to the current file: If
you are currently editing a note then a search for the note’s title is done,
otherwise this searches for the absolute path of the current file.
