From zsh-users-return-2675-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Oct 12 09:33:24 1999
Return-Path: <zsh-users-return-2675-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 5220 invoked from network); 12 Oct 1999 09:33:19 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 12 Oct 1999 09:33:19 -0000
Received: (qmail 28215 invoked by alias); 12 Oct 1999 09:32:58 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 2675
Received: (qmail 28207 invoked from network); 12 Oct 1999 09:32:57 -0000
Date: Tue, 12 Oct 1999 11:32:56 +0200 (MET DST)
Message-Id: <199910120932.LAA06087@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-users@sunsite.auc.dk
In-reply-to: Oliver Kiddle's message of Tue, 12 Oct 1999 09:54:11 +0100
Subject: Re: Functions/Misc/nslookup (Re: coproc tutorial (Re: questions))


Oliver Kiddle wrote:

> Bart Schaefer wrote:
> 
> > This doesn't work for me because the real nslookup begins block-buffering
> > its output when stdout is not a tty.  Furthermore, if I type ^C while the
> > nslookup function is running, the entire shell exits.
> 
> I've had trouble getting it to work as well which I assumed was to do
> with it not having a tty. I tried the same trick with timedc and mailx
> aswell with varying problems. Are there any tricks we can do so that the
> programs think they have a terminal because it is potentially a very
> useful idea? If we can get it to work reliably a generic function for
> the purpose as Sven suggested would be a good idea. Can anyone think of
> any other programs which it might be useful for?

How about adding a module that offers a builtin that behaves like
a mixture of `coproc' and `eval' (i.e. arguments used as by `eval',
otherwise like `coproc') but executes the stuff in a pty?

This could also support options for simplifying parsing the output (so 
that we don't have to read one character after another but instead can 
read them in blocks, making things faster).

Any portable-pty-code experts around here?

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

