From zsh-users-return-10229-mason-zsh=primenet.com.au@sunsite.dk Tue May 09 22:05:45 2006
Return-Path: <zsh-users-return-10229-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 27546 invoked from network); 9 May 2006 22:05:43 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.1 (2006-03-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00,
	FORGED_RCVD_HELO autolearn=ham version=3.1.1
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 9 May 2006 22:05:43 -0000
Received: (qmail 19416 invoked from network); 9 May 2006 22:05:36 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 9 May 2006 22:05:36 -0000
Received: (qmail 10412 invoked by alias); 9 May 2006 22:05:26 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 10229
Received: (qmail 10402 invoked from network); 9 May 2006 22:05:25 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 9 May 2006 22:05:25 -0000
Received: (qmail 18421 invoked from network); 9 May 2006 22:05:25 -0000
Received: from main.gmane.org (HELO ciao.gmane.org) (80.91.229.2)
  by a.mx.sunsite.dk with SMTP; 9 May 2006 22:05:25 -0000
Received: from list by ciao.gmane.org with local (Exim 4.43)
	id 1FdaKO-0008Nm-GY
	for zsh-users@sunsite.dk; Wed, 10 May 2006 00:05:13 +0200
Received: from hippo.e-hippo.net ([216.182.10.250])
        by main.gmane.org with esmtp (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <zsh-users@sunsite.dk>; Wed, 10 May 2006 00:05:12 +0200
Received: from ljz by hippo.e-hippo.net with local (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <zsh-users@sunsite.dk>; Wed, 10 May 2006 00:05:12 +0200
X-Injected-Via-Gmane: http://gmane.org/
To: zsh-users@sunsite.dk
From:  Lloyd Zusman <ljz@asfast.com>
Subject:  File locking within zsh?
Date:  Tue, 09 May 2006 18:04:38 -0400
Lines: 30
Message-ID:  <87r7324zyh.fsf@asfast.com>
Mime-Version:  1.0
Content-Type:  text/plain; charset=us-ascii
X-Complaints-To: usenet@sea.gmane.org
X-Gmane-NNTP-Posting-Host: hippo.e-hippo.net
User-Agent: Gnus/5.1006 (Gnus v5.10.6) Emacs/21.4 (gnu/linux)
Cancel-Lock: sha1:/ZXaYarMr/XuURV2haUyVRVzFw4=
Sender: news <news@sea.gmane.org>

Do any of you know of any functions, primitives, tricks, hacks, or even
outright abominations which will allow me to do cooperative file locking
from within zsh?

I know that I can do this with a number of compiled executables, but I'm
looking for a zsh-only solution.

Assuming some sort of zsh locking operator called "lock", consider
this example (within a zsh script):

  lock -x -t 0 file  # for this example of a hypothetical operator, '-x'
                     # means to wait until I get an exclusive lock, and
                     # '-t 0' means no time out
  print foo bar baz >>file
  # do a whole lot of other stuff to "file"
  unlock file # release the lock

In this example, any other zsh script which asks for an exclusive lock
on "file" using this hypothetical "lock" operator will block until the
"unlock" operator has been invoked.

Can this be done somehow in zsh, or do I have to rely on a compiled
executable to accomplish this?

Thanks in advance.

-- 
 Lloyd Zusman
 ljz@asfast.com
 God bless you.

