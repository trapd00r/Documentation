From zsh-users-return-14645-mason-zsh=primenet.com.au@zsh.org Mon Dec 14 00:50:59 2009
Return-Path: <zsh-users-return-14645-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 22648 invoked by alias); 14 Dec 2009 00:50:59 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14645
Received: (qmail 13882 invoked from network); 14 Dec 2009 00:50:57 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <091213155039.ZM13648@torch.brasslantern.com>
Date: Sun, 13 Dec 2009 15:50:39 -0800
In-reply-to: <m3iqceuvbc.fsf@klanderman.net>
Comments: In reply to Greg Klanderman <gak@klanderman.net>
 "Re: have run-help not put itself in history?" (Dec 10,  8:57pm)
References: <19231.63798.994576.177282@gargle.gargle.HOWL>
	<733654e30912091738j726992bcvf95c313b28c4babb@mail.gmail.com>
	<m3iqceuvbc.fsf@klanderman.net>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-users@zsh.org
Subject: Re: have run-help not put itself in history?
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Dec 10,  8:57pm, Greg Klanderman wrote:
} 
} Hmm after perusing the manual and playing around a bit, this seems to
} do the trick:
} 
} zshaddhistory () {
}     [[ $1 != run-help\ * ]] || fc -p
} }

That the above works, almost looks like a bug to me.  Why is the history
ever reset to the default in this case?  It's a stack push without any
stack pop, and automatic popping is supposed to require the -a option
(which I think would pop the stack too soon).
 
} Oh run-help doesn't work so well if you're editing a continued
} line.. maybe processcmd() should do pushinput() rather than
} pushline()?

Unfortunately because of the way the lexer and the line editor work
together (or fail to), pushinput() implies the equivalent of a call
to send-break, killing the line editor so that $PREBUFFER can be
merged back into $BUFFER.  This means you lose the opportunity to
prepend anything to the reconstructed buffer, and also can't proceed
with the implicit accept-line.

Further, consider that if you're in the middle of a complex command
rather than just on a continuation of a simple command, you don't want
to prefix run-help to the entire complex command.

