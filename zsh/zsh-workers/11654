From zsh-workers-return-11654-mason-zsh=primenet.com.au@sunsite.auc.dk Tue May 30 10:37:40 2000
Return-Path: <zsh-workers-return-11654-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16184 invoked from network); 30 May 2000 10:37:28 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 30 May 2000 10:37:28 -0000
Received: (qmail 28870 invoked by alias); 30 May 2000 10:37:15 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 11654
Received: (qmail 28863 invoked from network); 30 May 2000 10:37:14 -0000
Date: Tue, 30 May 2000 12:36:58 +0200 (MET DST)
Message-Id: <200005301036.MAA20699@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: "Andrej Borsenkow"'s message of Tue, 30 May 2000 14:03:44 +0400
Subject: Re: More make check failure


Andrej Borsenkow wrote:

> This is different from reported recently. With current CVS:
> 
> *** /tmp/zsh.ztst.out.6420      Tue May 30 14:01:20 2000
> --- /tmp/zsh.ztst.tout.6420     Tue May 30 14:01:22 2000
> ***************
> *** 1,6 ****
>   line: {tst build.out}{}
>   COMPADD:{}
> ! line: {tst build.out}{}
>   COMPADD:{}
>   NO:{build.out}
>   NO:{build.out1}
> --- 1,6 ----
>   line: {tst build.out}{}
>   COMPADD:{}
> ! line: {tst build}{.out}
>   COMPADD:{}
>   NO:{build.out}
>   NO:{build.out1}

I tried 54 and it didn't fail for me and having just tried it again,
it still doesn't fail. Felix reported that he sometimes got the
misplaced cursor as in your output above. Damn.

How do you have configured the shell? With zsh's allocator? Secure
free? Memory debugging? Other debugging options?

And do you always get that failure? Do you get it with:

  compdef foo foo
  foo() {
    compadd -M 'm:{a-zA-Z}={A-Za-z} 
                r:|[.,_-]=* r:[^A-Z0-9]||[A-Z0-9]=*
                r:[A-Z0-9]||[^A-Z0-9]=*
                r:[^0-9]||[0-9]=* r:|=*' \
        build.out build.out1 build.out2
  }

and trying `foo bui<TAB><TAB><TAB>'? It should do the same as the
test, I'm just getting paranoid.

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

