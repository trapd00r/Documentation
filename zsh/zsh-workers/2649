From zsh-workers-request@euclid.skiles.gatech.edu Fri Dec 27 11:27:00 1996
Return-Path: <zsh-workers-request@euclid.skiles.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 17800 invoked from network); 27 Dec 1996 11:26:59 -0000
Received: from euclid.skiles.gatech.edu (list@130.207.146.50)
  by coral.primenet.com.au with SMTP; 27 Dec 1996 11:26:59 -0000
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id GAA25214; Fri, 27 Dec 1996 06:27:42 -0500 (EST)
Resent-Date: Fri, 27 Dec 1996 06:27:42 -0500 (EST)
From: Zefram <zefram@dcs.warwick.ac.uk>
Message-Id: <6888.199612271128@stone.dcs.warwick.ac.uk>
Subject: parallel makes
To: zsh-workers@math.gatech.edu (Z Shell workers mailing list)
Date: Fri, 27 Dec 1996 11:28:49 +0000 (GMT)
X-Loop: zefram@dcs.warwick.ac.uk
X-Stardate: [-31]8637.39
X-US-Congress: Moronic fuckers
Content-Type: text
Resent-Message-ID: <"bIckV1.0.v96.kAxmo"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/2649
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Zoltan, consider your patch for parallel makes (the one which caused
unnecessary rebuilds).  The reason this caused extra rebuilds was that
dependencies went like

$(OBJS): proto

proto: FORCE
	# make prototypes

which behaved as if $(OBJS) depended on FORCE.  But we have other rules
like

init.o: zshpaths.h

zshpaths.h: FORCE
	# update zshpaths.h

that do not force rebuilds.  So I think you could get the effect you
wanted if you did something like

$(OBJS): .proto

.proto: FORCE
	# make prototypes

and included a .proto file in the distribution.  This system would have
the added benefit of totally confusing newcomers to the strange ways of
zsh Makefiles even more than they are already.

-zefram

