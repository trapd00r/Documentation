From zsh-workers-return-28762-mason-zsh=primenet.com.au@zsh.org Tue Feb 15 18:56:21 2011
Return-Path: <zsh-workers-return-28762-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 26725 invoked by alias); 15 Feb 2011 18:56:21 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28762
Received: (qmail 26193 invoked from network); 15 Feb 2011 18:56:09 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: pass (ns1.primenet.com.au: SPF record at ntlworld.com designates 81.103.221.49 as permitted sender)
Date: Tue, 15 Feb 2011 18:56:01 +0000
From: Peter Stephenson <p.w.stephenson@ntlworld.com>
To: "Zsh Hackers' List" <zsh-workers@zsh.org>
Subject: Re: I/O to shell function in zsh coproc
Message-ID: <20110215185601.1b4c0ecc@pws-pc.ntlworld.com>
In-Reply-To: <110206122557.ZM20918@torch.brasslantern.com>
References: <alpine.DEB.2.00.1102051117470.6077@MyComp2.rgm-web.net>
	<110205100816.ZM26346@torch.brasslantern.com>
	<20110206190051.423887bb@pws-pc.ntlworld.com>
	<110206122557.ZM20918@torch.brasslantern.com>
X-Mailer: Claws Mail 3.7.8 (GTK+ 2.22.0; x86_64-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Cloudmark-Analysis: v=1.1 cv=JvdXmxIgLJv2/GthKqHpGJEEHukvLcvELVXUanXFreg= c=1 sm=0 a=fKlDHlkY_DwA:10 a=kj9zAlcOel0A:10 a=NLZqzBF-AAAA:8 a=p5cFHDA9yj13ekBMUQIA:9 a=6aR6wcRv5t3q1e42WOwA:7 a=Ahej4J_-icIKDkf9AcDoBTNWtQsA:4 a=CjuIK1q_8ugA:10 a=_dQi-Dcv4p4A:10 a=HpAAvcLHHh0Zw7uRqdWCyQ==:117

Slightly tangential, but I did notice this chunk appears to be wrong.

The value of coprocin and coprocout when they're not in use is -1, not
0, which is of course a valid file descriptor.  So unless there actually
is a coprocess we're always attempting to close file -1.  In my opinion
this isn't very useful.

Index: Src/exec.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/exec.c,v
retrieving revision 1.187
diff -p -u -r1.187 exec.c
--- Src/exec.c	16 Dec 2010 13:55:36 -0000	1.187
+++ Src/exec.c	15 Feb 2011 18:53:28 -0000
@@ -3218,10 +3218,14 @@ execcmd(Estate state, int input, int out
 			_exit(1);
 		}
 		closem(FDT_INTERNAL);
-		if (coprocin)
+		if (coprocin != -1) {
 		    zclose(coprocin);
-		if (coprocout)
+		    coprocin = -1;
+		}
+		if (coprocout != -1) {
 		    zclose(coprocout);
+		    coprocout = -1;
+		}
 #ifdef HAVE_GETRLIMIT
 		if (!forked)
 		    setlimits(NULL);

-- 
Peter Stephenson <p.w.stephenson@ntlworld.com>
Web page now at http://homepage.ntlworld.com/p.w.stephenson/

