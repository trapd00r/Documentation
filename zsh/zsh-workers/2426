From zsh-workers-request@euclid.skiles.gatech.edu  Mon Nov 18 22:51:26 1996
Return-Path: zsh-workers-request@euclid.skiles.gatech.edu
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by coral.primenet.com.au (8.7.6/8.7.3) with ESMTP id WAA23730 for <mason@primenet.com.au>; Mon, 18 Nov 1996 22:51:23 +1100 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id GAA06888; Mon, 18 Nov 1996 06:40:18 -0500 (EST)
Resent-Date: Mon, 18 Nov 1996 06:40:18 -0500 (EST)
Date: Mon, 18 Nov 1996 14:41:34 +0300 (MOW)
From: Andrej Borsenkow <borsenkow.msk@sni.de>
X-Sender: bor@itsrm1.mow.sni.de
Reply-To: borsenkow.msk@sni.de
To: Zoltan Hidvegi <hzoli@cs.elte.hu>
cc: Zsh hacking and development <zsh-workers@math.gatech.edu>
Subject: Re: zsh-3.1.0-test3 release
In-Reply-To: <199611170427.FAA13416@hzoli.ppp.cs.elte.hu>
Message-ID: <Pine.SV4.3.95.961118143422.35A-100000@itsrm1.mow.sni.de>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Resent-Message-ID: <"BSSUe2.0.Yh1.Xi4ao"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/2426
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

On Sun, 17 Nov 1996, Zoltan Hidvegi wrote:

> 
> It may now support dynamic loading on SVR4 systems.  Try it.  If it does not
> work, send a patch to fix it.
> 

Yes, it works. There is a small problem in linking libzsh.so - I have to
think it over. In short:
  zsh is linked with -ltermcap. But now termcap functions are used  in
  libzsh.so and not in zsh. If termcap is static (and we have only static
  version), it is not used when linking, and I get run-time error when 
  accessing termcap functions.

Probably, we need to split LIBS between those neede for zsh itself (does
it need any at all?) and libzsh.so. As the whole code is now in libzsh.so,
probably it is enough:

zsh: $(PROTO) $(ANSI@U@KNR) $(@L@IBZSH) $(@L@OBJS)                              
     $(LINK) $(@L@OBJS) -lzsh

$(LIBZSH): $(LIBOBJS)                                                           
        $(DLLD) $(LDFLAGS) $(DLLDFLAGS) -o $(LIBZSH) $(LIBOBJS) $(LIBS)         
        ln -sf $(LIBZSH) libzsh.so                                              

where libs doesn't include -lzsh?                                              

BTW it would be nice to be able to compile static as well as dynamic
version of zsh from te same Makefile.

Thanks!

-------------------------------------------------------------------------
Andrej Borsenkow 		Fax:   +7 (095) 252 01 05
SNI ITS Moscow			Tel:   +7 (095) 252 13 88

NERV:  borsenkow.msk		E-Mail: borsenkow.msk@sni.de
-------------------------------------------------------------------------


