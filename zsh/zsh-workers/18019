From zsh-workers-return-18019-mason-zsh=primenet.com.au@sunsite.dk Thu Dec 19 16:11:19 2002
Return-Path: <zsh-workers-return-18019-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 10300 invoked from network); 19 Dec 2002 16:11:19 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 19 Dec 2002 16:11:19 -0000
Received: (qmail 13942 invoked by alias); 19 Dec 2002 16:11:00 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 18019
Received: (qmail 13900 invoked from network); 19 Dec 2002 16:10:54 -0000
From: "Bart Schaefer" <schaefer@brasslantern.com>
Message-Id: <1021219161025.ZM4820@candle.brasslantern.com>
Date: Thu, 19 Dec 2002 16:10:25 +0000
In-Reply-To: <4575.1040299586@finches.logica.co.uk>
Comments: In reply to Oliver Kiddle <okiddle@yahoo.co.uk>
        "Re: Dynamically adding to $mailpath?" (Dec 19,  1:06pm)
References: <6134254DE87BD411908B00A0C99B044F03A0B5AC@MOWD019A> 
	<4575.1040299586@finches.logica.co.uk> 
	<6134254DE87BD411908B00A0C99B044F03A0B5B3@MOWD019A>
In-Reply-To: <6134254DE87BD411908B00A0C99B044F03A0B5B3@MOWD019A>
Comments: In reply to Borzenkov Andrey <Andrey.Borzenkov@siemens.com>
        "RE: Dynamically adding to $mailpath?" (Dec 19,  3:44pm)
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-workers@sunsite.dk
Subject: Re: Dynamically adding to $mailpath?
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Dec 19,  1:06pm, Oliver Kiddle wrote:
} Subject: Re: Dynamically adding to $mailpath?
}
} mailpath=( ~/mail/*.spool(e:'REPLY=( "${REPLY}?You have new mail in ${REPLY:t:r}")':) )
} 
} it doesn't need a fork but there seems to be a bug somewhere because I
} get `zsh: unmatched "' errors. It's okay if I remove the :t:r modifiers
} though.

On Dec 19,  3:44pm, Borzenkov Andrey wrote:
} 
} And leaving just one of modifiers results in zsh: unknown file attribute.

It's a simple parsing issue.  The double-quotes aren't significant to the
glob parser, so the colons cause the parse tokens to be

    e
    REPLY=( "${REPLY}?You have new mail in ${REPLY
    t
    r}")

Try it this way:

mailpath=( ~/mail/*.spool(e['REPLY=( "${REPLY}?You have new mail in ${REPLY:t:r}")']) )

On Dec 19,  1:06pm, Oliver Kiddle wrote:
}
} And running this twice in 4.1.0-dev-6 (but not in 4.0.2) causes a seg fault:
}   echo *(e:'REPLY=( ${REPLY}?${REPLY} )':)
} 
} (I forgot to quote the ? when trying that)

It causes a seg fault immediately in 4.0.6, so it's something that changed
after 4.0.2.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

