From zsh-users-return-13264-mason-zsh=primenet.com.au@sunsite.dk Fri Sep 19 14:46:09 2008
Return-Path: <zsh-users-return-13264-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 3360 invoked from network); 19 Sep 2008 14:46:07 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00,HTML_MESSAGE
	autolearn=ham version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 19 Sep 2008 14:46:07 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 73863 invoked from network); 19 Sep 2008 14:45:17 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 19 Sep 2008 14:45:17 -0000
Received: (qmail 6109 invoked by alias); 19 Sep 2008 14:44:34 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13264
Received: (qmail 6089 invoked from network); 19 Sep 2008 14:44:31 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 19 Sep 2008 14:44:31 -0000
Received: from qb-out-0506.google.com (qb-out-0506.google.com [72.14.204.225])
	by bifrost.dotsrc.org (Postfix) with ESMTP id D1AB480308B9
	for <zsh-users@sunsite.dk>; Fri, 19 Sep 2008 16:44:16 +0200 (CEST)
Received: by qb-out-0506.google.com with SMTP id o21so369334qba.37
        for <zsh-users@sunsite.dk>; Fri, 19 Sep 2008 07:44:15 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:to
         :subject:cc:in-reply-to:mime-version:content-type:references;
        bh=/RwrrVtTPFvF1PGm+0qJLXqODthMOdpp2lXxUUbVFjg=;
        b=MExlabKxu5iFaHPTUAbq7EX4CBVULucckApV2Wtcrj+EoNdTmO7Le3232pw6FWOtKc
         q5vlPkJD+daIw4Y8RkVIL1DtG/7IVMfwTtw/uXDXju0s8Rjd/jAfbkGqsZsS6INrwRhV
         +Akj8fJGW80IImEx+WmL/bTZThf1zYmA0B6mE=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:to:subject:cc:in-reply-to:mime-version
         :content-type:references;
        b=OpqOLZ7IfwKirqWnGvhZEJNX7GvDW5CSDdQIz3lPtewIlsFEWBBIdie9vsWCTBSTF4
         S9X7dbZ9LtOOh9CIPmXuZ2iuo4c3dfOEBU1sOXYrxie6pV1kWoTw7MN//Cni2VwPHXDl
         GbVlKtPaq6u6TO/kZ7Mjt8caxvxBKO2Mr/oNc=
Received: by 10.115.33.1 with SMTP id l1mr211362waj.115.1221835454376;
        Fri, 19 Sep 2008 07:44:14 -0700 (PDT)
Received: by 10.114.159.2 with HTTP; Fri, 19 Sep 2008 07:44:14 -0700 (PDT)
Message-ID: <6cd6de210809190744y38654349qa0db6e4d4b8fc2a5@mail.gmail.com>
Date: Fri, 19 Sep 2008 10:44:14 -0400
From: "Rocky Bernstein" <rocky.bernstein@gmail.com>
To: "Peter Stephenson" <pws@csr.com>
Subject: Re: reading a file into an array. mapfile? (f)?
Cc: "zsh users mailing list" <zsh-users@sunsite.dk>
In-Reply-To: <200809191100.m8JB0sAC028936@news01.csr.com>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_24134_25302676.1221835454368"
References: <6cd6de210809171953pd956d75gd4b3609ac036fe0@mail.gmail.com>
	 <080917214418.ZM27616@torch.brasslantern.com>
	 <6cd6de210809181747kc0f0a5bt4489f534589725a8@mail.gmail.com>
	 <20080919100725.5c471019@news01>
	 <6cd6de210809190339g57a4e722u5ad1371e858c8501@mail.gmail.com>
	 <200809191100.m8JB0sAC028936@news01.csr.com>
X-Virus-Scanned: ClamAV 0.92.1/8287/Fri Sep 19 10:13:26 2008 on bifrost
X-Virus-Status: Clean

------=_Part_24134_25302676.1221835454368
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Thanks, Bart and Peter - this works great! I will note and make use of the
fact that the lack of a null line at the end means the file doesn't have a
final newline.

So now with this, file listing (the "list" command) is now in the debugger.
Down the line, file information should be kept. Most important would be
modification time and some sort of checksum (or "cryptographic")
information. Too bad this isn't already in the zsh/files module.

(And it would be cool and I think relatively straightforward to add a
Ruby-like SCRIPT_LINES__ capability. In the context of a debugger or any
profiling/introspection tool it means that one reliably has the lines of the
script under inspection.)

On Fri, Sep 19, 2008 at 7:00 AM, Peter Stephenson <pws@csr.com> wrote:

> "Rocky Bernstein" wrote:
> > Further tests show that the behavior seems to be to drop blank lines but
> put
> > one at the end of the file.
>
> Apologies, you're right; it seems you *do* need the @ flag, but my test
> was too simple to show it.
>
> array=("${(f@)mapfile[foo.txt]}")
>
> I'm not entirely sure why that is but I must be misremembering the (f)
> rules.
>
> Also, it seems you always get an extra blank at the end: I think that's
> because mapfile returns the complete file including the "\n" and the (f)
> flag splits on that "\n" giving you a blank after it.  This should be
> entirely predictable, however (I hope): you get that last blank line if
> there was a final newline, and if you don't get it there wasn't a final
> newline.
>
> I think that's the one difference from "${(f@)$(<foo.txt)}": in that
> case a final newline is always stripped, but consequently you can't tell
> if there was one there.
>
> --
> Peter Stephenson <pws@csr.com>                  Software Engineer
> CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
> Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070
>

------=_Part_24134_25302676.1221835454368
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

<div dir="ltr">Thanks, Bart and Peter - this works great! I will note and make use of the fact that the lack of a null line at the end means the file doesn&#39;t have a final newline.<br><br>So now with this, file listing (the &quot;list&quot; command) is now in the debugger. Down the line, file information should be kept. Most important would be modification time and some sort of checksum (or &quot;cryptographic&quot;) information. Too bad this isn&#39;t already in the zsh/files module.<br>
<br>(And it would be cool and I think relatively straightforward to add a Ruby-like SCRIPT_LINES__ capability. In the context of a debugger or any profiling/introspection tool it means that one reliably has the lines of the script under inspection.)<br>
<br><div class="gmail_quote">On Fri, Sep 19, 2008 at 7:00 AM, Peter Stephenson <span dir="ltr">&lt;<a href="mailto:pws@csr.com">pws@csr.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
<div class="Ih2E3d">&quot;Rocky Bernstein&quot; wrote:<br>
&gt; Further tests show that the behavior seems to be to drop blank lines but put<br>
&gt; one at the end of the file.<br>
<br>
</div>Apologies, you&#39;re right; it seems you *do* need the @ flag, but my test<br>
was too simple to show it.<br>
<br>
array=(&quot;${(f@)mapfile[foo.txt]}&quot;)<br>
<br>
I&#39;m not entirely sure why that is but I must be misremembering the (f)<br>
rules.<br>
<br>
Also, it seems you always get an extra blank at the end: I think that&#39;s<br>
because mapfile returns the complete file including the &quot;\n&quot; and the (f)<br>
flag splits on that &quot;\n&quot; giving you a blank after it. &nbsp;This should be<br>
entirely predictable, however (I hope): you get that last blank line if<br>
there was a final newline, and if you don&#39;t get it there wasn&#39;t a final<br>
newline.<br>
<br>
I think that&#39;s the one difference from &quot;${(f@)$(&lt;foo.txt)}&quot;: in that<br>
case a final newline is always stripped, but consequently you can&#39;t tell<br>
if there was one there.<br>
<font color="#888888"><br>
--<br>
</font><div><div></div><div class="Wj3C7c">Peter Stephenson &lt;<a href="mailto:pws@csr.com">pws@csr.com</a>&gt; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Software Engineer<br>
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road<br>
Cambridge, CB4 0WZ, UK &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Tel: +44 (0)1223 692070<br>
</div></div></blockquote></div><br></div>

------=_Part_24134_25302676.1221835454368--

