From zsh-users-return-9791-mason-zsh=primenet.com.au@sunsite.dk Tue Dec 13 04:17:12 2005
Return-Path: <zsh-users-return-9791-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 8976 invoked from network); 13 Dec 2005 04:17:10 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.0 (2005-09-13) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00,
	FORGED_RCVD_HELO autolearn=ham version=3.1.0
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 13 Dec 2005 04:17:10 -0000
Received: (qmail 48395 invoked from network); 13 Dec 2005 04:17:02 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 13 Dec 2005 04:17:02 -0000
Received: (qmail 19996 invoked by alias); 13 Dec 2005 04:16:55 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 9791
Received: (qmail 19987 invoked from network); 13 Dec 2005 04:16:54 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 13 Dec 2005 04:16:54 -0000
Received: (qmail 47281 invoked from network); 13 Dec 2005 04:16:54 -0000
Received: from vms042pub.verizon.net (206.46.252.42)
  by a.mx.sunsite.dk with SMTP; 13 Dec 2005 04:16:53 -0000
Received: from candle.brasslantern.com ([71.116.81.225])
 by vms042.mailsrvcs.net
 (Sun Java System Messaging Server 6.2-4.02 (built Sep  9 2005))
 with ESMTPA id <0IRF00GCD5824VZK@vms042.mailsrvcs.net> for
 zsh-users@sunsite.dk; Mon, 12 Dec 2005 22:16:51 -0600 (CST)
Received: from candle.brasslantern.com (IDENT:schaefer@localhost [127.0.0.1])
	by candle.brasslantern.com (8.12.11/8.12.11) with ESMTP id jBD4GnkY021955	for
 <zsh-users@sunsite.dk>; Mon, 12 Dec 2005 20:16:50 -0800
Received: (from schaefer@localhost)	by candle.brasslantern.com
 (8.12.11/8.12.11/Submit) id jBD4Gnh5021954	for zsh-users@sunsite.dk; Mon,
 12 Dec 2005 20:16:49 -0800
Date: Tue, 13 Dec 2005 04:16:49 +0000
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: Globbing feature suggestion
In-reply-to: <87irtt4uno.fsf@shazam.localnet>
To: zsh-users@sunsite.dk
Message-id: <1051213041649.ZM21953@candle.brasslantern.com>
MIME-version: 1.0
X-Mailer: Z-Mail (5.0.0 30July97)
Content-type: text/plain; charset=us-ascii
References: <87irtt4uno.fsf@shazam.localnet>
Comments: In reply to Jonathan Hankins <jonathan-hankins@mindspring.com>
 "Globbing feature suggestion" (Dec 12,  8:07pm)

On Dec 12,  8:07pm, Jonathan Hankins wrote:
}
} What if you could get the effect of find(1)'s "-nouser" and "-nogroup"
} (true for files whose numeric UID and GID have no corresponding entry
} in the passwd file)

This is computationally a fairly expensive operation, particularly if
"the passwd file" is an NIS map or the like.  Zsh's (uID) and (gID)
qualifiers work by looking up the ID once in the appropriate map and
then comparing to the stat data of each file; to implement -nouser or
-nogroup you have to first get the stat data from the file and then
look that up in the map.  You could get into various optimizations
like caching previously-seen IDs so as not to look them up again, but
that's a lot of code for what seems like a fringe feature.

My feeling is that if you're going to invoke something that costly,
you ought to be aware of it; the shell shouldn't hide it behind a two-
letter abbreviation.  It's not obvious, but with "zmodload zsh/stat":

 -nouser is the glob qualifier
 (e['stat -s -A reply +uid $REPLY; reply=(${${(M)reply:#<->}/<->/$REPLY})']) 

 -nogroup is the glob qualifier
 (e['stat -s -A reply +gid $REPLY; reply=(${${(M)reply:#<->}/<->/$REPLY})']) 

You can use the function shorthand in 4.3.x:

 function nouser {
   stat -s -A reply +uid $REPLY
   reply=(${${(M)reply:#<->}/<->/$REPLY})
 }

 print *(+nouser)

Only try that recursively on a deep directory tree, though, when prepared
to wait a while.

Tangentially, a more useful feature would be for (^e:...:) to match the
name when reply=().  Currently (^e:...:) is guaranteed never to match,
and instead you have to figure out how to invert the computation.  If
(^e:...:) were so implemented, then -nouser would be shortened to
 (^e['stat -s -A reply +uid $REPLY; reply=(${reply:#<->})'])
which is not a lot better, but a little.

