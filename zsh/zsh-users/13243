From zsh-users-return-13243-mason-zsh=primenet.com.au@sunsite.dk Thu Sep 18 16:53:40 2008
Return-Path: <zsh-users-return-13243-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16296 invoked from network); 18 Sep 2008 16:53:28 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 18 Sep 2008 16:53:28 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 58637 invoked from network); 18 Sep 2008 16:53:11 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 18 Sep 2008 16:53:11 -0000
Received: (qmail 12273 invoked by alias); 18 Sep 2008 16:52:33 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13243
Received: (qmail 12254 invoked from network); 18 Sep 2008 16:52:32 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 18 Sep 2008 16:52:32 -0000
Received: from smtprelay08.ispgateway.de (smtprelay08.ispgateway.de [80.67.29.8])
	by bifrost.dotsrc.org (Postfix) with ESMTP id C2E51802720D
	for <zsh-users@sunsite.dk>; Thu, 18 Sep 2008 18:52:26 +0200 (CEST)
Received: from [212.117.84.127] (helo=fsst.voodoo.lan)
	by smtprelay08.ispgateway.de with esmtpsa (TLSv1:AES256-SHA:256)
	(Exim 4.68)
	(envelope-from <ft@bewatermyfriend.org>)
	id 1KgMjx-0004mN-Ti
	for zsh-users@sunsite.dk; Thu, 18 Sep 2008 18:52:26 +0200
Received: from hawk by fsst.voodoo.lan with local (Exim 4.69)
	(envelope-from <ft@bewatermyfriend.org>)
	id 1KgMjk-0001ct-NA
	for zsh-users@sunsite.dk; Thu, 18 Sep 2008 18:52:12 +0200
Date: Thu, 18 Sep 2008 18:52:12 +0200
From: Frank Terbeck <ft@bewatermyfriend.org>
To: zsh users <zsh-users@sunsite.dk>
Subject: Re: Submitting vcs_info function
Message-ID: <20080918165212.GY2182@fsst.voodoo.lan>
Mail-Followup-To: zsh users <zsh-users@sunsite.dk>
References: <20080917201859.GU2182@fsst.voodoo.lan> <20080918112003.45911104@news01>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
In-Reply-To: <20080918112003.45911104@news01>
User-Agent: Mutt/1.5.18 (2008-05-17)
X-Df-Sender: 430444
X-Virus-Scanned: ClamAV 0.92.1/8280/Thu Sep 18 16:52:56 2008 on bifrost
X-Virus-Status: Clean

Peter Stephenson <pws@csr.com>:
> On Wed, 17 Sep 2008 22:18:59 +0200
> Frank Terbeck <ft@bewatermyfriend.org> wrote:
> > I've been working on this for quite some time now. vcs_info is a
> > function that is able to get information about directories under
> > version control. That information can be used in prompts, for example.
> > 
> > I am submitting this for inclusion in the next zsh release - if the
> > developers deem it to be worthy. I think Functions/Misc/vcs_info would
> > be a proper place.
> 
> Thanks.  This will be useful.
> 
> I'd like to suggest a slightly different interface (internally, this
> wouldn't affect the use).  I think it would be best if it lived in
> Functions/VCS_Info with a single central function in one file, backends in

Ah, okay. I agree this makes sense. The current layout is largely due
to convenience to be able to point people at one file, that can
install.

I'll rework this a little and provide a tarball then.

> VCS_INFO_BACKEND_<backend>, and any utility functions in other files
> (though small ones could be in the main function file).  Then you don't
> need to load a backend you're not using and the central function can query
> backends by searching the function path for files of that name (the sort of
> thing that's easy in zsh) and autoloading the function in question so you
> wouldn't need an explicit list. 

Completely agreed.

> I'd suggest that functions for each backend be done as arguments
> "VCS_INFO_BACKEND_<backend> get_data", but it could equally be
> something like VCS_INFO_backend_<backend>_get_data or anything
> explicit enough that wouldn't get confused with another backend.

I think
    VCS_INFO_get_data_<backend>
and VCS_INFO_detect_<backend>
should be explicit enough. Wouldn't it?

> I'd also suggest it would be more useful to enable, rather than disable,
> backends.  I tend to know which archiving systems I'm using and it's not
> particular convenient to have to disable a whole series I may never even
> have heard of, and which may well be extended in future versions so is a
> moving target.  However, there's nothing to stop you having both with
> "enable" taking preference.

I think I'll do this:
    + enable is a list style.
    + disable list style (no change here).

If one entry in 'enable' equals "all", all backends are enabled except
for the ones in 'disable'.

If no entry in 'enable' equals "all", 'disable' is ignored and only
system listed in 'enable' are loaded.

I don't know if the default for 'enable' should be:
    ( "all" )
or something "reasonable" (I know, I know, subjectivity...):
    ( "git" "cvs" "svn" "hg" )

> It should be possible to use the new prompt colouring features in the
> version that goes into the archive (%F{red}...%f), so explicit escapes can
> be avoided.

Yeah, and the documentation should use those new expansions. I didn't
look into those yet, I must admit. :)

Regards, Frank

-- 
In protocol design, perfection has been reached not when there is
nothing left to add, but when there is nothing left to take away.
                                                  -- RFC 1925

