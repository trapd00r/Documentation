From zsh-workers-return-10064-mason-zsh=primenet.com.au@sunsite.auc.dk Fri Mar 10 16:47:27 2000
Return-Path: <zsh-workers-return-10064-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 9146 invoked from network); 10 Mar 2000 16:47:26 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 10 Mar 2000 16:47:26 -0000
Received: (qmail 2443 invoked by alias); 10 Mar 2000 16:47:20 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 10064
Received: (qmail 2434 invoked from network); 10 Mar 2000 16:47:20 -0000
Message-ID: <38C9270B.F95365E1@u.genie.co.uk>
Date: Fri, 10 Mar 2000 16:47:07 +0000
From: Oliver Kiddle <opk@u.genie.co.uk>
X-Mailer: Mozilla 4.72 [en] (Win95; I)
X-Accept-Language: en
MIME-Version: 1.0
To: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
CC: zsh-workers@sunsite.auc.dk
Subject: Re: Saving the zle display stuff
References: <200003091445.PAA30461@beta.informatik.hu-berlin.de>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

Sven Wischnowsky wrote:
> 
> It would be relatively easy to make it remember how long the list
> below the prompt is (it should already know about the presence of a
> list -- at least in most cases).
> So, are you suggesting a zle-option to make it put the prompt `below
> the list if there is one'?

Yes: a zle-widget that puts the prompt below the list if there is one.
That allows me to keep the current list for later reference if I decide
that I want to.

> If you are only concerned about completion: there is the last-prompt
> style. But unfortunately, this doesn't work with _complete_help
> because that doesn't set up it's own $curcontext, and, I think, it
> shouldn't because we call it to get information about normal
> completion in the same context. Hm. We could make _complete_help test
> the last-prompt style directly with a context like
> `:completion:complete-help::::' and if it is true, set
> `compstate[last_prompt]=yes'.

That would be useful, though the widget would be better.
I couldn't actually get this to work. Even just putting
compstate[last_prompt]='yes' before the compadd in _complete_word didn't
work.

Out of interest, why does _setup use zstyle -s followed by [[ "$val" =
(yes|true|1|on) ]] for various things including last-prompt instead of
just using zstyle -b (or -t or -T)?

And in a separate message, Sven wrote:
> Oliver Kiddle wrote:
> > Is there a better way for me to have done the equivalent of :*:nothing:_nothing for the -r option?
>
> Can't think of a better way... never thought about that. Hm. Is it
> worth to make _arguments support this directly, i.e. add a syntax
> saying: `no more arguments after this option'?

There's probably quite a lot of commands like zpty where they can be
used in a few separate ways (each with their own set of arguments) and
for these commands it is useful to avoid the final arguments for some
forms so if it is fairly simple to do and there is a clear way of
representing it in the _arguments parameters then it is probably worth
doing.

Oliver

