From zsh-users-return-11688-mason-zsh=primenet.com.au@sunsite.dk Sun Jul 29 21:14:13 2007
Return-Path: <zsh-users-return-11688-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 3989 invoked from network); 29 Jul 2007 21:14:11 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.1 (2007-05-02) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.1
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 29 Jul 2007 21:14:11 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 39691 invoked from network); 29 Jul 2007 21:14:05 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 29 Jul 2007 21:14:05 -0000
Received: (qmail 7444 invoked by alias); 29 Jul 2007 21:13:56 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 11688
Received: (qmail 7430 invoked from network); 29 Jul 2007 21:13:55 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 29 Jul 2007 21:13:55 -0000
Received: (qmail 38411 invoked from network); 29 Jul 2007 21:13:55 -0000
Received: from py-out-1112.google.com (64.233.166.177)
  by a.mx.sunsite.dk with SMTP; 29 Jul 2007 21:13:52 -0000
Received: by py-out-1112.google.com with SMTP id f47so2440594pye
        for <zsh-users@sunsite.dk>; Sun, 29 Jul 2007 14:13:51 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=oZRlAxlLBkH7zNgE8qQEpqx0tV/EGqnAoXHybF7KEXHgQh4M+vkvJCYjdtiCVzJuqkOuF9zNwFLSaNVxDZaO4C6GMK0jLPpBMxz5/CLxnB32kLhJbpOqlpE/OYX3vWdrcgfb9pkI72J2Hm/ivlRgIY+MMW3N15oCwUHZiH3Kyks=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=C+wWhMtKX46wLSpdSLEmLEXa+MAX6En2LyMZIMM002FR9AECddLCl/vRVSX7NtnP/QWTubyZkQo7js4brm4zXWtK/hapDKyusrMZ1K5LX7KcCTcc22CN+AvgBoZ7SZyXNFlYA5clIf9jyLH92KO8ZbcqvHN3uaWeaMHO5elmEJQ=
Received: by 10.142.226.2 with SMTP id y2mr191565wfg.1185743630545;
        Sun, 29 Jul 2007 14:13:50 -0700 (PDT)
Received: by 10.142.72.16 with HTTP; Sun, 29 Jul 2007 14:13:50 -0700 (PDT)
Message-ID: <17393e3e0707291413w3391bc7jc191cfd64abced8b@mail.gmail.com>
Date: Sun, 29 Jul 2007 17:13:50 -0400
From: "Matt Wozniski" <godlygeek@gmail.com>
To: linux_milano@yahoo.it, zsh-users@sunsite.dk
Subject: Re: checking link files - recursive search
In-Reply-To: <f8hok7$kol$1@sea.gmane.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <f8gnpp$b2f$1@sea.gmane.org>
	 <17393e3e0707281851g6e6e6f30y451fc31a031cfbaa@mail.gmail.com>
	 <f8hok7$kol$1@sea.gmane.org>

I'm assuming you meant for this response to go to the list, so I'm
replying there.

On 7/29/07, pol <linux_milano@yahoo.it> wrote:
> Matt Wozniski wrote:
>
> > On 7/28/07, pol <linux_milano@yahoo.it> wrote:
> > so, you should be able to just use
> > file=$(readlink -f "$file")
> > assuming you'd like to resolve links recursively, so that a link to a
> > link to a file resolves to the file and not the middle link.
>
> You are right, my script does not perform recursive search, as i would.
> Using readlink would be a solution.
> I am wondering whether Zsh can meet that request internally, without
> resorting to external programs

function resolve_recursive {
  (
    while :; do
      cd $1:h
      local file=$1:t
      file=$(stat -L +link $file)
      if [ -z "$file" ]; then
        echo $PWD/$1:t
        break
      fi
      argv[1]=$file
    done
  )
}

The cd's are the simplest way I could think of to handle symlinks
using relative paths to different directories.  The enclosing '(' and
')' make the entire function execute in a subshell, so that your
actual PWD isn't modified.  When it resolves the file completely, it
prints out the absolute path to it and exits.

~Matt

