From zsh-workers-request@math.gatech.edu Sun May 17 07:09:07 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 10756 invoked from network); 17 May 1998 07:09:03 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 17 May 1998 07:09:03 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.8.5/8.8.5) id DAA06398;
	Sun, 17 May 1998 03:03:50 -0400 (EDT)
Resent-Date: Sun, 17 May 1998 03:03:50 -0400 (EDT)
From: TGAPE! <tgape@cyberramp.net>
Message-Id: <199805170158.BAA05181@tgape.ed.vnet>
Subject: Re: Oh my God! They killed completion! YOU BASTARDS!
To: zefram@tao.co.uk (Andrew Main)
Date: Sun, 17 May 1998 01:58:43 +0000 (GMT)
Cc: schaefer@brasslantern.com, zsh-workers@math.gatech.edu
In-Reply-To: <199805071647.RAA13962@taos.demon.co.uk> from "Andrew Main" at May 7, 98 05:47:29 pm
X-Mailer: ELM [version 2.4 PL25]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"PAWnj.0.vZ1.MleNr"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/3980
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Andrew Main wrote:
> 
> Bart Schaefer wrote:
>> Maybe a better approach would be to distribute an autoloadable script
>> that, when run, would report the differences between the current zsh and
>> a specified previous version (default the last major release).
>
> That's what Etc/NEWS is for.  It needs to be updated for 3.1.

Documentation's great.  So, who in this group is a documentation
fanatic?  No one, I see.  That would explain why the documentation is so
friggin out of date.  Of course, the fact that the documentation is
actually spread out between so many files probably contributes to it; I
usually find that at least the manpages are current, which is a good
thing.  The others - I've learned to mostly ignore them, they too rarely
have the right information for the problems I look at them for.  This is
at least better than at work, where I find talking to the author is
frequently the only way to go, as the documentation was last updated in
'96, and the code last updated last month.  (Ok, exaggeration - month and
a half ago, and it was December '96.)

Etc/NEWS (or ChangeLog, or whatever) has the problem that it tends to be
longer than many people wish to read before starting to use the new
shell, as well as frequently being too terse (this isn't a
contradiction, rather a statement of human nature) to be of much use
anyway - they generally assume that the new program'll work the same as
their old version, except for bug fixes, until they play with the new
options.  This is a good thing, especially on machines which have
multiple users - when I upgrade zsh on my machine, *I* am the primary
person affected.  When one of my friends upgrades zsh on his machine,
there are dozens affected, many who aren't necessarily observant enough
to realize 'Hey, a shell upgrade occurred, and zefram's done an annoying
default option change on me on some option I'm completely unfamiliar
with because I immediately dismissed it as a bad idea.'  I've heard
there's someone at work who can do this to hundreds, and I've seen ISPs
where they could potentially do it to thousands.

I'd suggest rather than an emulate version, just a detect version, like
vim has - when vim changes significantly, anyone who is used to the old
version gets a comment about how their .vimrc file is for an older
version, and would they please read about the changes.  Anyone who
doesn't have a version tag in their configuration file is obviously
using an older version.  At work, I control the upgrades for vim, and
there are about half a dozen people who use it.  So far, I've never had
a complaint about unexpected changes due to an upgrade.

I personally wasn't affected by this one, as I happen to be paranoid -
my .zlogin file sets all options the way I want them; if the default is
what I want, I still set it that way.  Not everyone is as looney as
myself, however.  I personally use the feature Alan castigated as the
worst idea ever thought of, but then he'd probably be one of the first
people to mention I have little sense.  Still, I agree with him that it
shouldn't be default.  Just because it's useful doesn't mean that it
should be set as a trap to the unwary; most people who start using zsh
are used to other shells which don't do that.

(Btw, yes, I would find it more convenient if my compctl lines didn't
have to include every friggin completion.  Course, not trusting you
guys, I probably still wouldn't be lazy and remove the redundant ones.)

And, Alan, the emacs call was highly out of line - if they made this
change in emacs style, to use it, you'd have had to type
Esc-xcomplete-word-and-move-the-cursor-to-the-line-the-previous-prompt,
which of course can only be feasibly typed by pressing tab an
inordinante number of times, to distinguish it from complete-line,
complete-word-and-enter, complete-word-and-move-the-mouse-randomly,
complete-word-and-move-the-cursor-to-the-top-of-the-screen, and other
such blatherskite.  If they ever do try something like this to zsh I
will agree that they should be drawn, quartered, shot, flayed, salted,
filleted, burned at the stake, and beheaded (but otherwise treated with
respect, unlike Our Friend Bill).  I do feel that, considering what the
list of things to bind keys to, Kenny is in danger.  Hopefully, this is
a Christmas show...

--\Grimm, tgape@bigfoot.com
Ed|-----BEGIN GEEK CODE BLOCK-----
 A|Version: 3.1
lv|GS/CS/O/>AT PS+-->? PE++()>? Y+-->? PGP->- G++(-) t+--- s+:- c++++$ K
in|N(++) b++(++++) d+$(-) 5 O- !tv-- !E---$>? ULIBS(VUCX)+$(++++$)>++++$
 G|R(-)* V--$ a->970(?) w---($)>----!? W--()(-)>? P++-- C++$(---)(>?) >o
ri|X-->? y+-*>++++** M-$>? D++--- DI++++>$ e++* h+* r--%*>+++ L+++>++++$
mm|------END GEEK CODE BLOCK------

