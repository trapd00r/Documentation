From zsh-workers-return-6732-mason-zsh=primenet.com.au@sunsite.auc.dk Sun Jun 20 18:16:54 1999
Return-Path: <zsh-workers-return-6732-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 7011 invoked from network); 20 Jun 1999 18:16:52 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 20 Jun 1999 18:16:52 -0000
Received: (qmail 20866 invoked by alias); 20 Jun 1999 18:16:33 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 6732
Received: (qmail 20855 invoked from network); 20 Jun 1999 18:16:31 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <990620181627.ZM14728@candle.brasslantern.com>
Date: Sun, 20 Jun 1999 18:16:26 +0000
In-Reply-To: <9906201528.AA13442@ibmth.df.unipi.it>
Comments: In reply to Peter Stephenson <pws@ibmth.df.unipi.it>
        "pws-23" (Jun 20,  5:28pm)
References: <9906201528.AA13442@ibmth.df.unipi.it>
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-workers@sunsite.auc.dk (Zsh hackers list)
Subject: PATCH: Omissions (Re: pws-23)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

The first hunk of Sven's 6414 is missing.  This may be intentional, because
it fixes one bug by introducing another less-likely one, but the ChangeLog
says it should be there.

Index: Src/Zle/zle_tricky.c
===================================================================
@@ -735,7 +735,7 @@
 		*b != '=' && *b != Equals &&
 		*b != '~' && *b != Tilde)
 		break;
-	if (*b == '#' || *b == Pound || *b == '+')
+	if (*b == '#' || *b == Pound || *b == '+' || *b == ' ')
 	    b++;
 
 	e = b;

The documentation in compsys.yo from Sven's 6686 is also missing.

Index: Doc/Zsh/compsys.yo
===================================================================
@@ -474,6 +474,12 @@
 `tt(*)' will be inserted. If tt(match_original) has any other non-empty
 string as its value, this completer will first try to generate matches
 without, then with a `tt(*)' inserted at the cursor position.
+
+The generated matches will be offered in a menucompletion unless the
+tt(match_insert) configuration key is set to a string starting with
+`tt(unambig)'. In this case menucompletion will only be started if no
+unambiguous string could be generated that is at least as long as the
+original string.
 )
 item(tt(_expand))(
 This completer function does not really do completion, but instead
@@ -707,10 +713,13 @@
 `tt(-S)', `tt(-q)', `tt(-r)', and `tt(-R)' options from the
 tt(compadd) builtin.
 
-Finally, the tt(_path_files) function supports one configuration key:
-tt(path_expand). If this is set to any non-empty string, the partially
+Finally, the tt(_path_files) function supports two configuration keys.
+If tt(path_expand) is set to any non-empty string, the partially
 typed path from the line will be expanded as far as possible even if
-trailing pathname components can not be completed.
+trailing pathname components can not be completed. And if
+tt(path_cursor) is set to a non-empty string, the cursor will be left
+after the first ambiguous pathname component even when menucompletion
+is used.
 )
 item(tt(_parameters))(
 This should be used to complete parameter names if you need some of the

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

