From zsh-workers-request@math.gatech.edu Fri Jun 26 16:57:47 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 3408 invoked from network); 26 Jun 1998 16:57:46 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 26 Jun 1998 16:57:46 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.8.5/8.8.5) id MAA23157;
	Fri, 26 Jun 1998 12:53:21 -0400 (EDT)
Resent-Date: Fri, 26 Jun 1998 12:53:21 -0400 (EDT)
From: "Bart Schaefer" <schaefer@brasslantern.com>
Message-Id: <980626095421.ZM8207@candle.brasslantern.com>
Date: Fri, 26 Jun 1998 09:54:21 -0700
In-Reply-To: <9806261017.AA25564@ibmth.df.unipi.it>
Comments: In reply to Peter Stephenson <pws@ibmth.df.unipi.it>
        "PATCH: 3.1.4: flushing input properly" (Jun 26, 12:17pm)
References: <9806261017.AA25564@ibmth.df.unipi.it>
X-Mailer: Z-Mail (4.0b.820 20aug96)
To: Peter Stephenson <pws@ibmth.df.unipi.it>
Subject: Re: PATCH: 3.1.4: flushing input properly
Cc: zsh-workers@math.gatech.edu
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-Message-ID: <"lO72O1.0.mf5.18zar"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4173
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

On Jun 26, 12:17pm, Peter Stephenson wrote:
} Subject: PATCH: 3.1.4: flushing input properly
}
} Most of the patch is converting inerrflush() to herrflush().  In fact,
} inerrflush() is now only called from the signal handler, but I wanted
} to alter that as little as possible.  I hope nobody was particularly
} attached to discard_input().

This looks good.  Just one question ... why does discard_input() clear
and then set errflag, and why doesn't herrflush() need to do the same?

} A slightly different issue: it remains the case that the shell
} blithely ignores parse errors, executing any commands it comes across

Hrm.  That's particularly bad given that "zsh -ef" does the same thing.
It at least ought to give up when told to exit on error.

} You might well argue it
} ought to give up on the first error, as ksh does.  That needs careful
} handling, though, to distinguish between running scripts, running
} interactively, and sourcing a file.

I believe the reason it behaves as it does is for purposes of sourcing
a file, so that syntax errors in .zshrc et. al. don't cause the entire
init process to fail.  That's a nicety I'd rather not give up.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

