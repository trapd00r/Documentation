From zsh-users-return-6631-mason-zsh=primenet.com.au@sunsite.dk Sat Oct 04 02:56:07 2003
Return-Path: <zsh-users-return-6631-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2500 invoked from network); 4 Oct 2003 02:56:06 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 4 Oct 2003 02:56:06 -0000
Received: (qmail 16310 invoked by alias); 3 Oct 2003 16:22:16 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 6631
Received: (qmail 16300 invoked from network); 3 Oct 2003 16:22:15 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 3 Oct 2003 16:22:15 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [216.27.138.216] by sunsite.dk (MessageWall 1.0.8) with SMTP; 3 Oct 2003 16:22:15 -0000
Received: from home.acholado.net (localhost.localdomain [127.0.0.1])
	by home.acholado.net (8.12.8/8.12.8) with ESMTP id h93GMEWp031856
	for <zsh-users@sunsite.dk>; Fri, 3 Oct 2003 12:22:14 -0400
Received: (from ljz@localhost)
	by home.acholado.net (8.12.8/8.12.8/Submit) id h93GMD1h031854;
	Fri, 3 Oct 2003 12:22:13 -0400
X-Authentication-Warning: home.acholado.net: ljz set sender to ljz@asfast.com using -f
To: zsh-users@sunsite.dk
Subject: Re: Emulating 'locate'
References: <20031001221753.GA23189@DervishD>
	<1031002023639.ZM22046@candle.brasslantern.com>
	<20031002080358.GA23230@DervishD>
From: Lloyd Zusman <ljz@asfast.com>
Reply-To: ljz@asfast.com
Date: Fri, 03 Oct 2003 12:22:13 -0400
In-Reply-To: <20031002080358.GA23230@DervishD> (raul@pleyades.net's message
 of "Thu, 2 Oct 2003 10:03:58 +0200")
Message-ID: <m365j6watm.fsf@asfast.com>
User-Agent: Gnus/5.1003 (Gnus v5.10.3) Emacs/21.2 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: Lloyd Zusman <ljz@asfast.com>

DervishD <raul@pleyades.net> writes:

>     Hi Bart :)
>
>  * Bart Schaefer <schaefer@brasslantern.com> dixit:
>> [We should just go off and have our own little mailing list.]
>
>     Well... As I said a few weeks ago, I'm on the way of learning Zsh
> and sometimes I practice what is said in the manual doing things like
> these. Sometimes I have success, others I don't. I know, I make many
> questions, and maybe you are the only able to answer then, so don't
> feel guilty if you want to ignore most of them ;)))
>
> [ ... ]
>
>
>>     locate() { print -l /**/*${^*}*{,/**/*} }
>
>     Ok, it works like a charm... Thanks a lot, as always :)

I might have missed something about this in the first part of the thread
a couple weeks ago (those messages have already expired on my system),
but in case it wasn't mentioned before, I want to point out that this
function is _extremely_ slow in comparison to the standard 'locate'
command.  It traverses through every accessible item on every accessible
file system in order to check for a match.  On my server, it's literally
thousands of times slower than using the standard 'locate'.

I'm not sure how it compares to this:

  locate() { find / -name "*${^*}*" -print }

... but it's certainly has more or less the same order of magnitude
of slowness.

Figuring this out is a very good learning experience for zsh.  However,
I would not recommend installing this function for everyday use on a
reasonably sized system.


> [ ... ]

-- 
 Lloyd Zusman
 ljz@asfast.com

