From zsh-workers-request@math.gatech.edu Tue Nov 17 08:40:32 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 11230 invoked from network); 17 Nov 1998 08:40:30 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 17 Nov 1998 08:40:30 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.9.1/8.9.1) id DAA10505;
	Tue, 17 Nov 1998 03:39:15 -0500 (EST)
Resent-Date: Tue, 17 Nov 1998 03:39:15 -0500 (EST)
From: "Andrej Borsenkow" <borsenkow.msk@sni.de>
To: "ZSH workers mailing list" <zsh-workers@math.gatech.edu>
Subject: ZSH on 64 bit systems
Date: Tue, 17 Nov 1998 11:37:39 +0300
Message-ID: <000f01be1205$88d59df0$21c9ca95@mowp.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="Windows-1252"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook 8.5, Build 4.71.2377.0
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.0810.800
Resent-Message-ID: <"nODb_1.0.4a2.pOJKs"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4657
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

I plan update my server to new 64 bit version of OS, and am interested in
any experience with running ZSH on such sort of systems. Some background
information:

the system is ReliantUNIX 5.44 from SIEMENS (before Siemens Nixdorf). This
version has 64 bit kernel and provides three user execution environments

  32 bit
    this is fully compatible with previous versions; existing binaries will
run without recompilation.
    Virtual process memory is limited to 2GB; file system size is limited to
4GB; file size is
    limited to 2GB. It is not possible to access large files (over 2GB)

  64 on 32
    This is implementation of LFS model. Both explicit and mixed models are
supported. Virtual
     process memory is still limited to 2GB; file access is full 64 bit.
Special compiler flags are
     needed to enable either model. Most types have the same size as on 32
bit system;
     depending of LFS model either off_t is 64 bit, or off64_t &co should be
used instead

  true 64 bit
     In this model, process runs in true 64 bit environment; virtual memory
is almost unlimited :))
     full access to large files is provided. The size of most basic types
cheanges, notably

        sizeof(int) = 4
        sizeof(long) = 8
        sizeof(void *) = 8
        sizeof(off_t) = 8

The simplest way is to compile ZSH in true 64 bit mode. Unforunately, *any*
attempt to mix int and void * is doomed.

I gave it test-drive, and ZSH at least did run. But there was so much
warnings about possible truncation of large integer, that I am really
unsure.

regards

/andrej

