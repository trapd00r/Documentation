From zsh-workers-return-28929-mason-zsh=primenet.com.au@zsh.org Sun Mar 20 08:16:28 2011
Return-Path: <zsh-workers-return-28929-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 22349 invoked by alias); 20 Mar 2011 08:16:28 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28929
Received: (qmail 24468 invoked from network); 20 Mar 2011 08:16:15 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE,
	SPF_HELO_PASS autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at bewatermyfriend.org does not designate permitted sender hosts)
From: Frank Terbeck <ft@bewatermyfriend.org>
To: Johan =?utf-8?Q?Sundstr=C3=B6m?= <oyasumi@gmail.com>
Cc: Nikolai Weibull <now@bitwi.se>,  Zsh Workers <zsh-workers@zsh.org>
Subject: Submitting patches [was: Re: Updated _git completion (not attached)]
In-Reply-To: <AANLkTikORnKwpv7sysJk4Mo4uzEXhf4a939D9jBhJ1JH@mail.gmail.com>
	("Johan =?utf-8?Q?Sundstr=C3=B6m=22's?= message of "Sat, 19 Mar 2011
 19:24:20 -0700")
References: <AANLkTikuCtPdY1T_7vUBoHmeXWvth_V=V-Sbi-SJX4jj@mail.gmail.com>
	<AANLkTimxbgzGPx3i0rGmkU7QkeC2A9yj21w974MY+9H-@mail.gmail.com>
	<87ei6tex5r.fsf@ft.bewatermyfriend.org>
	<AANLkTikxHareFnnmsUy8Gu=HQY_2qGuY-owMBn+SEUrn@mail.gmail.com>
	<AANLkTim_nZMNsvpCzF1Ezg0O_6xcuC5gGHrJzB0+4_Mm@mail.gmail.com>
	<8739n3avrm.fsf@ft.bewatermyfriend.org>
	<AANLkTi=4T4tw7HkZfjexsPvRqejVF1tv0r_toA10ve+3@mail.gmail.com>
	<877hbwi2gt.fsf@ft.bewatermyfriend.org>
	<AANLkTikcR7JjF=xsusdq8xeioS=OaUsCCttPbshjGNXg@mail.gmail.com>
	<8739mki0uj.fsf@ft.bewatermyfriend.org>
	<AANLkTikORnKwpv7sysJk4Mo4uzEXhf4a939D9jBhJ1JH@mail.gmail.com>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/23.2 (gnu/linux)
Date: Sun, 20 Mar 2011 09:05:06 +0100
Message-ID: <8762rekyj1.fsf@ft.bewatermyfriend.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
X-Df-Sender: 430444

Johan Sundstr=C3=B6m wrote:
> On Fri, Mar 18, 2011 at 14:18, Frank Terbeck <ft@bewatermyfriend.org> wro=
te:
>> [Etc/zsh-development-guide]
>
> This document doesn't mention it yet, but I assume it's best to submit
> patches in the message body rather than as attachments? (Unless, I suppos=
e,
> they contain binary content.)

I think this is true (simply because it makes commenting patches
easier). But my answer on the matter is certainly not authoritative. I
thought I had seen similar comments on the list before; but I couldn't
find any in a quick search via
<http://www.zsh.org/cgi-bin/mla/wilma/workers>.

>> That being said, the output of "git format-patch" is usable,
>> too. Exchanging git's default "[PATCH]" by "PATCH: " would be extra
>> sugar.
>
> Running perl -pi -e 's/^(Subject: ).(PATCH[^]]*)./$1$2:/' *.patch on
> format-patch files fixes that (it seems command line options to git can't=
).
> Maybe a useful note for the dev guide?

The archive reacts to anything that starts with "PATCH". You can see the
results on <http://www.zsh.org/mla/patches.shtml>. So, your Perl snippet
would work. Even for numbered patches. The only thing I could think of
this could break is if there's a second line in the file that matches
your regular expression. Here is a zsh function which is using ed(1)
instead of Perl to achieve something similar. This is pretty much what
I've been using in the past.


function gsfix() {
    # zsh-workers prefers PATCH: as its prefix.
    #   fixes [PATCH] to PATCH:
    #     and [PATCH m/n] to PATCH: (m/n)

    if (( ${#argv} =3D=3D 0 )); then
        printf 'Usage: gsfix <FILE(s)>\n'
        return 1
    fi

    local file
    for file in "$@"; do
        if [[ ! -w "${file}" ]]; then
            printf 'Cannot write to file: %s. Skipping.\n' "${file}"
            continue
        fi
        (
            printf '/^Subject: \[\n'
            printf 's,\[PATCH \([0-9]\+/[0-9]\+\)\],PATCH: (\\1),\n'
            printf 'w\nq\n'
        ) | ed "${file}" > /dev/null 2>&1

        [ "$?" -eq 0 ] && continue

        (
            printf '/^Subject: \[\n'
            printf 's,\[PATCH\],PATCH:,\n'
            printf 'w\nq\n'
        ) | ed "${file}" > /dev/null 2>&1
    done

    return 0
}

I don't know if we should put either into the development guide as a
note, since git isn't zsh's official VCS. And if it were, we could
probably change the patch archive code to handle git's "[PATCH] "
prefix.

Regards, Frank

--=20
In protocol design, perfection has been reached not when there is
nothing left to add, but when there is nothing left to take away.
                                                  -- RFC 1925

