From zsh-workers-return-16943-mason-zsh=primenet.com.au@sunsite.dk Tue Apr 09 09:45:15 2002
Return-Path: <zsh-workers-return-16943-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 960 invoked from network); 9 Apr 2002 09:45:14 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 9 Apr 2002 09:45:14 -0000
Received: (qmail 19031 invoked by alias); 9 Apr 2002 09:44:59 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16943
Received: (qmail 18990 invoked from network); 9 Apr 2002 09:44:58 -0000
To: zsh-workers@sunsite.dk
Cc: ab@purdue.edu, bug-autoconf@gnu.org
Subject: Zsh 3 and ${1+"$@"} (Was: [GNU Autoconf 2.53] testsuite.log: 126 failures)
References: <200204081534.g38FYlY0058635@epicenter.eas.purdue.edu>
From: Akim Demaille <akim@epita.fr>
Date: 09 Apr 2002 11:45:11 +0200
In-Reply-To: <200204081534.g38FYlY0058635@epicenter.eas.purdue.edu>
Message-ID: <mv4pu19xl20.fsf@nostromo.lrde.epita.fr>
Lines: 162
User-Agent: Gnus/5.0808 (Gnus v5.8.8) XEmacs/21.4 (Common Lisp)
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="=-=-="
Sender: Akim Demaille <akim@lrde.epita.fr>

--=-=-=


Hi!

We (Autoconf) have a big problem with Zsh 3.0.8.  You know it is
shipped on Darwin as /bin/sh.  But this version does not understand
${1+"$@"} properly.  We use this instead of "$@" to work around a bug
which still exists today in many many constructors' /bin/sh, so we
can't departure from it.

But then, I have no choice than systematically rejecting /bin/sh if it
turns out to be zsh 3.  Unless there is some magic that can make
${1+"$@"} work properly?  Thanks!


--=-=-=
Content-Type: multipart/digest; boundary="==-=-="

--==-=-=
Content-Type: text/plain

Subject: Topics

Topics:
   Re: [GNU Autoconf 2.53] testsuite.log: 126 failures
   Re: [GNU Autoconf 2.53] testsuite.log: 126 failures 


--==-=-=

Date: 08 Apr 2002 10:22:44 +0200
From: Akim Demaille <akim@epita.fr>
To: Allen Braunsdorf <ab@eas.purdue.edu>
Cc: bug-autoconf@gnu.org, ab@purdue.edu
Subject: Re: [GNU Autoconf 2.53] testsuite.log: 126 failures
Message-ID: <mv4lmby38h7.fsf@nostromo.lrde.epita.fr>
References: <34421.1018025952@epicenter.eas.purdue.edu>
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="====-=-="

--====-=-=


| [ I've got an attachment, so I had to send this a little differently. -ab ]
| > Oh, I forgot to ask...  Please, not only should you run ./testsuite 3,
| 
| Attached testsuite.log.
| 
| > but also the same as before:
| >
| > | >         cd testsuite.dir/003
| > | >         PATH=../..:$PATH autoconf -d -v -f -t 'TRACE1:
| > | >         Hello world!'
| 
| This gives: 
| 
| |ARG: {--include}
| |ARG: {/Users/ab/Desktop/autoconf-2.53/lib}
| |ARG: {-d}
| |ARG: {-v}
| |ARG: {-f}
| |ARG: {-t}
| |ARG: {TRACE1:}
| |ARG: {Hello}
| |ARG: {world!}

It's already broken at this point!

Grrr.  What the heck is happening with your system :(

Please, try to run this shell-script:


--====-=-=
Content-Type: text/x-sh
Content-Disposition: attachment; filename=args.sh

#! /bin/sh

set dummy 'arg1' 'arg 2' 'arg
3'

echo "1."
for i in "$@"
do
  echo "{$i}"
done

echo "2."
for i in ${1+"$@"}
do
  echo "{$i}"
done

set ${1+"$@"}

echo "3."
for i in "$@"
do
  echo "{$i}"
done

--====-=-=


Just run it with your /bin/sh (which should be zsh).  Thanks!

--====-=-=--

--==-=-=

Date: Mon, 08 Apr 2002 10:34:47 -0500
From: A Braunsdorf <ab@eas.purdue.edu>
To: Akim Demaille <akim@epita.fr>
cc: Allen Braunsdorf <ab@purdue.edu>, bug-autoconf@gnu.org
Subject: Re: [GNU Autoconf 2.53] testsuite.log: 126 failures 
Message-Id: <200204081534.g38FYlY0058635@epicenter.eas.purdue.edu>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii


In message <mv4lmby38h7.fsf@nostromo.lrde.epita.fr>, Akim Demaille writes:
> 
> It's already broken at this point!
> 
> Grrr.  What the heck is happening with your system :(

This (z)sh is weird, I'm telling you.

> Please, try to run this shell-script:

OK, here's the result from /bin/sh (zsh 3.0.8)

	1.
	{dummy}
	{arg1}
	{arg 2}
	{arg
	3}
	2.
	{dummy}
	{arg1}
	{arg}
	{2}
	{arg}
	{3}
	3.
	{dummy}
	{arg1}
	{arg}
	{2}
	{arg}
	{3}

The newer zsh (4.0.4) and bash both give:

	1.
	{dummy}
	{arg1}
	{arg 2}
	{arg
	3}
	2.
	{dummy}
	{arg1}
	{arg 2}
	{arg
	3}
	3.
	{dummy}
	{arg1}
	{arg 2}
	{arg
	3}

ab



--==-=-=--

--=-=-=--

