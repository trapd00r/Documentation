From zsh-workers-request@math.gatech.edu Sat Apr 18 11:07:21 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16228 invoked from network); 18 Apr 1998 11:07:19 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 18 Apr 1998 11:07:19 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.8.5/8.8.5) id GAA09647;
	Sat, 18 Apr 1998 06:53:43 -0400 (EDT)
Resent-Date: Sat, 18 Apr 1998 06:53:33 -0400 (EDT)
Date: Sat, 18 Apr 1998 12:53:25 +0200 (MET DST)
From: Jonas Bofjall <job@abc.se>
X-Sender: m9418@atle
To: tep@colltech.com
cc: zsh-users@math.gatech.edu
Subject: Perl and ZSH
In-Reply-To: <199804180044.TAA19945@psasolar.psa.pencom.com>
Message-ID: <Pine.GSO.3.93.980418124955.8290C-100000@atle>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Resent-Message-ID: <"dtXju1.0.8M2.iO8Er"@math>
Resent-From: zsh-users@math.gatech.edu
X-Mailing-List: <zsh-users@math.gatech.edu> archive/latest/1467
X-Loop: zsh-users@math.gatech.edu
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

On Fri, 17 Apr 1998 tep@colltech.com wrote:

> I've actually been tinkering with the idea of embedding a Perl
> interpreter inside ZSH but I got stumped when it came time to

zsh is good because it keeps the executables size within bounds even
while having all these features. But Perl is *complex*... Wouldn't it
be time to modularize zsh some? And I don't mean autoloading of shell
script functions but of compiled code.

  // Jonas <job@abc.se> [2:201/262.37]

