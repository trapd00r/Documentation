From zsh-users-return-6064-mason-zsh=primenet.com.au@sunsite.dk Fri May 02 15:56:55 2003
Return-Path: <zsh-users-return-6064-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 14044 invoked from network); 2 May 2003 15:56:53 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 2 May 2003 15:56:53 -0000
Received: (qmail 755 invoked by alias); 2 May 2003 15:56:35 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 6064
Received: (qmail 747 invoked from network); 2 May 2003 15:56:35 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 2 May 2003 15:56:35 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [62.189.183.235] by sunsite.dk (MessageWall 1.0.8) with SMTP; 2 May 2003 15:56:35 -0000
Received: from exchange01.csr.com (unverified) by 
 (Content Technologies SMTPRS 4.2.1) with ESMTP id <T61f63f260fc0a88d0151c@> for <zsh-users@sunsite.dk>;
 Fri, 2 May 2003 17:06:01 +0100
Received: from csr.com (tinky-winky.csr.com [192.168.144.127]) by exchange01.csr.com with SMTP (Microsoft Exchange Internet Mail Service Version 5.5.2650.21)
	id JWCPX7N3; Fri, 2 May 2003 16:54:46 +0100
To: zsh-users@sunsite.dk
Subject: Re: Word splitting in parameter expansion 
In-reply-to: "=?iso-8859-1?Q?Bj=F6rn_Lindstr=F6m?="'s message of "Fri, 02 May 2003 17:45:56 +0200."
             <20030502154556.GA29562@lucien.dreaming> 
Date: Fri, 02 May 2003 16:56:32 +0100
Message-ID: <10178.1051890992@csr.com>
From: Peter Stephenson <pws@csr.com>

=?iso-8859-1?Q?Bj=F6rn_Lindstr=F6m?= wrote:
> I've got this in my .zshrc:
> 
>     man() {
>         screen -h 0 -t "man $@" man $@
>     }
> 
> This works fine as long as I only supply the function with one argument,
> such as "man access", but when I do "man 5 access", it interprets
> "5 access" as one argument (even though that is not what I meant ;-).

I don't think it's doing quite what you say (although you don't see what
options you have set), but I agree it won't do what you expect...

If the arguments are `5' and `access' I would expect the words to be
divided as:

screen
-h
0
-t
man 5
access
man
5
access

(which is certainly what I get with my option settings).  The problem is
that the argument to -t is being divided into two parts.  To prevent that
you need:

man() {
    screen -h 0 -t "man $*" man $@
}

Actually, that last argument could be $* as well; if you want to
maintain zero-length arguments it needs to be "$@".

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR Ltd., Science Park, Milton Road,
Cambridge, CB4 0WH, UK                          Tel: +44 (0)1223 692070


**********************************************************************
The information transmitted is intended only for the person or
entity to which it is addressed and may contain confidential 
and/or privileged material. 
Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by 
persons or entities other than the intended recipient is 
prohibited.  
If you received this in error, please contact the sender and 
delete the material from any computer.
**********************************************************************

