From zsh-workers-request@math.gatech.edu  Wed Jun  7 05:01:49 1995
Received: from gatech.edu (gatech.edu [130.207.244.244]) by werple.mira.net.au (8.6.12/8.6.9) with SMTP id FAA26448 for <mason@werple.mira.net.au>; Wed, 7 Jun 1995 05:01:46 +1000
Received: from math (math.skiles.gatech.edu) by gatech.edu with SMTP id AA29678
  (5.65c/Gatech-10.0-IDA for <mason@werple.mira.net.au>); Tue, 6 Jun 1995 14:57:30 -0400
Received: by math (5.x/SMI-SVR4)
	id AA26437; Tue, 6 Jun 1995 14:55:38 -0400
Resent-Date: Tue, 06 Jun 1995 14:54:17 -0400
Old-Return-Path: <coleman@math.gatech.edu>
Message-Id: <9506061854.AA07004@redwood.skiles.gatech.edu>
X-Mailer: exmh version 1.5.3 12/28/94
To: zsh-workers@math.gatech.edu
Subject: Re: numeric brace expansion 
In-Reply-To: Your message of "Tue, 06 Jun 1995 10:42:14 BST."
             <24898.9506060942@pyro.swan.ac.uk> 
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Date: Tue, 06 Jun 1995 14:54:17 -0400
From: Richard Coleman <coleman@math.gatech.edu>
Resent-Message-Id: <"J9Z_t1.0._S6.fIArl"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/79
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

> You should be able to fix this just by altering prototypes.h and
> compat.c to add a `const' to the first argument of strtol(), which is
> what gcc is worried about: it doesn't really care if the const is
> there or not, but if it is in one prototype it needs to be there in
> any other.  I think the following is the ANSI/ISO prototype anyway,
> but it looks like the zsh code avoids using `const' in prototypes
> probably to avoid breaking older compilers.  Does ansi2knr not handle
> const's?  We could always do the
> 
> #ifdef __STDC__
> #define CONST const
> #else
> #define CONST
> #endif

I already have configure (autoconf) set to check whether a
system's compiler supports const.  If a system doesn't support
const, then config.h will define const to empty.

So using const in the zsh code shouldn't cause any portability
problems.  It might be useful to add const some of the string
handling functions in zsh.

Richard Coleman
zsh@math.gatech.edu

