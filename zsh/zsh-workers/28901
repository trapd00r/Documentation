From zsh-workers-return-28901-mason-zsh=primenet.com.au@zsh.org Thu Mar 17 17:58:14 2011
Return-Path: <zsh-workers-return-28901-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1994 invoked by alias); 17 Mar 2011 17:58:14 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28901
Received: (qmail 6648 invoked from network); 17 Mar 2011 17:58:11 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE,
	SPF_HELO_PASS autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at bewatermyfriend.org does not designate permitted sender hosts)
From: Frank Terbeck <ft@bewatermyfriend.org>
To: Bart Schaefer <schaefer@brasslantern.com>
Cc: zsh-workers@zsh.org
Subject: Re: PATCH: edit-command-line: disable `monitor' option locally
In-Reply-To: <110317082534.ZM26573@torch.brasslantern.com> (Bart Schaefer's
	message of "Thu, 17 Mar 2011 08:25:34 -0700")
References: <1300306570-24592-1-git-send-email-ft@bewatermyfriend.org>
	<110316210401.ZM25580@torch.brasslantern.com>
	<87tyf2hxe6.fsf@ft.bewatermyfriend.org>
	<110317082534.ZM26573@torch.brasslantern.com>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/23.2 (gnu/linux)
Date: Thu, 17 Mar 2011 18:56:02 +0100
Message-ID: <87pqppiqbx.fsf@ft.bewatermyfriend.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Df-Sender: 430444

Bart Schaefer wrote:
> On Mar 17, 11:08am, Frank Terbeck wrote:
[...]
> } Um. How do you end up with a backgrounded editor with this patch?
> } Shouldn't it be impossible to background the editor if `monitor' is
> } unset? I can't seem to get that to happen on my linux-based laptop.
[...]
> Now here's how it differs with your patch applied:
>
> torch% echo otherthing
>
> torch% echo otherthing
> otherthing
> torch% jobs
> [1]  + suspended  
> torch% 
>
> I.e. the only thing that changed was whether I got notified about the
> job being suspended.  Vim still handled the ^Z and stopped itself.
> But bad things happen if I try to bring it back into the foreground
> because zsh doesn't send CONT to the correct process group (I think
> is what's going on, but I can't be sure).

Huh. That's quite bad. :-/

> } In any case, I think the widget should protect the user from losing the
> } command line. And disallowing the editor from backgrounding should do
> } that (and in fact does for me).
>
> I agree but don't think twaddling no_monitor is sufficient.  If you
> remove no_monitor but add xtrace to the setopts in edit-command-line,
> what do you see after you hit ^Z in vim?  I get this:
>
> ----
> torch% echo foo+edit-command-line:2> local 'tmpfile=/tmp/zshecl26567'
> +edit-command-line:3> print -R - 'echo foo'
> +edit-command-line:5> vi /tmp/zshecl26567
>
>
> zsh: suspended  
> torch% echo foo+edit-command-line:6> print -Rz - 'echo foo'
> +edit-command-line:7> rm -f /tmp/zshecl26567
> +edit-command-line:8> zle send-break
>
> torch% echo foo
> ----
>
> I suspect that in your case the entire edit-command-line function is
> stopped, so rm -f / zle send-break never happens until after you bring
> it into the foreground again, but I don't know why it differs for me.

Here it is:
[snip]
% zsh -f
zsh% cat t
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey $'\ee' edit-command-line
zsh% source ./t
zsh% echo foobar+edit-command-line:11> local 'tmpfile=/tmp/zshecl16683'
+edit-command-line:13> print -R - 'echo foobar'
+edit-command-line:15> vim /tmp/zshecl16683
zsh: suspended  

zsh% fg
[1]  + continued  
+edit-command-line:16> print -Rz - 'echo foobar'
+edit-command-line:18> rm -f /tmp/zshecl16683
+edit-command-line:19> zle send-break
edit-command-line:zle:19: widgets can only be called when ZLE is active
[snap]


-- 
In protocol design, perfection has been reached not when there is
nothing left to add, but when there is nothing left to take away.
                                                  -- RFC 1925

