From zsh-workers-request@math.gatech.edu Tue Aug 18 18:18:27 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 5672 invoked from network); 18 Aug 1998 18:18:25 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 18 Aug 1998 18:18:25 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.9.1/8.9.1) id OAA16734;
	Tue, 18 Aug 1998 14:10:21 -0400 (EDT)
Resent-Date: Tue, 18 Aug 1998 14:10:21 -0400 (EDT)
Mail-Copies-To: steve@xemacs.org
To: zsh-workers@math.gatech.edu
Subject: zsh 3.0/3.1 bug, zsh 3.1.4 regression
X-Face: (:YAD@JS'&Kz'M}n7eX7gEvPR6U1mJ-kt;asEc2qAv;h{Yw7ckz<7+X_SYeTNAaPui:e~x$
 ,A=gkt*>UPL/}\a/#C~v2%ETiAY_sx;xve0yL??JWTtX_-NUzXyP38UdW#cmN1\4(X!c3m#%IbtB-3
 Z-!xpZi!`E.s{(;aP=b11"!3wQu]1j@^V|;n=B|{l<bZV1.AI`zWV%kPCnUhcgEe\(}/_kNd6,*3ZJ
 Q3o<YQ3^u;7jS=:p0--u3msQO
X-Attribution: sb
From: SL Baur <steve@xemacs.org>
Mime-Version: 1.0 (generated by tm-edit 7.108)
Content-Type: multipart/mixed;
 boundary="Multipart_Tue_Aug_18_11:19:25_1998-1"
Content-Transfer-Encoding: 7bit
Date: 18 Aug 1998 11:19:25 -0700
Message-ID: <m2r9yecfv6.fsf@altair.xemacs.org>
Lines: 123
X-Mailer: Gnus v5.6.37/XEmacs 21.0 - "Erzgeberg"
Resent-Message-ID: <"iPatJ2.0.P54.DESsr"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4319
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

--Multipart_Tue_Aug_18_11:19:25_1998-1
Content-Type: text/plain; charset=US-ASCII

The following problem, which exists in zsh 3.0.4 and 3.1.3 and 3.1.4
causes the cvs-1.10 regression tests to fail when /bin/sh is symlinked 
to zsh.  [this is from test `devcom3-5'.]

$ cat <<EOF
Enew    line    here
G@#$^!@#=&
EOF
Enew    line    here
G@#0@#=&

Bash produces the expected output:
Enew    line    here
G@#$^!@#=&


zsh 3.1.4 can be killed immediately:

$ Src/zsh -c "export LANG"
zsh: 23068 segmentation fault (core dumped)  Src/zsh -c export LANG

It appears Zoltan Hidvegi's patch of May 17 didn't get applied.




--Multipart_Tue_Aug_18_11:19:25_1998-1
Content-Type: message/rfc822

X-From-Line: hzoli@cs.elte.hu  Sun May 17 23:56:08 1998
Return-Path: <hzoli@cs.elte.hu>
Received: from gwyn.tux.org (gwyn.tux.org [207.96.122.8])
	by altair.xemacs.org (8.8.8/8.8.8) with ESMTP id XAA22628
	for <steve@altair.xemacs.org>; Sun, 17 May 1998 23:56:07 -0700
Received: from hzoli.home (hzoli@usr32-dialup6.mix1.Sacramento.mci.net [166.55.10.198])
	by gwyn.tux.org (8.8.8/8.8.8) with ESMTP id CAA00062
	for <steve@xemacs.org>; Mon, 18 May 1998 02:53:39 -0400
Received: (from hzoli@localhost)
	by hzoli.home (8.8.5/8.8.5) id BAA15526;
	Mon, 18 May 1998 01:53:34 -0500
From: Zoltan Hidvegi <hzoli@cs.elte.hu>
Message-Id: <199805180653.BAA15526@hzoli.home>
Subject: Re: Another zsh 3.1 bug -- localization?
In-Reply-To: <m2yaw3x555.fsf@altair.xemacs.org> from SL Baur at "May 15, 98 02:19:50 am"
To: steve@xemacs.org (SL Baur)
Date: Mon, 18 May 1998 01:53:33 -0500 (CDT)
Cc: zsh-workers@math.gatech.edu
X-Mailer: ELM [version 2.4ME+ PL31 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Xref: altair.xemacs.org zsh-mail:15
Lines: 64

SL Baur wrote:
> I've tested this now on zsh 3.1.2 and zsh 3.1.3 Linux libc5 and GNU
> libc.  It does not occur in zsh 3.0.4 or zsh 3.0.5.  It reproduces
> reliably for me in a new zsh-3.1.3 (without the `unset CDPATH'
> bugfix).  The machine I'm running on is localizable to the extent that
> `LANG=ja' is able to programs that need Japanese input and display
> Japanese output.
> 
> $ Src/zsh
> $ LC_ALL=C; export LC_ALL; LANC=C; export LANG; date
> zsh: 30841 segmentation fault (core dumped)  Src/zsh

A simple export LANG is enough for the coredump.  Any unset special
parameter will do, but LANG is unset by default.  The patch below fixes
this, but it introduces a slightly inconsistent behavior.  export LANG
will not set LANG, but if it is set later, it will be exported.  This is
similar to ksh, but inconsistent with zsh, which creates the parameter
with empty value when export used on a previously unset parameter.

An alternative fix would change the big if statement near line 1557,
which is now

if ((pm = (Param)paramtab->getnode(paramtab, asg->name)) &&
    (((pm->flags & PM_SPECIAL) && pm->level == locallevel) ||
     (!(pm->flags & PM_UNSET) &&
      ((locallevel == pm->level) || func == BIN_EXPORT) &&
      !(bit = ((off & pm->flags) | (on & ~pm->flags)) & PM_INTEGER))))

If the condition is changed to always be false when pm->flags & PM_UNSET
and createparam is changed to reset the unset flag and return the
parameter, it would probably work, and that's how it works in 3.0.5.
This has been changed since 3.0.5 by patch 3048 from Zefram which allowd
local parameters to hide special parameters.  I do not completely
understand this, but someone hopefully knows better.

Note that in the patch below addenv is not called when asg->value is
non-null (i.e. when a value is given in the typeset/export statement),
because in this case the later setsparm call does the addenv.

Zoltan


*** Src/builtin.c.orig	Fri May  8 01:24:52 1998
--- Src/builtin.c	Mon May 18 01:37:59 1998
*************** bin_typeset(char *name, char **argv, cha
*** 1585,1592 ****
  		pm->ct = auxlen;
  	    if (PM_TYPE(pm->flags) != PM_ARRAY) {
  		if (pm->flags & PM_EXPORTED) {
! 		    if (!pm->env)
! 			pm->env = addenv(asg->name, (asg->value) ? asg->value : getsparam(asg->name));
  		} else if (pm->env) {
  		    delenv(pm->env);
  		    zsfree(pm->env);
--- 1585,1592 ----
  		pm->ct = auxlen;
  	    if (PM_TYPE(pm->flags) != PM_ARRAY) {
  		if (pm->flags & PM_EXPORTED) {
! 		    if (!(pm->flags & PM_UNSET) && !pm->env && !asg->value)
! 			pm->env = addenv(asg->name, getsparam(asg->name));
  		} else if (pm->env) {
  		    delenv(pm->env);
  		    zsfree(pm->env);


--Multipart_Tue_Aug_18_11:19:25_1998-1--

