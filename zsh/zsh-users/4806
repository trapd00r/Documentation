From zsh-users-return-4806-mason-zsh=primenet.com.au@sunsite.dk Wed Apr 03 15:54:53 2002
Return-Path: <zsh-users-return-4806-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20236 invoked from network); 3 Apr 2002 15:54:53 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 3 Apr 2002 15:54:53 -0000
Received: (qmail 13496 invoked by alias); 3 Apr 2002 15:54:33 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 4806
Received: (qmail 13483 invoked from network); 3 Apr 2002 15:54:32 -0000
X-Authentication-Warning: hetfield.morphium.org: arno set sender to john@io.com using -f
Date: Wed, 3 Apr 2002 09:56:22 -0600
From: John Buttery <john@io.com>
To: zsh-users@sunsite.dk
Subject: Re: zsh's answer to the bash completion fm project
Message-ID: <20020403155622.GA13834@io.com>
Mail-Followup-To: zsh-users@sunsite.dk
References: <20020403110500.GA13869@io.com> <20020403122431.GD22084@picard.franken.de> <20020403145840.GB13145@io.com> <15531.6999.630742.919771@wischnow.berkom.de>
Mime-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha1;
	protocol="application/pgp-signature"; boundary="bg08WKrSYDhXBjb5"
Content-Disposition: inline
In-Reply-To: <15531.6999.630742.919771@wischnow.berkom.de>
User-Agent: Mutt/1.3.27i
X-Files: The Truth is Out There
X-Message-Flag: Outlook/Eudora users: This is an email with a standards-compliant crypto signature.  Blame Microsoft/Qualcomm if they mangle it.
X-PGP-Keyid: not-done-yet
X-PGP-Fingerprint: not-done-yet


--bg08WKrSYDhXBjb5
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

* Sven Wischnowsky <wischnow@berkom.de> [2002-04- 3 17:10:15 +0200]:
> If you have the time to start a project so that we get even more
> completion functions or improvements for completion functions as
> input, we'd all be glad and you'll almost certainly get any support
> from the -workers list we can give.=20

  Sure, I don't mind being the central point for this.  Let me get a
starting file together; I'll start with some of the recipes I've picked
up from the web (both compctl and zstyle) and we can go from there.

> I'm not quite sure how support for zstyle would look like, though,
> because that's so user-dependent, but a list of things people can just
> copy and paste into their init files might already be of great value,
> I think.

  Well, this is how I envision it; and of course any improvement up to
and including a complete rewrite is welcome since, like I said, I'm a
newbie.  :)  Basically, I'm starting this project with motivation but
not necessarily a huge amount of knowledge on the subject.  But what a
great way to learn, huh?

> And as for compctl: I don't plan to give it any support anymore and
> don't care if others do. There is still that file with several
> compctls in the distribution as a starting point.

  That's the way I figured it: put the compctl recipes in there when
there isn't a zstyle equivalent (meaning, nobody's bothered to convert
it yet).  These are the questions I'd like to ask the group to give me
the basis for getting started:

  1) I'd like to encourage people to write any new submissions with
zstyle but take both, and initialize both completion systems so they can
all be used.  Is this possible and/or is there a compelling reason not
to do it this way?

 2) What are anybody's thoughts on the performance differences between
having everything in one file, or having one "master" file with no
actual content, but that just initializes the two completion systems and
sources other files for the actual recipes...does it make a difference?

 3) Would somebody mind writing a little code block that checks if each
completion system has already been initialized, and initializes it if
not?  Separate logic for each would be cool.

 4) What should the interpreter line for these files be?  In other
words, what's the most common path for zsh (mine is in /bin, but I've
seen it in /usr/bin and /usr/local/bin also), and what (if any)
command-line options should be used (such as -f, or the equivalent of
bash's -norc/-noprofile)?

  5) Should we zcompile the files?  I'm assuming yes, but just thought
I'd ask in case there are caveats.  Does it matter if the version of zsh
that zcompiles a file is different from the one that runs it?  If so, we
should just ship with instructions on how to zcompile that the users can
follow.

  6) Opinions on which of the startup files we should recommend people
call our setup from?  Before or after they initialize their own
completion recipes (in theory the user's should override ours)?

--=20
john@io.com

--bg08WKrSYDhXBjb5
Content-Type: application/pgp-signature
Content-Disposition: inline

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.6 (GNU/Linux)
Comment: For info see http://www.gnupg.org

iD8DBQE8qyYmWH8M1wI2iFcRAtrXAJ97r1Yk8QSfRAyWk4g6ogUGstSrSQCaAqiH
5nA4QNTrv9fxcFHld3ZrtcU=
=er5E
-----END PGP SIGNATURE-----

--bg08WKrSYDhXBjb5--

