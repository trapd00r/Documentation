From zsh-workers-return-13266-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Dec 13 19:14:28 2000
Return-Path: <zsh-workers-return-13266-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1969 invoked from network); 13 Dec 2000 19:14:27 -0000
Received: from sunsite.dk (HELO sunsite.auc.dk) (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 13 Dec 2000 19:14:27 -0000
Received: (qmail 25507 invoked by alias); 13 Dec 2000 19:14:20 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 13266
Received: (qmail 25500 invoked from network); 13 Dec 2000 19:14:18 -0000
To: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Cc: zsh-workers@sunsite.auc.dk
Subject: Re: :r modifier
References: <mvbzoi1shkr.fsf@phobos.lrde.epita.fr>
	<1001213041501.ZM11124@candle.brasslantern.com>
	<mvb8zpkpj5s.fsf@phobos.lrde.epita.fr>
	<1001213172105.ZM12198@candle.brasslantern.com>
From: Alexandre Duret-Lutz <duret_g@lrde.epita.fr>
X-Home-Page: http://www.epita.fr/~duret_g/
X-Attribution: adl
Organization: LRDE/EPITA  http://www.lrde.epita.fr/
Date: 13 Dec 2000 20:21:17 +0100
In-Reply-To: "Bart Schaefer"'s message of "Wed, 13 Dec 2000 17:21:05 +0000"
Message-ID: <mvbofyg6sb6.fsf@phobos.lrde.epita.fr>
Lines: 43
User-Agent: Gnus/5.0807 (Gnus v5.8.7) Emacs/20.7
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: Alexandre Duret-Lutz <adl@epita.fr>

>>> "Bart" == Bart Schaefer <schaefer@candle.brasslantern.com> writes:

[...]

 Bart> You're assuming that :r is used exclusively on unix
 Bart> file-paths and should employ unix file-path semantics,

Right, I'm shortsighted (didn't think at all about the 
non-unix world -- does it *really* exist? :o)).

 Bart> but parameter values are just strings.

But these modifers are somewhat useless on strings which are not
filenames, aren't they?  :h and :t are documented to works on
`pathnames'; my wish is to document :e and :r as working on
`filename extesions'.

 Bart> Suppose we change it to pay attention to slashes.  Does
 Bart> that mean that on cygwin it should also pay attention to
 Bart> backslashes?

I'd say yes: stick to the filename definition used on the host
whenever possible. (Here I'm feeling that I ask too much!)

 Bart> :Do we need to teach :h/:t about the leading-double-slash
 Bart> convention for some networked file systems?

I don't know, I never seen such file systems.  But I'm already 
confused by the current behiavor of :h on repeated slashes:

  % x=abc///def
  % echo $x:h
  abc//
  % echo $x:h:h
  abc/

(My dream is that repeated slashes would be treated as a single
slash; but I'm probably again assuming filesystem specific convention)

[...]

-- 
Alexandre Duret-Lutz

