From zsh-users-return-15565-mason-zsh=primenet.com.au@zsh.org Mon Nov 22 19:03:09 2010
Return-Path: <zsh-users-return-15565-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1679 invoked by alias); 22 Nov 2010 19:03:09 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15565
Received: (qmail 7886 invoked from network); 22 Nov 2010 19:02:59 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.3.1
Received-SPF: pass (ns1.primenet.com.au: SPF record at benizi.com designates 64.130.10.15 as permitted sender)
Date: Mon, 22 Nov 2010 14:02:30 -0500 (EST)
From: "Benjamin R. Haskell" <zsh@benizi.com>
To: Peter Stephenson <Peter.Stephenson@csr.com>
cc: Zsh Users <zsh-users@zsh.org>
Subject: Re: Equivalent of Vim's has("feature")?
In-Reply-To: <20101122173206.31daca15@pwslap01u.europe.root.pri>
Message-ID: <alpine.LNX.2.01.1011221338470.2792@hp>
References: <alpine.LNX.2.01.1011221149110.2792@hp> <20101122173206.31daca15@pwslap01u.europe.root.pri>
User-Agent: Alpine 2.01 (LNX 1266 2009-07-14)
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; format=flowed; charset=US-ASCII

On Mon, 22 Nov 2010, Peter Stephenson wrote:

> On Mon, 22 Nov 2010 12:12:51 -0500 (EST) "Benjamin R. Haskell" wrote:
>> For commands and widgets I've found the following to work well:
>>
>> (( $+commands[screen] )) && # do something with screen
>>
>> (( $+widgets[history-incremental-pattern-search-backward] )) \
>> && bindkey "^R" history-incremental-pattern-search-backward
>>
>> But, 1) I can't seem to rediscover the documentation for those 
>> arrays,
>
> Look at the documentation for the zsh/parameter module in zshmodules.

Thanks.  Didn't realize these weren't standard (for some value of 
"standard").


>> and 2) Is there such an array for things that are more inbuilt?  In 
>> particular, I'm looking for a test that the ':A' history modifier 
>> exists.
>
> If you haven't recorded the version when it first appeared so you can 
> use the is-at-least function, which is the usual way (as long as you 
> do it as soon as the feature appears it's painless),

Is there any support for ZSH_PATCHLEVEL in is-at-least?  :a and :A were 
added in ZSH_VERSION=4.3.10(-dev-1?) ZSH_PATCHLEVEL=1.4618.


> you have to attempt to make use of the feature and record the result.
>
> integer history_A
> ( : ${PATH:A} ) 2>/dev/null  &&  history_A=1

Both of these seem slippery-slopy.  (Easy for one feature, but 
increasingly annoying as more tests are needed.  Also, if a given 
feature takes non-trivial time to test.).  Nonetheless, I guess I don't 
have some easy-peasy way to add the feature detection to the case 
statement in Src/hist.c and a new parameter in Src/Modules/parameter.c 
(<-- note to self in the unlikely even I get back to this), so I'll 
retreat with:

( : ${${:-/}:A} ) 2>/dev/null && has_A=true
...
(( $+has_A )) && # use it

which works fine for this case.

-- 
Thanks,
Ben

