From zsh-workers-return-28309-mason-zsh=primenet.com.au@zsh.org Sat Oct 02 19:43:32 2010
Return-Path: <zsh-workers-return-28309-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 14178 invoked by alias); 2 Oct 2010 19:43:32 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28309
Received: (qmail 29686 invoked from network); 2 Oct 2010 19:43:25 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.3.1
Received-SPF: pass (ns1.primenet.com.au: SPF record at ntlworld.com designates 81.103.221.58 as permitted sender)
Date: Sat, 2 Oct 2010 19:41:11 +0100
From: Peter Stephenson <p.w.stephenson@ntlworld.com>
To: zsh workers <zsh-workers@zsh.org>
Subject: Re: Infinite loop in dopadding() with doublewidth chars, probably
 since (mm)
Message-ID: <20101002194111.2a76ca95@pws-pc>
In-Reply-To: <AANLkTikohC-rVB5Cif2HrdoQjbkSwkksEOeRATdDW4LZ@mail.gmail.com>
References: <AANLkTikohC-rVB5Cif2HrdoQjbkSwkksEOeRATdDW4LZ@mail.gmail.com>
X-Mailer: Claws Mail 3.7.6 (GTK+ 2.20.1; x86_64-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-Cloudmark-Analysis: v=1.1 cv=3ENABmdyEd/Fm7fR7+mZIuMDn6+IErAeEhlfWBImZFk= c=1 sm=0 a=ZfcLphNJ4AEA:10 a=4YI7mmuYAqcA:10 a=IkcTkHD0fZMA:10 a=pGLkceISAAAA:8 a=NLZqzBF-AAAA:8 a=lhxvLAN0wETjUh1nvwYA:9 a=vwQliKYFhckpprDu8ZIA:7 a=Nt8TjWb783RWS5F-wPwxQCn9Hk4A:4 a=QEXdDO2ut3YA:10 a=MSl-tDqOz04A:10 a=_dQi-Dcv4p4A:10 a=HpAAvcLHHh0Zw7uRqdWCyQ==:117

On Wed, 29 Sep 2010 00:51:58 +0200
Mikael Magnusson <mikachu@gmail.com> wrote:
> Trying to pad a string to a width with a double-width character that
> can't be done results in an infinite loop, where old versions just
> left it one character too narrow. For example:
> echo ${(ml:10::=E3=81=BE:):-hello}

I suppose we just have to stop when there's nothing left.

Index: Src/subst.c
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
RCS file: /cvsroot/zsh/zsh/Src/subst.c,v
retrieving revision 1.106
diff -p -u -r1.106 subst.c
--- Src/subst.c	11 Jun 2010 20:08:03 -0000	1.106
+++ Src/subst.c	2 Oct 2010 18:38:42 -0000
@@ -802,12 +802,17 @@ dopadding(char *str, int prenum, int pos
 		f =3D -f;
 		MB_METACHARINIT();
 		while (f > 0) {
-		    str +=3D MB_METACHARLENCONV(str, &cchar);
+		    cl =3D MB_METACHARLENCONV(str, &cchar);
+		    if (!cl)
+			break;
+		    str +=3D cl;
 		    f -=3D WCPADWIDTH(cchar, multi_width);
 		}
 		/* Now finish the first half. */
 		for (c =3D prenum; c > 0; ) {
 		    cl =3D MB_METACHARLENCONV(str, &cchar);
+		    if (!cl)
+			break;
 		    while (cl--)
 			*r++ =3D *str++;
 		    c -=3D WCPADWIDTH(cchar, multi_width);
@@ -823,7 +828,10 @@ dopadding(char *str, int prenum, int pos
 			f =3D lpreone - f;
 			/* So skip. */
 			for (t =3D preone; f > 0; ) {
-			    t +=3D MB_METACHARLENCONV(t, &cchar);
+			    cl =3D MB_METACHARLENCONV(t, &cchar);
+			    if (!cl)
+				break;
+			    t +=3D cl;
 			    f -=3D WCPADWIDTH(cchar, multi_width);
 			}
 			/* Then copy the entire remainder. */
@@ -841,7 +849,10 @@ dopadding(char *str, int prenum, int pos
 			    /* Skip this much. */
 			    m =3D lpremul - m;
 			    for (t =3D premul; m > 0; ) {
-				t +=3D MB_METACHARLENCONV(t, &cchar);
+				cl =3D MB_METACHARLENCONV(t, &cchar);
+				if (!cl)
+				    break;
+				t +=3D cl;
 				m -=3D WCPADWIDTH(cchar, multi_width);
 			    }
 			    /* Output the rest. */
@@ -853,6 +864,8 @@ dopadding(char *str, int prenum, int pos
 			    MB_METACHARINIT();
 			    for (c =3D lpremul, t =3D premul; c > 0; ) {
 				cl =3D MB_METACHARLENCONV(t, &cchar);
+				if (!cl)
+				    break;
 				while (cl--)
 				    *r++ =3D *t++;
 				c -=3D WCPADWIDTH(cchar, multi_width);
@@ -868,6 +881,8 @@ dopadding(char *str, int prenum, int pos
 		/* Output the first half width of the original string. */
 		for (c =3D ls2; c > 0; ) {
 		    cl =3D MB_METACHARLENCONV(str, &cchar);
+		    if (!cl)
+			break;
 		    c -=3D WCPADWIDTH(cchar, multi_width);
 		    while (cl--)
 			*r++ =3D *str++;
@@ -882,6 +897,8 @@ dopadding(char *str, int prenum, int pos
 		MB_METACHARINIT();
 		for (c =3D postnum; c > 0; ) {
 		    cl =3D MB_METACHARLENCONV(str, &cchar);
+		    if (!cl)
+			break;
 		    c -=3D WCPADWIDTH(cchar, multi_width);
 		    while (cl--)
 			*r++ =3D *str++;
@@ -895,6 +912,8 @@ dopadding(char *str, int prenum, int pos
 			/* Can't fit unrepeated string, truncate it */
 			for (c =3D f; c > 0; ) {
 			    cl =3D MB_METACHARLENCONV(postone, &cchar);
+			    if (!cl)
+				break;
 			    c -=3D WCPADWIDTH(cchar, multi_width);
 			    while (cl--)
 				*r++ =3D *postone++;
@@ -918,6 +937,8 @@ dopadding(char *str, int prenum, int pos
 			    MB_METACHARINIT();
 			    while (m > 0) {
 				cl =3D MB_METACHARLENCONV(postmul, &cchar);
+				if (!cl)
+				    break;
 				m -=3D WCPADWIDTH(cchar, multi_width);
 				while (cl--)
 				    *r++ =3D *postmul++;
@@ -941,12 +962,17 @@ dopadding(char *str, int prenum, int pos
 		f =3D -f;
 		MB_METACHARINIT();
 		while (f > 0) {
-		    str +=3D MB_METACHARLENCONV(str, &cchar);
+		    cl =3D MB_METACHARLENCONV(str, &cchar);
+		    if (!cl)
+			break;
+		    str +=3D cl;
 		    f -=3D WCPADWIDTH(cchar, multi_width);
 		}
 		/* Copy the rest of the original string */
 		for (c =3D prenum; c > 0; ) {
 		    cl =3D MB_METACHARLENCONV(str, &cchar);
+		    if (!cl)
+			break;
 		    while (cl--)
 			*r++ =3D *str++;
 		    c -=3D WCPADWIDTH(cchar, multi_width);
@@ -969,7 +995,10 @@ dopadding(char *str, int prenum, int pos
 			f =3D lpreone - f;
 			MB_METACHARINIT();
 			for (t =3D preone; f > 0; ) {
-			    t +=3D MB_METACHARLENCONV(t, &cchar);
+			    cl =3D MB_METACHARLENCONV(t, &cchar);
+			    if (!cl)
+				break;
+			    t +=3D cl;
 			    f -=3D WCPADWIDTH(cchar, multi_width);
 			}
 			/* Copy the rest of preone */
@@ -993,12 +1022,17 @@ dopadding(char *str, int prenum, int pos
 			    m =3D lpremul - m;
 			    MB_METACHARINIT();
 			    for (t =3D premul; m > 0; ) {
-				t +=3D MB_METACHARLENCONV(t, &cchar);
+				cl =3D MB_METACHARLENCONV(t, &cchar);
+				if (!cl)
+				    break;
+				t +=3D cl;
 				m -=3D WCPADWIDTH(cchar, multi_width);
 			    }
 			    /* Now the rest of the repeated string. */
 			    while (c > 0) {
 				cl =3D MB_METACHARLENCONV(t, &cchar);
+				if (!cl)
+				    break;
 				while (cl--)
 				    *r++ =3D *t++;
 				c -=3D WCPADWIDTH(cchar, multi_width);
@@ -1011,6 +1045,8 @@ dopadding(char *str, int prenum, int pos
 			    MB_METACHARINIT();
 			    for (c =3D lpremul, t =3D premul; c > 0; ) {
 				cl =3D MB_METACHARLENCONV(t, &cchar);
+				if (!cl)
+				    break;
 				while (cl--)
 				    *r++ =3D *t++;
 				c -=3D WCPADWIDTH(cchar, multi_width);
@@ -1049,6 +1085,8 @@ dopadding(char *str, int prenum, int pos
 	     */
 	    for (c =3D postnum; c > 0; ) {
 		cl =3D MB_METACHARLENCONV(str, &cchar);
+		if (!cl)
+		    break;
 		while (cl--)
 		    *r++ =3D *str++;
 		c -=3D WCPADWIDTH(cchar, multi_width);
@@ -1061,6 +1099,8 @@ dopadding(char *str, int prenum, int pos
 	     */
 	    for (c =3D ls; *str; ) {
 		cl =3D MB_METACHARLENCONV(str, &cchar);
+		if (!cl)
+		    break;
 		while (cl--)
 		    *r++ =3D *str++;
 		c -=3D WCPADWIDTH(cchar, multi_width);
@@ -1074,6 +1114,8 @@ dopadding(char *str, int prenum, int pos
 		     */
 		    for (c =3D f; c > 0; ) {
 			cl =3D MB_METACHARLENCONV(postone, &cchar);
+			if (!cl)
+			    break;
 			while (cl--)
 			    *r++ =3D *postone++;
 			c -=3D WCPADWIDTH(cchar, multi_width);
@@ -1085,6 +1127,8 @@ dopadding(char *str, int prenum, int pos
 		    /* Copy the entire unrepeated string */
 		    for (c =3D lpostone; *postone; ) {
 			cl =3D MB_METACHARLENCONV(postone, &cchar);
+			if (!cl)
+			    break;
 			while (cl--)
 			    *r++ =3D *postone++;
 			c -=3D WCPADWIDTH(cchar, multi_width);
@@ -1096,6 +1140,8 @@ dopadding(char *str, int prenum, int pos
 			MB_METACHARINIT();
 			for (c =3D lpostmul, t =3D postmul; *t; ) {
 			    cl =3D MB_METACHARLENCONV(t, &cchar);
+			    if (!cl)
+				break;
 			    while (cl--)
 				*r++ =3D *t++;
 			    c -=3D WCPADWIDTH(cchar, multi_width);
@@ -1109,6 +1155,8 @@ dopadding(char *str, int prenum, int pos
 			MB_METACHARINIT();
 			while (m > 0) {
 			    cl =3D MB_METACHARLENCONV(postmul, &cchar);
+			    if (!cl)
+				break;
 			    while (cl--)
 				*r++ =3D *postmul++;
 			    m -=3D WCPADWIDTH(cchar, multi_width);

--=20
Peter Stephenson <p.w.stephenson@ntlworld.com>
Web page now at http://homepage.ntlworld.com/p.w.stephenson/

