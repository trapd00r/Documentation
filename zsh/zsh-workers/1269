From carlos@riglos.fisica.ufpr.br Thu Jun  6 06:17:39 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by melb.werple.net.au (8.7.5/8.7.3/2) with ESMTP id GAA07585 for <mason@werple.mira.net.au>; Thu, 6 Jun 1996 06:17:37 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id PAA04913; Wed, 5 Jun 1996 15:56:08 -0400 (EDT)
Resent-Date: Wed, 5 Jun 1996 15:56:08 -0400 (EDT)
Message-Id: <m0uROfi-000031C@riglos.fisica.ufpr.br>
Date: Wed, 5 Jun 96 16:55 EST
From: Carlos Carvalho <carlos@riglos.fisica.ufpr.br>
To: zsh-workers@math.gatech.edu
Subject: another compatibility problem with sh
Resent-Message-ID: <"3bMqe.0.hC1.OPUjn"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/1269
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu
Content-Length: 941
Status: OR

What's the relation between path and PATH when zsh is invoked as sh?
The following script breaks under zsh:

#! /bin/sh

SUPPORTED_FILTERS="\
	gs \
	dvips \
	MakeTeXPK \
	a2ps \
	ras2ps \
	"

FILTERS_FOUND=achei

if [ -f $FILTERS_FOUND ]; then
	: > $FILTERS_FOUND
fi

SEARCHPATH=`echo $PATH | sed -e "s/:/\ /g"`

for filter in $SUPPORTED_FILTERS
do
echo filter=$filter
	FILTER=`echo $filter | tr 'a-z' 'A-Z'`
echo FILTER=$FILTER
	for path in $SEARCHPATH
	do
		if [ -f $path/$filter ]
		then
			set HAVE_$FILTER="True" \
				&& echo "found filter $filter" \
				&& echo "HAVE_$FILTER=True" >> $FILTERS_FOUND
		fi
	done
done

The output is:

filter=gs
FILTER=GS
found filter gs
filter=dvips
./blah: command not found: tr [22]
FILTER=
found filter dvips
filter=MakeTeXPK
./blah: command not found: tr [22]
FILTER=

etc.

The problem is in the for variable "path". Changing it to something
else solves the problem. Is there a bug here?

Carlos


