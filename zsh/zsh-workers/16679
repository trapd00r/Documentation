From zsh-workers-return-16679-mason-zsh=primenet.com.au@sunsite.dk Wed Feb 20 23:06:46 2002
Return-Path: <zsh-workers-return-16679-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 22718 invoked from network); 20 Feb 2002 23:06:46 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 20 Feb 2002 23:06:46 -0000
Received: (qmail 16302 invoked by alias); 20 Feb 2002 23:06:40 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16679
Received: (qmail 16290 invoked from network); 20 Feb 2002 23:06:39 -0000
Date: Wed, 20 Feb 2002 15:14:37 -0800
From: John Beppu <beppu@ax9.org>
To: zsh-workers <zsh-workers@sunsite.auc.dk>
Subject: Re: completion differences between shells writeup
Message-ID: <20020220151437.A14484@Ax9.org>
References: <20020219065214.53796.qmail@web10406.mail.yahoo.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20020219065214.53796.qmail@web10406.mail.yahoo.com>
User-Agent: Mutt/1.3.22i

[  date  ] 2002/02/18 | Monday | 10:52 PM
[ author ] Felix Rosencrantz <f_rosencrantz@yahoo.com> 

> Considering
> all the functionality that zsh has now, it might be useful to have a shell
> completion comparison list.  It could easily cover a large number of features
> (fakes, arguments, descriptions, debugging, customization, pre-written
> functions, matching control, tags, ....)
 
<tangent>
    I wrote a piece titled "Making the Transition to    # scheduled for the
    Zsh" for my column in Linux Magazine, and it's a    # May 2002 issue
    real light introduction to zsh written w/ bash
    users in mind.  The first thing I tell them is to
    do is put:

        autoload -U compinit
        compinit

    in their .zshrc, and then I go on to give examples
    of some of the completions that come standard with
    zsh.  (That's usually enough make people really
    curious.)  Aside from completions, I also
    introduce setopt and some of the prepackaged
    prompts.  I figured that w/ a basic understanding
    of those 3 topics, people would be able to quickly
    get up to speed.

    After I wrote it, I sent it out to some of my friends,
    and I got most of them to switch, and those who
    didn't switch right away expressed strong interest
    in switching in the near future.   ...so zsh does
    a good job of standing on its own merits -- it's
    just a matter of educating people about what zsh
    is capable of AND (most importantly) that it's
    surprisingly easy to get a powerful configuration
    going.  If people knew this, there'd be a lot more
    zsh users out there.

    I think it's just a matter of writing a short
    guide to porting your bash configuration to zsh
    and then harnessing the Slashdot Effect.  ;-)
</tangent>


Would you believe I've been using zsh for less than a
month?  I love it, though, and I plan on writing a few
more pieces on zsh, too.  I'd really like to learn how
to create my own program-specific completions, but
before I do that, I think I'd probably have to provide
a short overview of some of zsh's scripting abilities
(that aren't found in /bin/sh).

Any references would be greatly appreciated.


PS: I'd like to try zftp out, but I have no idea how 
    enable it.  Yes, I've RTFM'd, and I've concluded
    that I didn't compile the zftp module when I built
    zsh, but when I run ./configure --help, there's no
    --enable-zftp option, so I'm kinda lost...  help.

-- 
package wuv'apqvjgt;($_=join('',(*PgtnHcemgt))) # print map "beppu\@$_\n", qw(
=~ s/([HaP])(?!e)/ \U>$1/g;s/^.|:| (?=A)|>//g;y # cpan.org  lbox.org  binq.org
/c-z/a-u/;print"J$_\n";#$^%$^X@.^ <!-- japh --> # oss.lineo.com codepoet.org);

