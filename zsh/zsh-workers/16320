From zsh-workers-return-16320-mason-zsh=primenet.com.au@sunsite.dk Tue Dec 11 15:24:26 2001
Return-Path: <zsh-workers-return-16320-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 5595 invoked from network); 11 Dec 2001 15:24:25 -0000
Received: from ns2.primenet.com.au (HELO primenet.com.au) (?4gAfybS59FMTc6J6DmbXieuakYN4PaM/?@203.24.36.3)
  by ns1.primenet.com.au with SMTP; 11 Dec 2001 15:24:25 -0000
Received: (qmail 2962 invoked from network); 11 Dec 2001 15:24:23 -0000
Received: from sunsite.dk (130.225.247.90)
  by proxy.melb.primenet.com.au with SMTP; 11 Dec 2001 15:24:23 -0000
Received: (qmail 213 invoked by alias); 11 Dec 2001 15:24:18 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16320
Received: (qmail 201 invoked from network); 11 Dec 2001 15:24:17 -0000
Message-ID: <20011211152415.85017.qmail@web9303.mail.yahoo.com>
Date: Tue, 11 Dec 2001 15:24:15 +0000 (GMT)
From: =?iso-8859-1?q?Oliver=20Kiddle?= <okiddle@yahoo.co.uk>
Subject: PATCH: _file_systems & Re: zstyle for _arguments feature request
To: zsh-workers@sunsite.dk
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="0-993079402-1008084255=:82499"
Content-Transfer-Encoding: 8bit

--0-993079402-1008084255=:82499
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Content-Disposition: inline

Sven wrote:

> Felix wrote:
> > I think that would be ok.  Though it would also be nice to remove
> > some|all entries from the list being provided to the user.  Also,
> > it would be nice to provide help text for items.  I don't think
> > that can be currently done with the fake-* styles.
> 
> Erm, the ignored-matches style?

You mean ignored-patterns right?

> About the general fake style: I'm not sure where the compadd for it
> could be put. Probably in _setup or _description (where we have all
> the information about groups and so on), but there might be cases
> where the matches are then added more than once or into a group which
> isn't really used for matches (if the user doesn't give  near enogh
> context). Doing it with help texts further complicates this, of
> course. Especially if we want to have nice consistent listings
> because only the completion function decides if the normal matches
> get descriptions. We would just have to try it, I think.

I suggest we just try something and see how it goes. Locating it in
_description might work, assuming that the tag is in the context when
the style is looked up. It might be a bit strange where more than one
compadd is used to add matches.

> > I find that I want to use code
> > from the "state" actions of existing completion functions a lot.
> > It's not possible.
> 
> I've recommended that several times, although mostly because it makes
> writing functions easier (the main functions, using _arguments).

Yes, it is a good recommendation.

Patch to factor out a new _file_systems is below. The old _mount wasn't
even completing after umount -t so I'll apply this to 4.0 too.

> > >We should be careful how we document this. It should be a way of
> > >tweaking available completions to fake extra matches and should
not
> > >be a substitute for writing functions.
> > 
> > This is the sort of feedback I was interested in.  Though, it's not
> > clear to me why a completion function is better. 
> 
> My personal reason would be that I'd want to not fall into the
> compctl- trap again.

I'd agree with that reason.

> Yes, leaving the work for the users that have to set the styles (and
> if we are talking about those things I thik we are talking about,
> then there wouldn't be any defaults we could use for the styles). It
> might make sense to write some generic completer using lots of styles
> so that people have a way to `easily' create completions of their
> own, but I doubt it would be much easier than writing a little
> function, especially if the completion has to do anything useful. And
> how would that completer differ from _generic? Maybe we could just
> improve that one...

I'm not sure I like that much. We'd just end up with a style syntax for
_generic growing into a compctl like thing. And, we'd find ourself
having to graft much of this syntax onto every function.

Another method that might make things a little easier for user's unsure
about writing whole functions would be to allow simple one line
completions to be defined thusly:

compdef '_files -g "*.c"' lcc
compdef 'compadd one two three' count

It might be generally useful to allow arguments in the values of
_comps anyway.

Oliver

__________________________________________________
Do You Yahoo!?
Everything you'll ever need on one web page
from News and Sport to Email and Music Charts
http://uk.my.yahoo.com
--0-993079402-1008084255=:82499
Content-Type: application/x-unknown; name="fs.dif"
Content-Transfer-Encoding: base64
Content-Description: fs.dif
Content-Disposition: attachment; filename="fs.dif"

SW5kZXg6IENvbXBsZXRpb24vVW5peC9Db21tYW5kL19maW5kCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnNyb290L3pzaC96c2gvQ29t
cGxldGlvbi9Vbml4L0NvbW1hbmQvX2ZpbmQsdgpyZXRyaWV2aW5nIHJldmlz
aW9uIDEuMQpkaWZmIC11IC1yMS4xIF9maW5kCi0tLSBDb21wbGV0aW9uL1Vu
aXgvQ29tbWFuZC9fZmluZAkyMDAxLzA0LzAyIDExOjQ5OjQ2CTEuMQorKysg
Q29tcGxldGlvbi9Vbml4L0NvbW1hbmQvX2ZpbmQJMjAwMS8xMi8xMSAxNDox
MjozMgpAQCAtMjMsNyArMjMsNyBAQAogICAnKi11c2VkOmFjY2VzcyBhZnRl
ciBpbm9kZSBjaGFuZ2UgKGRheXMpOicgXAogICAnKi1lbXB0eScgXAogICAn
Ki1mYWxzZScgXAotICAnKi1mc3R5cGU6ZmlsZXN5c3RlbSB0eXBlOih1ZnMg
NC4yIDQuMyBuZnMgdG1wIG1mcyBTNTFLIFM1MkspJyBcCisgICcqLWZzdHlw
ZTpmaWxlIHN5c3RlbSB0eXBlOl9maWxlX3N5c3RlbXMnIFwKICAgJyotZ2lk
Om51bWVyaWMgZ3JvdXAgSUQ6JyBcCiAgICcqLWdyb3VwOmdyb3VwOl9ncm91
cHMnIFwKICAgJyotdWlkOm51bWVyaWMgdXNlciBJRDonIFwKSW5kZXg6IENv
bXBsZXRpb24vVW5peC9Db21tYW5kL19tb3VudAo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09ClJDUyBmaWxlOiAvY3Zzcm9vdC96c2gvenNoL0NvbXBsZXRpb24v
VW5peC9Db21tYW5kL19tb3VudCx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4x
MgpkaWZmIC11IC1yMS4xMiBfbW91bnQKLS0tIENvbXBsZXRpb24vVW5peC9D
b21tYW5kL19tb3VudAkyMDAxLzEwLzE0IDE3OjE4OjMyCTEuMTIKKysrIENv
bXBsZXRpb24vVW5peC9Db21tYW5kL19tb3VudAkyMDAxLzEyLzExIDE0OjEy
OjMyCkBAIC00OSw3ICs0OSw3IEBACiAjIGFyZ3VtZW50cyBmb3IgdGhlIGBt
b3VudCcgY29tbWFuZCBmb3IgZGlmZmVyZW50IG9wZXJhdGluZyBzeXN0ZW1z
CiAjIGFyZSBiZWxvdyB0aGVzZSB0YWJsZS4KIAotbG9jYWwgY3VyY29udGV4
dD0iJGN1cmNvbnRleHQiIHN0YXRlIGxpbmUgcmV0PTEKK2xvY2FsIGN1cmNv
bnRleHQ9IiRjdXJjb250ZXh0IiBzdGF0ZSBsaW5lIHN1ZiByZXQ9MQogbG9j
YWwgYXJncyBmc3MgZGVmZnM9aXNvOTY2MCBkZXNjciB0bXAgdHlwZW9wcz0t
dCBfbmZzX2FjY2VzcyBfbmZzX3VmcwogCiB0eXBlc2V0IC1BIG9wdF9hcmdz
CkBAIC00OTksMTIgKzQ5OSwxMSBAQAogaWYgW1sgIiRzZXJ2aWNlIiA9IG1v
dW50IF1dOyB0aGVuCiAKICAgIyBIZXJlIGFyZSB0aGUgdGVzdHMgYW5kIHRh
YmxlcyBmb3IgdGhlIGFyZ3VtZW50cyBhbmQgb3B0aW9ucyBmb3IKLSAgIyB0
aGUgYG1vdW50JyBwcm9ncmFtLiBUaGUgYGZzcycgYXJyYXkgaGFzIHRvIGJl
IHNldCB0byB0aGUgbmFtZXMKLSAgIyBvZiB0aGUgZmlsZSBzeXN0ZW0gdHlw
ZXMgdW5kZXJzdG9vZCBvbiB0aGlzIHN5c3RlbS4KLSAgIyBUaGlzIHNob3Vs
ZCBhbHNvIHNldCB0aGUgYGRlZmZzJyBwYXJhbWV0ZXIgaWYgdGhlIGRlZmF1
bHQgZmlsZQotICAjIHN5c3RlbSB0eXBlIGlzIG5vdCBgaXNvOTY2MCcgKGl0
IHNob3VsZCBiZSBzZXQgdG8gdGhlIG5hbWUgb2YKLSAgIyB0aGUgZGVmYXVs
dCBmaWxlIHN5c3RlbSB0eXBlKSwgYW5kIHNldCAndHlwZW9wcycgdG8gdGhl
IG1vdW50IAotICAjIG9wdGlvbiBmb3IgZmlsZSBzeXN0ZW0gdHlwZSBzZWxl
Y3Rpb24gd2hlbiBpdCBpcyBub3QgJy10Jy4KKyAgIyB0aGUgYG1vdW50JyBw
cm9ncmFtLiBUaGlzIHNob3VsZCBzZXQgdGhlIGBkZWZmcycgcGFyYW1ldGVy
IGlmCisgICMgdGhlIGRlZmF1bHQgZmlsZSBzeXN0ZW0gdHlwZSBpcyBub3Qg
YGlzbzk2NjAnIChpdCBzaG91bGQgYmUgc2V0CisgICMgdG8gdGhlIG5hbWUg
b2YgdGhlIGRlZmF1bHQgZmlsZSBzeXN0ZW0gdHlwZSksIGFuZCBzZXQgJ3R5
cGVvcHMnCisgICMgdG8gdGhlIG1vdW50ICBvcHRpb24gZm9yIGZpbGUgc3lz
dGVtIHR5cGUgc2VsZWN0aW9uIHdoZW4gaXQgaXMKKyAgIyBub3QgJy10Jy4K
IAogICBjYXNlICIkT1NUWVBFIiBpbgogICBhaXgqKQpAQCAtNTE0LDEzICs1
MTMsMTIgQEAKICAgICAgICctbltyZW1vdGUgbm9kZV06cmVtb3RlIG5vZGU6
X2hvc3RzJwogICAgICAgJy1wW21vdW50IGFzIHJlbW92YWJsZSBmaWxlIHN5
c3RlbV0nCiAgICAgICAnLXJbbW91bnQgcmVhZC1vbmx5XScKLSAgICAgICct
dFtzcGVjaWZ5IGZpbGUgc3lzdGVtIHR5cGVdOmZpbGUgc3lzdGVtIHR5cGU6
LT5mc3R5cGUnCisgICAgICAnLXRbc3BlY2lmeSBmaWxlIHN5c3RlbSB0eXBl
XTpmaWxlIHN5c3RlbSB0eXBlOl9maWxlX3N5c3RlbXMnCiAgICAgICAnLW9b
c3BlY2lmeSBmaWxlIHN5c3RlbSBvcHRpb25zXTpmaWxlIHN5c3RlbSBvcHRp
b246LT5mc29wdCcKICAgICAgICctdltmaWxlc3lzdGVtIGRlZmluZWQgYnkg
L2V0Yy92ZnNdOlZmc05hbWUnCiAgICAgICAnOmRldiBvciBkaXI6LT5kZXZv
cmRpcicKICAgICAgICc6bW91bnQgcG9pbnQ6X2ZpbGVzIC0vJwogICAgICkK
LSAgICBmc3M9KCBqZnMgbmZzIGNkcmZzICkKICAgICBkZWZmcz1qZnMKICAg
ICA7OwogICBpcml4KikKQEAgLTUzNCw3ICs1MzIsNyBAQAogICAgICAgJy1v
W3NwZWNpZnkgZmlsZSBzeXN0ZW0gb3B0aW9uc106ZmlsZSBzeXN0ZW0gb3B0
aW9uOi0+ZnNvcHQnCiAgICAgICAnLXBbcHJpbnQgbGlzdCBvZiBtb3VudGVk
IGZpbGVzeXN0ZW1zIGluIGZvcm1hdCBzdWl0YWJsZSBmb3IgL2V0Yy9mc3Rh
Yl0nCiAgICAgICAnLXJbbW91bnQgcmVhZC1vbmx5XScKLSAgICAgICctdFtz
cGVjaWZ5IGZpbGUgc3lzdGVtIHR5cGVdOmZpbGUgc3lzdGVtIHR5cGU6LT5m
c3R5cGUnCisgICAgICAnLXRbc3BlY2lmeSBmaWxlIHN5c3RlbSB0eXBlXTpm
aWxlIHN5c3RlbSB0eXBlOl9maWxlX3N5c3RlbXMnCiAgICAgICAnLXZbdmVy
Ym9zZV0nCiAgICAgICAnLU1bdXNlIGFsdGVybmF0ZSBtdGFiXTphbHRlcm5h
dGUgbXRhYjpfZmlsZXMnCiAgICAgICAnLVBbd2l0aCAtcCwgcHJlcGVuZCBw
cmVmaXggdG8gcGF0aHNdOnByZWZpeCcKQEAgLTU1NCwxOCArNTUyLDExIEBA
CiAgICAgICAnLXNbdG9sZXJhdGUgc2xvcHB5IG1vdW50IG9wdGlvbnNdJwog
ICAgICAgJy1yW21vdW50IHJlYWQtb25seV0nCiAgICAgICAnLXdbbW91bnQg
cmVhZC93cml0ZV0nCi0gICAgICAnLXRbc3BlY2lmeSBmaWxlIHN5c3RlbSB0
eXBlXTpmaWxlIHN5c3RlbSB0eXBlOi0+ZnN0eXBlJworICAgICAgJy10W3Nw
ZWNpZnkgZmlsZSBzeXN0ZW0gdHlwZV06ZmlsZSBzeXN0ZW0gdHlwZTotPmZz
bGlzdCcKICAgICAgICctb1tzcGVjaWZ5IGZpbGUgc3lzdGVtIG9wdGlvbnNd
OmZpbGUgc3lzdGVtIG9wdGlvbjotPmZzb3B0JwogICAgICAgJzpkZXYgb3Ig
ZGlyOi0+ZGV2b3JkaXInCiAgICAgICAnOm1vdW50IHBvaW50Ol9maWxlcyAt
LycKICAgICApCi0gICAgdHlwZXNldCAtYVUgZnNzCi0gICAgZnNzPSggYWRm
cyBiZnMgY3JhbWZzIGV4dDIgZXh0MyBoZnMgaHBmcyBpc285NjYwIG1pbml4
IG50ZnMgcW54NAotICAgICAgICAgIHJlaXNlcmZzIHJvbWZzIHN3YXAgdWRm
IHVmcyB2eGZzIHhmcyB4aWFmcyApCi0gICAgW1sgLXIgL3Byb2MvZmlsZXN5
c3RlbXMgXV0gJiYKLSAgICAgICAgZnNzPSggJGZzcyAkeyQoPC9wcm9jL2Zp
bGVzeXN0ZW1zKSNub2Rldn0gKQotICAgIFtbIC1yIC9ldGMvZmlsZXN5c3Rl
bXMgXV0gJiYKLSAgICAgICAgZnNzPSggJGZzcyAkeyQoPC9ldGMvZmlsZXN5
c3RlbXMpI25vZGV2fSApCiAgICAgOzsKICAgb3NmKikKICAgICBhcmdzPSgg
LXMKQEAgLTU3NCw3ICs1NjUsNyBAQAogICAgICAgJy1lW2xpc3QgYWxsIG1v
dW50IHBvaW50c10nCiAgICAgICAnLWZbZmFrZSBtb3VudF0nCiAgICAgICAn
LWxbZGlzcGxheSB2YWx1ZXMgb2YgYWxsIGZpbGUgc3lzdGVtIG9wdGlvbnNd
JwotICAgICAgJy10W3NwZWNpZnkgZmlsZSBzeXN0ZW0gdHlwZV06ZmlsZSBz
eXN0ZW0gdHlwZTotPmZzdHlwZScKKyAgICAgICctdFtzcGVjaWZ5IGZpbGUg
c3lzdGVtIHR5cGVdOmZpbGUgc3lzdGVtIHR5cGU6X2ZpbGVfc3lzdGVtcycK
ICAgICAgICctb1tzcGVjaWZ5IGZpbGUgc3lzdGVtIG9wdGlvbnNdOmZpbGUg
c3lzdGVtIG9wdGlvbjotPmZzb3B0JwogICAgICAgJy11W3JlbW91bnQgZmls
ZSBzeXN0ZW1dJwogICAgICAgJy1yW21vdW50IHJlYWQtb25seV0nCkBAIC01
ODMsMTMgKzU3NCwxMiBAQAogICAgICAgJzpkZXYgb3IgZGlyOi0+ZGV2b3Jk
aXInCiAgICAgICAnOm1vdW50IHBvaW50Ol9maWxlcyAtLycKICAgICApCi0g
ICAgZnNzPSggYWR2ZnMgdWZzIG5mcyBtZnMgY2RmcyApCiAgICAgZGVmZnM9
Y2RmcwogICAgIDs7CiAgIHNvbGFyaXMqKQogICAgIGFyZ3M9KCAtcwogICAg
ICAgJygtcCAtdiktYVttb3VudCBhbGwgZmlsZXN5c3RlbXMgaW4gZnN0YWJd
JwotICAgICAgJygtcCAtdiktRltzcGVjaWZ5IGZpbGUgc3lzdGVtIHR5cGVd
OmZpbGUgc3lzdGVtIHR5cGU6LT5mc3R5cGUnCisgICAgICAnKC1wIC12KS1G
W3NwZWNpZnkgZmlsZSBzeXN0ZW0gdHlwZV06ZmlsZSBzeXN0ZW0gdHlwZTpf
ZmlsZV9zeXN0ZW1zJwogICAgICAgJygtYSAtdiktcFtwcmludCBtb3VudGVk
IGZpbGUgc3lzdGVtc10nCiAgICAgICAnKC1wIC1hKS12W3ByaW50IG1vdW50
ZWQgZmlsZSBzeXN0ZW1zIHZlcmJvc2VseV0nCiAgICAgICAnKC1wIC12KS1W
W2Zha2UgbW91bnRdJwpAQCAtNjAxLDcgKzU5MSw2IEBACiAgICAgICAnOmRl
diBvciBkaXI6LT5kZXZvcmRpcicKICAgICAgICc6bW91bnQgcG9pbnQ6X2Zp
bGVzIC0vJwogICAgICkKLSAgICBmc3M9KCB1ZnMgbmZzIGhzZnMgczVmcyBw
Y2ZzIGNhY2hlZnMgdG1wZnMgKQogICAgIGRlZmZzPWhzZnMKICAgICB0eXBl
b3BzPS1GCiAgICAgOzsKQEAgLTYxMywxNSArNjAyLDEzIEBACiAgICAgICAn
LW9bc3BlY2lmeSBmaWxlIHN5c3RlbSBvcHRpb25zXTpmaWxlIHN5c3RlbSBv
cHRpb246LT5mc29wdCcKICAgICAgICctcFtwcmludCBtb3VudGVkIGZpbGUg
c3lzdGVtc10nCiAgICAgICAnLXJbbW91bnQgcmVhZG9ubHldJwotICAgICAg
Jy10W3NwZWNpZnkgZmlsZSBzeXN0ZW0gdHlwZV06ZmlsZSBzeXN0ZW0gdHlw
ZTotPmZzdHlwZScKKyAgICAgICctdFtzcGVjaWZ5IGZpbGUgc3lzdGVtIHR5
cGVdOmZpbGUgc3lzdGVtIHR5cGU6LT5mc2xpc3QnCiAgICAgICAnLXVbY2hh
bmdlIHN0YXR1cyBvZiBhbHJlYWR5IG1vdW50ZWQgZmlsZXN5c3RlbV0nCiAg
ICAgICAnLXZbdmVyYm9zZSBtb2RlXScKICAgICAgICctd1ttb3VudCByZWFk
L3dyaXRlXScKICAgICAgICc6ZGV2IG9yIGRpcjotPmRldm9yZGlyJwogICAg
ICAgJzptb3VudCBwb2ludDpfZmlsZXMgLS8nCiAgICAgKQotICAgIGZzcz0o
IGNkOTY2MCBkZXZmcyBleHQyZnMgZmRlc2Mga2VybmZzIGxpbnByb2NmcyBt
ZnMgbXNkb3MgbmZzIAotICAgICAgICAgIG50ZnMgbnVsbCBud2ZzIHBvcnRh
bCBwcm9jZnMgc3RkIHVmcyB1bWFwIHVuaW9uICkKICAgICBkZWZmcz11ZnMK
ICAgICA7OwogICAqKQpAQCAtNjI5LDEzICs2MTYsMTIgQEAKIAogICAgIGFy
Z3M9KCAtcwogICAgICAgJygtbyktYVttb3VudCBhbGwgZmlsZXN5c3RlbXMg
aW4gZnN0YWJdJwotICAgICAgJy10W3NwZWNpZnkgZmlsZSBzeXN0ZW0gdHlw
ZV06ZmlsZSBzeXN0ZW0gdHlwZTotPmZzdHlwZScKKyAgICAgICctdFtzcGVj
aWZ5IGZpbGUgc3lzdGVtIHR5cGVdOmZpbGUgc3lzdGVtIHR5cGU6X2ZpbGVf
c3lzdGVtcycKICAgICAgICctb1tzcGVjaWZ5IGZpbGUgc3lzdGVtIG9wdGlv
bnNdOmZpbGUgc3lzdGVtIG9wdGlvbjotPmZzb3B0JwogICAgICAgJy1mW2Zh
a2UgbW91bnRdJwogICAgICAgJzpkZXYgb3IgZGlyOi0+ZGV2b3JkaXInCiAg
ICAgICAnOm1vdW50IHBvaW50Ol9maWxlcyAtLycKICAgICApCi0gICAgZnNz
PSggdWZzICkKICAgICBkZWZmcz11ZnMKICAgICA7OwogICBlc2FjCkBAIC02
NTIsNyArNjM4LDcgQEAKIAknLWFbdW5tb3VudCBhbGwgbW91bnRlZCBmaWxl
IHN5c3RlbXNdJwogCSctZltmb3JjZSB1bm1vdW50XScKIAknLW5bcmVtb3Rl
IG5vZGVdOnJlbW90ZSBub2RlOl9ob3N0cycKLQknLXRbc3BlY2lmeSBmaWxl
IHN5c3RlbSB0eXBlXTpmaWxlIHN5c3RlbSB0eXBlOi0+ZnN0eXBlJworCSct
dFtzcGVjaWZ5IGZpbGUgc3lzdGVtIHR5cGVdOmZpbGUgc3lzdGVtIHR5cGU6
X2ZpbGVfc3lzdGVtcycKIAknKjpkZXYgb3IgZGlyOi0+dWRldm9yZGlyJwog
ICAgICAgKQogICAgIDs7CkBAIC02NjIsNyArNjQ4LDcgQEAKIAknLWJbdW5t
b3VudCBhbGwgZmlsZXN5c3RlbXMgaW4gL2V0Yy9mc3RhYiBleGNlcHQgdGhv
c2UgbGlzdGVkXTpsaXN0IG9mIGRpcmVjdG9yaWVzOl9kaXJfbGlzdCAtcywn
CiAJJy1oW3VubW91bnQgYWxsIGZpbGVzeXN0ZW1zIGFzc29jaWF0ZWQgd2l0
aCBob3N0XTpob3N0bmFtZXM6X2hvc3RzJwogCScta1traWxsIGFsbCBwcm9j
ZXNzZXMgd2l0aCBmaWxlcyBvcGVuIG9uIGZpbGVzeXN0ZW1zIGJlZm9yZSB1
bm1vdW50aW5nXScKLQknLXRbdW5tb3VudCBhbGwgZmlsZXN5c3RlbXMgb2Yg
c3BlY2lmaWVkIHR5cGVdOmZpbGUgc3lzdGVtIHR5cGU6LT5mc3R5cGUnCisJ
Jy10W3VubW91bnQgYWxsIGZpbGVzeXN0ZW1zIG9mIHNwZWNpZmllZCB0eXBl
XTpmaWxlIHN5c3RlbSB0eXBlOl9maWxlX3N5c3RlbXMnCiAJJy12W3ZlcmJv
c2VdJwogICAgICAgKQogICAgIDs7ICAKQEAgLTY3Miw3ICs2NTgsNyBAQAog
ICAgICAgICAnLUFbdW5tb3VudCBhbGwgbW91bnRlZCBmaWxlIHN5c3RlbXMg
ZXhjZXB0IHRoZSByb290XScKICAgICAgICAgJy1mW2ZvcmNlIHVubW91bnRd
JwogICAgICAgICAnLWhbdW5tb3VudCBhbGwgZmlsZXN5c3RlbXMgYXNzb2Np
YXRlZCB3aXRoIGhvc3RdOmhvc3RuYW1lczpfaG9zdHMnCi0JJy10W3VubW91
bnQgYWxsIGZpbGVzeXN0ZW1zIG9mIHNwZWNpZmllZCB0eXBlXTpmaWxlIHN5
c3RlbSB0eXBlOi0+ZnN0eXBlJworCSctdFt1bm1vdW50IGFsbCBmaWxlc3lz
dGVtcyBvZiBzcGVjaWZpZWQgdHlwZV06ZmlsZSBzeXN0ZW0gdHlwZTotPmZz
bGlzdCcKIAknLXZbdmVyYm9zZSBtb2RlXScKIAknKjpkZXYgb3IgZGlyOi0+
dWRldm9yZGlyJwogICAgICAgKQpAQCAtNjg1LDcgKzY3MSw3IEBACiAJJy1u
W2RvbiciJyIndCB3cml0ZSAvZXRjL210YWJdJwogCSctcltyZW1vdW50IHJl
YWQtb25seSBvbiBmYWlsdXJlXScKIAknLWFbdW5tb3VudCBhbGwgZmlsZSBz
eXN0ZW1zIGZyb20gL2V0Yy9tdGFiXScKLQknLXRbc3BlY2lmeSBmaWxlIHN5
c3RlbSB0eXBlXTpmaWxlIHN5c3RlbSB0eXBlOi0+ZnN0eXBlJworCSctdFtz
cGVjaWZ5IGZpbGUgc3lzdGVtIHR5cGVdOmZpbGUgc3lzdGVtIHR5cGU6X2Zp
bGVfc3lzdGVtcycKIAknKjpkZXYgb3IgZGlyOi0+dWRldm9yZGlyJwogICAg
ICAgKQogICAgIDs7CkBAIC02OTYsMTIgKzY4MiwxMSBAQAogZmkKIAogY2Fz
ZSAiJHN0YXRlIiBpbgotZnN0eXBlKQorZnNsaXN0KQogICBjb21wc2V0IC1Q
ICcqLCcKLQotICBfd2FudGVkIHR5cGVzIGV4cGwgJ2ZpbGUgc3lzdGVtIHR5
cGUnIFwKLSAgICAgIGNvbXBhZGQgLXFTLCAtTSAnTDp8bm89JyAtYSBmc3Mg
JiYgcmV0PTAKLSAgOzsKKyAgY29tcHNldCAtUyAnLConIHx8IHN1Zj0nLCcK
KyAgX2ZpbGVfc3lzdGVtcyAtcVMgIiRzdWYiCis7OwogZnNvcHQpCiAgIF90
YWdzIG9wdGlvbnMgfHwgcmV0dXJuIDEKIApJbmRleDogQ29tcGxldGlvbi9V
bml4L1R5cGUvLmRpc3RmaWxlcwo9PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJD
UyBmaWxlOiAvY3Zzcm9vdC96c2gvenNoL0NvbXBsZXRpb24vVW5peC9UeXBl
Ly5kaXN0ZmlsZXMsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMwpkaWZmIC11
IC1yMS4zIC5kaXN0ZmlsZXMKLS0tIENvbXBsZXRpb24vVW5peC9UeXBlLy5k
aXN0ZmlsZXMJMjAwMS8xMC8yNiAxMzowNTo0NgkxLjMKKysrIENvbXBsZXRp
b24vVW5peC9UeXBlLy5kaXN0ZmlsZXMJMjAwMS8xMi8xMSAxNDoxMjozMgpA
QCAtOCw0ICs4LDUgQEAKIF9maWxlcyAgICAgICAgICAgICAgIF9wZGYgICAg
ICAgICAgICAgICAgIF9wc3BkZiAgICAgICAgICAgICAgIF91c2VycwogX2dy
b3VwcyAgICAgICAgICAgICAgX3BlcmxfYmFzZXBvZHMgICAgICAgX3NpZ25h
bHMgICAgICAgICAgICAgX3VzZXJzX29uCiBfaG9zdHMgICAgICAgICAgICAg
ICBfcGVybF9idWlsdGluX2Z1bmNzICBfdGFyX2FyY2hpdmUgICAgICAgICBf
dGltZV96b25lCitfZmlsZV9zeXN0ZW1zCiAnCkluZGV4OiBDb21wbGV0aW9u
L1VuaXgvVHlwZS9fZmlsZV9zeXN0ZW1zCj09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0KUkNTIGZpbGU6IF9maWxlX3N5c3RlbXMKZGlmZiAtTiBfZmlsZV9zeXN0
ZW1zCi0tLSAvZGV2L251bGwJVGh1IE1heSAyNCAyMjozMzowNSAyMDAxCisr
KyBfZmlsZV9zeXN0ZW1zCVR1ZSBEZWMgMTEgMDY6MTI6MzIgMjAwMQpAQCAt
MCwwICsxLDM3IEBACisjYXV0b2xvYWQKKworbG9jYWwgZnNzCisKK2Nhc2Ug
JE9TVFlQRSBpbgorICBhaXgqKSBmc3M9KCBqZnMgbmZzIGNkcmZzICkgOzsK
KyAgaXJpeCopIGZzcz0oIGVmcyBwcm9jIGZkIG5mcyBpc285NjYwIGRvcyBo
ZnMgY2FjaGVmcyB4ZnMgKSA7OworICBsaW51eCopCisgICAgdHlwZXNldCAt
YVUgZnNzCisgICAgZnNzPSggYWRmcyBiZnMgY3JhbWZzIGV4dDIgZXh0MyBo
ZnMgaHBmcyBpc285NjYwIG1pbml4IG50ZnMgcW54NAorICAgICAgICAgIHJl
aXNlcmZzIHJvbWZzIHN3YXAgdWRmIHVmcyB2eGZzIHhmcyB4aWFmcyApCisg
ICAgW1sgLXIgL3Byb2MvZmlsZXN5c3RlbXMgXV0gJiYKKyAgICAgICAgZnNz
PSggJGZzcyAkeyQoPC9wcm9jL2ZpbGVzeXN0ZW1zKSNub2Rldn0gKQorICAg
IFtbIC1yIC9ldGMvZmlsZXN5c3RlbXMgXV0gJiYKKyAgICAgICAgZnNzPSgg
JGZzcyAkeyQoPC9ldGMvZmlsZXN5c3RlbXMpI25vZGV2fSApCisgIDs7Cisg
IG9zZiopIGZzcz0oIGFkdmZzIHVmcyBuZnMgbWZzIGNkZnMgKSA7OworICBz
b2xhcmlzKikgZnNzPSggdWZzIG5mcyBoc2ZzIHM1ZnMgcGNmcyBjYWNoZWZz
IHRtcGZzICkgOzsKKyAgZnJlZWJzZCopCisgICAgZnNzPSggY2Q5NjYwIGRl
dmZzIGV4dDJmcyBmZGVzYyBrZXJuZnMgbGlucHJvY2ZzIG1mcyBtc2RvcyBu
ZnMgCisgICAgICAgICAgbnRmcyBudWxsIG53ZnMgcG9ydGFsIHByb2NmcyBz
dGQgdWZzIHVtYXAgdW5pb24gKQorICA7OworICAqKQorICAgICMgZGVmYXVs
dCBmb3IgYWxsIG90aGVyIHN5c3RlbXMKKyAgICBmc3M9KCB1ZnMpCisgIDs7
Citlc2FjCisKK193YW50ZWQgdHlwZXMgZXhwbCAnZmlsZSBzeXN0ZW0gdHlw
ZScgY29tcGFkZCAiJEAiIC1NICdMOnxubz0nIC1hIGZzcworCisKKyAKKwor
CisKKworCg==

--0-993079402-1008084255=:82499--

