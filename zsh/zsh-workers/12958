From zsh-workers-return-12958-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Oct 11 10:43:44 2000
Return-Path: <zsh-workers-return-12958-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 27885 invoked from network); 11 Oct 2000 10:43:43 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 11 Oct 2000 10:43:43 -0000
Received: (qmail 15500 invoked by alias); 11 Oct 2000 10:42:35 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 12958
Received: (qmail 15491 invoked from network); 11 Oct 2000 10:42:32 -0000
Sender: simond@informix.com
Message-ID: <39E4465B.72D01FEB@informix.com>
Date: Wed, 11 Oct 2000 11:52:11 +0100
From: Cosmo <cosmo@informix.com>
Organization: Transact Solutions
X-Mailer: Mozilla 4.75 [en] (X11; U; Linux 2.4.0-test8 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: Andrej Borsenkow <Andrej.Borsenkow@mow.siemens.ru>
CC: zsh-workers@sunsite.auc.dk
Subject: Re: NCR compiler problems on NCR
References: <002f01c0329f$4026fe20$21c9ca95@mow.siemens.ru>
Content-Type: text/plain; charset=iso-8859-15
Content-Transfer-Encoding: 7bit

Andrej Borsenkow wrote:

> Better yet is a configure check that compiler can cast long long to int. As
> long as you are the only person who can reproduce it - would you mind to write
> a patch? Or at least would you take time to check if it works?

OK here's a patch that causes configure to not use long long with my broken NCR
compiler. Now ./configure works straight out of the box on this machine.

*** zsh/aczsh.m4-orig	Wed Sep  6 16:50:16 2000
--- zsh/aczsh.m4	Wed Oct 11 11:27:18 2000
***************
*** 84,89 ****
--- 84,90 ----
  dnl   Sets the variable given in the second argument to the first argument
  dnl   if the test worked, `no' otherwise.  Be careful testing this, as it
  dnl   may produce two words `long long' on an unquoted substitution.
+ dnl   Also check that the compiler does not mind it being cast to int.
  dnl   This macro does not produce messages as it may be run several times
  dnl   before finding the right type.
  dnl
***************
*** 97,102 ****
--- 98,104 ----
  main()
  {
    $1 foo = 0;
+   int bar = (int) foo;
    return sizeof($1) != 8;
  }
  ], $2="$1", $2=no,

