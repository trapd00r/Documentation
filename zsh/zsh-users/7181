From zsh-users-return-7181-mason-zsh=primenet.com.au@sunsite.dk Mon Mar 15 07:04:17 2004
Return-Path: <zsh-users-return-7181-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16795 invoked from network); 15 Mar 2004 07:04:16 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 15 Mar 2004 07:04:16 -0000
Received: (qmail 18842 invoked by alias); 15 Mar 2004 07:04:03 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 7181
Received: (qmail 18796 invoked from network); 15 Mar 2004 07:04:02 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 15 Mar 2004 07:04:02 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [216.136.173.132] by sunsite.dk (MessageWall 1.0.8) with SMTP; 15 Mar 2004 7:4:2 -0000
Message-ID: <20040315070400.81487.qmail@web12405.mail.yahoo.com>
Received: from [66.92.171.57] by web12405.mail.yahoo.com via HTTP; Sun, 14 Mar 2004 23:04:00 PST
Date: Sun, 14 Mar 2004 23:04:00 -0800 (PST)
From: Bob Schmertz <rschmertz@yahoo.com>
Reply-To: robert.schmertz@terpalum.umd.edu
Subject: Re: [OT]Python/zsh/perl [was: named directory expansion on strings]
To: Vincent Stemen <zsh@hightek.org>, zsh-users@sunsite.dk
In-Reply-To: <20040314215700.GA61154@quark.hightek.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

--- Vincent Stemen <zsh@hightek.org> wrote:
[quoted text "juggled around" a bit] 

> I agree.  This surprising discovery is the primary reason I never put
> any serious consideration into learning Python.

> I use the auto indentation features of xemacs all the time.  I see no
> way you could do that without code block delimiters.  Seems like a step
> backward in time.

Emacs seems to be the most popular editor for Python programmers.  It
knows when to start a new indent level, because the if, while, class,
etc. lines all end with a colon.  It can't tell when you want to close
the
block, of course, but if you're typing new code, that's a simple matter
of
hitting the backspace key once for every block you want to close out.  I
wouldn't /think/ of coding in Python if I didn't have Emacs or something
equally smart.

> Seems like it would be a nightmare to fix if you get your indentation
> messed up (which is extremely common when juggling code around).

Not sure exactly what you mean by "juggling around"; if you mean cutting
a
section from a file and moving it elsewhere in the file, or to a
different
file, at a point that starts out at a different indent level, there's a
key sequence to add or subtract an indent level from that entire block of
code, so that the pasted code will be consisent with itself as well as
fitting all under the appropriate if statement or whatever.  If you're
talking about code from someone else, esp. via email and things like
that,
then there are more variables, of course.

Do I think blocking by indentation is the greatest thing since sliced
bread?  No.  But I've been surprised to find that it has rarely, if ever,
been a problem for me the way, oh, buffer overflows, objects that appear
to the lame compiler like they might not be instantiated even though they
definitely always are, or not knowing Perl have been.

> I was very pleased to find that you can do direct array indexing of
> single dimensional arrays in zsh.  ie. if x=abcd, then $x[2] = b.
> That very feature is most commonly the weakness of tradition shell
> script and even Perl that sometimes ends up causing me to write a
> routine as an external C program when I am writing a complex script.
> 
[snip]
> This is about the only complaint I can think of I have ever really had
> with Perl.

Funny, Python does this just fine :-)
 >>> a="spam"
 >>> a[3]
 'm'
 >>>



=====
Cheers,
Bob Schmertz

__________________________________
Do you Yahoo!?
Yahoo! Mail - More reliable, more storage, less spam
http://mail.yahoo.com

