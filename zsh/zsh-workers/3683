From zsh-workers-request@math.gatech.edu Mon Jan 12 16:30:52 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 656 invoked from network); 12 Jan 1998 16:30:50 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 12 Jan 1998 16:30:50 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.8.5/8.8.5) id LAA03637;
	Mon, 12 Jan 1998 11:15:06 -0500 (EST)
Resent-Date: Mon, 12 Jan 1998 11:15:06 -0500 (EST)
Date: Mon, 12 Jan 1998 19:16:55 +0300 (MSK)
From: Andrej Borsenkow <borsenkow.msk@sni.de>
X-Sender: bor@itsrm1
Reply-To: borsenkow.msk@sni.de
To: Peter Stephenson <pws@ifh.de>
cc: Zsh hackers list <zsh-workers@math.gatech.edu>, zsh@peak.org
Subject: Re: PATCH: zsh 3.x: <..> ranges in globbing 
In-Reply-To: <199801121113.MAA25513@sgi.ifh.de>
Message-ID: <Pine.SV4.3.95.980112190642.11157B-100000@itsrm1>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Resent-Message-ID: <"hB4RG.0.ku.96akq"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/3683
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

On Mon, 12 Jan 1998, Peter Stephenson wrote:

> 
> You should probably note that <100->0foo won't match 1000foo, since
> the 1000 gets swallowed up before the shell even knows it's going
> to have to match another digit next. This is a much more difficult
> problem requiring backtracking.  I could make a special case so that
> simple things like this work, but expressions like <100->(0|bar)foo would
> require much more fiddling.  (Of course, <100-999>0foo works now.)

I am not sure, that it is right thing. The <m-n> can (always?) be
rewritten using plain extended regular expression. In particular, <100->
is the same as

  [1-9][0-9][0-9]|[1-9][0-9]{3,}

given file foo with
100foo
1000foo

at my system I get

egrep '([1-9][0-9][0-9]|[1-9][0-9]{3,})0foo' foo
=> 1000foo

egrep '([1-9][0-9][0-9]|[1-9][0-9]{3,})foo' foo
=> 100foo
   1000foo

X/OPEN (and presumably POSIX and Unix 95) also require BRE and ERE to
match the longest possible string - in case of 1000foo the longest
possible is the whole word :-)

Actually, what about replacing "ad hoc" code in ZSH by direct translation
into normal regexp? It will probably be faster (who knows) and will give
ZSH full power to support i18n - wich is currently not (portably)
possible. I think, that <m-n> globbing is the only non-trivial part - all
others are pretty sraightforward.

-------------------------------------------------------------------------
Andrej Borsenkow 		Fax:   +7 (095) 252 01 05
SNI ITS Moscow			Tel:   +7 (095) 252 13 88

NERV:  borsenkow.msk		E-Mail: borsenkow.msk@sni.de
-------------------------------------------------------------------------


