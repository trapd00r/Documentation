From zsh-users-return-4761-mason-zsh=primenet.com.au@sunsite.dk Tue Mar 19 23:47:30 2002
Return-Path: <zsh-users-return-4761-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 11962 invoked from network); 19 Mar 2002 23:47:30 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 19 Mar 2002 23:47:30 -0000
Received: (qmail 24058 invoked by alias); 19 Mar 2002 23:47:04 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 4761
Received: (qmail 24040 invoked from network); 19 Mar 2002 23:47:03 -0000
Date: Wed, 20 Mar 2002 00:46:27 +0100
From: Phil Pennock <Phil.Pennock@globnix.org>
To: Nick Croft <nicko@acay.com.au>
Cc: zsh-users@sunsite.dk
Subject: Re: zmodload zmv ?
Message-ID: <20020320004627.A28356@globnix.org>
Mail-Followup-To: Nick Croft <nicko@acay.com.au>, zsh-users@sunsite.dk
References: <20020319232902.GB878@acay.com.au>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <20020319232902.GB878@acay.com.au>; from nicko@acay.com.au on Wed, Mar 20, 2002 at 10:29:02AM +1100
X-Disclaimer: Any views expressed in this message, where not explicitly
	attributed otherwise, are mine and mine alone.  Such views
	do not necessarily coincide with those of any organisation
	or company with which I am or have been affiliated.

On 2002-03-20 at 10:29 +1100, Nick Croft wrote:
> zmv looks to be a very handy utility. With Debian, it's located
> under /usr/share/zsh/4.0.4/functions/Misc  .
> 
> I've tried starting it with zmodload zmv - nothing.

zmodload is for loading dynamic code into zsh.  For your platform, ".so"
files.

"man zshmodules"

> I've moved, chowned, and chmodded it to a local fpath.

fpath/FPATH is searched for an undefined (-u) function; see zshparam(1).
To create such a function, use the autoload builtin; see zshbuiltins(1).

> What's the trick? All the googling points to the same paragraph being
> quoted. The source contains a pretty good description of its uses but no
> hint as to startup.

There are some example startup files which ship with zsh; you'll need to
check your package to see if they were included.

The example zshrc includes:

-----------------------------< cut here >-------------------------------
# Where to look for autoloaded function definitions
fpath=($fpath ~/.zfunc)

# Autoload all shell functions from all directories in $fpath (following
# symlinks) that have the executable bit on (the executable bit is not
# necessary, but gives you an easy way to stop the autoloading of a
# particular shell function). $fpath should not be empty for this to
# work.
for func in $^fpath/*(N-.x:t); autoload $func
-----------------------------< cut here >-------------------------------

For comparison, dating back a while, I have:
 autoload ${^fpath}/*(N:t)
and mine is broken.  I thought that I had the executable check in;
obviously I lost it at some point in the past few years.  Oops!

Someone else might be able to explain why it's better to loop over the
expanded list, autoload'ing each, rather than "autoload glob".
-- 
"Reading my work email is a nice break from the nasty sunshine" - Carel

