From zsh-workers-return-12865-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Sep 28 03:36:43 2000
Return-Path: <zsh-workers-return-12865-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 17386 invoked from network); 28 Sep 2000 03:36:42 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 28 Sep 2000 03:36:42 -0000
Received: (qmail 24280 invoked by alias); 28 Sep 2000 03:36:12 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 12865
Received: (qmail 24272 invoked from network); 28 Sep 2000 03:36:09 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1000928033550.ZM13657@candle.brasslantern.com>
Date: Thu, 28 Sep 2000 03:35:49 +0000
In-Reply-To: <20000927154646.B4971@dman.com>
Comments: In reply to Clint Adams <schizo@debian.org>
        "two append bugs?" (Sep 27,  3:46pm)
References: <20000927154646.B4971@dman.com>
X-Mailer: Z-Mail (5.0.0 30July97)
To: Clint Adams <schizo@debian.org>, zsh-workers@sunsite.auc.dk
Subject: Re: two append bugs?
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Sep 27,  3:46pm, Clint Adams wrote:
} Subject: two append bugs?
}
} % chmod 0 t
} 
} % echo bla >> t || echo failed
} zsh: permission denied: t
} 
} % /bin/echo bla >> t || echo failed
} zsh: permission denied: t   
} failed
} 
} This happens with other builtins as well.  I assume that this inconsistency
} is the first bug.

It's not exactly a bug.  In neither case does zsh execute the "echo"; it
just happens that in the case of the external command, it forks before it
attempts to open the file for redirection.  (It has nothing to do with
whether or not the redirect is an append, so it's not an "append bug".)

It might be possible to get zsh to behave "as if" it had forked in this
circumstance.

} Now, on an NFS read-only mount, I get:
} 
} zsh: no such file or directory: t
} 
} whereas 3.0.7 more accurately responds
} 
} zsh: read-only file system: t
} 
} which I assume to be the other bug.

This isn't a bug either; it depends on the setting of the CLOBBER option.
You'll get "no such file" if you attempt to append-without-create, and
"read-only file system" if you attempt to append-with-create.  This is
true in both 3.0.[78] and 3.1.9; watch what happens when you do

	/bin/echo bla >>| t

to force append-with-create.  Conversely, try just ">>" on a nonexistent
name with "unsetopt CLOBBER" in effect, even on a writable file system.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

