From zsh-users-return-14896-mason-zsh=primenet.com.au@zsh.org Fri Feb 26 13:59:26 2010
Return-Path: <zsh-users-return-14896-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 22594 invoked by alias); 26 Feb 2010 13:59:26 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14896
Received: (qmail 21890 invoked from network); 26 Feb 2010 13:59:15 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.1 required=5.0 tests=AWL,BAYES_00,
	RCVD_IN_SORBS_WEB autolearn=no version=3.2.5
Received-SPF: none (ns1.primenet.com.au: domain at biskalar.de does not designate permitted sender hosts)
Subject: Re: segfault in strftime
Mime-Version: 1.0 (Apple Message framework v1077)
Content-Type: text/plain; charset=utf-8
From: Sebastian Stark <seb-zsh@biskalar.de>
In-Reply-To: <201002261303.o1QD3Sqq018901@news01.csr.com>
Date: Fri, 26 Feb 2010 14:59:09 +0100
Cc: zsh-users@zsh.org
Content-Transfer-Encoding: quoted-printable
Message-Id: <2A337AAE-8D40-4796-A733-9E7F30FABFF8@biskalar.de>
References: <A73C7D9C-66C5-4BFA-8FB3-8560FE65B529@biskalar.de> <201002261303.o1QD3Sqq018901@news01.csr.com>
To: Peter Stephenson <pws@csr.com>
X-Mailer: Apple Mail (2.1077)


Am 26.02.2010 um 14:03 schrieb Peter Stephenson:

> Sebastian Stark wrote:
>> I just found that zsh segfaults when I do this:
>>=20
>> zmodload zsh/datetime
>> strftime "%a %d.%m.%Y %H:%M:%S" 67768036191673200
>>=20
>> while it doesn't for smaller numbers, like:
>>=20
>> strftime "%a %d.%m.%Y %H:%M:%S" 67768036191673199
>>=20
>> It will print a negative year for this value though. Negative results =
are n=3D
>> ot a big problem I think, but a segfault could be.
>>=20
>> I tried this with zsh-4.3.10 under linux-gnu-x86_64. Can anyone =
reproduce t=3D
>> his?
>=20
> I don't see where that would cause a problem, so I'd be interested in =
a
> backtrace---the only place I can see it going wrong is within =
strtoul().

The segfault doesn't happen with a time one second before:
sambesi% strftime "%a %d.%m.%Y %H:%M:%S" 67768036191673199
Wed 31.12.-2147481749 23:59:59

This is a freshly compiled zsh 4.3.10 with --enable-zsh-debug.

I'm not used to produce or read backtraces, is the following helpful? =
Does it mean the problem is my libc?

% gdb --args /usr/local/bin/zsh -f
GNU gdb 6.8-debian            =20
Copyright (C) 2008 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later =
<http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show =
copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu"...
(gdb) run
Starting program: /usr/local/bin/zsh -f
sambesi% echo $ZSH_VERSION
4.3.10
sambesi% zmodload zsh/datetime
sambesi% strftime "%a %d.%m.%Y %H:%M:%S" 67768036191673200

Program received signal SIGSEGV, Segmentation fault.
0x00002ba7cdf4b93b in ?? () from /lib/libc.so.6
(gdb) bt
#0  0x00002ba7cdf4b93b in ?? () from /lib/libc.so.6
#1  0x000000000049bb54 in ztrftime (buf=3D0x6feed0 "\001J!=CE=A7+", =
bufsize=3D158, fmt=3D0x2ba7cd751832 " %d.%m.%Y %H:%M:%S", tm=3D0x0)
    at utils.c:2603
#2  0x00002ba7ce8ab18e in bin_strftime (nam=3D0x2ba7cd751820 "strftime", =
argv=3D0x7fffdd4dc980, ops=3D0x7fffdd4dca60, func=3D0)
    at datetime.c:128
#3  0x0000000000410731 in execbuiltin (args=3D0x2ba7cd7517c0, =
bn=3D0x2ba7ceaab8a0) at builtin.c:439
#4  0x00000000004313be in execcmd (state=3D0x7fffdd4dd240, input=3D0, =
output=3D0, how=3D18, last1=3D2) at exec.c:3067
#5  0x000000000042cd2c in execpline2 (state=3D0x7fffdd4dd240, pcode=3D259,=
 how=3D18, input=3D0, output=3D0, last1=3D0) at exec.c:1561
#6  0x000000000042bef4 in execpline (state=3D0x7fffdd4dd240, =
slcode=3D5122, how=3D18, last1=3D0) at exec.c:1347
#7  0x000000000042b630 in execlist (state=3D0x7fffdd4dd240, =
dont_change_job=3D0, exiting=3D0) at exec.c:1144
#8  0x000000000042b0bb in execode (p=3D0x2ba7cd7516e8, =
dont_change_job=3D0, exiting=3D0) at exec.c:975
#9  0x0000000000447a39 in loop (toplevel=3D1, justonce=3D0) at =
init.c:183
#10 0x000000000044a94e in zsh_main (argc=3D2, argv=3D0x7fffdd4dd408) at =
init.c:1409
#11 0x000000000040fb53 in main (argc=3D2, argv=3D0x7fffdd4dd408) at =
./main.c:93


Sebastian=

