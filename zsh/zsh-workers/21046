From zsh-workers-return-21046-mason-zsh=primenet.com.au@sunsite.dk Mon Mar 21 22:08:57 2005
Return-Path: <zsh-workers-return-21046-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 27107 invoked from network); 21 Mar 2005 22:08:56 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 21 Mar 2005 22:08:56 -0000
Received: (qmail 24138 invoked from network); 21 Mar 2005 22:08:49 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 21 Mar 2005 22:08:49 -0000
Received: (qmail 26087 invoked by alias); 21 Mar 2005 22:08:46 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 21046
Received: (qmail 26076 invoked from network); 21 Mar 2005 22:08:45 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 21 Mar 2005 22:08:45 -0000
Received: (qmail 23869 invoked from network); 21 Mar 2005 22:08:45 -0000
Received: from cmailm1.svr.pol.co.uk (195.92.193.18)
  by a.mx.sunsite.dk with SMTP; 21 Mar 2005 22:08:39 -0000
Received: from modem-118.orbic-batfish.dialup.pol.co.uk ([62.137.44.118] helo=pwstephenson.fsnet.co.uk)
	by cmailm1.svr.pol.co.uk with esmtp (Exim 4.41)
	id 1DDV4g-0001gz-A8
	for zsh-workers@sunsite.dk; Mon, 21 Mar 2005 22:08:39 +0000
Received: by pwstephenson.fsnet.co.uk (Postfix, from userid 501)
	id 3E885863B; Mon, 21 Mar 2005 17:08:43 -0500 (EST)
Received: from pwstephenson.fsnet.co.uk (localhost [127.0.0.1])
	by pwstephenson.fsnet.co.uk (Postfix) with ESMTP id A247E8637
	for <zsh-workers@sunsite.dk>; Mon, 21 Mar 2005 22:08:43 +0000 (GMT)
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: PATCH: use `always' with _approximate
Date: Mon, 21 Mar 2005 22:08:41 +0000
From: Peter Stephenson <pws@pwstephenson.fsnet.co.uk>
Message-Id: <20050321220843.3E885863B@pwstephenson.fsnet.co.uk>
X-Spam-Checker-Version: SpamAssassin 3.0.2 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=6.0 tests=AWL,BAYES_00 autolearn=ham 
	version=3.0.2
X-Spam-Hits: -2.6

I've been meaning to do this for a while.

You've probably noticed the message:
_main_complete:unfunction:161: no such hash table element: compadd
you sometimes get from aborting approximate completion at the wrong
point.

The key feature here is the "dounfunction" variable and the extra test
for $+functions[compadd].  However, the "always" block ensures that the
code is always executed, which you couldn't easily ensure with a trap.

You should be able to convince yourself, I hope, that it's
impossible for the unfunction to be run or omitted incorrectly.

Index: Completion/Base/Completer/_approximate
===================================================================
RCS file: /cvsroot/zsh/zsh/Completion/Base/Completer/_approximate,v
retrieving revision 1.7
diff -u -r1.7 _approximate
--- Completion/Base/Completer/_approximate	7 Jan 2002 14:38:14 -0000	1.7
+++ Completion/Base/Completer/_approximate	21 Mar 2005 22:04:24 -0000
@@ -12,6 +12,8 @@
 
 local _comp_correct _correct_expl _correct_group comax cfgacc match
 local oldcontext="${curcontext}" opm="$compstate[pattern_match]"
+local dounfunction
+integer ret=1
 
 if [[ "$1" = -a* ]]; then
   cfgacc="${1[3,-1]}"
@@ -46,8 +48,12 @@
 # the builtin that adds matches. This is used to be able
 # to stick the `(#a...)' in the right place (after an
 # ignored prefix).
-
+#
+# Current shell structure for use with "always", to make sure
+# we unfunction the compadd.
+{
 if (( ! $+functions[compadd] )); then
+  dounfunction=1
   compadd() {
     local ppre="$argv[(I)-p]"
 
@@ -65,7 +71,6 @@
 
     builtin compadd "$_correct_expl[@]" "$@"
   }
-  trap 'unfunction compadd' EXIT INT
 fi
 
 _comp_correct=1
@@ -101,13 +106,20 @@
     fi
     compstate[pattern_match]="$opm"
 
-    return 0
+    ret=0
+    break
   fi
 
   [[ "${#:-$PREFIX$SUFFIX}" -le _comp_correct+1 ]] && break
   (( _comp_correct++ ))
 done
 
+} always {
+    [[ -n $dounfunction ]] && (( $+functions[compadd] )) && unfunction compadd
+}
+
+(( ret == 0 )) && return 0
+
 compstate[pattern_match]="$opm"
 
 return 1

-- 
Peter Stephenson <pws@pwstephenson.fsnet.co.uk>
Work: pws@csr.com
Web: http://www.pwstephenson.fsnet.co.uk

