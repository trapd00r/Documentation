From zsh-users-return-8599-mason-zsh=primenet.com.au@sunsite.dk Sun Mar 13 19:24:16 2005
Return-Path: <zsh-users-return-8599-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 25926 invoked from network); 13 Mar 2005 19:24:15 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 13 Mar 2005 19:24:15 -0000
Received: (qmail 48171 invoked from network); 13 Mar 2005 19:24:09 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 13 Mar 2005 19:24:09 -0000
Received: (qmail 28421 invoked by alias); 13 Mar 2005 19:24:02 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 8599
Received: (qmail 28411 invoked from network); 13 Mar 2005 19:24:02 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 13 Mar 2005 19:24:02 -0000
Received: (qmail 47143 invoked from network); 13 Mar 2005 19:24:01 -0000
Received: from vms042pub.verizon.net (206.46.252.42)
  by a.mx.sunsite.dk with SMTP; 13 Mar 2005 19:23:55 -0000
Received: from candle.brasslantern.com ([4.11.1.68])
 by vms042.mailsrvcs.net (Sun Java System Messaging Server 6.2 HotFix 0.04
 (built Dec 24 2004)) with ESMTPA id <0IDB0053A1VT6BM1@vms042.mailsrvcs.net> for
 zsh-users@sunsite.dk; Sun, 13 Mar 2005 13:23:54 -0600 (CST)
Received: from candle.brasslantern.com (IDENT:schaefer@localhost [127.0.0.1])
	by candle.brasslantern.com (8.12.11/8.12.11) with ESMTP id j2DJNqW6018832	for
 <zsh-users@sunsite.dk>; Sun, 13 Mar 2005 11:23:52 -0800
Received: (from schaefer@localhost)	by candle.brasslantern.com
 (8.12.11/8.12.11/Submit) id j2DJNq4q018831	for zsh-users@sunsite.dk; Sun,
 13 Mar 2005 11:23:52 -0800
Date: Sun, 13 Mar 2005 19:23:52 +0000
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: Ex-bash script for optimisation
In-reply-to: <tf29319rb8a0edm1h3r63612p9h7nbilcr@4ax.com>
To: zsh-users@sunsite.dk
Message-id: <1050313192352.ZM18830@candle.brasslantern.com>
MIME-version: 1.0
X-Mailer: Z-Mail (5.0.0 30July97)
Content-type: text/plain; charset=us-ascii
References: <62u0315opl6kubat89fmdng5dg4m4370o0@4ax.com>
	<42308ED6.6030007@Sun.COM>	<1050311044847.ZM9336@candle.brasslantern.com>
	<tf29319rb8a0edm1h3r63612p9h7nbilcr@4ax.com>
Comments: In reply to zzapper <david@tvis.co.uk>
 "Re: Ex-bash script for optimisation" (Mar 13,  6:46pm)
X-Spam-Checker-Version: SpamAssassin 3.0.2 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=6.0 tests=AWL,BAYES_00 autolearn=ham 
	version=3.0.2
X-Spam-Hits: -2.6

On Mar 13,  6:46pm, zzapper wrote:
} Subject: Re: Ex-bash script for optimisation
}
} Only the first example worked for me, but I found $1 could be a pattern

I think you're misunderstanding what happens.

I don't know what the name of your script/function is, so I'll "vit" for
purposes of example (short for "vim text").  Suppose there is a directory
containing the files

	file.aux	file.exe	file.gif	file.txt

(1) If you give the command

	vit file*

then zsh will first expand the pattern to

	vit file.aux file.exe file.gif file.txt

and next call the function "vit" which will do (shortened for simplicity)

	filelst=( *file.aux*~*.(aux|gif|exe) )

and will eventually print "Sorry no file matched *file.aux*".  Note that
vit did nothing with file.exe file.gif file.txt, which are $2 $3 $4.

(2) If instead you tried

	vit f*t

the result is

	vit file.txt

and thus

	filelst=( *file.txt*~*.(aux|gif|exe) )

(3) If you quote the pattern

	vit 'file*'

then vit does

	filelst=( *file\**~*.(aux|gif|exe) )

and you get "Sorry no file matched *file**" which might be confusing.

What I meant about allowing $1 to be a pattern is, with ${~1} in the
filelst assignment expression you can pass the pattern quoted as in (3),
and internally to vit the pattern is expanded and you'd find file.txt
as desired.

What I meant about multiple arguments to the script is, with ${^*} in
the filelst assignment, example (1) becomes

	filelst=( *file.aux*~*.(aux|gif|exe)
		  *file.exe*~*.(aux|gif|exe)
		  *file.gif*~*.(aux|gif|exe)
		  *file.txt*~*.(aux|gif|exe) )

which again finds file.txt as desired.

I'm hoping you can extrapolate from there to what I meant by "multiple
patterns".

} and i could set a second parameter w/o problem

I'm afraid I don't understand what you mean by that.  "Set" how?  And
is anything useful done with the "second parameter"?  If so, what?  Or
is it just silently ignored?

