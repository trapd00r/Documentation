From A.Main@dcs.warwick.ac.uk Sun Jul  7 04:47:25 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by melb.werple.net.au (8.7.5/8.7.3/2) with ESMTP id EAA16159 for <mason@werple.mira.net.au>; Sun, 7 Jul 1996 04:47:23 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id OAA17215; Sat, 6 Jul 1996 14:39:50 -0400 (EDT)
Resent-Date: Sat, 6 Jul 1996 14:39:50 -0400 (EDT)
From: Zefram <A.Main@dcs.warwick.ac.uk>
Message-Id: <16887.199607061838@stone.dcs.warwick.ac.uk>
Subject: Re: Default compctls
To: schaefer@nbn.com
Date: Sat, 6 Jul 1996 19:38:39 +0100 (BST)
Cc: zsh-workers@math.gatech.edu
In-Reply-To: <960706105029.ZM17352@candle.brasslantern.com> from "Bart Schaefer" at Jul 6, 96 10:50:27 am
X-Loop: zefram@dcs.warwick.ac.uk
X-Stardate: [-31]7768.88
X-US-Congress: Moronic fuckers
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"8Vx79.0.vC4.rBhtn"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/1540
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu
Content-Length: 1249
Status: OR

>compctl -c -		# BUG!  `-' has special meaning to `compctl'!

compctl -c - -

compctl -L will list it in this form too.


>Further, there doesn't seem to be any reason not to include the following
>additional defaults:
[...]

Actually, I don't see the point in having any default completions at
all (except for the -C, -D and -T completions, of course).  The
compctl-examples script already has completions for (almost?) all
builtins, and I'd rather not have the shell default to this fairly
arbitrary magic behaviour.  Besides, how clever should the default
completion for, say, `kill` be?  (Include signal names?  Process IDs?)

>As a final remark, it would be nice if `emulate', `limit', `trap' and
>`ulimit' had some built-in equivalents of `compctl -k "(...)"' because
>there's no obvious way to generate the lists of emulations or limits;
>and `compctl -k "($(kill -l))" trap' is just re-using a list that was
>already generated at compile time, so it might as well get compiled in
>as a completion as well.

There's already a list of signals available.  $signals[2,-3] is the
list of signals you can actually send to a process.  $signals itself is
the list of trappable `signals'.  I think there's room for a $limits
array, though.

-zefram


