From zsh-users-return-6640-mason-zsh=primenet.com.au@sunsite.dk Sat Oct 04 22:40:35 2003
Return-Path: <zsh-users-return-6640-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20987 invoked from network); 4 Oct 2003 22:40:34 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 4 Oct 2003 22:40:34 -0000
Received: (qmail 14777 invoked by alias); 4 Oct 2003 22:40:18 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 6640
Received: (qmail 14760 invoked from network); 4 Oct 2003 22:40:18 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 4 Oct 2003 22:40:18 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [4.3.58.249] by sunsite.dk (MessageWall 1.0.8) with SMTP; 4 Oct 2003 22:40:17 -0000
Received: (from schaefer@localhost)
	by candle.brasslantern.com (8.11.6/8.11.6) id h94MeGL29065
	for zsh-users@sunsite.dk; Sat, 4 Oct 2003 15:40:16 -0700
From: Bart Schaefer <schaefer@brasslantern.com>
Message-Id: <1031004224016.ZM29064@candle.brasslantern.com>
Date: Sat, 4 Oct 2003 22:40:16 +0000
In-Reply-To: <m3isn4ol1q.fsf@asfast.com>
Comments: In reply to Lloyd Zusman <ljz@asfast.com>
        "Re: Emulating 'locate'" (Oct  4,  3:33pm)
References: <20031001221753.GA23189@DervishD> 
	<1031002023639.ZM22046@candle.brasslantern.com> 
	<20031002080358.GA23230@DervishD> 
	<m365j6watm.fsf@asfast.com>  <20031004104844.GA50@DervishD> 
	<m3oewxru4k.fsf@asfast.com> 
	<1031004163727.ZM28731@candle.brasslantern.com> 
	<m3isn4ol1q.fsf@asfast.com>
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-users@sunsite.dk
Subject: Re: Emulating 'locate'
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Oct 4,  3:33pm, Lloyd Zusman wrote:
}
} Based on this, it seems that zsh and 'find' are both maximally optimized
} with regard to recursive searching ... or at least the're both optimized
} equally well. :)

For certain searches, "find -depth" might actually be faster.  Zsh always
does breadth-first globbing, even when asked to sort the final results
depth-first.

} >     alias xlocate='noglob xlocate'
} 
} Well, using this alias causes the argv indices to be off by one in the
} shell function: $0 becomes 'noglob', argv[1] becomes 'xlocate', etc.

If you're seeing that, then you've accidentally created a function named
"noglob" that has the same body as "xlocate".  Try this:

	alias foo='bar foo'
	foo() { echo $0 }
	functions bar
	functions foo

Note that "foo()" is considered to be "in the command position" and thus
the alias expands and you get

	bar foo () { echo $0 }

which defines two functions, "bar" and "foo" with identical bodies.  I'd
wager that you created the alias, then changed the definition of xlocate,
and ended up with a function named "noglob".

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

