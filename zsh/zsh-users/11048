From zsh-users-return-11048-mason-zsh=primenet.com.au@sunsite.dk Tue Nov 28 18:31:13 2006
Return-Path: <zsh-users-return-11048-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 10213 invoked from network); 28 Nov 2006 18:31:11 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.7 (2006-10-05) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.1 required=5.0 tests=BAYES_00,FORGED_RCVD_HELO,
	HTML_30_40,HTML_MESSAGE autolearn=ham version=3.1.7
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 28 Nov 2006 18:31:11 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 8803 invoked from network); 28 Nov 2006 18:30:47 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 28 Nov 2006 18:30:47 -0000
Received: (qmail 7948 invoked by alias); 28 Nov 2006 18:30:35 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 11048
Received: (qmail 7857 invoked from network); 28 Nov 2006 18:30:34 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 28 Nov 2006 18:30:34 -0000
Received: (qmail 6194 invoked from network); 28 Nov 2006 18:30:33 -0000
Received: from nf-out-0910.google.com (64.233.182.186)
  by a.mx.sunsite.dk with SMTP; 28 Nov 2006 18:30:28 -0000
Received: by nf-out-0910.google.com with SMTP id m19so2535276nfc
        for <zsh-users@sunsite.dk>; Tue, 28 Nov 2006 10:30:28 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=lx5ZvEbKsT3n0asAJCRiNGQK3BiaO/rxX5fewqCWF/9XfSa/9zTm7+5CGYPVUcS3iqhTvIbH2iUFUJrSQ5NVfOu5d7GzsA5/rPcQg2f+Govct+ta79DTLNu6VlxFxjNa0QEXQIdbLKFYm4mdgaa3+fh7W3x2F1fCIhvg2ReeI10=
Received: by 10.49.68.6 with SMTP id v6mr12519768nfk.1164738628136;
        Tue, 28 Nov 2006 10:30:28 -0800 (PST)
Received: by 10.49.33.19 with HTTP; Tue, 28 Nov 2006 10:30:28 -0800 (PST)
Message-ID: <70a3bcb10611281030j2dcb1fd2w929de87f573d4048@mail.gmail.com>
Date: Tue, 28 Nov 2006 13:30:28 -0500
From: Achille <achille.listserv@gmail.com>
To: "Chris Johnson" <cjohnson@cs.utk.edu>
Subject: Re: History in Non-Interactive Shells
Cc: zsh-users@sunsite.dk
In-Reply-To: <20061128172105.GA24129@cetus5.cs.utk.edu>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_23986_7270240.1164738628104"
References: <20061128172105.GA24129@cetus5.cs.utk.edu>

------=_Part_23986_7270240.1164738628104
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

I'm not sure if it's exists but you could try this hack

preexec() { LASTCMD=$THISCMD; THISCMD=$1 }

Then make use of the $LASTCMD env variable from within vi.


On 11/28/06, Chris Johnson <cjohnson@cs.utk.edu> wrote:
>
> Is there any mechanism in zsh for accessing history in non-interactive
> shells?  An application I see for such a mechanism is in invoking the
> shell from within an application when I only know a bit of the command.
>
> For instance, when editing in vim a source file myapp.c that creates an
> application myapp, it'd be great to be able to call the executable
> without closing vim and instead calling ":!myapp" to find the last call
> to myapp with the appropriate arguments.  (I already make the executable
> without closing vim.)
>
> I could probably conjure up something by reversing the history file in
> sed and grep'ing the result for the root name of the source file.
> Either operation is probably a little expensive, but I thought I'd
> check.
>
> --
> Chris Johnson
> cjohnson@cs.utk.edu
> http://www.cs.utk.edu/~cjohnson
>

------=_Part_23986_7270240.1164738628104
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

I'm not sure if it's exists but you could try this hack<br><br>preexec() { LASTCMD=$THISCMD; THISCMD=$1 }<br><br>Then make use of the $LASTCMD env variable from within vi.<br><br><br><div><span class="gmail_quote">On 11/28/06, 
<b class="gmail_sendername">Chris Johnson</b> &lt;<a href="mailto:cjohnson@cs.utk.edu">cjohnson@cs.utk.edu</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
Is there any mechanism in zsh for accessing history in non-interactive<br>shells?&nbsp;&nbsp;An application I see for such a mechanism is in invoking the<br>shell from within an application when I only know a bit of the command.<br>
<br>For instance, when editing in vim a source file myapp.c that creates an<br>application myapp, it'd be great to be able to call the executable<br>without closing vim and instead calling &quot;:!myapp&quot; to find the last call
<br>to myapp with the appropriate arguments.&nbsp;&nbsp;(I already make the executable<br>without closing vim.)<br><br>I could probably conjure up something by reversing the history file in<br>sed and grep'ing the result for the root name of the source file.
<br>Either operation is probably a little expensive, but I thought I'd<br>check.<br><br>--<br>Chris Johnson<br><a href="mailto:cjohnson@cs.utk.edu">cjohnson@cs.utk.edu</a><br><a href="http://www.cs.utk.edu/~cjohnson">http://www.cs.utk.edu/~cjohnson
</a><br></blockquote></div><br>

------=_Part_23986_7270240.1164738628104--

