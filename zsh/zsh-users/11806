From zsh-users-return-11806-mason-zsh=primenet.com.au@sunsite.dk Tue Sep 04 15:32:08 2007
Return-Path: <zsh-users-return-11806-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 3198 invoked from network); 4 Sep 2007 15:32:00 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.3 (2007-08-08) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.3
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 4 Sep 2007 15:32:00 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 60003 invoked from network); 4 Sep 2007 15:31:54 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 4 Sep 2007 15:31:54 -0000
Received: (qmail 25022 invoked by alias); 4 Sep 2007 15:31:41 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 11806
Received: (qmail 25013 invoked from network); 4 Sep 2007 15:31:41 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 4 Sep 2007 15:31:41 -0000
Received: (qmail 58316 invoked from network); 4 Sep 2007 15:31:41 -0000
Received: from vms046pub.verizon.net (206.46.252.46)
  by a.mx.sunsite.dk with SMTP; 4 Sep 2007 15:31:35 -0000
Received: from torch.brasslantern.com ([71.116.91.65])
 by vms046.mailsrvcs.net (Sun Java System Messaging Server 6.2-6.01 (built Apr
 3 2006)) with ESMTPA id <0JNU00MNKOFUUFE6@vms046.mailsrvcs.net> for
 zsh-users@sunsite.dk; Tue, 04 Sep 2007 10:31:09 -0500 (CDT)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id l84FV5GK025600	for
 <zsh-users@sunsite.dk>; Tue, 04 Sep 2007 08:31:05 -0700
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id l84FV4W3025599	for zsh-users@sunsite.dk; Tue,
 04 Sep 2007 08:31:04 -0700
Date: Tue, 04 Sep 2007 08:31:04 -0700
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: fg jobs info
In-reply-to: <20070903163147.GA14017@mastermind>
In-reply-to: <20070904111631.81486.qmail@smasher.org>
To: zsh-users@sunsite.dk
Message-id: <070904083104.ZM25598@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <20070902154306.35880.qmail@smasher.org>
	<070902105953.ZM22915@torch.brasslantern.com>
	<20070903163147.GA14017@mastermind>	<20070904111631.81486.qmail@smasher.org>
Comments: In reply to Matthew Wozniski <godlygeek@gmail.com>
 "Re: fg jobs info" (Sep  3, 12:31pm)
Comments: In reply to Atom Smasher <atom@smasher.org>        "Re: fg jobs info"
 (Sep  4, 11:16pm)

On Sep 3, 12:31pm, Matthew Wozniski wrote:
} Subject: Re: fg jobs info
}
} On Sun, Sep 02, 2007 at 10:59:53AM -0700, Bart Schaefer wrote:
} ...
} > The "jobs" command should accept all the same job-identifier patterns
} > as "fg", and in recent zsh "jobs" doesn't lose track of the job list
} > when run in a subshell
} 
} In how recent a zsh?  I can't seem to get that working with 4.3.4.

You're right.  $(jobs) and (jobs) produce different output.  I thought
that because the latter worked, the former would also.

Looks to me as if there's a bug here; compare

    print $(jobs)
    (print $(jobs))

Also, although "jobs" or "jobs -l" prints out the entire jobs listing
even in subshells/pipelines/etc., "jobs %2" (for example) produces a
"no such job" error, which surprised me.  That should at least be
documented.  Try:

    sleep 40 & sleep 30 &
    jobs | cat
    jobs %1 | cat

So the easy way out is not going to work here after all.

On Sep 4, 11:16pm, Atom Smasher wrote:
}
} On Sun, 2 Sep 2007, Bart Schaefer wrote:
} 
} > Have a look at the variables jobdirs, jobtexts, and jobstates in the 
} > zsh/parameter module.  Or there's a lazier way out:
} =============
} 
} that seems reasonably elegant... as long as a) there's only one
} suspended job or b) jobs are only referred to by number :(
}
} if the there's more than one job and either 1) the current job is
} implied or 2) a job is specified not by job number, things get messy.

Not all *that* messy.  "The current job" is

    jobno=${(k)jobstates[(r)*:+:*]}

Something like "fg %fred" is

    jobno=${(k)jobstates[(r)*:?:fred*]}

And "fg %?wilma" is

    jobno=${(k)jobstates[(r)*:?:*wilma*]}

Then you just do

    fgjob="${jobtexts[$jobno]}"
    fg %$jobno

} also, here's a case where (given what i'm trying to do) i'm confident
} that anything would fail (at least partially), short of some
} non-trivial updates to zsh:
} 
} % fg %1 %2

You just have to handle that inside your "fg" function.

    fg() {
	[[ -z $1 ]] && set -- %+
        # Still ignoring all sorts of error handling here ...
	for jobspec
	do
	    case $jobspec in
	    (%<->) jobno=${jobspec#%};;
	    (%+) jobno=${(k)jobstates[(r)*:+:*]};;
	    (%-) jobno=${(k)jobstates[(r)*:-:*]};;
            # Need more quoting than shown for $jobspec below
	    (%[?]*) jobno=${(k)jobstates[(r)*:?:*${jobspec#%?}*]};;
	    (*) jobno=${(k)jobstates[(r)*:?:${jobspec#%}*]};;
	    esac
	    tab-title "$jobtexts[$jobno]"
	    builtin fg %$jobno
	done
    }

Jobs don't get renumbered as others exit, so the jobspecs that come in
are usable throughout.

The case that's going to be pretty difficult to handle is:

    % %2

(That is, bringing a job to the foreground by simply typing its job spec.
Probably need a preexec function to catch that one.)

Incidentally, yet another bug:

    % sleep 30 & sleep 50 &
    % fg %- %-
    [1]  - running    sleep 30
    fg: %3: no such job

Where did I ever ask for job 3 ?

