From hzoli@cs.elte.hu Thu May  9 10:14:45 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by melb.werple.net.au (8.7.5/8.7.3) with ESMTP id KAA16741 for <mason@werple.mira.net.au>; Thu, 9 May 1996 10:14:43 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id UAA20651; Wed, 8 May 1996 20:08:26 -0400 (EDT)
Resent-Date: Wed, 8 May 1996 20:08:26 -0400 (EDT)
From: Zoltan Hidvegi <hzoli@cs.elte.hu>
Message-Id: <199605090005.CAA00564@hzoli.ppp.cs.elte.hu>
Subject: Re: compctl bug with beta17 on Linux
To: hniksic@gnjilux.cc.fer.hr (Hrvoje Niksic)
Date: Thu, 9 May 1996 02:05:07 +0200 (MET DST)
Cc: zsh-workers@math.gatech.edu
In-Reply-To: <199605080944.LAA04529@gnjilux.cc.fer.hr> from Hrvoje Niksic at "May 8, 96 11:44:30 am"
X-Mailer: ELM [version 2.4ME+ PL11 (25)]
MIME-Version: 1.0
Content-Type: application/pgp; format=text; x-action=sign
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"RhJIV1.0.V25.uTJan"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/1024
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu
Content-Length: 2724
Status: O

-----BEGIN PGP SIGNED MESSAGE-----

> I've found a serious bug that causes zsh-2.6beta17 (but also beta14 and
> probably lots of others) to dump core on Linux box with uname -a output:
> Linux gnjilux.cc.fer.hr 1.3.98 #1 Wed May 8 03:52:40 MET DST 1996 i486

The libc version is much more important here.  I'm sure you use some 1.3.x
libc which is quite good in catching memory allocation bugs.

> In some cases zsh coredumps when programmable completion is set, like in:
> compctl -g '*(D-/)' cd
> 
> and
> cd /home/p[TAB]
> 
> where the file/dir beginning with 'p' doesn't exist, it coredumps. It fails
> always on this one, but in other cases it doesn't (like cd /tmp/x[TAB] when
[...]
> gdb shows that the shell fails in zle_tricky.c, in the second call of
> get_ccompctl, where the cmdstr contains garbage (instead of "cd"), and
> causes declaration char *cmd = dupstring(cmdstr) to coredump in strcpy.

The problem is that cmdstr is initialised in the middle of get_comp_string
using dupstring() and there is a pushheap() before this and a pophheap()
after this.  This means that cmdstr will be freed before returning from
get_comp_string().  A very similar was there in doexpandhist() for very
long time.  This is a bug which can hide there for years causing
unreproducible coredumps once in every month so it's really great the
this new libc revealed this.  After that, the fix is trivial.

Zoltan

 *** Src/zle_tricky.c	1996/05/05 10:06:07	2.25
 --- Src/zle_tricky.c	1996/05/08 23:51:11
 ***************
 *** 871,876 ****
 --- 871,877 ----
       parbegin = parend = -1;
       lincmd = incmdpos;
       linredir = inredir;
 +     zsfree(cmdstr);
       cmdstr = NULL;
       zleparse = 1;
       clwpos = -1;
 ***************
 *** 906,912 ****
   	if (lincmd && tok == STRING)
   	    /* The lexer says, this token is in command position, so store the
   	       token string (to find the right compctl). */
 ! 	    cmdstr = dupstring(tokstr), i = 0;
   	if (!zleparse && !tt0) {
   	    /* This is done when the lexer reached the word the cursor
   	       is on. */
 --- 907,913 ----
   	if (lincmd && tok == STRING)
   	    /* The lexer says, this token is in command position, so store the
   	       token string (to find the right compctl). */
 ! 	    cmdstr = ztrdup(tokstr), i = 0;
   	if (!zleparse && !tt0) {
   	    /* This is done when the lexer reached the word the cursor
   	       is on. */

-----BEGIN PGP SIGNATURE-----
Version: 2.6.3i
Charset: noconv

iQCVAwUBMZE2rwupSCiLN749AQEVDAP+MAU50hFKXpCPcs9ke1jRp3GVY1wFP3DT
5bu/WPkwQ1MqkHs8YeR1PusslzQWK1p/YNgqNYwKMv0FxTW9Ft+T0MQw9IrQj8rQ
3M4aXqPVNtyA1qkFp/gJh4YQXMYt6U/kQCEAc0lFGl29vf3wVxqITKVTAES4dKLJ
nktjkwTIYFI=
=ruH+
-----END PGP SIGNATURE-----


