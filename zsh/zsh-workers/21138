From zsh-workers-return-21138-mason-zsh=primenet.com.au@sunsite.dk Thu Apr 14 09:49:24 2005
Return-Path: <zsh-workers-return-21138-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 27486 invoked from network); 14 Apr 2005 09:49:23 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 14 Apr 2005 09:49:23 -0000
Received: (qmail 29974 invoked from network); 14 Apr 2005 09:49:17 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 14 Apr 2005 09:49:17 -0000
Received: (qmail 18376 invoked by alias); 14 Apr 2005 09:49:13 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 21138
Received: (qmail 18362 invoked from network); 14 Apr 2005 09:49:13 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 14 Apr 2005 09:49:13 -0000
Received: (qmail 29653 invoked from network); 14 Apr 2005 09:49:13 -0000
Received: from mailhost1.csr.com (HELO MAILSWEEPER01.csr.com) (81.105.217.43)
  by a.mx.sunsite.dk with SMTP; 14 Apr 2005 09:49:08 -0000
Received: from exchange03.csr.com (unverified [10.100.137.60]) by MAILSWEEPER01.csr.com
 (Content Technologies SMTPRS 4.3.12) with ESMTP id <T704cbacdf00a6c8d017f4@MAILSWEEPER01.csr.com> for <zsh-workers@sunsite.dk>;
 Thu, 14 Apr 2005 10:47:27 +0100
Received: from news01.csr.com ([10.103.143.38]) by exchange03.csr.com with Microsoft SMTPSVC(5.0.2195.6713);
	 Thu, 14 Apr 2005 10:52:08 +0100
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.13.1/8.12.11) with ESMTP id j3E9n6SS006219
	for <zsh-workers@sunsite.dk>; Thu, 14 Apr 2005 10:49:06 +0100
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.13.1/8.13.1/Submit) with ESMTP id j3E9n5Kp006216
	for <zsh-workers@sunsite.dk>; Thu, 14 Apr 2005 10:49:05 +0100
Message-Id: <200504140949.j3E9n5Kp006216@news01.csr.com>
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: Re: PATCH: allocating a new file descriptor 
In-reply-to: <1050414045748.ZM13551@candle.brasslantern.com> 
References: <200504121257.j3CCvkXr003286@news01.csr.com> <1050414045748.ZM13551@candle.brasslantern.com>
Date: Thu, 14 Apr 2005 10:49:04 +0100
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 14 Apr 2005 09:52:08.0468 (UTC) FILETIME=[9F4CBD40:01C540D7]
X-Spam-Checker-Version: SpamAssassin 3.0.2 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=6.0 tests=AWL,BAYES_00 autolearn=ham 
	version=3.0.2
X-Spam-Hits: -2.6

Bart Schaefer wrote:
> For example,
> 
>     print foo {myfd}>/dev/null
> 
> assigns a new fd to $myfd, but does not redirect the output of "print"
> to it, and leaves it open after "print" is finished.
> 
> Futher, executing the same command again assigns a second new fd to $myfd
> but leaves the first one "dangling" (no way to close it, because you no
> longer know what its number is).

That's just how it works.  It's not supposed to redirect print to the
new fd, it's specifically a syntax to allocate an fd only, and it's
quite explicit that the number is stored in the variable, so if you want
to close it you keep the variable around.  It's only a bug if you
confuse allocation and closing of fd's with their use (which doesn't
mean people won't, nor not neither using double negatives).

I can add documentation to point this out if you think it would be
useful.

It would also be possible to make NO_CLOBBER check that in {myfd}>stuff,
$myfd doesn't already point to an fd with an FDT_EXTERNAL flag.  That
would prevent overwriting.  I quite like that idea.  You could still
loop:

  for file in $filelist; do
     exec {myfd}>$file

     do_stuff_with >&$myfd

     exec {myfd}>&-
  done

because the test wouldn't trigger after $myfd was closed.  For more
complicated cases you might need to set myfd to 0 first (fd's below 10
are never marked with the flag).  Obviously NO_CLOBBER wouldn't apply to
closing the fd.

I don't think there's a good argument for adding automatic redirection,
though.  Fortuitously,

  print This is a log file {myfd}>~/tmp/logfile.txt >&$myfd

works; $myfd is substituted at the right point.  That's quite lucky,
since most expansions have been done by this point.

However, there's also the point that if you use this after an external
command the shell has already forked and the fd doesn't appear in the
parent shell.  Allocation of fd's is most naturally done after "exec"
only.

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070


**********************************************************************
This email and any files transmitted with it are confidential and
intended solely for the use of the individual or entity to whom they
are addressed. If you have received this email in error please notify
the system manager.

**********************************************************************

