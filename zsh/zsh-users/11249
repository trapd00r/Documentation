From zsh-users-return-11249-mason-zsh=primenet.com.au@sunsite.dk Fri Mar 09 11:11:37 2007
Return-Path: <zsh-users-return-11249-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4416 invoked from network); 9 Mar 2007 11:11:31 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=BAYES_00,FORGED_RCVD_HELO
	autolearn=ham version=3.1.8
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 9 Mar 2007 11:11:31 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 40636 invoked from network); 9 Mar 2007 11:11:25 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 9 Mar 2007 11:11:25 -0000
Received: (qmail 18448 invoked by alias); 9 Mar 2007 11:11:17 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 11249
Received: (qmail 18439 invoked from network); 9 Mar 2007 11:11:17 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 9 Mar 2007 11:11:17 -0000
Received: (qmail 39389 invoked from network); 9 Mar 2007 11:11:17 -0000
Received: from cluster-d.mailcontrol.com (217.69.20.190)
  by a.mx.sunsite.dk with SMTP; 9 Mar 2007 11:11:10 -0000
Received: from cameurexb01.EUROPE.ROOT.PRI ([62.189.241.200])
	by rly07d.srv.mailcontrol.com (MailControl) with ESMTP id l29BALaj021736
	for <zsh-users@sunsite.dk>; Fri, 9 Mar 2007 11:11:06 GMT
Received: from news01.csr.com ([10.103.143.38]) by cameurexb01.EUROPE.ROOT.PRI with Microsoft SMTPSVC(6.0.3790.1830);
	 Fri, 9 Mar 2007 11:10:57 +0000
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.13.8/8.13.4) with ESMTP id l29BArhu025784
	for <zsh-users@sunsite.dk>; Fri, 9 Mar 2007 11:10:53 GMT
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.13.8/8.13.8/Submit) with ESMTP id l29BAq07025781
	for <zsh-users@sunsite.dk>; Fri, 9 Mar 2007 11:10:53 GMT
Message-Id: <200703091110.l29BAq07025781@news01.csr.com>
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-users@sunsite.dk
Subject: Re: Organising photos into a list (O/T) 
In-reply-to: <864pouso17.fsf@potato.vegetable.org.uk> 
References: <Xns98EE6824D7FF6zzappergmailcom@80.91.229.5> <864pouso17.fsf@potato.vegetable.org.uk>
Comments: In-reply-to Tim Haynes <zsh@stirfried.vegetable.org.uk>
   message dated "Fri, 09 Mar 2007 10:35:00 +0000."
Date: Fri, 09 Mar 2007 11:10:52 +0000
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 09 Mar 2007 11:10:57.0170 (UTC) FILETIME=[9C81E720:01C7623B]
Content-Type: text/plain
MIME-Version: 1.0
X-Scanned-By: MailControl A-07-06-85 (www.mailcontrol.com) on 10.68.0.117

Tim Haynes wrote:
> zzapper <david@tvis.co.uk> writes:
> > I needed to organise about 60 images into a numerical list. I started by
> > grouping them with a prefix 0001, 0002, 0003 and then using an extra
> > digit to order within the group. I ended up using Windows Explorer and it
> > was an unsatisfactory iterative process. Is this one of those cases where
> > the power of zsh or unix is of no use?
> 
> Depends what criteria you mean by `organize ... into a numerical list'.

Yes, indeed.

> It's a piece of cake to use $SHELL to iterate something like exiftool
> across files and extract one or two fields

The following actually uses identify, which is quite slow since it
extracts far too much information; however, I have it installed.  It
sorts by the first occurrence of the date and time in the metadata:
I've got JPEGs labelled with "Date Time", "Date Time Original" and "Date
Time Digitized" and I've made the code agnostic.  The output is one file
per line in date and time order.  Of course if your files on disk have
the correct (filesystem rather than file metadata) date and time, this
isn't what you want.  But you didn't say.


array=()
for f in *.jpg; do identify -verbose $f | while read line; do
if [[ $line = *Date*Time*:\ (#b)(<->:<->:<->)\ (<->:<->:<->). ]]; then
array+=(${match[1]}:${match[2]}:$f)
break
fi
done
done
print -l ${${(o)array}##*:}


It should be straightforward to generalize.  Oliver has a method of
doing this sort of thing with extended filesystem attributes---you only
need to extract the metadata once, thereafter it's associated with the
file in a way that can quickly be extracted by getfattr.  I believe he
wrote an article about it for (the US) Linux Magazine.  Under Windows
you'd need to do something different.

Meanwhile, yum has been installing exiftool, so here's the equivalent...
exiftool allows you to extract specific tags, but as I said I've
deliberately made it agnostic about which date and time tag it matches.
This is much faster.


array=()
for f in *.jpg; do exiftool $f | while read line; do
if [[ $line = Date/Time*:\ (#b)(<->:<->:<->)\ (<->:<->:<->) ]]; then
array+=(${match[1]}:${match[2]}:$f)
break
fi
done
done
print -l ${${(o)array}##*:}


If by "order into a numerical list" you mean you want the output
numbered, you can pipe the print -l output into cat -n.

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070


To access the latest news from CSR copy this link into a web browser:  http://www.csr.com/email_sig.php

To get further information regarding CSR, please visit our Investor Relations page at http://ir.csr.com/csr/about/overview

