From zsh-users-return-12627-mason-zsh=primenet.com.au@sunsite.dk Tue Feb 19 20:04:35 2008
Return-Path: <zsh-users-return-12627-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 11573 invoked from network); 19 Feb 2008 20:04:33 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 19 Feb 2008 20:04:33 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 70359 invoked from network); 19 Feb 2008 20:04:14 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 19 Feb 2008 20:04:14 -0000
Received: (qmail 11343 invoked by alias); 19 Feb 2008 20:04:04 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12627
Received: (qmail 11327 invoked from network); 19 Feb 2008 20:04:03 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 19 Feb 2008 20:04:03 -0000
Received: from vms173001pub.verizon.net (vms173001pub.verizon.net [206.46.173.1])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 33E218026E0B
	for <zsh-users@sunsite.dk>; Tue, 19 Feb 2008 21:04:00 +0100 (CET)
Received: from torch.brasslantern.com ([71.121.18.67])
 by vms173001.mailsrvcs.net
 (Sun Java System Messaging Server 6.2-6.01 (built Apr  3 2006))
 with ESMTPA id <0JWI00G8P4INB2V8@vms173001.mailsrvcs.net> for
 zsh-users@sunsite.dk; Tue, 19 Feb 2008 13:52:00 -0600 (CST)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id m1JK3kXW020692	for
 <zsh-users@sunsite.dk>; Tue, 19 Feb 2008 12:03:47 -0800
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id m1JK3kcW020691	for zsh-users@sunsite.dk; Tue,
 19 Feb 2008 12:03:46 -0800
Date: Tue, 19 Feb 2008 12:03:46 -0800
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: timeout problem in ssh sessions
In-reply-to: <20080219102057.GA30154@spiegl.de>
To: ZSH User List <zsh-users@sunsite.dk>
Message-id: <080219120346.ZM20690@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <27b8b8a0802130621x47568c7fo304848d02a1c6e76@mail.gmail.com>
	<20080213143803.GI619@prunille.vinc17.org>	<20080214125415.GC31852@spiegl.de>
	<20080214180818.GO619@prunille.vinc17.org>	<20080215103220.GF31852@spiegl.de>
	<080215123047.ZM29728@torch.brasslantern.com>
	<20080215221834.GA23684@spiegl.de>
	<080215192616.ZM30010@torch.brasslantern.com>
	<20080218102729.GA21288@spiegl.de>
	<080219003557.ZM16257@torch.brasslantern.com>
	<20080219102057.GA30154@spiegl.de>
Comments: In reply to Andy Spiegl <zsh.Andy@spiegl.de>
 "Re: timeout problem in ssh sessions" (Feb 19, 11:20am)
X-Virus-Scanned: ClamAV 0.91.2/5886/Tue Feb 19 09:09:14 2008 on bifrost
X-Virus-Status: Clean

On Feb 19, 11:20am, Andy Spiegl wrote:
}
} > schaefer<506> ps="$(ps -eo pid,ppid,cmd)"
} > schaefer<507> print -l "PID: $$" "PPID: $PPID" ${(M)${(f)ps}:#*ps -eo*}
} > PID: 16182
} > PPID: 7139
} > 16255 16254 ps -eo pid,ppid,cmd
} 
} Strange, here it's different:
} 
}  condor:~>ps="$(ps -eo pid,ppid,cmd)"
}  condor:~>print -l "PID: $$" "PPID: $PPID" ${(M)${(f)ps}:#*ps -eo*}
}  PID: 23435
}  PPID: 23388
}  30571 23435 ps -eo pid,ppid,cmd

Hmm ... aha.

 * Do we need to fork?  We need to fork if:
 * 1) The command is supposed to run in the background. (or)
 * 2) There is no `exec' flag, and either:
 *    a) This is a builtin or shell function with output piped somewhere.
 *    b) This is an external command and we can't do a `fake exec'.
 *
 * A `fake exec' is possible if we have all the following conditions:
 * 1) last1 flag is 1.  This indicates that the current shell will not
 *    be needed after the current command.  This is typically the case
 *    when when the command is the last stage in a subshell, or is the
 *    last command after the option `-c'.
 * 2) We don't have any traps set.
 * 3) We don't have any files to delete.

I have a TRAPALRM function, so condition (2) for "fake exec" fails and the
$(...) subshell forks before running "ps".

Zsh is pretty darned clever about this, as even the following doesn't
manage to force an additional fork:

ps="$(<=(ps -eo pid,ppid,cmd))"

However, this does the trick:

ps="$(<<(ps -eo pid,ppid,cmd))"

I'm not sure whether to assert that's "better" than:

ps="$(fgrep -v "pid,ppid" =(ps -eo pid,ppid,cmd))"

In my case, with a trap set, the fgrep formulation results in two extra
forks (one in each subshell) so I suspect $(<<(...)) is preferable.

