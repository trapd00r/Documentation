From zsh-users-return-14651-mason-zsh=primenet.com.au@zsh.org Mon Dec 14 21:42:39 2009
Return-Path: <zsh-users-return-14651-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 12506 invoked by alias); 14 Dec 2009 21:42:39 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14651
Received: (qmail 6721 invoked from network); 14 Dec 2009 21:42:37 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.6 required=5.0 tests=AWL,BAYES_00,TVD_RCVD_IP
	autolearn=no version=3.2.5
Received-SPF: none (ns1.primenet.com.au: domain at fruitbat.org does not designate permitted sender hosts)
Date: Mon, 14 Dec 2009 13:41:27 -0800 (PST)
From: "Peter A. Castro" <doctor@fruitbat.org>
To: zsh-users@zsh.org
Subject: Re: Unable to read history on latest Cygwin
In-Reply-To: <200912142055.nBEKtinh003212@pws-pc.ntlworld.com>
Message-ID: <Pine.LNX.4.64.0912141329190.19572@gremlin.fruitbat.org>
References: <200912142055.nBEKtinh003212@pws-pc.ntlworld.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed

On Mon, 14 Dec 2009, Peter Stephenson wrote:

> "Peter A. Castro" wrote:
>> On Mon, 14 Dec 2009, Peter Stephenson wrote:
>>> On Mon, 14 Dec 2009 15:19:29 +0100
>>> "Thorsten Kampe" <thorsten@thorstenkampe.de> wrote:
>>>> "Hardlinks on FAT [...] have been faked in
>>>> 1.5 by copying the file. The decision was made a couple of weeks back to
>>>> drop this fake since the application should know that the underlying
>>>> filesystem is not capable of creating hardlinks."
>>>
>>> I presume that means symlink() works OK?  We should probably be able to do
>>> something relatively straightforward like the following---using exactly the
>>> same code for symbolic links as hard links, most of the change is indenting
>>> code---though I've only checked it to the extent that it doesn't screw up
>>> somewhere that does support hard links.
>>
>> There is another option to consider here: not using link().
>>
>> The hist code has an alternative code path if link() is not available
>> (#ifdef HAVE_LINK), and it appears this is the only place in zsh code
>> which uses link().  I'm hacking configure to disable this usage on Cygwin
>> to see what, exactly, the difference in behaviour will be.
>
> I think that's rather more brittle: the code I've suggested (assuming it
> does the trick) doesn't require anything more than that link() and
> symlink() exist in the system library and covers any similar problem on
> other systems.  Hacking something specific for any system isn't usually
> desirable, plus all we've been told is that link() doesn't work on
> FAT32, not that it doesn't work under Cygwin.

I'll apply your change and see what it does, though I'm a little
skeptical considering that symlinks are an artificial construct under
Cygwin.  Really they are application-level Windows Short-cut files and an
application needs to "understand" that that is what it is.  Cygwin does
interpret them, for Cygwin apps, but there have been some issues with
using them.  A quick test will tell all.

-- 
Peter A. Castro <doctor@fruitbat.org> or <Peter.Castro@oracle.com>
 	"Cats are just autistic Dogs" -- Dr. Tony Attwood

