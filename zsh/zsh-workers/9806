From zsh-workers-return-9806-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Feb 21 09:14:36 2000
Return-Path: <zsh-workers-return-9806-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 15378 invoked from network); 21 Feb 2000 09:14:35 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 21 Feb 2000 09:14:35 -0000
Received: (qmail 26663 invoked by alias); 21 Feb 2000 09:14:30 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 9806
Received: (qmail 26655 invoked from network); 21 Feb 2000 09:14:30 -0000
Date: Mon, 21 Feb 2000 10:14:29 +0100 (MET)
Message-Id: <200002210914.KAA05482@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: "Bart Schaefer"'s message of Mon, 21 Feb 2000 08:52:57 +0000
Subject: Re: Hmm, something wrong with _multi_parts?


Bart Schaefer wrote:

> The doc says:
> 
> _multi_parts SEP ARRAY
>      This function gets two arguments: a separator character and an
>      array.  As usual, the ARRAY may be either the name of an array
>      parameter or a literal array in the form `(foo bar)' (i.e. a list
>      of words separated by white space in parentheses). [...]
> 
> But if I call it with "a literal array in the form `(foo bar)'" it behaves
> very strangely.  Stuffing the same strings into an actual array and then
> using the name of that array works as I expect.

Oops.

Bye
 Sven

diff -ru ../z.old/Completion/Core/_multi_parts Completion/Core/_multi_parts
--- ../z.old/Completion/Core/_multi_parts	Fri Feb 18 15:42:42 2000
+++ Completion/Core/_multi_parts	Mon Feb 21 10:13:47 2000
@@ -31,7 +31,7 @@
 
 sep="$1"
 if [[ "${2[1]}" = '(' ]]; then
-  matches=( ${2[2,-2]} )
+  matches=( ${=2[2,-2]} )
 else
   matches=( "${(@P)2}" )
 fi

--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

