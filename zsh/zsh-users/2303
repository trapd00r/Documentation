From zsh-users-return-2303-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Apr 14 13:26:00 1999
Return-Path: <zsh-users-return-2303-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 26317 invoked from network); 14 Apr 1999 13:25:59 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 14 Apr 1999 13:25:59 -0000
Received: (qmail 10468 invoked by alias); 14 Apr 1999 13:25:21 -0000
Mailing-List: contact zsh-users-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.auc.dk
X-Seq: 2303
Received: (qmail 10461 invoked from network); 14 Apr 1999 13:25:16 -0000
Date: Wed, 14 Apr 1999 09:24:43 -0400 (EDT)
From: TjL <tjlists@bigfoot.com>
Sender: TjL <tjlists@bigfoot.com>
To: Zsh Users <zsh-users@sunsite.auc.dk>
Subject: huh?  where did the . come from in my $PATH????
Message-ID: <9904140918410.2711-100000@localhost>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII


I have this automatic $PATH maker in .zshenv:

unset PATH

for i in \
          /etc                     \
          /usr                     \
          /bin                     \
          /sbin                    \
          /usr/etc                 \
          /usr/ucb                 \
          /usr/bin                 \
          /usr/gnu/bin             \
          /usr/local/etc           \
          /usr/local/bin           \
          /usr/local/sbin          \
          /usr/local/gnu/bin       \
          /usr/local/shell-scripts \
          $HOME/Library/bin        \
          $HOME/bin                \
          $HOME/Unix/bin                     
do

         if [ -d "$i" ]; then
            PATH=$i:$PATH
	 fi   
done


Which works niftily, except that at the end of the $PATH is "." !!

See:

# echo $PATH
/usr/local/Users/fpc/Unix/bin:/usr/local/shell-scripts:/usr/local/gnu/bin:/usr/local/sbin:/usr/local/bin:/usr/local/etc:/usr/gnu/bin:/usr/bin:/usr/ucb:/usr/etc:/bin:/usr:/etc:.


Now I don't know where that "." came from, but it really really should not
be there!  In fact, I'd almost recommend a "REFUSE_DOT_IN_PATH" option
when compiling zsh!!! (force ./ if you want to execute a command in $PWD
if $PWD is not in $PATH

Any clues what is going wrong?  This is w/ an older version of zsh... I
don't even know where to get the recent versions now with the patches and
whatnot...

TjL




