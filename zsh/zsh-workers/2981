From zsh-workers-request@euclid.skiles.gatech.edu Tue Mar 11 19:33:21 1997
Return-Path: <zsh-workers-request@euclid.skiles.gatech.edu>
Delivered-To: mason@primenet.com.au
Received: (qmail 20453 invoked from network); 11 Mar 1997 19:33:19 -0000
Received: from euclid.skiles.gatech.edu (list@130.207.146.50)
  by coral.primenet.com.au with SMTP; 11 Mar 1997 19:33:19 -0000
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id OAA24529; Tue, 11 Mar 1997 14:11:59 -0500 (EST)
Resent-Date: Tue, 11 Mar 1997 14:11:59 -0500 (EST)
From: Rene Rideau <rideau@obelix.unice.fr>
Message-Id: <199703112015.UAA03347@obelix.unice.fr>
Subject: idea of zsh feature
To: zsh-workers@math.gatech.edu
Date: Tue, 11 Mar 1997 20:15:08 +0000 (WET)
Reply-To: Fare Rideau <rideau@clipper.ens.fr>
X-Mailer: ELM [version 2.4 PL23]
Content-Type: text
Resent-Message-ID: <"sQ2sP2.0.C_5._vQ9p"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/2981
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Dear zsh workers,
   I hope I'm not disturbing you. I'm not subscribed to any zsh list,
but I've been a happy zsh user for years.
Here are a few ideas of features, in case you didn't consider them yet:

* make a difference between an executable program not being present
 and its interpreter not being present:
if foo begins by #!/invalid/path
then zsh will complain:
zsh: no such file or directory: foo
Which means lots of time being spent figuring where the error was!

* would it be possible to dump part or all of the state of zsh
 for fast loading? I have *long* configuration files for the great zsh.
 autoload functions are not space efficient. [I've heard you already
 began binary modules -- sorry]

* Ideally, could it be possible to have a zsh-server,
 with all configuration read that would just fork on a new console?
 Under Linux, I have to spawn a zsh on a new console.
 on systems with a /dev/fd, there could even be called by a zsh-client
 such that the forked server process would "steal" the fd's from the client,
 that would wait until the forked process dies.

* Another solution might be to have a shared memory/mmapedfile
 that would contain some "global" zsh data

* Of course, default behavior should be secure, and sharing should
 happen only with an explicit flag.

Anyway, thanks for your wonderful work,
that turns Unix into an almost livable system!

== Fare' -- rideau@ens.fr -- Franc,ois-Rene' Rideau -- DDa(.ng-Vu~ Ba^n ==
Join the TUNES project for a computing system based on computing freedom !
                TUNES is a Useful, Not Expedient System
URL: "http://www.eleves.ens.fr:8080/home/rideau/Tunes/"

