From zsh-users-return-14121-mason-zsh=primenet.com.au@sunsite.dk Fri May 15 18:55:17 2009
Return-Path: <zsh-users-return-14121-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 23102 invoked from network); 15 May 2009 18:55:04 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 15 May 2009 18:55:04 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 60748 invoked from network); 15 May 2009 18:54:45 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 15 May 2009 18:54:45 -0000
Received: (qmail 22792 invoked by alias); 15 May 2009 18:54:25 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 14121
Received: (qmail 22782 invoked from network); 15 May 2009 18:54:25 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 15 May 2009 18:54:25 -0000
Received: from atom.smasher.org (atom.smasher.org [69.55.237.145])
	by bifrost.dotsrc.org (Postfix) with SMTP id 6B90D80271EA
	for <zsh-users@sunsite.dk>; Fri, 15 May 2009 20:54:19 +0200 (CEST)
Received: (qmail 33901 invoked by uid 1000); 15 May 2009 11:47:36 -0000
Message-ID: <20090515114736.33891.qmail@smasher.org>
Content-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed
Date: Fri, 15 May 2009 23:47:34 +1200 (NZST)
From: Atom Smasher <atom@smasher.org>
In-Reply-To: <691a5d910905140904p538d5343md0712590db983853@mail.gmail.com>
MIME-Version: 1.0
OpenPGP: id=0xB88D52E4D9F57808; algo=1 (RSA); size=4096; url=http://atom.smasher.org/pgp.txt
References: <20090514104908.98556.qmail@smasher.org>
 <691a5d910905140904p538d5343md0712590db983853@mail.gmail.com>
Subject: Re: piping stderr
To: zsh-users@sunsite.dk
X-POM: The Moon is Waning Gibbous (68% of Full)
X-Hashcash: 1:20:0905151147:zsh-users@sunsite.dk::o/IzQ85S1BsAiiOZ:0000000000000
	0000000000000000000000001VS4
X-Virus-Scanned: ClamAV version 0.94.2, clamav-milter version 0.94.2 on bifrost
X-Virus-Status: Clean

On Thu, 14 May 2009, Bart Schaefer wrote:

> On Thu, May 14, 2009 at 3:49 AM, Atom Smasher <atom@smasher.org> wrote:
>> i'd like to pipe all stderr from a script into a command to do logging...
>> but this isn't synchronous:
>>        exec 2> >( multilog /path/ )
>>
>> i need it to be synchronous so that multiple scripts running at the 
>> same time (and also logging debug messages) can all log together and 
>> not clobber each others output.
>
> I'm not sure what you think "synchronous" implies here.  Within a 
> particular "instance" of zsh, such as a single running script, commands 
> can be synchronous in the sense that zsh waits for the command to finish 
> before going on to the next one.  However, multiple scripts "running at 
> the same time" already implies that the zsh instances are asynchronous 
> with respect to one another, so no command started by a particular zsh 
> instance will be synchronous with respect to other instances (unless you 
> employ some sort of external locking scheme, but then you're just 
> preventing the scripts from "running at the same time").
==============

among different scripts (different invocations of the same script) things 
are wildly asynchronous. but within each script, which is logging debug 
output into multilog, i want to make sure that the stderr and debug 
messages appear in the right order. this script shows how that doesn't 
(always) happen:

  #!/bin/zsh

  exec 2> >(rot13)

  date
  dattxxx
  date
  dattxxx
  date
  dattxxx
  date
  dattxxx

the "dattxxx" commands are there to produce "command not found" errors on 
stderr. with zsh 4.2.1 the redirect into a coproc makes it just hang.


> That said ... have you tried your example above?  I'd be mildly 
> surprised if multilog doesn't already do something to assure that 
> multiple loggers don't clobber one another's output.  They might 
> intermingle their output, in which case you need to tag each line of it 
> with a PID or some such, but Dan Bernstein is generally pretty 
> compulsive about preventing data loss.
============

if there's one thing multilog does, it makes sure that multiple inputs 
don't clobber each other. i am tagging each line with a PID so i can grep 
out a particular process and see what's going on.

the problem i'm seeing with the script above, and variations on it, is 
that sometimes the output is in the right order, but sometimes all of 
stdout appears, followed by all of stderr.


-- 
         ...atom

  ________________________
  http://atom.smasher.org/
  762A 3B98 A3C3 96C9 C6B7 582A B88D 52E4 D9F5 7808
  -------------------------------------------------

 	"HEY! HO! LET'S GO!"
 		-- The Ramones

