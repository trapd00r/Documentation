From zsh-users-return-14972-mason-zsh=primenet.com.au@zsh.org Fri Mar 26 19:40:42 2010
Return-Path: <zsh-users-return-14972-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16967 invoked by alias); 26 Mar 2010 19:40:42 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14972
Received: (qmail 166 invoked from network); 26 Mar 2010 19:40:29 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at ckhb.org does not designate permitted sender hosts)
Date: Fri, 26 Mar 2010 12:32:02 -0700 (PDT)
From: "S. Cowles" <scowles@ckhb.org>
X-X-Sender: picmar@ckhb06.ckhb.org
To: zsh-users@zsh.org
Subject: Re: array element subsetting
In-Reply-To: <100326074148.ZM29047@torch.brasslantern.com>
Message-ID: <alpine.LN8.2.00.1003260804010.10812@ckhb06.ckhb.org>
References: <Xns9D456D0F33B88zzappergmailcom@80.91.229.10> <20100324120359.GA29984@fermat.math.technion.ac.il> <Xns9D45D21E0B19Azzappergmailcom@80.91.229.10> <alpine.LN8.2.00.1003260202111.10812@ckhb06.ckhb.org>
 <100326074148.ZM29047@torch.brasslantern.com>
User-Agent: Alpine 2.00 (LN8 1167 2008-08-23)
X-Face: Ek1c-Ll9]E|9mF*Z|hf5VSHqF.]0Qv%;h%=Zne"Y3am*(:Tf_BlXI;j'}FMhu%sNCjSk|</(~~v,k&/W^J;>cxD~oD:g5Tv,gN}{Y8("m<8<%%=_vy
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; format=flowed; charset=US-ASCII

On Fri, 26 Mar 2010, Bart Schaefer wrote:

> Date: Fri, 26 Mar 2010 07:41:48 -0700
> From: Bart Schaefer <schaefer@brasslantern.com>
> On Mar 26,  2:24am, S. Cowles wrote:
> } I am trying to figure out the correct syntax for constructing two
> } one-liner subsetting operations on arrays.  I have two objectives: 1)
> } select nth character from each array element, and 2) select nth element
> } within each array element.
> }
> } The array these methods operate upon is something simple such as:
> } a=(
> } ...
> } )
> (1) can be done with the (M) parameter flag and simple head/tail:
> 	print ${(M)a#?}

Simpler and more straightforward than backreferencing.  Thank you, Bart.

> (2) is more difficult to do without looping, because zsh doesn't
> support multidimensional arrays, so you have to force an eval step
> via the (e) flag:
> 	print ${(e):-'${${=:-'${^a}' ""}[2]}'}

I hadn't previously used the parameter expansion (e) or array creation 
${=...} methods.  The inline array element addition is new to me; I missed 
it in Peter's Manual, book, and the zshall man page.

Would it be worth considering adding a new subsection on Array Subsetting 
to the ARRAY PARAMETERS section of the man pages, just after the Subscript 
Parsing section and just prior to POSITIONAL PARAMETERS?

