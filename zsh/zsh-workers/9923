From zsh-workers-return-9923-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Feb 29 08:15:45 2000
Return-Path: <zsh-workers-return-9923-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 4095 invoked from network); 29 Feb 2000 08:15:43 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 29 Feb 2000 08:15:43 -0000
Received: (qmail 10167 invoked by alias); 29 Feb 2000 08:15:37 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 9923
Received: (qmail 10152 invoked from network); 29 Feb 2000 08:15:36 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer david.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: "Sven Wischnowsky" <wischnow@informatik.hu-berlin.de>,
        <zsh-workers@sunsite.auc.dk>
Subject: RE: Precompiled wordcode zsh functions
Date: Tue, 29 Feb 2000 11:15:33 +0300
Message-ID: <000701bf828d$261408b0$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="koi8-r"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)
In-Reply-To: <200002290745.IAA08900@beta.informatik.hu-berlin.de>
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6700

>
> Yep. In my implementation digest files are really only one-file-
> directories. I.e. they are searched like normal directories by
> getfpfunc() (more precisely a utility function used by it). It will
> not define all functions in the digest file immediatly. I really
> prefer that behaviour because a user has to worry about nothing when,
> for example, he wants to override one of the functions with his own
> definition in a directory earlier in $fpath.
>

Yep, after thinking about it a bit more I believe this is the "least
confusing" case. Unfortunately, here is where kshautoload cuts in :-) Does
your digest handle it currently? What happens with

autoload foo

contents of foo:

some prolog code
bar1() { }
bar2() { }
foo() { }

I'd expect, that bar1, bar2 and foo were (re-)defined as just reference to
already compiled code (actually, true for every funtction possibly defined
in zwc file).


/andrej

