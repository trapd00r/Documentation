From kazda@VNET.IBM.COM Fri May 17 01:11:18 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by melb.werple.net.au (8.7.5/8.7.3) with ESMTP id BAA06109 for <mason@werple.mira.net.au>; Fri, 17 May 1996 01:11:16 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id KAA01391; Thu, 16 May 1996 10:57:55 -0400 (EDT)
Resent-Date: Thu, 16 May 1996 10:57:55 -0400 (EDT)
Date: Thu, 16 May 1996 10:56:18 -0400
From: <kazda@VNET.IBM.COM> (Mike Kazda)
Message-Id: <9605161456.AA34688@rumor.fishkill.ibm.com>
To: Zefram <A.Main@dcs.warwick.ac.uk>
Cc: zsh-workers@math.gatech.edu
Subject: Re: kill-word & friends in ZLE
In-Reply-To: <11210.199605152318@stone.dcs.warwick.ac.uk>
References: <199605152302.BAA13777@jagor.srce.hr>
        <11210.199605152318@stone.dcs.warwick.ac.uk>
Resent-Message-ID: <"oHibn3.0.cL.o9qcn"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/1088
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu
Content-Length: 1058
Status: O

>>>>> "Zefram" == Zefram  <A.Main@dcs.warwick.ac.uk> writes:

    >> It is quite irritating for me that in zsh's Emacs mode
    >> functions like backward-kill-word and similar behave in a
    >> different fashion. Examples:
    >>
    >> fly% cd /usr/local/lib/gwembljh[Esc-Backspace]
    >>
    >> and everything is erased, instead of just gwembljh.

I've had this problem ever since switching to zsh and I never really
complained about it.  But it is a big complaint of mine.

    Zefram> The vi word functions (vi-{for,back}ward-word, etc.) are
    Zefram> more like what you want.  Or you could just modify
    Zefram> WORDCHARS in your .zshrc.

I tried setting the following in zsh (beta17) and it had no effect:

WORDCHARS='*?_-.[]~=/&;!#$%^(){}<>'

Do you have any hints?  I feel that the default behavior should work
like emacs or ksh using emacs mode.  Meaning if you do
[Escape-Backspace] on something which has slashes in it (which I would do
all the time on pathnames that I mess up in typing) it should kill
only back to the next slash.

Mike


