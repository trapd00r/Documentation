From zsh-workers-return-8697-mason-zsh=primenet.com.au@sunsite.auc.dk Sat Nov 20 20:53:43 1999
Return-Path: <zsh-workers-return-8697-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 7674 invoked from network); 20 Nov 1999 20:53:42 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 20 Nov 1999 20:53:42 -0000
Received: (qmail 29106 invoked by alias); 20 Nov 1999 20:53:36 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 8697
Received: (qmail 29099 invoked from network); 20 Nov 1999 20:53:34 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <991120205331.ZM15647@candle.brasslantern.com>
Date: Sat, 20 Nov 1999 20:53:31 +0000
In-Reply-To: <19991120151807.A22546@dman.com>
Comments: In reply to Clint Adams <schizo@debian.org>
        "PATCH: math and locale" (Nov 20,  3:18pm)
References: <19991120151807.A22546@dman.com>
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-workers@sunsite.auc.dk
Subject: Re: PATCH: math and locale
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Nov 20,  3:18pm, Clint Adams wrote:
} Subject: PATCH: math and locale
}
} This alleviates the decimal point problem by making it
} locale-independent.  This reverses the previous fix
} which introduced new problems.

Here's the equivalent against 3.1.6-bart-8, for those of you who, like me,
never applied Clint's previous patch and hence don't need to reverse it.

I'm mildly concerned that setting and restoring the locale is an excessive
overhead, especially if it's a no-op (prev_local is already "POSIX" or "C").
Can anyone reassure me?

I also wonder whether "C" would not be a better choice than "POSIX" here.

Index: Src/math.c
===================================================================
@@ -184,6 +184,9 @@
 static int
 zzlex(void)
 {
+#ifdef USE_LOCALE
+    char *prev_locale;
+#endif
     int cct = 0;
 
     yyval.type = MN_INTEGER;
@@ -356,7 +359,14 @@
 		if (*nptr == '.' || *nptr == 'e' || *nptr == 'E') {
 		    /* it's a float */
 		    yyval.type = MN_FLOAT;
+#ifdef USE_LOCALE
+		    prev_locale = setlocale(LC_NUMERIC, NULL);
+		    setlocale(LC_NUMERIC, "POSIX");
+#endif
 		    yyval.u.d = strtod(ptr, &nptr);
+#ifdef USE_LOCALE
+		    setlocale(LC_NUMERIC, prev_locale);
+#endif
 		    if (ptr == nptr || *nptr == '.') {
 			zerr("bad floating point constant", NULL, 0);
 			return EOI;

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

