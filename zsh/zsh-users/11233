From zsh-users-return-11233-mason-zsh=primenet.com.au@sunsite.dk Sun Mar 04 00:07:25 2007
Return-Path: <zsh-users-return-11233-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 19531 invoked from network); 4 Mar 2007 00:07:20 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=BAYES_00,FORGED_RCVD_HELO
	autolearn=ham version=3.1.8
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 4 Mar 2007 00:07:20 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 89299 invoked from network); 4 Mar 2007 00:07:14 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 4 Mar 2007 00:07:14 -0000
Received: (qmail 13118 invoked by alias); 4 Mar 2007 00:07:04 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 11233
Received: (qmail 13107 invoked from network); 4 Mar 2007 00:07:01 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 4 Mar 2007 00:07:01 -0000
Received: (qmail 87925 invoked from network); 4 Mar 2007 00:07:01 -0000
Received: from vms044pub.verizon.net (206.46.252.44)
  by a.mx.sunsite.dk with SMTP; 4 Mar 2007 00:06:54 -0000
Received: from torch.brasslantern.com ([71.116.117.231])
 by vms044.mailsrvcs.net
 (Sun Java System Messaging Server 6.2-6.01 (built Apr  3 2006))
 with ESMTPA id <0JEC00B55QZ97A7B@vms044.mailsrvcs.net> for
 zsh-users@sunsite.dk; Sat, 03 Mar 2007 18:06:46 -0600 (CST)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id l2406itZ006469	for
 <zsh-users@sunsite.dk>; Sat, 03 Mar 2007 16:06:44 -0800
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id l2406hIg006468	for zsh-users@sunsite.dk; Sat,
 03 Mar 2007 16:06:43 -0800
Date: Sat, 03 Mar 2007 16:06:42 -0800
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: auto-reflesh $PATH
In-reply-to: <c12037010703031514h2730c96te5b721188deda41d@mail.gmail.com>
To: zsh-users@sunsite.dk
Message-id: <070303160643.ZM6467@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <c12037010703031514h2730c96te5b721188deda41d@mail.gmail.com>
Comments: In reply to "Kazuhiko Uebayashi" <kzhk75@gmail.com>
 "auto-reflesh $PATH" (Mar  4,  8:14am)

On Mar 4,  8:14am, Kazuhiko Uebayashi wrote:
}
} In Bash, I put some executable file in $PATH
} then the executable file immediately works.

To get zsh to have the equivalent behavior, you would need:

  unsetopt hashcmds hashdirs hashlistall correct correctall
  hash -r

This is not the same as refreshing the hash table of commands found in
the path; insteady it's forcing the hash table to be turned off and to
remain turned off, so that (like bash) zsh re-searches it every time a
command is executed.

However, I don't have a problem with new executables added to the path
being "not found" in zsh 4.2+.  Which version of zsh are you running?

} Is it possible to reflesh $PATH "automatically" in Zsh?

Only in so far as you can do anything automatically in zsh, such as by
adding it to a precmd or preexec function.

} If possible, what should I do?

When you know a new executable has been installed, run the command:
    rehash

If that's too much effort, try something like this (which assumes you
have NOT used the "unsetopt" command above):

    function preexec {
      local -a modified_path
      modified_path=( ${^path}(Nms${SECONDS}) )
      SECONDS=0
      if (( $#modified_path ))
      then hash -r
      fi
    }

(Note that this may not work in some older versions of zsh without some
tweaking because of differing interpretations of glob qualifiers.)

That won't catch files being renamed within the same directory in $PATH,
but if you have a lot of directories or a lot of commands in the path it
is probably faster than doing a rehash before every command.

-- 

