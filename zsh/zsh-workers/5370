From zsh-workers-return-5370-mason-zsh=primenet.com.au@sunsite.auc.dk Sun Feb 14 00:51:36 1999
Return-Path: <zsh-workers-return-5370-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 24948 invoked from network); 14 Feb 1999 00:51:35 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 14 Feb 1999 00:51:35 -0000
Received: (qmail 2625 invoked by alias); 14 Feb 1999 00:51:07 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 5370
Received: (qmail 2610 invoked from network); 14 Feb 1999 00:50:47 -0000
From: "Bart Schaefer" <schaefer@brasslantern.com>
Message-Id: <990213165025.ZM24264@candle.brasslantern.com>
Date: Sat, 13 Feb 1999 16:50:25 -0800
X-Mailer: Z-Mail (4.0b.820 20aug96)
To: zsh-workers@sunsite.auc.dk
Subject: Misc. questions/remarks on new completion stuff
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

In no particular order ...


I think "complist" could do with a better name.  I've repeatedly been deluded
into thinking that it's only used when generating completion listings, when
really it adds possible matches that can be inserted on the command line.


Speaking of complist, what's the difference between
	compadd -m foo bar baz boing
and
	complist -k '(foo bar baz boing)'
??  How much other overlap is there between these two commands?


In Functions/Completion/*, I think "#array" is a bad name for that tag.  The
"#function" tag means the function will actually generate matches, that is,
call compadd or complist.  But a "#array" file doesn't generate an array of
matches -- it generates an array of arguments to complist.  Why not use the
tag "#complist" or "#complist-args" so it's more obvious what's going on?

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

