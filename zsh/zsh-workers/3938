From zsh-workers-request@math.gatech.edu Thu May 07 08:35:05 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 27460 invoked from network); 7 May 1998 08:35:04 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 7 May 1998 08:35:04 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.8.5/8.8.5) id EAA09177;
	Thu, 7 May 1998 04:27:05 -0400 (EDT)
Resent-Date: Thu, 7 May 1998 04:27:05 -0400 (EDT)
From: Andrew Main <zefram@tao.co.uk>
Message-Id: <199805070827.JAA01262@taos.demon.co.uk>
Subject: Re: zsh vs. ksh coproc redirection semantics
To: schaefer@brasslantern.com (Bart Schaefer)
Date: Thu, 7 May 1998 09:27:16 +0100 (BST)
Cc: zefram@tao.co.uk, zsh-workers@math.gatech.edu
In-Reply-To: <980506132628.ZM14415@candle.brasslantern.com> from "Bart Schaefer" at May 6, 98 01:26:28 pm
X-Loop: zefram@tao.co.uk
X-Phase: The Moon is Waxing Gibbous (85% of Full)
X-Stardate: [-30]1116.76
X-US-Congress: moronic fuckers
X-Headers: OTT
X-Mouse: +++ ????? +++  Out Of Cheese Error.  Redo From Start.
X-Parrot: no, it's only resting.
X-Personality: INTJ
X-email-is-not-HTML: <blink> <font face="wingdings">
X-Mailer: ELM [version 2.4 PL25]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"bjrVM3.0.HF2.O1NKr"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/3938
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Bart Schaefer wrote:
>That doesn't address the issue of how to close the coproc input in the
>basic zsh model.  Is "coproc exit" really going to be the approved way?

That's a separate issue.  I think the best solution is tied into access
to file descriptors above 9: make the coprocess fds be 10 and 11, and
then you can do (ignoring for the moment the single digit restriction of
the syntax) "10>&- 11>&-" to close them.  ">&p" would be shorthand for
">&10", and so on.

What syntax to use for these fds is another issue altogether.  We're
seriously short of special characters, and I don't see a good syntax
that's compatible with POSIX.  (The best I see is to put ">;" preceding
the multi-digit version of the normal syntax.)  OTOH, it would probably
be reasonably easy to simply allow multi-digit fd numbers with an option,
enabled by default only in zsh mode.

-zefram

