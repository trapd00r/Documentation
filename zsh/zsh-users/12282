From zsh-users-return-12282-mason-zsh=primenet.com.au@sunsite.dk Tue Dec 04 03:33:20 2007
Return-Path: <zsh-users-return-12282-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 818 invoked from network); 4 Dec 2007 03:33:12 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.3 (2007-08-08) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.3
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 4 Dec 2007 03:33:12 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 1978 invoked from network); 4 Dec 2007 03:26:26 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 4 Dec 2007 03:26:26 -0000
Received: (qmail 23297 invoked by alias); 4 Dec 2007 03:26:13 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12282
Received: (qmail 23275 invoked from network); 4 Dec 2007 03:26:12 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 4 Dec 2007 03:26:12 -0000
Received: (qmail 529 invoked from network); 4 Dec 2007 03:26:12 -0000
Received: from vms048pub.verizon.net (206.46.252.48)
  by a.mx.sunsite.dk with SMTP; 4 Dec 2007 03:26:06 -0000
Received: from torch.brasslantern.com ([71.121.18.67])
 by vms048.mailsrvcs.net (Sun Java System Messaging Server 6.2-6.01 (built Apr
 3 2006)) with ESMTPA id <0JSI003209J8O6A5@vms048.mailsrvcs.net> for
 zsh-users@sunsite.dk; Mon, 03 Dec 2007 21:25:57 -0600 (CST)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id lB43Ps03005297	for
 <zsh-users@sunsite.dk>; Mon, 03 Dec 2007 19:25:55 -0800
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id lB43PsG7005296	for zsh-users@sunsite.dk; Mon,
 03 Dec 2007 19:25:54 -0800
Date: Mon, 03 Dec 2007 19:25:54 -0800
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: command substitution: zsh waits until command exits
In-reply-to: <20071204020325.GF5855@prunille.vinc17.org>
To: zsh-users@sunsite.dk
Message-id: <071203192554.ZM5295@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <071130073719.ZM18090@torch.brasslantern.com>
	<20071130163155.GL5855@prunille.vinc17.org>
	<071130185827.ZM18402@torch.brasslantern.com>
	<20071202021652.GO5855@prunille.vinc17.org>
	<071201210744.ZM20044@torch.brasslantern.com>
	<20071202152254.GP5855@prunille.vinc17.org>
	<071202102717.ZM2757@torch.brasslantern.com>
	<20071203011131.GT5855@prunille.vinc17.org>
	<20071203170225.GD5855@prunille.vinc17.org>
	<071203104107.ZM4640@torch.brasslantern.com>
	<20071204020325.GF5855@prunille.vinc17.org>
Comments: In reply to Vincent Lefevre <vincent@vinc17.org>
 "Re: command substitution: zsh waits until command exits" (Dec  4,  3:03am)

On Dec 4,  3:03am, Vincent Lefevre wrote:
} Subject: Re: command substitution: zsh waits until command exits
}
} > } #!/usr/bin/env zsh
} > } 
} > } echo foo | tee \
} > }   $({ xterm -e 'zsh -fic "tty >&3 ; exec sleep 99999999"' 3>&1 & } | read -E)
} > } 
} > } and run it, then lots of xterms are started recursively!
} > 
} > What did you name the script?  I can't reproduce this.
} 
} I've found the problem: this comes from the line
} 
}   SHELL=${0#-}
} 
} I have in my ".zshenv". Somewhere .zshenv is sourced with $0 having
} the name of the script. Is there any reason?

I suspect that first

#!/usr/bin/env zsh

starts a shell which doesn't have -f and therefore reads .zshenv and
sets SHELL to the name of the script, and *then* xterm starts $SHELL
to intepret its -e option.  The problem with using "env" in that way
is that you can't provide any options to the command.

Try it this way, where the -e option is not a quoted string:

------------------
#!/usr/bin/env zsh

echo foo | tee \
$({ xterm -e zsh -fic "tty >&3 ; exec sleep 99999999" 3>&1 & } | read -E)
------------------

If that doesn't work, explicitly reset SHELL:

------------------
#!/usr/bin/env zsh
SHELL=$(/usr/bin/env zsh)
echo foo | tee \
$({ xterm -e 'zsh -fic "tty >&3 ; exec sleep 99999999"' 3>&1 & } | read -E)
------------------

