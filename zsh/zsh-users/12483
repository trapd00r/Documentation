From zsh-users-return-12483-mason-zsh=primenet.com.au@sunsite.dk Fri Jan 25 21:57:50 2008
Return-Path: <zsh-users-return-12483-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1198 invoked from network); 25 Jan 2008 21:57:47 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 25 Jan 2008 21:57:47 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 59061 invoked from network); 25 Jan 2008 21:57:34 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 25 Jan 2008 21:57:34 -0000
Received: (qmail 29337 invoked by alias); 25 Jan 2008 21:57:22 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12483
Received: (qmail 18586 invoked from network); 25 Jan 2008 20:10:41 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 25 Jan 2008 20:10:41 -0000
Received: from mga03.intel.com (mga03.intel.com [143.182.124.21])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 844598028C6A
	for <zsh-users@sunsite.dk>; Fri, 25 Jan 2008 21:10:35 +0100 (CET)
Received: from azsmga001.ch.intel.com ([10.2.17.19])
  by azsmga101.ch.intel.com with ESMTP; 25 Jan 2008 12:10:31 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="4.25,252,1199692800"; 
   d="scan'208";a="371349921"
Received: from orsmsx335.jf.intel.com ([10.22.226.40])
  by azsmga001.ch.intel.com with ESMTP; 25 Jan 2008 12:10:11 -0800
Received: from orsmsx419.amr.corp.intel.com ([10.22.226.88]) by orsmsx335.jf.intel.com with Microsoft SMTPSVC(6.0.3790.1830);
	 Fri, 25 Jan 2008 12:10:10 -0800
X-MimeOLE: Produced By Microsoft Exchange V6.5
Content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: quoted-printable
Subject: RE: idea for new feature (was: Re: sticky-note and zle bindings)
Date: Fri, 25 Jan 2008 12:10:11 -0800
Message-ID: <1B47D24854C7BC4FA8DA28BEBB59B0BA02E64EAC@orsmsx419.amr.corp.intel.com>
In-reply-to: <2d460de70801250149t360f9938u18d458b03f464c72@mail.gmail.com>
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Thread-Topic: idea for new feature (was: Re: sticky-note and zle bindings)
Thread-Index: AchfN7aQB90G862NRVCl2sOq5i/irQAQjYRQ
References: <13ed09c00801241017x1cd7c454lcbf9156b6bccd9bb@mail.gmail.com> <080124215848.ZM19758@torch.brasslantern.com> <2d460de70801250149t360f9938u18d458b03f464c72@mail.gmail.com>
From: "Bastian, Waldo" <waldo.bastian@intel.com>
To: "Richard Hartmann" <richih.mailinglist@gmail.com>,
	"Bart Schaefer" <schaefer@brasslantern.com>
Cc: "Robert Knight" <robertknight@gmail.com>,
	<zsh-users@sunsite.dk>
X-OriginalArrivalTime: 25 Jan 2008 20:10:10.0930 (UTC) FILETIME=[49DD6520:01C85F8E]
X-Virus-Scanned: ClamAV 0.91.2/5550/Fri Jan 25 08:02:45 2008 on bifrost
X-Virus-Status: Clean

Replying to the XDG part: You are encouraged to write up a small spec
that defines file formats & file locations for this. The file locations
should then be defined in terms of $XDG_DATA_HOME and reference the
base-dir spec.

For example, you can say that a shell should look for a file named
$XDG_DATA_HOME/shell_sessions/$SHELL_SESSION_ID=20

Please post to xdg@lists.freedesktop.org to have your spec reviewed.

Cheers,
Waldo
=20
Intel Corporation - Platform Software Engineering, UMG - Hillsboro,
Oregon

-----Original Message-----
From: Richard Hartmann [mailto:richih.mailinglist@gmail.com]=20
Sent: Friday, January 25, 2008 1:50 AM
To: Bart Schaefer
Cc: Robert Knight; zsh-users@sunsite.dk; bastian@kde.org
Subject: Re: idea for new feature (was: Re: sticky-note and zle
bindings)

On Jan 25, 2008 6:58 AM, Bart Schaefer <schaefer@brasslantern.com>
wrote:


> So in this scheme the terminal emulator creates the SHELL_SESSION_ID
> and places it in the environment when the shell is started?  I.e.,
> Konsole would be responsible for telling the shell which session to
> resume (or to start a new one)?
>
> If that's not what you mean, can you be more specific?

That is exactly what I meant, yes. If ZSH already has information
regarding
this ID, it can use it. If it does not, it would create a new set of
whatever it
needs to keep all info.


> I'm not sure I follow the nuances here.  If a single window closes
> before the user shuts his whole desktop session down, then the session
> for that window ends, doesn't it?  Regardless of what application is
> the creator of that window?
>
> Is what you mean that the shell needs to find out when it can "garbage
> collect" whatever data it has stored for a session that's never going
> to be resumed?

Yes, the garbage collection is the issue, here.


> Certainly the shell can clean up when it believes the session is not
> going to be resumed.  Even if a terminal emulator later re-uses the
> same session ID, the shell will just act as if a new session started.

Unless the shell is told explicitly by some mechanism that its session
is ending now, I do not think a shell should ever remove stuff from its
own session. Unless the session state's size goes over a certain
threshold, that is. That way, newer instances of the shell could
determine if a certain session state collection can be destroyed.

Another thing to keep in mind is that a way to tell, from the outside,
if a session state collection is currently in use would be needed.


> You'd have to do some kind of time limit rather than a number limit.
> I sometimes have more than 20 shell windows open at a time.

It would probably be best to let the user decide what garbage collection
method[s] he or she prefers. ZSH is famous for its fine-grained control
over pretty much everything, there is a reputation to uphold :p


> What does "escape code" mean here?  What sends it, and to who?

I assume Robert meant a terminal would tell the shell it is OK to
collect,
now.


> Here's a slightly different suggestion:  Instead of SHELL_SESSION_ID,
> how about SHELL_SESSION_FILE ?  The terminal creates a file and puts
> the path to it in the environment.  The shell can then choose to put
> its session data in that file, or put it somewhere else and use the
> file as a semaphore.  If the emulator (or the desktop session, even)
> decides that the shell session has ended, it removes that file.  If
> the shell stored its data in the file, the session is gone.  If it
> used the file as a semaphore it can garbage-collect any session data
> for which the file no longer exists.  (The file would have to be in a
> predictable location (SHELL_SESSION_DIR ?) for the latter to work.)

That idea is also quite neat. Perhaps a DIR and an ID? If all shells
were
to always use the ID in every file related to a specific session, it
could
keep an arbitary set of files with arbitary names, probably even
subdirectories, and the terminal would still know what to delete if it
chose
to do so.


The more I think about this, the more I suspect this could be tied into
the
XDG [1] specs. It follows a somwhat similar goal and one mechanism
could push the adoption of the other as the exposure of both would
increase. On a hunch, I am CC'ing Waldo Bastian, who seems to be
the main author of XDG.


Richard

[1] http://standards.freedesktop.org/basedir-spec/basedir-spec-0.6.html

