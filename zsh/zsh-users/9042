From zsh-users-return-9042-mason-zsh=primenet.com.au@sunsite.dk Thu Jul 07 02:02:31 2005
Return-Path: <zsh-users-return-9042-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 5536 invoked from network); 7 Jul 2005 02:02:30 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 7 Jul 2005 02:02:30 -0000
Received: (qmail 57361 invoked from network); 7 Jul 2005 02:02:24 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 7 Jul 2005 02:02:24 -0000
Received: (qmail 26875 invoked by alias); 7 Jul 2005 02:02:17 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 9042
Received: (qmail 26866 invoked from network); 7 Jul 2005 02:02:16 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 7 Jul 2005 02:02:16 -0000
Received: (qmail 56296 invoked from network); 7 Jul 2005 02:02:16 -0000
Received: from mxfep01.bredband.com (195.54.107.70)
  by a.mx.sunsite.dk with SMTP; 7 Jul 2005 02:02:11 -0000
Received: from puritan.pnetwork ([213.112.43.228] [213.112.43.228])
          by mxfep01.bredband.com with ESMTP
          id <20050707020210.NVLE26070.mxfep01.bredband.com@puritan.pnetwork>
          for <zsh-users@sunsite.dk>; Thu, 7 Jul 2005 04:02:10 +0200
Received: by puritan.pnetwork (Postfix, from userid 1000)
	id 57272ADFEA; Thu,  7 Jul 2005 04:02:10 +0200 (CEST)
Date: Thu, 7 Jul 2005 04:02:10 +0200
From: Nikolai Weibull <mailing-lists.zsh-users@rawuncut.elitemail.org>
To: zsh-users@sunsite.dk
Subject: Re: Adding a prefix to certain filename completions
Message-ID: <20050707020210.GA5084@puritan.pnetwork>
Mail-Followup-To: zsh-users@sunsite.dk
References: <20050705172846.GB5362@puritan.pnetwork> <20050704193711.GF6330@puritan.pnetwork> <20050705042324.GA21301@picard.franken.de> <20050705080946.GC5333@puritan.pnetwork> <Pine.OSX.4.58.0507050720380.17349@vanunu.ucsc.edu> <20050705172846.GB5362@puritan.pnetwork> <1050706050022.ZM13972@candle.brasslantern.com> <20050706113154.GA5313@puritan.pnetwork>
Mime-Version: 1.0
Content-Type: multipart/mixed; boundary="4Ckj6UjgE2iN1+kY"
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <20050706113154.GA5313@puritan.pnetwork>
User-Agent: Mutt/1.5.8i
X-Spam-Checker-Version: SpamAssassin 3.0.2 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=6.0 tests=AWL,BAYES_00 autolearn=ham 
	version=3.0.2
X-Spam-Hits: -2.6


--4Ckj6UjgE2iN1+kY
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit

Nikolai Weibull wrote:

> Ah, that’s great!  I’ll try to find some time today to actually write a
> complete _vim completion.

OK, so it’s sad that I can only find spare time at 2 am, but here it is,
a quite complete Vim completion defintion.  There’s a problem with the
+<n> option, though.  I couldn’t figure out a proper way of escaping the
+ that is the options name (just using \+ doesn’t work).  Anyone have
any brilliant ideas on this, or is this a problem with the _arguments
argument-parser?

Anyway, enjoy,
        nikolai

-- 
Nikolai Weibull: now available free of charge at http://bitwi.se/!
Born in Chicago, IL USA; currently residing in Gothenburg, Sweden.
main(){printf(&linux["\021%six\012\0"],(linux)["have"]+"fun"-97);}

--4Ckj6UjgE2iN1+kY
Content-Type: text/plain; charset=us-ascii
Content-Disposition: attachment; filename=_vim

#compdef vim

_my_files () {
  [[ $PREFIX == +* ]] && _files -P './' $* || _files $*
}

local arguments

arguments=(
  '(   -e -s -d -y)-v[vi mode]'
  '(-v       -d -y)-e[ex mode]'
  '(-v -e -s    -y)-d[diff mode]'
  '(-v -e -s -d   )-y[easy mode]'
  '-R[readonly mode]'
  '-Z[restricted mode]'
  '-m[modifications (writing files) not allowed]'
  '-M[modifications in text not allowed]'
  '-b[binary mode]'
  '-l[lisp mode]'
  '-C[make vim compatible with vi]'
  '-N[do not force compatibility with vi]'
  '-V-[verbosity level]::verbosity:((0\:"do not display any messages"
                                     1\:"display when viminfo file is read or written"
                                     2\:"display sourced files"
                                     5\:"display every searched tag-file"
                                     8\:"display files that trigger autocommands"
                                     9\:"display every triggered autocommand (default)"
                                    12\:"display every executed function"
                                    13\:"report every thrown, caught, finished, or discarded exception"
                                    14\:"display anything pending in a \:finally clause"
                                    15\:"display every executed ex-command"))'
  '-D[debugging mode]'
  '-n[no swap file (memory only)]'
  {-r,-L}'[list swap files and exit or recover from a swap file]::swap file:_my_files -g \*.sw\?'
  '(   -H -F)-A[start in Arabic mode]'
  '(-A    -F)-H[start in Hebrew mode]'
  '(-A -H   )-H[start in Farsi mode]'
  '-T[set terminal type]:::_terminals'
  '-u[use given RC file instead of default .vimrc]::rc file:_files'
  '--noplugin[do not load plugin scripts]'
  '-o-[number of windows to open (default: one for each file)]::window count: '
  '-O-[number of windows to vertically split open (default is one for each file)]::window count: '
#  '\+-[start at given line (default: end of file)]::line number: '
  '*--cmd[execute given command before loading any RC files]:command: '
  '-c[executed given command after loading the first file]:command: '
  '-S[source a session file after loading the first file]:session file:_files'
  '-s[read normal-mode commands from script file]:script file:_files'
  '-w[append all typed commands to given file]:output file:_files'
  '-W[write all typed commands to given file]:output file:_files'
  '-x[edit encrypted files]'
  '-X[do not connect to X server]'
  '--remote[edit given files in a vim server if possible]:*:file:_my_files'
  '--remote-silent[as --remote but without complaining if not possible]:*:file:_my_files'
  '--remote-wait[as --remote but wait for files to have been edited]:*:file:_my_files'
  '--remote-wait-silent[as --remote-wait but without complaining if not possible]:*:file:_my_files'
  '--remote-send[send given keys to vim server if possible]:keys: '
  '--remote-expr[evaluate given expression in a vim server and print result]:expression: '
  '(- *)--serverlist[list available vim servers and exit]'
  '--servername[name of vim server to send to or name of server to become]:server name: '
  '-i[use given viminfo file instead of default .viminfo]:viminfo file:_files'
  '(- *)'{-h,--help}'[print help and exit]'
  '(- *)--version[print version information and exit]'
  '*:file:_my_files'
)

_arguments -S $arguments

--4Ckj6UjgE2iN1+kY--

