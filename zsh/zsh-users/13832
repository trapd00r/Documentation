From zsh-users-return-13832-mason-zsh=primenet.com.au@sunsite.dk Fri Feb 13 03:26:30 2009
Return-Path: <zsh-users-return-13832-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 26957 invoked from network); 13 Feb 2009 03:26:26 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 13 Feb 2009 03:26:26 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 27034 invoked from network); 13 Feb 2009 03:26:17 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 13 Feb 2009 03:26:17 -0000
Received: (qmail 8876 invoked by alias); 13 Feb 2009 03:26:01 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13832
Received: (qmail 8864 invoked from network); 13 Feb 2009 03:26:01 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 13 Feb 2009 03:26:01 -0000
Received: from vms173003pub.verizon.net (vms173003pub.verizon.net [206.46.173.3])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 1F08780271F0
	for <zsh-users@sunsite.dk>; Fri, 13 Feb 2009 04:25:55 +0100 (CET)
Received: from torch.brasslantern.com ([96.238.220.215])
 by vms173003.mailsrvcs.net
 (Sun Java(tm) System Messaging Server 6.3-7.04 (built Sep 26 2008; 32bit))
 with ESMTPA id <0KEZ001M6IUDXLR2@vms173003.mailsrvcs.net> for
 zsh-users@sunsite.dk; Thu, 12 Feb 2009 21:25:30 -0600 (CST)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id n1D3PODl011728	for
 <zsh-users@sunsite.dk>; Thu, 12 Feb 2009 19:25:24 -0800
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id n1D3PNBC011727	for zsh-users@sunsite.dk; Thu,
 12 Feb 2009 19:25:23 -0800
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <090212192523.ZM11726@torch.brasslantern.com>
Date: Thu, 12 Feb 2009 19:25:23 -0800
In-reply-to: <4994E32E.2050508@gatech.edu>
Comments: In reply to Matthew Flaschen <matthew.flaschen@gatech.edu>
 "Re: /usr/bin/printf" (Feb 12, 10:04pm)
References: <4994CFCF.2090408@gatech.edu>
	<237967ef0902121751k37dd810co312238682d9b60f0@mail.gmail.com>
	<4994E32E.2050508@gatech.edu>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-users@sunsite.dk
Subject: Re: /usr/bin/printf
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
X-Virus-Scanned: ClamAV 0.92.1/8985/Thu Feb 12 23:11:57 2009 on bifrost
X-Virus-Status: Clean

On Feb 12, 10:04pm, Matthew Flaschen wrote:
}
} Mikael Magnusson wrote:
} > This is because your preexec() function is broken and is outputting
} > the newline from the cmdline without escaping it
} 
} Okay, here's my preexec.  I admit I don't understand this syntax yet:
} 
} preexec () { print -Pn "\e]0;%n@%m: $1\a" }
} 
} I got it from
} http://web.archive.org/web/20071224181948/www.princeton.edu/~kmccarty/zsh.html
} 
} Do you know how I would correct it?

The problem is that $1 is first expanded by the command parser and then
passed to "print".  When $1 contains the substring "\n", "print" turns
that into a newline.  So you need to quote the value of $1 against
further expansion by "print".

preexec () { print -Pn "\e]0;%n@%m: ${(q)1}\a" }

The (q) tells zsh to insert a backslash before any special characters
that appear in the value of $1, including the backslash in "\n".  Then
"print" strips the extra backslashes off again and the final output is
the original string.

Or, well, it would be, except there's that -P option there, which will
turn any %x (for any x) in your $1 into some sort of prompt expando.
So you really need to do this in two steps, one to do the prompt
expansion and one to handle the value of $1.

preexec () { print -Pn "\e]0;%n@%m: "; print -n "${(q)1}\a" }

