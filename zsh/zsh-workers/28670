From zsh-workers-return-28670-mason-zsh=primenet.com.au@zsh.org Sat Jan 29 23:13:24 2011
Return-Path: <zsh-workers-return-28670-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 19589 invoked by alias); 29 Jan 2011 23:13:24 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28670
Received: (qmail 25216 invoked from network); 29 Jan 2011 23:13:22 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <110129151306.ZM7899@torch.brasslantern.com>
Date: Sat, 29 Jan 2011 15:13:06 -0800
In-reply-to: <201101292216.p0TMGPm2003261@pws-pc.ntlworld.com>
Comments: In reply to Peter Stephenson <p.w.stephenson@ntlworld.com>
 "Re: coredump completing scp" (Jan 29, 10:16pm)
References: <201101292216.p0TMGPm2003261@pws-pc.ntlworld.com>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-workers@zsh.org
Subject: Re: coredump completing scp
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Jan 29, 10:16pm, Peter Stephenson wrote:
}
} Vin Shelton wrote:
} > Thanks for the suggestion.  Here's the report from valgrind.  The call
} > to setpwent is made from fillnameddirtable in hahstable.c.  I don't
} > really know what else to make of this, though.
} 
} Me neither, I'm afraid.  It certainly *looks* like an error within
} setpwent itself, though that doesn't necesarily mean it is.  As valgrind
} is claiming the memory wasn't malloc'd at all it doesn't give us much of
} a lead.

This sure seems like a bug in setpwent(), but I'll note that we're making
a call to setpwent() before ever calling getpwent() in the first place.
The doc says:

   The setpwent() function effectively rewinds the user database to allow
   repeated searches.

It may be that setpwent() assumes that getpwent() has allocated something
that it needs to free, something which never has been allocated because
getpwent() has never been called?  And that only the zsh-mem free() has
a problem with this?

