From schaefer@candle.brasslantern.com Sat Jun 22 02:10:03 1996
Received: from euclid.skiles.gatech.edu (list@euclid.skiles.gatech.edu [130.207.146.50]) by melb.werple.net.au (8.7.5/8.7.3/2) with ESMTP id CAA24529 for <mason@werple.mira.net.au>; Sat, 22 Jun 1996 02:10:00 +1000 (EST)
Received: (from list@localhost) by euclid.skiles.gatech.edu (8.7.3/8.7.3) id LAA03007; Fri, 21 Jun 1996 11:58:20 -0400 (EDT)
Resent-Date: Fri, 21 Jun 1996 11:58:20 -0400 (EDT)
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <960621085558.ZM4927@candle.brasslantern.com>
Date: Fri, 21 Jun 1996 08:55:54 -0700
In-Reply-To: Zefram <A.Main@dcs.warwick.ac.uk>
        "Re: zsh.texi commentary (actually, HTML pages commentary)" (Jun 21,  9:06am)
References: <9856.199606210806@stone.dcs.warwick.ac.uk> 
	<199606211215.OAA01436@bolyai.cs.elte.hu> 
	<199606211252.OAA01609@bolyai.cs.elte.hu>
In-Reply-To: Zoltan Hidvegi <hzoli@cs.elte.hu>
        "Re: zsh.texi commentary (actually, HTML pages commentary)" (Jun 21,  2:15pm)
In-Reply-To: Zoltan Hidvegi <hzoli@cs.elte.hu>
        "Re: zsh.texi commentary (actually, HTML pages commentary)" (Jun 21,  2:52pm)
Reply-To: schaefer@nbn.com
X-Mailer: Z-Mail (4.0b.607 07jun96)
To: Zefram <A.Main@dcs.warwick.ac.uk>, Zoltan Hidvegi <hzoli@cs.elte.hu>,
        clive@epos.demon.co.uk
Subject: Re: zsh.texi commentary (actually, HTML pages commentary)
Cc: mdb@cdc.noaa.gov,
        zsh-workers@math.gatech.edu (Z Shell workers mailing list)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-Message-ID: <"2Q0Sz1.0.sk.RQion"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/1414
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu
Content-Length: 4108
Status: O

On Jun 21,  9:06am, Zefram wrote:
} Subject: Re: zsh.texi commentary (actually, HTML pages commentary)
}
} >                 What the heck happened to NO_NOMATCH when the change
} >was made to make the prefix "no" into a magic equivalent of "unsetopt"?
} 
} That patch isn't in the baseline yet.  It made the canonical form of
} that option NOMATCH, so that "setopt NOMATCH", "unsetopt NOMATCH",
} "setopt NO_NOMATCH" and "unsetopt NO_NOMATCH" are valid.

So you check for canonical forms before stripping off the leading "no",
and then check again after stripping it to invert the sense?  Or what?

On Jun 21,  2:15pm, Zoltan Hidvegi wrote:
} Subject: Re: zsh.texi commentary (actually, HTML pages commentary)
}
} > Aside:  Question about NO_RCS:
} >     Commands are first read from `/etc/zshenv'. If the -f flag is
} >     given or if the NO_RCS option is set within `/etc/zshenv', all
} >     other initialization files are skipped.
} > Why doesn't NO_RCS in any init file stop reading of any files that would
} > normally follow the one where it is set?  Or does it, and the doc just
} > doesn't explicitly say so?
} 
} No, the documentation is correct.

So then, answer the "Why?" part of the question.

} > Precommand modifiers, `exec', should explain that the "parent" zsh is
} > replaced by the exec'd command, as if zsh had exited and the command
} > was run in its place.
} 
} Also these are builins now, which is not yet documented.

Exactly what difference does that make?  (Which is part of what ought to
be documented ...)

} > Aside:  Given the above behavior of `disable -r', it'd be nice to be able
} > to get at the internal tokens for the disabled reserved words.  E.g.:
} >     foo() { if true ; then echo This function keeps working ; fi }
} >     alias endif=fi
} >     disable -r fi
} >     bar() { if true ; then echo I wish this still worked ; endif }
} > Maybe an option to the alias builtin?
} 
} Aliases realy modify the input to the lexer.

Yes, I know.  I was suggesting, for lack of a better idea, that there be
a magic form of lexer input that could force a reference to a disabled
reserved word.  Anybody have a better idea?  It's obviously possible,
because functions that were tokenized before the disable still work.

} I do not think that such a feature is necessary.

Whatever; it was just a suggestion.

} > There's something odd here:
} >     Arithmetic Expansion
} > 
} >     A string of the form $[exp] is substituted with the value of
} >     the arithmetic expression exp. exp is subjected to parameter
} >     expansion, command substitution and arithmetic expansion before
} >                                     ^^^^^^^^^^^^^^^^^^^^^^^^
} >     it is evaluated. See section Arithmetic Evaluation. 
} > Is this wrong, or is it just a goofy way of saying that $[exp] can be
} > nested?  (Which doesn't seem to be true, so that's not it.)
} 
} It should be possible to nest arithmentic exansions.  Unfortunately
} $[$[...]] does not work, that's a bug, I'll fix it.  But $[$((...))] works.

Shouldn't $((...)) be mentioned in the Arithmetic Expansion discussion?
Or is it different in some subtle way?

} > Why isn't ***/ mentioned anywhere?  That's like **/ except it follows
} > symlinks, correct?
} 
} It is documented in the manual.

I know, but it isn't mentioned in the Filename Generation discussion of
the .texi, and I think it should be.

On Jun 21,  2:52pm, Zoltan Hidvegi wrote:
} Subject: Re: zsh.texi commentary (actually, HTML pages commentary)
}
} But these changes should also be made in the manual.  Any voulnteers to
} clean up the manual?  The texinfo and the nroff documentation should be
} updated paralelly.  The manual also needs spell checking.  I'm quite busy
} and I think I'm not the best in correcting sylistic problems in English.

I couldn't promise to have time, unfortunately.

-- 
Bart Schaefer                             Brass Lantern Enterprises
http://www.well.com/user/barts            http://www.nbn.com/people/lantern

New male in /home/schaefer:
>N  2 Justin William Schaefer  Sat May 11 03:43  53/4040  "Happy Birthday"


