From zsh-workers-return-17427-mason-zsh=primenet.com.au@sunsite.dk Fri Jul 05 07:14:56 2002
Return-Path: <zsh-workers-return-17427-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 11622 invoked from network); 5 Jul 2002 07:14:55 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 5 Jul 2002 07:14:55 -0000
Received: (qmail 14996 invoked by alias); 5 Jul 2002 07:14:50 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 17427
Received: (qmail 14985 invoked from network); 5 Jul 2002 07:14:49 -0000
Date: Fri, 5 Jul 2002 17:14:28 +1000
From: Greg Price <Greg.Price@Sun.COM>
To: Borsenkow Andrej <Andrej.Borsenkow@mow.siemens.ru>
Cc: zsh-workers@sunsite.dk
Subject: Re: 64bit Zsh for Solaris?
Message-ID: <20020705171428.S4809@Aus.Sun.COM>
References: <20020705112635.A19854@Aus.Sun.COM> <6134254DE87BD411908B00A0C99B044F03A0B332@mowd019a.mow.siemens.ru>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5.1i
In-Reply-To: <6134254DE87BD411908B00A0C99B044F03A0B332@mowd019a.mow.siemens.ru>; from Andrej.Borsenkow@mow.siemens.ru on Fri, Jul 05, 2002 at 10:20:34AM +0400

Hi,

Thanks for the response. I need 64 bit becuase I need the large address space,
i.e. I don't just want to do I/O to large files, I want to mmap() the entire
thing into memory, which require the large address space.

I'm not really familiar with the zsh code, so I thought I should check before
I try debugging.

Thanks,
Greg

On Fri, Jul 05, 2002 at 10:20:34AM +0400, Borsenkow Andrej wrote:
> > 
> > I'm looking at using zsh for creating a tool by using the loadable
> module
> > facility - it looks great.
> > 
> > My problem is that I need a 64 bit version (i.e. compiled to produce a
> 64
> > bit binary) for Solaris. I've tried both the Sun compiler (which I
> would
> > prefer to use) and the GNU C compiler; zsh compiles fine, but it fails
> a
> > number of the tests in the test suite.
> > 
> > The code model we use on Solaris is LP64 (i.e. longs and pointers
> become
> > 64
> > bit)
> > 
> > The reason I need a 64 bit version is so I can mmap() huge files (i.e.
> in
> > the order of > 4 GB)
> > 
> 
> You do not need LP64 model to manage large files. Zsh should already
> detect LFS support and configure itself accordingly. See --enable-lfs
> flag to configure. This of course assumes that your version of Solaris
> does support LFS.
> 
> > Do you know of anyone that has covered this area before? I don't want
> to
> > reinvent the wheel (or make some other stupid mistake).
> > 
> 
> Has been done long long ago.
> 
> I once tried to build Zsh in LP64 mode but I guess I had some problems
> and I do not think it is really needed. LP64 is needed for programs
> requiring very large address space, like database servers. Zsh hopefully
> will never requires address space above 1GB and if it does it must be a
> bug :-)
> 
> Of course patches that allow clean LP64 model for zsh are welcome.
> 
> -andrej

