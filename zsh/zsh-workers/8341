From zsh-workers-return-8341-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Oct 20 20:42:30 1999
Return-Path: <zsh-workers-return-8341-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 7966 invoked from network); 20 Oct 1999 20:42:29 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 20 Oct 1999 20:42:29 -0000
Received: (qmail 4803 invoked by alias); 20 Oct 1999 20:32:28 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 8341
Received: (qmail 17423 invoked from network); 20 Oct 1999 13:43:02 -0000
Date: Wed, 20 Oct 1999 15:42:08 +0200 (MET DST)
Message-Id: <199910201342.PAA00357@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: "Bart Schaefer"'s message of Wed, 20 Oct 1999 06:32:12 +0000
Subject: Re: Obscure issues with "zle complete-word ..."


Bart Schaefer wrote:

> At the top of _history_complete_word is the following test:
> 
>   if [[ $WIDGET = *newer ]]; then
>     direction=older
>   else
>     direction=newer
>   fi
> 
> However, the value of $WIDGET matches neither *newer nor *older when the
> function is called via
> 
>   zle complete-word _history_complete_word
> 
> As it is, for example, when placed in compconfig[incremental_completer]
> for use by incremental-complete-word.
> 
> I've just erased and retyped this next paragraph four times, so I guess
> I really don't know what I expect to be done about this.  I suppose the
> only way is to create two functions as well as two widgets.

Which reminds me that I wanted to suggest to move the information
gathering stage of `_h_c_w' into a completion function (with the trick 
from `_first' triggered by at least one config key, please), say
`_history'. That would then be a possible value to use in
`incremental_completer'. Then we should document that due to the
cunning consistence in the meaning of the return value of completers
and completion functions (yes, ther *is* a certain difference -- even
if only in concept), names of completion functions may also be given
as arguments to `_main_complete'. Not only completers. Or we just say
that completion functions may act as simple completers. Hm, yes, that
may be better.

> This caused me to notice something else; the documentation for the "zle"
> command says:
> 
>     WIDGET [ -n NUM ] [ -N ] ARGS ...
>           Invoke the specified widget.  This can only be done when ZLE
>           is active; normally this will be within a user-defined widget.
> 
>            [...]
> 
>           Any further arguments will be passed to the widget.  If it is
>           a shell function, these are passed down as positional
>           parameters; for builtin widgets it is up to the widget in
>           question what it does with them.  Currently arguments are
>           only handled by the incremental-search commands, the
>           history-search-forward and -backward and the correspeonding
>           functions prefixed by vi-, and by universal-argument.
> 
> Clearly complete-word (and other builtin completion widgets?) also will
> accept arguments.

Well, all widgets `accept' arguments. It's just that most them happily 
ignore them. The builtin completion widgets, for example, do that. The 
`complete-word' above is really the one defined in `compinit', line
429. So it is a user defined one and hence covered by the paragraph
above.

> Are there other widgets that aren't mentioned? 

I think not, there are only the examples from Peter's and my merged
implementations for the stuff. People who like to do zle magic might
want to start thinking about other widgets which we might want to give 
arguments, though (I think I mentioned that when I posted my stuff).

> Is it
> time to start documenting the arguments in the subsctions on "Standard
> Widgets"?

Yes, I've been thinking about that, too. Especially if we find other
widgets for which arguments may be interesting to have.


But then, I also like to think about moving widgets into (or replacing 
widgets with) shell code.

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

