From zsh-workers-return-14450-mason-zsh=primenet.com.au@sunsite.dk Wed May 23 09:06:48 2001
Return-Path: <zsh-workers-return-14450-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 21340 invoked from network); 23 May 2001 09:06:46 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 23 May 2001 09:06:46 -0000
Received: (qmail 11198 invoked by alias); 23 May 2001 09:06:34 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 14450
Received: (qmail 11178 invoked from network); 23 May 2001 09:06:32 -0000
Sender: kiddleo
Message-ID: <3B0B7D93.F329904C@u.genie.co.uk>
Date: Wed, 23 May 2001 10:06:27 +0100
From: Oliver Kiddle <opk@u.genie.co.uk>
X-Mailer: Mozilla 4.77 [en] (X11; U; Linux 2.2.15 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: zsh-workers@sunsite.dk
Subject: compilation issues
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

In advance of any final release, I thought I'd try compiling on the
various sourceforge compile farm machines.

x86 Linux 2.2 (Debian 2.2) - only a couple of warnings (for zftp in zfgetline)

ppc Linux 2.2 (Debian 2.2)

no problems except test of [[ -N .. ]] - probably due to NFS.

x86 FreeBSD 4.2-stable

make check yields several
/usr/libexec/ld-elf.so.1: Shared object "libzsh-4.0.1-pre-5.so" not found

It seems that make check uses a `make install.modules' but libzsh is
installed as part of `make install.bin'. We need to fix this but I'm not
sure I fully understand this part of the Makefiles. Isn't this an issue
for cygwin?

Once I had them running, there were a couple of test failures. The
first was due to it failing to find any block device files (second test
in C02cond). I expect that sourceforge are giving us a chrooted
environment but if this is typical of FreeBSD we need to check $block
and do something sane if it fails to find a block device. One of the
trap tests seems to fail too but not consistently so I haven't tracked
it down.

alpha Compaq Tru64 5.1

It was this machine where I got the V01zmodload test seg fault so it
isn't just Solaris and Cygwin.

A number of warnings including many like this:

cc: Info: compctl.c, line 516: In this statement, an array subscript expression
is either less than zero or greater than the largest value that can be represent
ed by the size_t type. (badsubscript)
                        *argv = "" - 1;
---------------------------------^

Every time it links a shared object it also warns about a list of
unresolved symbols. These are basically all the mod_exported symbols.

The other test failure was in C02cond, the [[ -e /dev/fd/0 ]] test.
This is exactly the same problem as I fixed for AIX in 10073 but unlike
AIX, there is no faccessx system call to fix this easily here. Any
ideas how to work out the access permissions for an open file
descriptor?

sparc Sun Solaris 8, gcc

Presumably most people are using Sun's compiler for this but they only
have gcc and it fails at its first invocation with this:

gcc -c -I.  -DHAVE_CONFIG_H -Wall -Wno-implicit -Wmissing-prototypes -O2  -o builtin.o builtin.c
In file included from zsh.mdh:15,
                 from builtin.c:30:
system.h:155: redefinition of `struct timezone'
In file included from zsh.mdh:16,
                 from builtin.c:30:
zsh.h:1469: field `tchars' has incomplete type
In file included from zsh.mdh:41,
                 from builtin.c:30:
jobs.epro:9: `MAXJOB' undeclared here (not in a function)
In file included from zsh.mdh:53,
                 from builtin.c:30:
signals.epro:27: parse error before `handler'
signals.epro:27: warning: data definition has no type or storage class
builtin.c:141: warning: no previous prototype for `createbuiltintable'

followed by many similar warnings for builtin.c.

sparc Linux 2.2 (Debian 2.2)

no problems except the same [[ -e /dev/fd/0 ]] failure as for Tru64. /dev/fd
doesn't exist which is odd as this is Linux. Maybe chroot or maybe /dev/fd
support can be compiled out of the kernel.

Oliver

