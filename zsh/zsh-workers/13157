From zsh-workers-return-13157-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Nov 13 11:13:03 2000
Return-Path: <zsh-workers-return-13157-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 28882 invoked from network); 13 Nov 2000 11:13:01 -0000
Received: from sunsite.dk (HELO sunsite.auc.dk) (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 13 Nov 2000 11:13:01 -0000
Received: (qmail 7263 invoked by alias); 13 Nov 2000 11:13:09 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 13157
Received: (qmail 7256 invoked from network); 13 Nov 2000 11:13:09 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer goliath.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: <cgf@redhat.com>, <zsh-workers@sunsite.auc.dk>
Subject: RE: Bug in cygwin with select and master pty
Date: Mon, 13 Nov 2000 14:12:50 +0300
Message-ID: <000001c04d62$a8d72660$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400
In-reply-to: <20001112151935.A19351@ohreally.bosbc.com>



> -----Original Message-----
> From: cgf@redhat.com [mailto:cgf@redhat.com]
> Sent: Sunday, November 12, 2000 11:20 PM
> To: zsh-workers@sunsite.auc.dk
> Subject: Re: Bug in cygwin with select and master pty
>
>
> In article <001e01c049b7$7f159ea0$21c9ca95@mow.siemens.ru>,
> Andrej Borsenkow <Andrej.Borsenkow@mow.siemens.ru> wrote:
> >> } About select - so far there seems to be no known problems under cygwin
> >> } (that does not mean, there are no problems).
> >>
> >>OK, if there are no known problems with select, then the test on line
> >>1376 can change from `ret <= 0' to `ret < 0' -- and in that case it's
> >>possible that we could split read_poll() into two cases, HAVE_SELECT v.
> >>all the other code that's there.  I won't do that for now, though.
> >
> >Life is fun.  5 minutes later I discovered a bug that made blocking
> >multiline reads (with or without pattern) hang at the end of the first
> >line.  I sent sort of a patch to cygwin list, but I am not sure if it
> >really does the right thing (it fixed the bug I've seen, O.K.  The
> >question is whether it introduced another bugs :-)
>
> I didn't see any followup to this but the new (1.1.5) release of cygwin
> should not have this problem.
>

Chris, are you hearing on this list too?

> >Anyway, fiddling with currently released versions of cygwin is pretty
> >useless wrt to zpty (all of them are buggy in some way).  Unfortunately
> >(to us) zsh seems to be the only program that has these problems.  With
> >all implications.
>
> Have all of these problems been reported to the cygwin mailing list?  Are
> there still problems in 1.1.5?
>

Yes. Build problem with termcap, EOF problem with pty, one more problem in
pre-1.1.5 snapshots and the above select problem.

The select problem is not fixed in 1.1.5-6.

> >The pgrp problem still remains.
>
> What is the pgrp problem?  Was this reported to the cygwin mailing list?
>

Some zpty code was changed and now zsh cannot attach to allocated pty (with
error message cannot set pgrp). No, this was not reported to cygwin list
because

- the problem resulted from zsh code change, so I first had to make sure it
was cygwin problem
- I have had enough "this is open source" replies. I'm sorry to say, but
reporting anything to cygwin list is pretty useless unless one can either
provide a patch or two-line program to reproduce the problem. I currently
cannot do either.

If you do not mind to update zsh CVS, you can see the last problem. Just do
something like

zmodload zsh/zpty
zpty sh /bin/sh

and now we have:

mw1g017@MW1G17C% zmodload zsh/zpty
mw1g017@MW1G17C% zpty sh /bin/sh
mw1g017@MW1G17C% ps -l
      PID    PPID    PGID     WINPID TTY  UID    STIME COMMAND
     1592       1    1592       1592   0 1006 14:05:53 /usr/bin/zsh
     1596    1592    1596       1596  -1 1006 14:06:14 /usr/bin/zsh
     1620    1592    1620       1624   0 1006 14:06:33 /usr/bin/ps

where provess 1596 is a child that tried to attach to allocated pty. If you
read the output you get:

mw1g017@MW1G17C% zpty -r sh foo \*$'\n'
mw1g017@MW1G17C% print -r $foo
zsh: can't set tty pgrp: not owner

This did work before last change; the main change was that zsh now opens both
master and slave fd's of pty with O_NOCTTY. This works on Unix.

-andrej

