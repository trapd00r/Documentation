From zsh-workers-return-25663-mason-zsh=primenet.com.au@sunsite.dk Sun Sep 14 00:49:53 2008
Return-Path: <zsh-workers-return-25663-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 985 invoked from network); 14 Sep 2008 00:49:49 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00,HTML_MESSAGE
	autolearn=ham version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 14 Sep 2008 00:49:49 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 25723 invoked from network); 14 Sep 2008 00:49:36 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 14 Sep 2008 00:49:36 -0000
Received: (qmail 27981 invoked by alias); 14 Sep 2008 00:49:18 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 25663
Received: (qmail 27950 invoked from network); 14 Sep 2008 00:49:13 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 14 Sep 2008 00:49:13 -0000
Received: from wa-out-1112.google.com (wa-out-1112.google.com [209.85.146.179])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 1DF71802710A
	for <zsh-workers@sunsite.dk>; Sun, 14 Sep 2008 02:48:57 +0200 (CEST)
Received: by wa-out-1112.google.com with SMTP id v27so934976wah.21
        for <zsh-workers@sunsite.dk>; Sat, 13 Sep 2008 17:48:56 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:to
         :subject:cc:in-reply-to:mime-version:content-type:references;
        bh=Gs5C3XCKesEnVo6VAYDyJQ7e7Wddl3LbdaSIqHWDYWs=;
        b=x+iNOfUXQup5h3y1yPPQF3LD1bURlgH017EbL1/2Nybw0GC/wXIParX9BNupM2q1ba
         3ACfR2P9ztRKVlDXePL+1Ga9teEySoRUaXaDrnW5dwSY5C/oLwSyZcFjqw7Esu2IzQM0
         F2D9Js3WBS1VN9jwksUfkVZS0Qwod2DDd+TgA=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:to:subject:cc:in-reply-to:mime-version
         :content-type:references;
        b=uUVueZGDYhLwLUBj5PsIndgKyAkEo3Setn0Dg9Awh9mxuehIvNz4EzBfuDO92sHH+y
         U6iHsHiWIF7tluNYRZKiHfFXx9vJDG/vgx2pGemrLMAZcCEO7mmUyFwmhNFWerFX6hEl
         jDNEmTRQdCgTZavMF2sfH/yeeRHRNOq6Yh+yA=
Received: by 10.114.148.2 with SMTP id v2mr4742269wad.173.1221353336456;
        Sat, 13 Sep 2008 17:48:56 -0700 (PDT)
Received: by 10.114.159.2 with HTTP; Sat, 13 Sep 2008 17:48:56 -0700 (PDT)
Message-ID: <6cd6de210809131748y5dba13dbpef40377e95632206@mail.gmail.com>
Date: Sat, 13 Sep 2008 20:48:56 -0400
From: "Rocky Bernstein" <rocky.bernstein@gmail.com>
To: "Peter Stephenson" <p.w.stephenson@ntlworld.com>
Subject: Re: Should declare -p add a new declaration inside a function?
Cc: "Zsh Hackers' List" <zsh-workers@sunsite.dk>
In-Reply-To: <20080913205540.4d80fcf6@pws-pc>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_33340_24483437.1221353336465"
References: <6cd6de210809130752p4a5dc634v6144b0475e2cc569@mail.gmail.com>
	 <20080913205540.4d80fcf6@pws-pc>
X-Virus-Scanned: ClamAV 0.92.1/8234/Sat Sep 13 23:08:49 2008 on bifrost
X-Virus-Status: Clean

------=_Part_33340_24483437.1221353336465
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Thanks.  This helps a lot.

A couple things to consider. Right now if the variable is not declared,
declare -p  returns 0. Should it be nonzero as is the case if you give a bad
option?

Is there a way to figure out or get a list of local variables versus
non-local variables versus global variables? By "local" I mean those that
were defined in the most recent scope and by "global" I mean those defined
outside of any function nesting, and by "non-local" I mean "not defined in
the immediate scope."

Thanks again

On Sat, Sep 13, 2008 at 3:55 PM, Peter Stephenson <
p.w.stephenson@ntlworld.com> wrote:

> On Sat, 13 Sep 2008 10:52:35 -0400
> "Rocky Bernstein" <rocky.bernstein@gmail.com> wrote:
> > It appears that using "declare" or "typeset" with the -p (print) flag
> will
> > add a new declaration inside a function. Is this really desirable? It
> seems
> > to reduce the usefulness of -p.
>
> That sure as heck looks like a bug to me.  It shouldn't ever create
> anything, even if the variable doesn't exist; it's purely for
> information.  I don't think "declare -p" has had much love and
> attention; it doesn't look like it's ever worked with arguments
> other than patterns (with -m).
>
> Index: Src/builtin.c
> ===================================================================
> RCS file: /cvsroot/zsh/zsh/Src/builtin.c,v
> retrieving revision 1.205
> diff -u -r1.205 builtin.c
> --- Src/builtin.c       11 Sep 2008 17:14:39 -0000      1.205
> +++ Src/builtin.c       13 Sep 2008 19:49:33 -0000
> @@ -2473,10 +2473,17 @@
>
>     /* Take arguments literally.  Don't glob */
>     while ((asg = getasg(*argv++))) {
> -       if (!typeset_single(name, asg->name,
> -                           (Param) (paramtab == realparamtab ?
> -                                    gethashnode2(paramtab, asg->name) :
> -                                    paramtab->getnode(paramtab,
> asg->name)),
> +       HashNode hn = (paramtab == realparamtab ?
> +                      gethashnode2(paramtab, asg->name) :
> +                      paramtab->getnode(paramtab, asg->name));
> +       if (OPT_ISSET(ops,'p')) {
> +           if (hn)
> +               printparamnode(hn, printflags);
> +           else
> +               zwarnnam(name, "no such variable: %s", asg->name);
> +           continue;
> +       }
> +       if (!typeset_single(name, asg->name, (Param)hn,
>                            func, on, off, roff, asg->value, NULL,
>                            ops, 0))
>            returnval = 1;
> Index: Test/B02typeset.ztst
> ===================================================================
> RCS file: /cvsroot/zsh/zsh/Test/B02typeset.ztst,v
> retrieving revision 1.18
> diff -u -r1.18 B02typeset.ztst
> --- Test/B02typeset.ztst        16 Dec 2007 14:05:16 -0000      1.18
> +++ Test/B02typeset.ztst        13 Sep 2008 19:49:33 -0000
> @@ -444,3 +444,12 @@
>  0:Lower case conversion, does not apply to values used internally
>  >lower
>  >value of $lower
> +
> + typeset -a array
> + array=(foo bar)
> + fn() { typeset -p array nonexistent; }
> + fn
> +0:declare -p shouldn't create scoped values
> +>typeset -a array
> +>array=(foo bar)
> +?fn:typeset: no such variable: nonexistent
>
>
> --
> Peter Stephenson <p.w.stephenson@ntlworld.com>
> Web page now at http://homepage.ntlworld.com/p.w.stephenson/
>

------=_Part_33340_24483437.1221353336465
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

<div dir="ltr">Thanks.&nbsp; This helps a lot.<br><br>A couple things to consider. Right now if the variable is not declared, declare -p&nbsp; returns 0. Should it be nonzero as is the case if you give a bad option?<br><br>Is there a way to figure out or get a list of local variables versus non-local variables versus global variables? By &quot;local&quot; I mean those that were defined in the most recent scope and by &quot;global&quot; I mean those defined outside of any function nesting, and by &quot;non-local&quot; I mean &quot;not defined in the immediate scope.&quot;<br>
<br>Thanks again<br><br><div class="gmail_quote">On Sat, Sep 13, 2008 at 3:55 PM, Peter Stephenson <span dir="ltr">&lt;<a href="mailto:p.w.stephenson@ntlworld.com">p.w.stephenson@ntlworld.com</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
<div class="Ih2E3d">On Sat, 13 Sep 2008 10:52:35 -0400<br>
&quot;Rocky Bernstein&quot; &lt;<a href="mailto:rocky.bernstein@gmail.com">rocky.bernstein@gmail.com</a>&gt; wrote:<br>
&gt; It appears that using &quot;declare&quot; or &quot;typeset&quot; with the -p (print) flag will<br>
&gt; add a new declaration inside a function. Is this really desirable? It seems<br>
&gt; to reduce the usefulness of -p.<br>
<br>
</div>That sure as heck looks like a bug to me. &nbsp;It shouldn&#39;t ever create<br>
anything, even if the variable doesn&#39;t exist; it&#39;s purely for<br>
information. &nbsp;I don&#39;t think &quot;declare -p&quot; has had much love and<br>
attention; it doesn&#39;t look like it&#39;s ever worked with arguments<br>
other than patterns (with -m).<br>
<br>
Index: Src/builtin.c<br>
===================================================================<br>
RCS file: /cvsroot/zsh/zsh/Src/builtin.c,v<br>
retrieving revision 1.205<br>
diff -u -r1.205 builtin.c<br>
--- Src/builtin.c &nbsp; &nbsp; &nbsp; 11 Sep 2008 17:14:39 -0000 &nbsp; &nbsp; &nbsp;1.205<br>
+++ Src/builtin.c &nbsp; &nbsp; &nbsp; 13 Sep 2008 19:49:33 -0000<br>
@@ -2473,10 +2473,17 @@<br>
<br>
 &nbsp; &nbsp; /* Take arguments literally. &nbsp;Don&#39;t glob */<br>
 &nbsp; &nbsp; while ((asg = getasg(*argv++))) {<br>
- &nbsp; &nbsp; &nbsp; if (!typeset_single(name, asg-&gt;name,<br>
- &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (Param) (paramtab == realparamtab ?<br>
- &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;gethashnode2(paramtab, asg-&gt;name) :<br>
- &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;paramtab-&gt;getnode(paramtab, asg-&gt;name)),<br>
+ &nbsp; &nbsp; &nbsp; HashNode hn = (paramtab == realparamtab ?<br>
+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;gethashnode2(paramtab, asg-&gt;name) :<br>
+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;paramtab-&gt;getnode(paramtab, asg-&gt;name));<br>
+ &nbsp; &nbsp; &nbsp; if (OPT_ISSET(ops,&#39;p&#39;)) {<br>
+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (hn)<br>
+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; printparamnode(hn, printflags);<br>
+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else<br>
+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; zwarnnam(name, &quot;no such variable: %s&quot;, asg-&gt;name);<br>
+ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;<br>
+ &nbsp; &nbsp; &nbsp; }<br>
+ &nbsp; &nbsp; &nbsp; if (!typeset_single(name, asg-&gt;name, (Param)hn,<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;func, on, off, roff, asg-&gt;value, NULL,<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ops, 0))<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;returnval = 1;<br>
Index: Test/B02typeset.ztst<br>
===================================================================<br>
RCS file: /cvsroot/zsh/zsh/Test/B02typeset.ztst,v<br>
retrieving revision 1.18<br>
diff -u -r1.18 B02typeset.ztst<br>
--- Test/B02typeset.ztst &nbsp; &nbsp; &nbsp; &nbsp;16 Dec 2007 14:05:16 -0000 &nbsp; &nbsp; &nbsp;1.18<br>
+++ Test/B02typeset.ztst &nbsp; &nbsp; &nbsp; &nbsp;13 Sep 2008 19:49:33 -0000<br>
@@ -444,3 +444,12 @@<br>
&nbsp;0:Lower case conversion, does not apply to values used internally<br>
&nbsp;&gt;lower<br>
&nbsp;&gt;value of $lower<br>
+<br>
+ typeset -a array<br>
+ array=(foo bar)<br>
+ fn() { typeset -p array nonexistent; }<br>
+ fn<br>
+0:declare -p shouldn&#39;t create scoped values<br>
+&gt;typeset -a array<br>
+&gt;array=(foo bar)<br>
+?fn:typeset: no such variable: nonexistent<br>
<font color="#888888"><br>
<br>
--<br>
Peter Stephenson &lt;<a href="mailto:p.w.stephenson@ntlworld.com">p.w.stephenson@ntlworld.com</a>&gt;<br>
Web page now at <a href="http://homepage.ntlworld.com/p.w.stephenson/" target="_blank">http://homepage.ntlworld.com/p.w.stephenson/</a><br>
</font></blockquote></div><br></div>

------=_Part_33340_24483437.1221353336465--

