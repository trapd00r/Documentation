From zsh-workers-return-18387-mason-zsh=primenet.com.au@sunsite.dk Wed Mar 26 01:50:45 2003
Return-Path: <zsh-workers-return-18387-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 15093 invoked from network); 26 Mar 2003 01:50:44 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 26 Mar 2003 01:50:44 -0000
Received: (qmail 16838 invoked by alias); 26 Mar 2003 01:50:37 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 18387
Received: (qmail 16831 invoked from network); 26 Mar 2003 01:50:37 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 26 Mar 2003 01:50:37 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [64.56.232.6] by sunsite.dk (MessageWall 1.0.8) with SMTP; 26 Mar 2003 1:50:37 -0000
Received: (from parkw@localhost)
	by node1.opengeometry.net (8.11.6/8.11.6) id h2Q1oYY07851
	for zsh-workers@sunsite.dk; Tue, 25 Mar 2003 20:50:34 -0500
Date: Tue, 25 Mar 2003 20:50:34 -0500
From: William Park <opengeometry@yahoo.ca>
To: zsh-workers@sunsite.dk
Subject: Disk-based or db-based associative array -- good or bad?
Message-ID: <20030326015034.GA7771@node1.opengeometry.net>
Mail-Followup-To: zsh-workers@sunsite.dk
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.4i

I just wanted to ask shell experts here.  Is disk-based associative
array a good thing to have for a shell?  That is, reading and writing
like normal in-memory array, ie
    typeset -A var
    var[aa]='bb'
    echo ${var[aa]}
except that 'aa':'bb' key:value will be written to and read from db file
(either Gdbm or Berkeley BD) on disk.

I'm sure other people have thought about this before me, and am
wondering why this hasn't appeared in Zsh or other shells.  Noteable
features are
    - data survives exit, logout, and shutdown
    - variables can be shared between shell processes
    - it's not SQL

-- 
William Park, Open Geometry Consulting, <opengeometry@yahoo.ca>
Linux solution for data management and processing. 

