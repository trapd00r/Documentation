From zsh-workers-return-16282-mason-zsh=primenet.com.au@sunsite.dk Fri Nov 23 06:05:54 2001
Return-Path: <zsh-workers-return-16282-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 19691 invoked from network); 23 Nov 2001 06:05:52 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 23 Nov 2001 06:05:52 -0000
Received: (qmail 26538 invoked by alias); 23 Nov 2001 06:05:40 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16282
Received: (qmail 26522 invoked from network); 23 Nov 2001 06:05:39 -0000
From: Borsenkow Andrej <Andrej.Borsenkow@mow.siemens.ru>
To: "'Gary Oberbrunner'" <garyo@oberbrunner.com>
Cc: zsh-workers@sunsite.dk
Subject: RE: Zsh 4.0.4 and Emacs 21.1 in Windows XP
Date: Fri, 23 Nov 2001 09:05:31 +0300
Message-ID: <000001c173e4$dbc3bb20$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook, Build 10.0.2627
In-Reply-To: <3BFDB6BB.3070505@oberbrunner.com>
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000

> 
> >Probably, you are using native emacs and Cygwin zsh. In this case
emacs
> >writes pipe to zsh in text mode (CR-LF under DOS) and zsh reads it in
> >binary mode (default for pipes under Cygwin). Please, look on
> >www.cygwin.com for description of CYGWIN variable, specifically
> >nobinmode. But I have no idea what effects may it have - it makes
Cygwin
> >read/write pipes in text (in DOS sense) mode which is O.K. for pure
text
> >but may break binary data.
> >
> >In general it is bad idea to mix native and Cygwin applications.
> >
> Yes, I think you nailed it here; my Emacs is compiled natively for
> Win32, and I guess zsh must be compiled with cygwin (I don't
remember).
>  And what you describe above sounds like it could be the cause -- I've
> traced it quite thoroughly in emacs and it's definitely NOT sending a
> CR, only LF.  So it must be zsh/cygwin that's adding the CR.  


No. It is *DOS* (i.e. emacs) routines that add CR. Do not forget that
line separator in DOS is CR-LF. So, emacs is (most probably) simply
writes a line in text mode that results in CR-LF being actually sent
over the wire (this CR-LF<->LF translation in DOS is really weird, but
you need it to get some sort of compatibility with standard libc).
Cygwin does *not* adds anything, it reads it "as is".

Maybe I
> can add an option to zsh to strip off trailing CRs -- can anyone point
> me to where to start looking?  input.c maybe?
>

Erm ... have you even tried to look at Cygwin page I told you about?

CYGWIN=nobinmode
And export it before starting shell in emacs. How exactly you do it in
emacs I do not know.
 
-andrej

