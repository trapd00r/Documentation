From zsh-users-return-15604-mason-zsh=primenet.com.au@zsh.org Sat Dec 04 18:29:09 2010
Return-Path: <zsh-users-return-15604-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 10877 invoked by alias); 4 Dec 2010 18:29:09 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15604
Received: (qmail 9250 invoked from network); 4 Dec 2010 18:28:58 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <101204102844.ZM5983@torch.brasslantern.com>
Date: Sat, 04 Dec 2010 10:28:42 -0800
In-reply-to: <868w06l3cq.fsf@gmail.com>
Comments: In reply to Anonymous <swell.k@gmail.com>
 "time builtin vs. time(1): difference in memory numbers" (Dec  4,  4:43am)
References: <868w06l3cq.fsf@gmail.com>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-users@zsh.org
Subject: Re: time builtin vs. time(1): difference in memory numbers
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Dec 4,  4:43am, Anonymous wrote:
} Subject: time builtin vs. time(1): difference in memory numbers
}
} zsh-4.3.10_4, FreeBSD 9.0-CURRENT r216095M amd64
} 
} I'm a bit puzzled by...
} 
} - numbers for shared/unshared space don't match those from `time -l'

Zsh's %X and %D compute the average amount of shared/unshared space by
using the ru_ixrss and (ru_idrss + ru_isrss) values from rusage,
respectively, as the numerator, and (ru_utime + ru_stime) as the
denominator.  I don't know what the BSD time command uses for the
denominator.  Zsh also rounds down microseconds to perform all of its
computations in seconds, which may lead to differences.

} - zsh manual page claims that %M stands for memory in Kbytes while it
}   displays them in Mbytes

Hm.  %M stands for ru_maxrss / 1024.  Zsh would only be displaying
that in Mbytes if ru_maxrss is expressed in Gbytes internally.  Has
FreeBSD changed the base units of maxrss in rusage?

-- 

