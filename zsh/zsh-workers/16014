From zsh-workers-return-16014-mason-zsh=primenet.com.au@sunsite.dk Thu Oct 11 17:11:28 2001
Return-Path: <zsh-workers-return-16014-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16720 invoked from network); 11 Oct 2001 17:11:27 -0000
Received: from unknown (HELO sunsite.dk) (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 11 Oct 2001 17:11:27 -0000
Received: (qmail 836 invoked by alias); 11 Oct 2001 17:11:19 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16014
Received: (qmail 823 invoked from network); 11 Oct 2001 17:11:19 -0000
From: martin.ebourne@arcordia.com
Expiry-Date: Wed, 9 Jan 2002 -1:-1:-1 +0000
Subject: Re: Very odd behaviour with zsh, maybe corruption bug
To: zsh-workers@sunsite.dk
Date: Thu, 11 Oct 2001 18:09:32 +0100
Message-ID: <OFEB9D0CAB.ACA39E84-ON80256AE2.005E2CD9@uk.jpmorgan.com>
X-MIMETrack: Serialize by Router on LON-ARCMTA-01/ARCORDIA(Release 5.0.3 (Intl)|21 March
 2000) at 10/11/2001 06:09:35 PM
MIME-Version: 1.0
Content-type: text/plain; charset=us-ascii


<forgot to reply to list also last time>



   I can't reproduce this on my linux machine, even after ten minutes or so
   of fooling with it.

   For [[ ]], the trace output is generated before the right-hand-side is
   copied and compiled into a pattern for comparison to the left-hand-side,
   so it could be the case that memory errors result in a bad comparison;
   but they'd be far more likely to produce a "bad pattern" error instead.

I was wondering if perhaps the internal 'compiled' function definition was
getting modified. After all, once the problem has occurred it appears to be
guaranteed to happen until the function is redefined.

   This is a long, long, long shot, but:  You don't happen to be using a
   debug trap?  (I.e., a TRAPDEBUG function, or `trap ... DEBUG')

No, not at all. I can reproduce it with zsh -f, with just the stuff listed
in the previous email.

   Have you tried configuring with --enable-zsh-debug ?

I have now. I used all the ones I could find: --enable-zsh-mem-warning
--enable-zsh-secure-free --enable-zsh-hash-debug --enable-zsh-debug.

Are they supposed to tell me anything directly or do I need to do anything
special - I didn't see anything new? However, using this version I've got a
guaranteed sequence which triggers it (maybe also on the last version, but
I don't know). I follow the sequence exactly as per my previous email, and
after entering the lone " character I perform the following key sequence:
up, right, down, down, enter, up, up, down. This has just worked 4/5 times
in a row on this solaris machine, but doesn't mean it will on Linux!

I don't know the code at all, but if you can suggest a sensible place or
two to break on I'll have a poke at it in dbx.

Cheers,

Martin.
PS. make check core dumps on the V01zmodload test (and did before I built
debug too). Do you know about this or should I send a backtrace/shell
trace? The module loading obviously works normally though...







This e-mail message is CONFIDENTIAL and may contain legally privileged
information.  If you are not the intended recipient you should not  read,
copy, distribute, disclose or otherwise use the information in this e-mail.
Please also telephone or fax us immediately and delete the message from
your system.  E-mail may be susceptible to data corruption, interception
and unauthorised amendment, and we do not accept liability for any such
corruption, interception or amendment or the consequences thereof.

