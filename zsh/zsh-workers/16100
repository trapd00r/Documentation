From zsh-workers-return-16100-mason-zsh=primenet.com.au@sunsite.dk Mon Oct 22 03:23:17 2001
Return-Path: <zsh-workers-return-16100-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 6039 invoked from network); 22 Oct 2001 03:23:16 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 22 Oct 2001 03:23:16 -0000
Received: (qmail 15978 invoked by alias); 22 Oct 2001 03:23:11 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16100
Received: (qmail 15960 invoked from network); 22 Oct 2001 03:23:09 -0000
Date: Mon, 22 Oct 2001 13:23:06 +1000
From: Geoff Wing <gcw@zsh.org>
To: Zsh Hackers <zsh-workers@sunsite.dk>
Cc: Clint Adams <clint@zsh.org>
Subject: Re: multibyte backwarddeletechar
Message-ID: <20011022132306.A5808@primenet.com.au>
References: <20011021114254.A17952@dman.com> <20011022105702.A4297@primenet.com.au> <20011021215022.A25491@dman.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <20011021215022.A25491@dman.com>; from clint@zsh.org on Sun, Oct 21, 2001 at 09:50:22PM -0400
Organization: PrimeNet Computer Consultancy

Clint Adams <clint@zsh.org> typed:
:For one thing, the %D escape in my prompt is substituted with
:multibyte glyphs in the relevant locales.  That in itself
:poses a potential width calculation problem even if the user
:doesn't input any multibyte characters.

I understand a lot of the limitations, having programmed from both
ends of the system (output to a terminal and interpret such output
in a terminal emulator).  And your initial list covers the basic
areas: deleting characters, basic cursor movement

But what happens when I do, say, "history-incremental-search-backward",
input characters for the second half a multibyte glyph, then do
"kill-line"?  What happens when I do, "down-case-word" when we only
consider byte by byte (which may easily corrupt the second byte of a
two-byte glyph)?  These are a couple off the top of my head.
There'll be quite a few more and I think they'd need to be tracked down
and considered before we make changes in this area.

I'm not trying to discourage anyone from looking at this and hope I
don't but would rather they have a broader overview so that if we
do change then we have a well planned method rather than trying to
hack each area separately.

Regards,
-- 
Geoff Wing | gcw@pobox.com | gcw@rxvt.org | gcw@zsh.org

