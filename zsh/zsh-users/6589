From zsh-users-return-6589-mason-zsh=primenet.com.au@sunsite.dk Wed Sep 17 07:34:29 2003
Return-Path: <zsh-users-return-6589-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1563 invoked from network); 17 Sep 2003 07:34:28 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 17 Sep 2003 07:34:28 -0000
Received: (qmail 17026 invoked by alias); 17 Sep 2003 07:34:18 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 6589
Received: (qmail 17014 invoked from network); 17 Sep 2003 07:34:17 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 17 Sep 2003 07:34:17 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [212.227.126.201] by sunsite.dk (MessageWall 1.0.8) with SMTP; 17 Sep 2003 7:34:17 -0000
Received: from [172.17.36.7] (helo=erdbeere.use.schlund.de)
	by mxintern.kundenserver.de with esmtp (Exim 3.35 #1)
	id 19zWpM-00037t-00
	for zsh-users@sunsite.dk; Wed, 17 Sep 2003 09:34:16 +0200
Received: from luthien by erdbeere.use.schlund.de with local
	id 19zWqS-0000OW-00
	for <zsh-users@sunsite.dk>; Wed, 17 Sep 2003 09:35:24 +0200
Date: Wed, 17 Sep 2003 09:35:24 +0200
From: Dominik Vogt <dominik.vogt@gmx.de>
To: Zsh Users <zsh-users@sunsite.dk>
Subject: Re: security risk in source builtin?
Message-ID: <20030917073524.GC689@gmx.de>
Reply-To: dominik.vogt@gmx.de
Mail-Followup-To: Zsh Users <zsh-users@sunsite.dk>
References: <20030916145820.GC4583@gmx.de> <20030917065802.GA5374@picard.franken.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <20030917065802.GA5374@picard.franken.de>
User-Agent: Mutt/1.3.28i

On Wed, Sep 17, 2003 at 08:58:02AM +0200, Thomas Köhler wrote:
> Dominik Vogt wrote [2003/09/17]:
> > A colleague and I just noticed that the "source" builtin looks for
> > its argument in the $PATH.  I guess that's something POSIX
> > demands, but isn't it also a security risk?  In this case, the
> > following happened:
> > 
> >   $ ls -F
> >   test
> >   $ cat test
> >   echo hello world
> >   $ source test
> >   /usr/bin/test:3: bad pattern: ^@^F^@(...
> 
> Are you really sure you typed "source" here?

I may have confused the test cases for bash and zsh.  Thanks for
pointing that out.  However, that does not change my concern that
"source" (as well as ".") is a security risk.

> > Unless it is really important to have this behaviour for
> > compatibility reasons, shouldn't searching the $PATH be at least
> > disabled by default?
> 
> Quoting the manpage:
> 
>        source file [ arg ... ]
>               Same  as ., except that the current directory is always searched
>               and is always searched first, before directo- ries in $path.
> 
> Testing myself:
>     /tmp> cat test
>     echo hello world
>     /tmp> ls -l test
>     -rw-r--r--    1 jean-luc jean-luc       17 2003-09-17 08:49 test
>     /tmp> . test
>     /usr/bin/test:12: parse error near `)'
>     /tmp> source test
>     hello world
> 
> Seems you have typed ". test" :-)
> 
>        . file [ arg ... ]
>               Read commands from file and execute them in the
>               current shell environment.
> 
>               If file does not contain a slash, or if PATH_DIRS
>               is set, the shell looks in the components of $path
>               to  find the  directory  containing  file.  Files
>               in the current directory are not read unless `.'
>               appears somewhere in $path.  If a file named
>               `file.zwc' is found, is newer than file, and is the
>               compiled form  (created  with  the zcompile
>               builtin) of file, then commands are read from that
>               file instead of file.
> 
>               If  any  arguments  arg  are  given,  they become
>               the positional parameters; the old positional
>               parameters are restored when the file is done
>               executing.  The exit status is the exit status of
>               the last command executed.

Ciao

Dominik ^_^  ^_^

