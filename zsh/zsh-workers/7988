From zsh-workers-return-7988-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Sep 21 22:46:21 1999
Return-Path: <zsh-workers-return-7988-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 24881 invoked from network); 21 Sep 1999 22:46:18 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 21 Sep 1999 22:46:18 -0000
Received: (qmail 12869 invoked by alias); 21 Sep 1999 22:45:59 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 7988
Received: (qmail 12862 invoked from network); 21 Sep 1999 22:45:57 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <990921223441.ZM15797@candle.brasslantern.com>
Date: Tue, 21 Sep 1999 22:34:41 +0000
In-Reply-To: <19990921150657.A14612@ichips.intel.com>
Comments: In reply to Clint Olsen <olsenc@ichips.intel.com>
        ""exec zsh" inside .zprofile doesn't set SHELL" (Sep 21,  3:06pm)
References: <19990921150657.A14612@ichips.intel.com>
X-Mailer: Z-Mail Lite (5.0.0 30July97)
To: Clint Olsen <olsenc@ichips.intel.com>, zsh-workers@sunsite.auc.dk
Subject: Re: "exec zsh" inside .zprofile doesn't set SHELL
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Sep 21,  3:06pm, Clint Olsen wrote:
> Subject: "exec zsh" inside .zprofile doesn't set SHELL
> Hello:
> 
> ZSH_VERSION gets set properly to 3.1.6 in my login shell, but SHELL is set
> to /usr/intel/97r1.3/bin/zsh, which is the production version.  As a
> result, subshells spawned after that are incorrectly set to the old
> version.

You mean subshells spawned by other, intermediate processes, such as xterm
or make.

> I don't want to force the setting of SHELL (I had a similar
> problem with tcsh a long while back), I think the job of a shell is to set
> its own variable.
> 
> Bug?

No, it's not the job of the shell to attempt to point $SHELL at itself.  For
one thing, it's potentially impossible for a process to find out the path by
which it was executed -- it gets only what its parent put into argv[0], after
all.  Even if it could tell, consider the case of writing a shell script to
act as a wrapper around some other command: if the shell reset $SHELL when it
began executing the script, the environment would be "mysteriously" changed
for any further subprocesses of the enwrapped command.

In the situation you've described, you really do want something like

export SHELL==zsh && exec $SHELL


-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

