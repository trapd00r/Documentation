From zsh-workers-return-15443-mason-zsh=primenet.com.au@sunsite.dk Sun Jul 22 01:51:17 2001
Return-Path: <zsh-workers-return-15443-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 22482 invoked from network); 22 Jul 2001 01:51:16 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 22 Jul 2001 01:51:16 -0000
Received: (qmail 2255 invoked by alias); 22 Jul 2001 01:51:10 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 15443
Received: (qmail 2242 invoked from network); 22 Jul 2001 01:51:08 -0000
X-Authentication-Warning: freebie.phydeaux.org: fletch set sender to fletch@phydeaux.org using -f
Sender: fletch@freebie.phydeaux.org
To: zsh-workers@sunsite.dk
Subject: Where to add extra libraries for modules
From: Fletch <fletch@phydeaux.org>
Organization: Very Little
Date: 21 Jul 2001 21:50:51 -0400
Message-ID: <m2y9phybno.fsf@freebie.phydeaux.org>
Lines: 61
User-Agent: Gnus/5.0807 (Gnus v5.8.7) XEmacs/21.1 (Cuyahoga Valley)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii


        I've all but got my perl-in-zsh module working with 4.0.2
again, but I've got an issue with where I should be adding in the
commands to link against the perl libraries.


        There's a perl module `ExtUtils::Embed' that provides commands
`ccopts' and `ldopts' that print out the required compiler flags and
linker options (similar to the gtk+ `gtk-config --libs').  I've got a
zperl.mdd file that's adding stuff to the Makefile like so:


---->8 zperl.mdd 8<----
name=xzperl
link=dynamic
load=no

objects="zperl.o perlxsi.o"

autobins="zperl"

:<<\Make
zperl.$(DL_EXT): $(MODDOBJS_zperl) zperl.export  $(dir_top)/Src/zsh.export $(NOLINKMODS_zperl)
	rm -f $@
	$(DLLINK) $(NXPIMP_zperl) $(NNTRYOPT) $(MODDOBJS_zperl) $(NOLINKMODS_zperl) $(LIBS) \
	   `perl -MExtUtils::Embed -e ldopts`

zperl.$(ANSIOBJ): zperl.c
	$(DLCOMPILE) `perl -MExtUtils::Embed -e ccopts` -o $@ $<

zperl$(ANSIOBJ): zperl.c
	$(COMPILE) `perl -MExtUtils::Embed -e ccopts` -o $@ $<
	@rm -f $(dir_src)/stamp-modobjs

perlxsi.$(ANSIOBJ): perlxsi.c
	$(DLCOMPILE) `perl -MExtUtils::Embed -e ccopts` -o $@ $<

perlxsi$(ANSIOBJ): perlxsi.c
	$(COMPILE) `perl -MExtUtils::Embed -e ccopts` -o $@ $<
	@rm -f $(dir_src)/stamp-modobjs

Make
---->8 zperl.mdd 8<----


        The problem is that the mkmakemod.sh script has already spit
out a rule for `zperl.$(DL_EXT)'.  I realize that I could stick the
ldopts invocation in DLLDFLAGS and/or LDFLAGS in the configure script,
but then that'd be including them for every module.  


        Would it make sense (possibly) to add an `extralibs' paramter
in the .mdd and then have mkmakemod.sh include that in the rule for
module.$(DL_EXT)?


-- 
Fletch                | "If you find my answers frightening,       __`'/|
fletch@phydeaux.org   |  Vincent, you should cease askin'          \ o.O'
770 933-0600 x211(w)  |  scary questions." -- Jules                =(___)=
                      |                                               U

