From zsh-workers-return-13175-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Nov 20 16:55:17 2000
Return-Path: <zsh-workers-return-13175-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 5892 invoked from network); 20 Nov 2000 16:55:16 -0000
Received: from sunsite.dk (HELO sunsite.auc.dk) (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 20 Nov 2000 16:55:16 -0000
Received: (qmail 14205 invoked by alias); 20 Nov 2000 16:55:08 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 13175
Received: (qmail 14197 invoked from network); 20 Nov 2000 16:55:06 -0000
Date: Mon, 20 Nov 2000 16:54:39 +0000
From: Peter Stephenson <pws@csr.com>
Subject: Re: Allowing traps
In-reply-to: "Your message of Mon, 20 Nov 2000 16:34:22 GMT."
 <1001120163422.ZM10149@candle.brasslantern.com>
To: zsh-workers@sunsite.auc.dk (Zsh hackers list)
Message-id: <0G4C000ND1N3ZY@la-la.cambridgesiliconradio.com>
Content-transfer-encoding: 7BIT

Bart wrote:
> We don't need a flag ... the behavior should be that for all xxx, SIGxxx is
> blocked when running the trap for that signal.  The OS will enforce that if
> the trap is run directly from the signal handler, so we should emulate it
> when running the traps in deferred fashion.

That doesn't fix the problem that the shell will try and run traps already
in the queue from within shell code called from the trap handler --- which
may be the trap for another signal.  I don't see a way of stopping that
without a flag.

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
Cambridge Silicon Radio, Unit 300, Science Park, Milton Road,
Cambridge, CB4 0XL, UK                          Tel: +44 (0)1223 392070

