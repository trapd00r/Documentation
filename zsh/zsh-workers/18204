From zsh-workers-return-18204-mason-zsh=primenet.com.au@sunsite.dk Fri Feb 07 11:53:46 2003
Return-Path: <zsh-workers-return-18204-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 27299 invoked from network); 7 Feb 2003 11:53:44 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 7 Feb 2003 11:53:44 -0000
Received: (qmail 11499 invoked by alias); 7 Feb 2003 11:53:16 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 18204
Received: (qmail 11484 invoked from network); 7 Feb 2003 11:53:15 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 7 Feb 2003 11:53:15 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [62.189.183.235] by sunsite.dk (MessageWall 1.0.8) with SMTP; 7 Feb 2003 11:53:15 -0000
Received: from exchange01.csr.com (unverified) by 
 (Content Technologies SMTPRS 4.2.1) with ESMTP id <T6044907e41c0a88d0149c@>;
 Fri, 7 Feb 2003 11:59:40 +0000
Received: from csr.com (tinky-winky.csr.com [192.168.144.127]) by exchange01.csr.com with SMTP (Microsoft Exchange Internet Mail Service Version 5.5.2650.21)
	id DQ47LPC1; Fri, 7 Feb 2003 11:54:01 -0000
To: Paul Ackersviller <paulda@rogers.com>,
    zsh-workers@sunsite.dk (Zsh hackers list)
Subject: Re: set -A 
In-reply-to: "Paul Ackersviller"'s message of "Thu, 06 Feb 2003 19:01:38 EST."
             <20030207000138.GK5418@msi.ld> 
Date: Fri, 07 Feb 2003 11:53:14 +0000
Message-ID: <26589.1044618794@csr.com>
From: Peter Stephenson <pws@csr.com>

Paul Ackersviller wrote:
> Secondly, I have more of an observation than a bug report that better
> fits the subject since it has to do with parsing after the -A of set.
> 	set -A arr -x
> puts -x into the beginning of the array, whereas ksh treats the -x as
> an option to set instead.  In ksh
> 	set -A arr -- -x
> would get around that, but the same command in zsh now put the -- into
> the array.  I think either way could be considered correct, but it
> would be nicer if the same command had the same effect in both shells.

[Hope I've got the commas in the right place this time.]

Yes, this is quite a nasty incompatibility --- particularly since this
is the standard way to set arrays in ksh.  I don't think there's any
chance of changing zsh's native behaviour now --- I tried it and it
immediately fell over in one of my own functions as soon as I started
the shell.

Here's a patch which gives the ksh behaviour when KSH_ARRAYS is set; it
could do with more testing of all the possible cases, since the logic
isn't entirely trivial.

As well as describing this, I've also tried to make the documentation
more explicit about argument and option behaviour; this could do with a
read through by other people who might spot things I've described badly
(= Bart).

Index: Doc/Zsh/builtins.yo
===================================================================
RCS file: /cvsroot/zsh/zsh/Doc/Zsh/builtins.yo,v
retrieving revision 1.55
diff -u -r1.55 builtins.yo
--- Doc/Zsh/builtins.yo	5 Feb 2003 11:57:08 -0000	1.55
+++ Doc/Zsh/builtins.yo	7 Feb 2003 11:50:07 -0000
@@ -976,14 +976,34 @@
 ifnzman(noderef(Options))\
 .  Flags may be specified by name using the tt(-o) option.
 
-If the tt(-A) flag is specified, var(name) is
-set to an array containing the given var(arg)s. if tt(PLUS()A) is used and
-var(name) is an array, the given arguments will replace the initial
-elements of that array; if no var(name) is specified, all arrays are
-printed.  Otherwise the positional parameters are set.  If no arguments are
-given, then the names and values of all parameters are printed on the
-standard output.  If the only argument is `tt(PLUS())',
-the names of all parameters are printed.
+If the tt(-A) flag is specified, var(name) is set to an array containing
+the given var(arg)s; if no var(name) is specified, all arrays are printed
+together with their values.
+
+If tt(PLUS()A) is used and var(name) is an array, the
+given arguments will replace the initial elements of that array; if no
+var(name) is specified, all arrays are printed without their values.
+
+The behaviour of arguments after tt(-A) var(name) or tt(PLUS()A) var(name)
+depends on whether the option tt(KSH_ARRAYS) is set.  If it is not set, all
+arguments following var(name) are treated as values for the array,
+regardless of their form.  If the option is set, normal option processing
+continues at that point; only regular arguments are treated as values for
+the array.  This means that
+
+example(set -A array -x -- foo)
+
+sets tt(array) to `tt(-x -- foo)' if tt(KSH_ARRAYS) is not set, but sets
+the array to tt(foo) and turns on the option `tt(-x)' if it is set.
+
+If the tt(-A) flag is not present, but there are arguments beyond the
+options, the positional parameters are set.  If the option list (if any)
+is terminated by `tt(-)tt(-)', and there are no further arguments, the
+positional parameters will be unset.
+
+If no arguments and no `tt(-)tt(-)' are given, then the names and values of
+all parameters are printed on the standard output.  If the only argument is
+`tt(PLUS())', the names of all parameters are printed.
 )
 module(setcap)(zsh/cap)
 findex(setopt)
Index: Src/builtin.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/builtin.c,v
retrieving revision 1.94
diff -u -r1.94 builtin.c
--- Src/builtin.c	5 Feb 2003 11:57:09 -0000	1.94
+++ Src/builtin.c	7 Feb 2003 11:50:07 -0000
@@ -531,7 +531,7 @@
 {
     int action, optno, array = 0, hadopt = 0,
 	hadplus = 0, hadend = 0, sort = 0;
-    char **x;
+    char **x, *arrayname = NULL;
 
     /* Obsolescent sh compatibility: set - is the same as set +xv *
      * and set - args is the same as set +xv -- args              */
@@ -575,7 +575,15 @@
 		if(!*++*args)
 		    args++;
 		array = action ? 1 : -1;
-		goto doneoptions;
+		arrayname = *args;
+		if (!arrayname)
+		    goto doneoptions;
+		else if  (!isset(KSHARRAYS))
+		{
+		    args++;
+		    goto doneoptions;
+		}
+		break;
 	    } else if (**args == 's')
 		sort = action ? 1 : -1;
 	    else {
@@ -592,30 +600,31 @@
 
     /* Show the parameters, possibly with values */
     queue_signals();
-    if (!hadopt && !*args)
-	scanhashtable(paramtab, 1, 0, 0, paramtab->printnode,
-		      hadplus ? PRINT_NAMEONLY : 0);
-
-    if (array && !*args) {
-	/* display arrays */
-	scanhashtable(paramtab, 1, PM_ARRAY, 0, paramtab->printnode,
-		      hadplus ? PRINT_NAMEONLY : 0);
-    }
-    if (!*args && !hadend) {
-	unqueue_signals();
-	return 0;
+    if (!arrayname)
+    {
+	if (!hadopt && !*args)
+	    scanhashtable(paramtab, 1, 0, 0, paramtab->printnode,
+			  hadplus ? PRINT_NAMEONLY : 0);
+
+	if (array) {
+	    /* display arrays */
+	    scanhashtable(paramtab, 1, PM_ARRAY, 0, paramtab->printnode,
+			  hadplus ? PRINT_NAMEONLY : 0);
+	}
+	if (!*args && !hadend) {
+	    unqueue_signals();
+	    return 0;
+	}
     }
-    if (array)
-	args++;
     if (sort)
 	qsort(args, arrlen(args), sizeof(char *),
 	      sort > 0 ? strpcmp : invstrpcmp);
     if (array) {
 	/* create an array with the specified elements */
-	char **a = NULL, **y, *name = args[-1];
+	char **a = NULL, **y;
 	int len = arrlen(args);
 
-	if (array < 0 && (a = getaparam(name))) {
+	if (array < 0 && (a = getaparam(arrayname))) {
 	    int al = arrlen(a);
 
 	    if (al > len)
@@ -627,7 +636,7 @@
 	    *y++ = ztrdup(*args++);
 	}
 	*y++ = NULL;
-	setaparam(name, x);
+	setaparam(arrayname, x);
     } else {
 	/* set shell arguments */
 	freearray(pparams);

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR Ltd., Science Park, Milton Road,
Cambridge, CB4 0WH, UK                          Tel: +44 (0)1223 692070


**********************************************************************
The information transmitted is intended only for the person or
entity to which it is addressed and may contain confidential 
and/or privileged material. 
Any review, retransmission, dissemination or other use of, or
taking of any action in reliance upon, this information by 
persons or entities other than the intended recipient is 
prohibited.  
If you received this in error, please contact the sender and 
delete the material from any computer.
**********************************************************************

