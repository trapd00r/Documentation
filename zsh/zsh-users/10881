From zsh-users-return-10881-mason-zsh=primenet.com.au@sunsite.dk Sun Oct 15 18:30:37 2006
Return-Path: <zsh-users-return-10881-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16939 invoked from network); 15 Oct 2006 18:30:35 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.6 (2006-10-03) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00,
	FORGED_RCVD_HELO autolearn=ham version=3.1.6
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 15 Oct 2006 18:30:35 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 2183 invoked from network); 15 Oct 2006 18:30:27 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 15 Oct 2006 18:30:27 -0000
Received: (qmail 10972 invoked by alias); 15 Oct 2006 18:30:18 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 10881
Received: (qmail 10963 invoked from network); 15 Oct 2006 18:30:18 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 15 Oct 2006 18:30:18 -0000
Received: (qmail 1101 invoked from network); 15 Oct 2006 18:30:18 -0000
Received: from vms040pub.verizon.net (206.46.252.40)
  by a.mx.sunsite.dk with SMTP; 15 Oct 2006 18:30:16 -0000
Received: from torch.brasslantern.com ([71.116.118.106])
 by vms040.mailsrvcs.net
 (Sun Java System Messaging Server 6.2-4.02 (built Sep  9 2005))
 with ESMTPA id <0J7600A5PWQE8XD0@vms040.mailsrvcs.net> for
 zsh-users@sunsite.dk; Sun, 15 Oct 2006 13:30:15 -0500 (CDT)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id k9FIUDgD032601	for
 <zsh-users@sunsite.dk>; Sun, 15 Oct 2006 11:30:14 -0700
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id k9FIUD9u032600	for zsh-users@sunsite.dk; Sun,
 15 Oct 2006 11:30:13 -0700
Date: Sun, 15 Oct 2006 11:30:11 -0700
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: About insert-last-word and "command args | less"
In-reply-to: <20061015103925.GK28997@prunille.vinc17.org>
To: zsh-users@sunsite.dk
Message-id: <061015113013.ZM32599@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <20061014115617.GA28997@prunille.vinc17.org>
	<061014142741.ZM22567@torch.brasslantern.com>
	<20061015005019.GJ28997@prunille.vinc17.org>
	<061014210451.ZM22937@torch.brasslantern.com>
	<20061015103925.GK28997@prunille.vinc17.org>
Comments: In reply to Vincent Lefevre <vincent@vinc17.org>
 "Re: About insert-last-word and "command args | less"" (Oct 15, 12:39pm)

On Oct 15, 12:39pm, Vincent Lefevre wrote:
}
} OK. But is it possible
}   * to skip a history line when all its words match the pattern?

This is difficult because of handling a numeric argument, e.g. when
called as "zle smart-insert-last-word 7" [%] it's supposed to back up 
exactly 7 commands and take the last word from that one.  The pattern
is not matched against the words until after the history line to
examine is chosen.

I believe the patch below does this the way you want ... however, it
makes a liar of the documentation, which implies that line-selection
takes precedence over interesting-word-selection; so it's not suitable
to be committed without some more work.

[%] As contrasted with "zle smart-insert-last-word -n 7" which is
supposed to select the 7th-from-last word of the previous command.

}   * to always get a word that wasn't proposed before (when one uses
}     ^]_ several times) by skipping history lines when needed?

That would require both that we solve the previous problem *and* store
somewhere all previous words that have been offered *and* do some kind
of negated match (e.g., the $lastcmd[(I)$pattern] change in the patch
below would have to be made back into a loop with two comparisons on
every word).


Index: smart-insert-last-word
===================================================================
diff -c -r1.2 smart-insert-last-word
--- smart-insert-last-word	15 Mar 2003 17:43:15 -0000	1.2
+++ smart-insert-last-word	15 Oct 2006 18:16:30 -0000
@@ -35,7 +35,7 @@
 #   bindkey '\e=' insert-last-assignment
 
 emulate -L zsh
-setopt extendedglob
+setopt extendedglob nohistignoredups
 
 # Not strictly necessary:
 # (($+_ilw_hist)) || integer -g _ilw_hist _ilw_count _ilw_cursor _ilw_lcursor
@@ -64,27 +64,34 @@
 _ilw_hist=$HISTNO
 _ilw_count=$NUMERIC
 
+if [[ -z "$numeric" ]]
+then
+    zstyle -s :$WIDGET match pattern ||
+	pattern='*[[:alpha:]/\\]*'
+fi
+
 zle .up-history || return 1      # Retrieve previous command
 lastcmd=( ${${(z)BUFFER}:#\;} )  # Split into shell words
+if [[ -n "$pattern" ]]
+then
+    integer n=0 found=$lastcmd[(I)$pattern]
+    while (( found == 0 && ++n ))
+    do
+        zle .up-history || return 1
+        lastcmd=( ${${(z)BUFFER}:#\;} )
+        found=$lastcmd[(I)$pattern]
+    done
+    (( found-- && ( NUMERIC += n ) ))
+fi
 zle .down-history                # Return to current command
 CURSOR=$cursor                   # Restore cursor position
 NUMERIC=${numeric:-1}            # In case of fall through
 
 (( NUMERIC > $#lastcmd )) && return 1
 
-if [[ -z "$numeric" ]]
+if [[ -n "$pattern" ]]
 then
-    integer i=1
-    zstyle -s :$WIDGET match pattern ||
-	pattern='*[[:alpha:]/\\]*'
-    while ((i <= $#lastcmd)); do
-	if [[ $lastcmd[-i] == $~pattern ]]; then
-	    NUMERIC=$i
-	    break
-	else
-	    ((++i))
-	fi
-    done
+    NUMERIC=$(( $#lastcmd - found ))
 fi
 LBUFFER[lcursor+1,cursor+1]=$lastcmd[-NUMERIC]
 _ilw_cursor=$CURSOR


-- 

