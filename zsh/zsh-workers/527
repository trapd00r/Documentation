From zsh-workers-request@math.gatech.edu  Sat Nov  4 12:45:55 1995
Received: from math.gatech.edu (euclid.skiles.gatech.edu [130.207.146.50]) by werple.net.au (8.7/8.7.1) with SMTP id MAA28891 for <mason@werple.mira.net.au>; Sat, 4 Nov 1995 12:45:42 +1100 (EST)
Received: by math.gatech.edu (SMI-8.6/SMI-SVR4)
	id UAA01282; Fri, 3 Nov 1995 20:26:21 -0500
Resent-Date: Fri, 3 Nov 1995 20:26:21 -0500
Old-Return-Path: <coleman@math.gatech.edu>
Message-Id: <199511040128.UAA09251@redwood.skiles.gatech.edu>
X-Mailer: exmh version 1.6.4 10/10/95
To: Zoltan Hidvegi <hzoli@cs.elte.hu>
cc: zsh-workers@math.gatech.edu (zsh-workers)
Subject: Re: Octal interpretation 
In-reply-to: Your message of "Fri, 03 Nov 1995 17:54:53 +0100."
             <199511031654.RAA08852@bolyai.cs.elte.hu> 
Mime-Version: 1.0
Content-Type: text/plain
Date: Fri, 03 Nov 1995 20:28:34 -0500
From: Richard Coleman <coleman@math.gatech.edu>
Resent-Message-ID: <"lA9e33.0.yJ.y4icm"@euclid>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/527
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

> I think 0xff hexadecimal notation can be kept but the octal notation should be
> removed.  My releases do this.  It would not be difficult to implement it in
> the baseline.  My patch only works together with the other bugfixes and
> cleanups I made in math.c.  Richard, is there any reason you do not add my
> fixes to the baseline?  I try to keep them uptodate.  I provide RCS file which
> contains all of the patches separately.  I have tools which makes merging the
> patches easier.  Several people complaind recently about bugs which I fixed
> long ago.  I completely cleaned up the lexer and the substitution code.
> Without the substitution fixes zsh cannot be installed as /bin/sh (e.g. the
> common ${1+"$@"} sh idiom does not work with more than one arguments).  Some
> developers also expressed interest in rewriting the lexer to achieve 8bit
> compilance.  I think the baseline lexer is a wrong starting point.  The
> modified lexer supports completion which makes get_comp_string() in
> zle_tricky.c much simpler (that was the most horrible zle function in
> zle_tricky).  I do not really care about the new features I added.  All of
> them are very minor (but they are well tested by now, since many people used
> my releases for more than a half year now).  I do not like this state.  Now a
> significant amount of my time is spent on kepeng the patches up-to-date.  And
> by now there are many patches from other people which did not find their way
> to the baseline but are very essential.

It's just an artifact of the way I do things.  I have a one track
mind and tend to do things serially.  First I worked on configure
and the Makefiles.  This lead me to start working on the signals code
(for portability).  This lead me to start working on the hashtable.c.
>From there is was builtin.c (which I actually rewrote a substantial part
of) and then exec.c.  The work on exec.c has started me thinking about
subst.c, so I will probably begin integrating some of these patches.

I realize I'm slow at this, but I try to be very meticulous when I
integrate changes into the baseline.  I usually check over every patch
line by line.  I had to start doing this, because people were sending
in patches without understanding all the implications of the changes
they were making.  This is understandable since parts of zsh are very
complicated.  This way of doing things has slowed down progress somewhat,
but will ultimately produce a much better zsh.

Also, it is time consuming for me to go through the RCS files from your
distribution.  It would be a big help if you started e-mailing me some
of the pieces you think are the most essential.

rc

