From zsh-workers-return-15222-mason-zsh=primenet.com.au@sunsite.dk Tue Jul 03 08:38:29 2001
Return-Path: <zsh-workers-return-15222-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20884 invoked from network); 3 Jul 2001 08:38:18 -0000
Received: from sunsite.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 3 Jul 2001 08:38:18 -0000
Received: (qmail 7674 invoked by alias); 3 Jul 2001 08:37:05 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 15222
Received: (qmail 7644 invoked from network); 3 Jul 2001 08:37:04 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer david.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: "ZSH Workers Mailing List" <zsh-workers@sunsite.dk>
Subject: RE: Compile error
Date: Tue, 3 Jul 2001 12:37:50 +0400
Message-ID: <002701c1039b$71ebaf50$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary="----=_NextPart_000_0028_01C103BC.F8FD4F50"
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
In-Reply-To: <000901c102c9$4f55f540$450000c0@kenpc.cms.aust.com>
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2479.0006

This is a multi-part message in MIME format.

------=_NextPart_000_0028_01C103BC.F8FD4F50
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit


>
>
gcc -c -I.  -DHAVE_CONFIG_H -D__sco  -Wall -Wno-implicit -Wmissing-prototype
s -O2  -o builtin.o builtin.c
> In file included from builtin.c:30:
> zsh.mdh:15: sigcount.h: No such file or directory
> In file included from builtin.c:30:
> zsh.mdh:30: builtin.epro: No such file or directory

...

Well, the immediate problem is that depenencies for zsh.mdh are missing in
generated Makemod :

zsh.mdh:
        @$(MAKE) -f $(makefile) $(MAKEDEFS) zsh.mdh.tmp
        @mv -f zsh.mdh.tmp zsh.mdh
        @echo "Updated \`zsh.mdh'."

instead of correct one:

zsh.mdh:  ../config.h system.h zsh.h sigcount.h signals.h prototypes.h
hashtable.h ztype.h  zsh.mdhi
        @$(MAKE) -f $(makefile) $(MAKEDEFS) zsh.mdh.tmp
        @mv -f zsh.mdh.tmp zsh.mdh
        @echo "Updated \`zsh.mdh'."

I have been staring at it for some time without avail. I can understand how
${headers} may disappear, but not zsh.mdhi; it is generated here:

        echo "${mddname}.mdh: ${modhdeps} ${headers} ${hdrdeps}
${mddname}.mdhi"
        echo "  @\$(MAKE) -f \$(makefile) \$(MAKEDEFS) ${mddname}.mdh.tmp"
        echo "  @mv -f ${mddname}.mdh.tmp ${mddname}.mdh"
        echo "  @echo \"Updated \\\`${mddname}.mdh'.\""

so if zsh.mdh appears there at all, it should have at least zsh.mdhi
dependency.

Makemod attached.

-andrej

------=_NextPart_000_0028_01C103BC.F8FD4F50
Content-Type: application/octet-stream;
	name="Makemod"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="Makemod"

##### Makemod.in generated automatically by mkmakemod.sh=0A=
##### DO NOT EDIT!=0A=
=0A=
##### =3D=3D=3D=3D=3D DEFINITIONS =3D=3D=3D=3D=3D #####=0A=
=0A=
makefile =3D Makemod=0A=
dir_top =3D ..=0A=
subdir =3D Src=0A=
=0A=
MODOBJS =3D modobjs.zsh=0A=
MODULES =3D=0A=
MDDS    =3D zsh.mdd=0A=
MDHS    =3D zsh.mdh=0A=
PROTOS  =3D proto.zsh=0A=
SUBDIRS =3D Builtins Modules Zle=0A=
=0A=
ENTRYOBJ =3D $(dir_src)/modentry..o=0A=
NNTRYOBJ =3D=0A=
ENTRYOPT =3D -emodentry=0A=
NNTRYOPT =3D=0A=
=0A=
##### =3D=3D=3D=3D=3D INCLUDING Makemod.in.in =3D=3D=3D=3D=3D #####=0A=
=0A=
#=0A=
# Makemod.in.in=0A=
#=0A=
# Copyright (c) 1995-1997 Richard Coleman=0A=
# All rights reserved.=0A=
#=0A=
# Permission is hereby granted, without written agreement and without=0A=
# license or royalty fees, to use, copy, modify, and distribute this=0A=
# software and to distribute modified versions of this software for any=0A=
# purpose, provided that the above copyright notice and the following=0A=
# two paragraphs appear in all copies of this software.=0A=
#=0A=
# In no event shall Richard Coleman or the Zsh Development Group be =
liable=0A=
# to any party for direct, indirect, special, incidental, or =
consequential=0A=
# damages arising out of the use of this software and its documentation,=0A=
# even if Richard Coleman and the Zsh Development Group have been =
advised of=0A=
# the possibility of such damage.=0A=
#=0A=
# Richard Coleman and the Zsh Development Group specifically disclaim any=0A=
# warranties, including, but not limited to, the implied warranties of=0A=
# merchantability and fitness for a particular purpose.  The software=0A=
# provided hereunder is on an "as is" basis, and Richard Coleman and the=0A=
# Zsh Development Group have no obligation to provide maintenance,=0A=
# support, updates, enhancements, or modifications.=0A=
#=0A=
=0A=
# =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D OVERRIDABLE VARIABLES =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
=0A=
# subdir is done by mkmakemod.sh=0A=
# dir_top is done by mkmakemod.sh=0A=
# SUBDIRS is done by mkmakemod.sh=0A=
=0A=
=0A=
#=0A=
# Makefile fragment for version numbers=0A=
#=0A=
# Copyright (c) 1995-1997 Richard Coleman=0A=
# All rights reserved.=0A=
#=0A=
# Permission is hereby granted, without written agreement and without=0A=
# license or royalty fees, to use, copy, modify, and distribute this=0A=
# software and to distribute modified versions of this software for any=0A=
# purpose, provided that the above copyright notice and the following=0A=
# two paragraphs appear in all copies of this software.=0A=
#=0A=
# In no event shall Richard Coleman or the Zsh Development Group be =
liable=0A=
# to any party for direct, indirect, special, incidental, or =
consequential=0A=
# damages arising out of the use of this software and its documentation,=0A=
# even if Richard Coleman and the Zsh Development Group have been =
advised of=0A=
# the possibility of such damage.=0A=
#=0A=
# Richard Coleman and the Zsh Development Group specifically disclaim any=0A=
# warranties, including, but not limited to, the implied warranties of=0A=
# merchantability and fitness for a particular purpose.  The software=0A=
# provided hereunder is on an "as is" basis, and Richard Coleman and the=0A=
# Zsh Development Group have no obligation to provide maintenance,=0A=
# support, updates, enhancements, or modifications.=0A=
#=0A=
=0A=
# This must also serve as a shell script, so do not add spaces around the=0A=
# `=3D' signs.=0A=
=0A=
VERSION=3D4.0.2=0A=
VERSION_DATE=3D'June 25, 2001'=0A=
=0A=
# source/build directories=0A=
sdir            =3D .=0A=
sdir_top        =3D ..=0A=
INSTALL         =3D .././install-sh -c=0A=
=0A=
=0A=
#=0A=
# Basic Makefile definitions=0A=
#=0A=
# Copyright (c) 1995-1997 Richard Coleman=0A=
# All rights reserved.=0A=
#=0A=
# Permission is hereby granted, without written agreement and without=0A=
# license or royalty fees, to use, copy, modify, and distribute this=0A=
# software and to distribute modified versions of this software for any=0A=
# purpose, provided that the above copyright notice and the following=0A=
# two paragraphs appear in all copies of this software.=0A=
#=0A=
# In no event shall Richard Coleman or the Zsh Development Group be =
liable=0A=
# to any party for direct, indirect, special, incidental, or =
consequential=0A=
# damages arising out of the use of this software and its documentation,=0A=
# even if Richard Coleman and the Zsh Development Group have been =
advised of=0A=
# the possibility of such damage.=0A=
#=0A=
# Richard Coleman and the Zsh Development Group specifically disclaim any=0A=
# warranties, including, but not limited to, the implied warranties of=0A=
# merchantability and fitness for a particular purpose.  The software=0A=
# provided hereunder is on an "as is" basis, and Richard Coleman and the=0A=
# Zsh Development Group have no obligation to provide maintenance,=0A=
# support, updates, enhancements, or modifications.=0A=
#=0A=
=0A=
# fundamentals=0A=
SHELL =3D /bin/sh=0A=
=0A=
EXEEXT =3D =0A=
=0A=
# install basename=0A=
tzsh            =3D zsh=0A=
=0A=
# installation directories=0A=
prefix          =3D /usr/local=0A=
exec_prefix     =3D ${prefix}=0A=
bindir          =3D ${exec_prefix}/bin=0A=
libdir          =3D ${exec_prefix}/lib=0A=
MODDIR          =3D $(libdir)/$(tzsh)/$(VERSION)=0A=
infodir         =3D ${prefix}/info=0A=
mandir          =3D ${prefix}/man=0A=
datadir         =3D ${prefix}/share=0A=
fndir           =3D ${prefix}/share/zsh/${VERSION}/functions=0A=
sitefndir       =3D ${prefix}/share/zsh/site-functions=0A=
htmldir         =3D $(datadir)/$(tzsh)/htmldoc=0A=
=0A=
# compilation=0A=
CC              =3D gcc=0A=
CPP             =3D gcc -E=0A=
CPPFLAGS        =3D =0A=
DEFS            =3D -DHAVE_CONFIG_H=0A=
CFLAGS          =3D -D__sco  -Wall -Wno-implicit -Wmissing-prototypes -O2=0A=
LDFLAGS         =3D =0A=
EXTRA_LDFLAGS   =3D =0A=
DLCFLAGS        =3D -fPIC=0A=
DLLDFLAGS       =3D =0A=
LIBLDFLAGS      =3D  -s=0A=
EXELDFLAGS      =3D  -s=0A=
LIBS            =3D -lsocket -ldl -ltermcap -lm  -lc=0A=
DL_EXT          =3D so=0A=
DLLD            =3D gcc=0A=
EXPOPT          =3D =0A=
IMPOPT          =3D =0A=
=0A=
# utilities=0A=
AWK             =3D nawk=0A=
YODL            =3D yodl=0A=
YODL2TXT        =3D $(YODL)2txt=0A=
YODL2HTML       =3D $(YODL)2html=0A=
=0A=
# install utility=0A=
INSTALL_PROGRAM =3D ${INSTALL}=0A=
INSTALL_DATA    =3D ${INSTALL} -m 644=0A=
=0A=
# variables used in determining what to install=0A=
FUNCTIONS_SUBDIRS =3D no=0A=
=0A=
# flags passed to recursive makes in subdirectories=0A=
MAKEDEFS =3D \=0A=
prefix=3D'$(prefix)' exec_prefix=3D'$(exec_prefix)' bindir=3D'$(bindir)' =
\=0A=
libdir=3D'$(libdir)' MODDIR=3D'$(MODDIR)' infodir=3D'$(infodir)' =
mandir=3D'$(mandir)' \=0A=
datadir=3D'$(datadir)' fndir=3D'$(fndir)' htmldir=3D'$(htmldir)' \=0A=
CC=3D'$(CC)' CPPFLAGS=3D'$(CPPFLAGS)' DEFS=3D'$(DEFS)' =
CFLAGS=3D'$(CFLAGS)' \=0A=
LDFLAGS=3D'$(LDFLAGS)' EXTRA_LDFLAGS=3D'$(EXTRA_LDFLAGS)' \=0A=
DLCFLAGS=3D'$(DLCFLAGS)' DLLDFLAGS=3D'$(DLLDFLAGS)' \=0A=
LIBLDFLAGS=3D'$(LIBLDFLAGS)' EXELDFLAGS=3D'$(EXELDFLAGS)' \=0A=
LIBS=3D'$(LIBS)' DL_EXT=3D'$(DL_EXT)' DLLD=3D'$(DLLD)' \=0A=
AWK=3D'$(AWK)' YODL=3D'$(YODL)' YODL2TXT=3D'$(YODL2TXT)' =
YODL2HTML=3D'$(YODL2HTML)' \=0A=
FUNCTIONS_INSTALL=3D'$(FUNCTIONS_INSTALL)' tzsh=3D'$(tzsh)'=0A=
=0A=
# override built-in suffix list=0A=
.SUFFIXES:=0A=
=0A=
sdir_src      =3D $(sdir_top)/Src=0A=
dir_src       =3D $(dir_top)/Src=0A=
=0A=
# =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D COMPILATION RULES =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
=0A=
DNCFLAGS =3D=0A=
=0A=
COMPILE     =3D $(CC) -c -I. $(CPPFLAGS) $(DEFS) $(CFLAGS) $(DNCFLAGS)=0A=
DLCOMPILE   =3D $(CC) -c -I. $(CPPFLAGS) $(DEFS) -DMODULE $(CFLAGS) =
$(DLCFLAGS)=0A=
LINK        =3D $(CC) $(LDFLAGS) $(EXELDFLAGS) $(EXTRA_LDFLAGS) -o $@=0A=
DLLINK      =3D $(DLLD) $(LDFLAGS) $(LIBLDFLAGS) $(DLLDFLAGS) -o $@=0A=
=0A=
KNR_OBJ=3D.o=0A=
KNROBJ=3D._foo_=0A=
=0A=
ANSIOBJ=3D.o=0A=
ANSI_OBJ=3D._foo_=0A=
=0A=
.SUFFIXES: .c .$(DL_EXT) ..o .._foo_ .o ._foo_ .syms .pro .epro=0A=
=0A=
.c$(ANSIOBJ):=0A=
	$(COMPILE) -o $@ $<=0A=
	@rm -f $(dir_src)/stamp-modobjs=0A=
=0A=
.c$(KNROBJ):=0A=
	$(dir_src)/ansi2knr $< > $@.c=0A=
	$(COMPILE) -o $@ $@.c=0A=
	rm -f $@.c=0A=
	@rm -f $(dir_src)/stamp-modobjs=0A=
=0A=
.c.$(ANSIOBJ):=0A=
	$(DLCOMPILE) -o $@ $<=0A=
=0A=
.c.$(KNROBJ):=0A=
	$(dir_src)/ansi2knr $< > $@.c=0A=
	$(DLCOMPILE) -o $@ $@.c=0A=
	rm -f $@.c=0A=
=0A=
.c.syms:=0A=
	$(AWK) -f $(sdir_src)/makepro.awk $< $(subdir) > $@=0A=
=0A=
.syms.epro:=0A=
	(echo '/* Generated automatically */'; sed -n '/^E/{s/^E//;p;}' < $<) \=0A=
		> $@=0A=
	(echo '/* Generated automatically */'; sed -n '/^L/{s/^L//;p;}' < $<) \=0A=
		> `echo $@ | sed 's/\.epro$$/.pro/'`=0A=
=0A=
PROTODEPS =3D $(sdir_src)/makepro.awk=0A=
=0A=
# =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D DEPENDENCIES FOR BUILDING =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
=0A=
all: modobjs modules=0A=
.PHONY: all=0A=
=0A=
modobjs: $(MODOBJS)=0A=
modules: $(MODULES)=0A=
headers: $(MDHS)=0A=
proto: $(PROTOS)=0A=
.PHONY: modobjs modules headers proto=0A=
=0A=
prep:=0A=
	@case $(sdir_top) in \=0A=
	    /*) top_srcdir=3D$(sdir_top) ;; \=0A=
	    *) top_srcdir=3D$(subdir)/$(sdir_top) ;; \=0A=
	esac; \=0A=
	export top_srcdir; \=0A=
	cd $(dir_top) || exit 1; \=0A=
	subdirs=3D'$(SUBDIRS)'; \=0A=
	for subdir in $$subdirs; do \=0A=
	    dir=3D$(subdir)/$$subdir; \=0A=
	    test -d $$dir || mkdir $$dir; \=0A=
	    $(SHELL) $$top_srcdir/Src/mkmakemod.sh $$dir Makefile || exit 1; \=0A=
	    ( cd $$dir && $(MAKE) $(MAKEDEFS) $@ ) || exit 1; \=0A=
	done=0A=
.PHONY: prep=0A=
=0A=
headers prep: $(dir_src)/modules.stamp=0A=
$(dir_src)/modules.stamp: $(MDDS)=0A=
	echo 'timestamp for *.mdd files' > $@=0A=
.PHONY: headers=0A=
=0A=
FORCE:=0A=
.PHONY: FORCE=0A=
=0A=
# =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D DEPENDENCIES FOR INSTALLING =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
=0A=
install: install.bin install.modules=0A=
uninstall: uninstall.bin uninstall.modules=0A=
.PHONY: install uninstall=0A=
=0A=
install.bin: install.bin-here=0A=
uninstall.bin: uninstall.bin-here=0A=
install.modules: install.modules-here=0A=
uninstall.modules: uninstall.modules-here=0A=
.PHONY: install.bin uninstall.bin install.modules uninstall.modules=0A=
=0A=
install.bin-here uninstall.bin-here:=0A=
install.modules-here uninstall.modules-here:=0A=
.PHONY: install.bin-here install.modules-here=0A=
=0A=
# =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D DEPENDENCIES FOR CLEANUP =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
=0A=
=0A=
#=0A=
# Makefile fragment for cleanup=0A=
#=0A=
# Copyright (c) 1995-1997 Richard Coleman=0A=
# All rights reserved.=0A=
#=0A=
# Permission is hereby granted, without written agreement and without=0A=
# license or royalty fees, to use, copy, modify, and distribute this=0A=
# software and to distribute modified versions of this software for any=0A=
# purpose, provided that the above copyright notice and the following=0A=
# two paragraphs appear in all copies of this software.=0A=
#=0A=
# In no event shall Richard Coleman or the Zsh Development Group be =
liable=0A=
# to any party for direct, indirect, special, incidental, or =
consequential=0A=
# damages arising out of the use of this software and its documentation,=0A=
# even if Richard Coleman and the Zsh Development Group have been =
advised of=0A=
# the possibility of such damage.=0A=
#=0A=
# Richard Coleman and the Zsh Development Group specifically disclaim any=0A=
# warranties, including, but not limited to, the implied warranties of=0A=
# merchantability and fitness for a particular purpose.  The software=0A=
# provided hereunder is on an "as is" basis, and Richard Coleman and the=0A=
# Zsh Development Group have no obligation to provide maintenance,=0A=
# support, updates, enhancements, or modifications.=0A=
#=0A=
=0A=
mostlyclean: mostlyclean-recursive mostlyclean-here=0A=
clean:       clean-recursive       clean-here=0A=
distclean:   distclean-recursive   distclean-here=0A=
realclean:   realclean-recursive   realclean-here=0A=
=0A=
mostlyclean-here:=0A=
clean-here: mostlyclean-here=0A=
distclean-here: clean-here=0A=
realclean-here: distclean-here=0A=
=0A=
mostlyclean-recursive clean-recursive distclean-recursive =
realclean-recursive:=0A=
	@subdirs=3D'$(SUBDIRS)'; if test -n "$$subdirs"; then \=0A=
	  target=3D`echo $@ | sed s/-recursive//`; \=0A=
	  for subdir in $$subdirs; do \=0A=
	    (cd $$subdir && $(MAKE) $(MAKEDEFS) $$target) || exit 1; \=0A=
	  done; \=0A=
	fi=0A=
=0A=
mostlyclean-here:=0A=
	rm -f *.o *.export *.$(DL_EXT)=0A=
.PHONY: mostlyclean-here=0A=
=0A=
clean-here:=0A=
	rm -f *.o.c *.syms *.pro *.epro *.mdh *.mdhi *.mdhs *.mdh.tmp=0A=
.PHONY: clean-here=0A=
=0A=
distclean-here:=0A=
	rm -f $(makefile) $(makefile).in=0A=
.PHONY: distclean-here=0A=
=0A=
# =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D RECURSIVE MAKES =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
=0A=
install.bin uninstall.bin install.modules uninstall.modules \=0A=
modobjs modules headers proto:=0A=
	@subdirs=3D'$(SUBDIRS)'; for subdir in $$subdirs; do \=0A=
	  ( cd $$subdir && $(MAKE) $(MAKEDEFS) $@ ) || exit 1; \=0A=
	done=0A=
=0A=
# =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D DEPENDENCIES FOR MAINTENANCE =
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=0A=
=0A=
$(makefile): $(makefile).in $(dir_top)/config.status=0A=
	@case $(sdir_top) in \=0A=
	    /*) top_srcdir=3D$(sdir_top) ;; \=0A=
	    *) top_srcdir=3D$(subdir)/$(sdir_top) ;; \=0A=
	esac; \=0A=
	export top_srcdir; \=0A=
	echo 'cd $(dir_top) && $(SHELL)' \=0A=
	    '$$top_srcdir/Src/mkmakemod.sh -m $(subdir) $(makefile)'; \=0A=
	cd $(dir_top) && \=0A=
	    $(SHELL) $$top_srcdir/Src/mkmakemod.sh -m $(subdir) $(makefile)=0A=
=0A=
$(makefile).in: $(sdir_src)/mkmakemod.sh $(sdir_src)/Makemod.in.in =
$(MDDS) \=0A=
	$(dir_top)/config.modules=0A=
	@case $(sdir_top) in \=0A=
	    /*) top_srcdir=3D$(sdir_top) ;; \=0A=
	    *) top_srcdir=3D$(subdir)/$(sdir_top) ;; \=0A=
	esac; \=0A=
	export top_srcdir; \=0A=
	echo 'cd $(dir_top) && $(SHELL)' \=0A=
	    '$$top_srcdir/Src/mkmakemod.sh -i $(subdir) $(makefile)'; \=0A=
	cd $(dir_top) && \=0A=
	    $(SHELL) $$top_srcdir/Src/mkmakemod.sh -i $(subdir) $(makefile)=0A=
=0A=
=0A=
##### =3D=3D=3D=3D=3D DEPENDENCIES GENERATED FROM zsh.mdd =
=3D=3D=3D=3D=3D #####=0A=
=0A=
MODOBJS_zsh =3D builtin.o compat.o cond.o exec.o glob.o hashtable.o =
hist.o init.o input.o jobs.o lex.o linklist.o loop.o math.o mem.o =
module.o options.o params.o parse.o pattern.o prompt.o signals.o =
signames.o string.o subst.o text.o utils.o watch.o=0A=
MODDOBJS_zsh =3D builtin..o compat..o cond..o exec..o glob..o =
hashtable..o hist..o init..o input..o jobs..o lex..o linklist..o loop..o =
math..o mem..o module..o options..o params..o parse..o pattern..o =
prompt..o signals..o signames..o string..o subst..o text..o utils..o =
watch..o  $(NNTRYOBJ)=0A=
SYMS_zsh =3D builtin.syms compat.syms cond.syms exec.syms glob.syms =
hashtable.syms hist.syms init.syms input.syms jobs.syms lex.syms =
linklist.syms loop.syms math.syms mem.syms module.syms options.syms =
params.syms parse.syms pattern.syms prompt.syms signals.syms =
signames.syms string.syms subst.syms text.syms utils.syms watch.syms =0A=
EPRO_zsh =3D builtin.epro compat.epro cond.epro exec.epro glob.epro =
hashtable.epro hist.epro init.epro input.epro jobs.epro lex.epro =
linklist.epro loop.epro math.epro mem.epro module.epro options.epro =
params.epro parse.epro pattern.epro prompt.epro signals.epro =
signames.epro string.epro subst.epro text.epro utils.epro watch.epro=0A=
INCS_zsh =3D $(EPRO_zsh) =0A=
EXPIMP_zsh =3D  $(EXPOPT)zsh.export=0A=
NXPIMP_zsh =3D=0A=
LINKMODS_zsh =3D =0A=
NOLINKMODS_zsh =3D =0A=
=0A=
proto.zsh: $(EPRO_zsh)=0A=
$(SYMS_zsh): $(PROTODEPS)=0A=
=0A=
zsh.export: $(SYMS_zsh)=0A=
	( echo '#!'; cat $(SYMS_zsh) | sed -n '/^X/{s/^X//;p;}' | sort -u ) > $@=0A=
=0A=
modobjs.zsh: $(MODOBJS_zsh)=0A=
	echo '' $(MODOBJS_zsh) >> $(dir_src)/stamp-modobjs.tmp=0A=
=0A=
zsh.mdhi: zsh.mdhs $(INCS_zsh)=0A=
	@test -f $@ || echo 'do not delete this file' > $@=0A=
=0A=
zsh.mdhs: zsh.mdd=0A=
	@$(MAKE) -f $(makefile) $(MAKEDEFS) zsh.mdh.tmp=0A=
	@if cmp -s zsh.mdh zsh.mdh.tmp; then \=0A=
	    rm -f zsh.mdh.tmp; \=0A=
	    echo "\`zsh.mdh' is up to date."; \=0A=
	else \=0A=
	    mv -f zsh.mdh.tmp zsh.mdh; \=0A=
	    echo "Updated \`zsh.mdh'."; \=0A=
	fi=0A=
	echo 'timestamp for zsh.mdh against zsh.mdd' > $@=0A=
=0A=
zsh.mdh: =0A=
	@$(MAKE) -f $(makefile) $(MAKEDEFS) zsh.mdh.tmp=0A=
	@mv -f zsh.mdh.tmp zsh.mdh=0A=
	@echo "Updated \`zsh.mdh'."=0A=
=0A=
zsh.mdh.tmp:=0A=
	@( \=0A=
	    echo '#ifndef have_zshQsmain_module'; \=0A=
	    echo '#define have_zshQsmain_module'; \=0A=
	    echo; \=0A=
	    echo '# ifndef IMPORTING_MODULE_zshQsmain'; \=0A=
	    if test no =3D yes; then \=0A=
		echo '#  ifndef MODULE'; \=0A=
	    fi; \=0A=
	    echo '#   define boot_ boot_zshQsmain'; \=0A=
	    echo '#   define cleanup_ cleanup_zshQsmain'; \=0A=
	    echo '#   define setup_ setup_zshQsmain'; \=0A=
	    echo '#   define finish_ finish_zshQsmain'; \=0A=
	    if test no =3D yes; then \=0A=
		echo '#  endif /* !MODULE */'; \=0A=
	    fi; \=0A=
	    echo '# endif /* !IMPORTING_MODULE_zshQsmain */'; \=0A=
	    echo; \=0A=
	    echo '/* Extra headers for this module */'; \=0A=
	    for hdr in ../config.h system.h zsh.h sigcount.h signals.h =
prototypes.h hashtable.h ztype.h; do \=0A=
		if test -f $$hdr; then \=0A=
		    echo '# include "'$$hdr'"'; \=0A=
		else \=0A=
		    echo '# include "$(sdir)/'$$hdr'"'; \=0A=
		fi; \=0A=
	    done; \=0A=
	    echo; \=0A=
	    echo '# undef mod_import_variable'; \=0A=
	    echo '# undef mod_import_function'; \=0A=
	    echo '# if defined(IMPORTING_MODULE_zshQsmain) &&  =
defined(MODULE)'; \=0A=
	    echo '#  define mod_import_variable '; \=0A=
	    echo '#  define mod_import_function '; \=0A=
	    echo '# else'; \=0A=
	    echo '#  define mod_import_function'; \=0A=
	    echo '#  define mod_import_variable'; \=0A=
	    echo '# endif /* IMPORTING_MODULE_zshQsmain && MODULE */'; \=0A=
	    for epro in $(EPRO_zsh); do \=0A=
		echo '# include "'$$epro'"'; \=0A=
	    done; \=0A=
	    echo '# undef mod_import_variable'; \=0A=
	    echo '# define mod_import_variable'; \=0A=
	    echo '# undef mod_import_variable'; \=0A=
	    echo '# define mod_import_variable'; \=0A=
	    echo '# ifndef mod_export'; \=0A=
	    echo '#  define mod_export '; \=0A=
	    echo '# endif /* mod_export */'; \=0A=
	    echo; \=0A=
	    echo '#endif /* !have_zshQsmain_module */'; \=0A=
	) > $@=0A=
=0A=
$(MODOBJS_zsh) $(MODDOBJS_zsh): zsh.mdh=0A=
=0A=
=0A=
#=0A=
# Makefile fragment for building Makefiles=0A=
#=0A=
# Copyright (c) 1995-1997 Richard Coleman=0A=
# All rights reserved.=0A=
#=0A=
# Permission is hereby granted, without written agreement and without=0A=
# license or royalty fees, to use, copy, modify, and distribute this=0A=
# software and to distribute modified versions of this software for any=0A=
# purpose, provided that the above copyright notice and the following=0A=
# two paragraphs appear in all copies of this software.=0A=
#=0A=
# In no event shall Richard Coleman or the Zsh Development Group be =
liable=0A=
# to any party for direct, indirect, special, incidental, or =
consequential=0A=
# damages arising out of the use of this software and its documentation,=0A=
# even if Richard Coleman and the Zsh Development Group have been =
advised of=0A=
# the possibility of such damage.=0A=
#=0A=
# Richard Coleman and the Zsh Development Group specifically disclaim any=0A=
# warranties, including, but not limited to, the implied warranties of=0A=
# merchantability and fitness for a particular purpose.  The software=0A=
# provided hereunder is on an "as is" basis, and Richard Coleman and the=0A=
# Zsh Development Group have no obligation to provide maintenance,=0A=
# support, updates, enhancements, or modifications.=0A=
#=0A=
=0A=
config: Makefile=0A=
	@subdirs=3D'$(SUBDIRS)'; for subdir in $$subdirs; do \=0A=
	  (cd $$subdir && $(MAKE) $(MAKEDEFS) $@) || exit 1; \=0A=
	done=0A=
=0A=
CONFIG_INCS =3D \=0A=
$(dir_top)/Config/clean.mk $(dir_top)/Config/config.mk \=0A=
$(dir_top)/Config/defs.mk $(dir_top)/Config/version.mk=0A=
=0A=
Makefile: Makefile.in $(dir_top)/config.status $(CONFIG_INCS)=0A=
	cd $(dir_top) && \=0A=
	  CONFIG_FILES=3D$(subdir)/$@ CONFIG_HEADERS=3D $(SHELL) ./config.status=0A=
=0A=
$(dir_top)/Config/defs.mk: $(sdir_top)/Config/defs.mk.in =
$(dir_top)/config.status=0A=
	cd $(dir_top) && \=0A=
	  CONFIG_FILES=3DConfig/defs.mk CONFIG_HEADERS=3D $(SHELL) =
./config.status=0A=
=0A=
signames.c: signames1.awk signames2.awk ../config.h =
/usr/include/sys/signal.h=0A=
	$(AWK) -f $(sdir)/signames1.awk /usr/include/sys/signal.h >sigtmp.c=0A=
	$(CPP) sigtmp.c >sigtmp.out=0A=
	$(AWK) -f $(sdir)/signames2.awk sigtmp.out > $@=0A=
	rm -f sigtmp.c sigtmp.out=0A=
=0A=
sigcount.h: signames.c=0A=
	grep 'define.*SIGCOUNT' signames.c > $@=0A=
=0A=
init.o: bltinmods.list zshpaths.h zshxmods.h=0A=
=0A=
init.o params.o: version.h=0A=
=0A=
version.h: $(sdir_top)/Config/version.mk=0A=
	echo '#define ZSH_VERSION "'$(VERSION)'"' > $@=0A=
=0A=
zshpaths.h: Makemod $(CONFIG_INCS)=0A=
	@echo '#define MODULE_DIR "'$(MODDIR)'"' > zshpaths.h.tmp=0A=
	@if test x$(sitefndir) !=3D xno; then \=0A=
	  echo '#define SITEFPATH_DIR "'$(sitefndir)'"' >> zshpaths.h.tmp; \=0A=
	fi=0A=
	@if test x$(fndir) !=3D xno; then \=0A=
	  echo '#define FPATH_DIR "'$(fndir)'"' >> zshpaths.h.tmp; \=0A=
	  if test x$(FUNCTIONS_SUBDIRS) !=3D x -a \=0A=
	  x$(FUNCTIONS_SUBDIRS) !=3D xno; then \=0A=
	    fpath_tmp=3D"`grep ' functions=3D.' \=0A=
	    $(dir_top)/config.modules | sed -e '/^#/d' -e '/ link=3Dno/d' \=0A=
	    -e 's/^.* functions=3D//'`"; \=0A=
	    fpath_tmp=3D`for f in $$fpath_tmp; do \=0A=
	      echo $$f | sed -e 's%^Functions/%%' -e 's%/[^/]*$$%%' -e =
's%/\*%%'; \=0A=
	    done | sort | uniq`; \=0A=
	    fpath_tmp=3D`echo $$fpath_tmp | sed 's/ /\", \"/g'`; \=0A=
	    echo "#define FPATH_SUBDIRS { \"$$fpath_tmp\" }" \=0A=
	    >>zshpaths.h.tmp; \=0A=
	  fi; \=0A=
	fi=0A=
	@if cmp -s zshpaths.h zshpaths.h.tmp; then \=0A=
	    rm -f zshpaths.h.tmp; \=0A=
	    echo "\`zshpaths.h' is up to date." ; \=0A=
	else \=0A=
	    mv -f zshpaths.h.tmp zshpaths.h; \=0A=
	    echo "Updated \`zshpaths.h'." ; \=0A=
	fi=0A=
=0A=
bltinmods.list: modules.stamp mkbltnmlst.sh $(dir_top)/config.modules=0A=
	srcdir=3D'$(sdir)' CFMOD=3D'$(dir_top)/config.modules' \=0A=
	  $(SHELL) $(sdir)/mkbltnmlst.sh $@=0A=
=0A=
zshxmods.h: $(dir_top)/config.modules=0A=
	@echo "Creating \`$@'."=0A=
	@( \=0A=
	    for q_mod in `grep ' load=3Dyes' $(dir_top)/config.modules | \=0A=
	      grep ' link=3Dstatic' | sed -e '/^#/d' -e 's/ .*//' \=0A=
	        -e 's/^name=3D//' -e 's,Q,Qq,g;s,_,Qu,g;s,/,Qs,g'`; do \=0A=
		test x$q_mod =3D xzshQsmain && continue; \=0A=
	        echo "#define LINKED_XMOD_$$q_mod 1"; \=0A=
	    done; \=0A=
	    for q_mod in `grep ' load=3Dyes' $(dir_top)/config.modules | \=0A=
	      grep ' link=3Ddynamic' | sed -e '/^#/d' -e 's/ .*//' \=0A=
	        -e 's/^name=3D//' -e 's,Q,Qq,g;s,_,Qu,g;s,/,Qs,g'`; do \=0A=
		test x$q_mod =3D x && continue; \=0A=
	        echo "#ifdef DYNAMIC"; \=0A=
		echo "# define UNLINKED_XMOD_$$q_mod 1"; \=0A=
		echo "#endif"; \=0A=
	    done; \=0A=
	) > $@=0A=
=0A=
clean-here: clean.zsh=0A=
clean.zsh:=0A=
	rm -f sigcount.h signames.c bltinmods.list version.h zshpaths.h =
zshxmods.h=0A=
=0A=
# This is not properly part of this module, but it is built as if it =
were.=0A=
main.o: main.c zsh.mdh main.epro=0A=
	$(CC) -c -I. $(CPPFLAGS) $(DEFS) $(CFLAGS) -o $@ $(sdir)/main.c=0A=
=0A=
main.syms: $(PROTODEPS)=0A=
proto.zsh: main.epro=0A=
=0A=
##### End of Makemod.in=0A=

------=_NextPart_000_0028_01C103BC.F8FD4F50--

