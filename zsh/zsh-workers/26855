From zsh-workers-return-26855-mason-zsh=primenet.com.au@sunsite.dk Tue Apr 21 00:25:42 2009
Return-Path: <zsh-workers-return-26855-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 24506 invoked from network); 21 Apr 2009 00:25:29 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 21 Apr 2009 00:25:29 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 64476 invoked from network); 21 Apr 2009 00:25:24 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 21 Apr 2009 00:25:24 -0000
Received: (qmail 24103 invoked by alias); 21 Apr 2009 00:25:18 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 26855
Received: (qmail 24091 invoked from network); 21 Apr 2009 00:25:18 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 21 Apr 2009 00:25:18 -0000
Received: from mail.gmx.net (mail.gmx.net [213.165.64.20])
	by bifrost.dotsrc.org (Postfix) with SMTP id 89F108028C72
	for <zsh-workers@sunsite.dk>; Tue, 21 Apr 2009 02:24:23 +0200 (CEST)
Received: (qmail invoked by alias); 21 Apr 2009 00:25:12 -0000
Received: from pD9E08622.dip.t-dialin.net (EHLO mail.gmx.net) [217.224.134.34]
  by mail.gmx.net (mp016) with SMTP; 21 Apr 2009 02:25:12 +0200
X-Authenticated: #9006135
X-Provags-ID: V01U2FsdGVkX1/u7cMfZ4vuASOMimZXlf36A5YBepT2KW4W3AqJiF
	MqYNjxRYFHm2tZ
Received: by mail.gmx.net (sSMTP sendmail emulation); Tue, 21 Apr 2009 02:25:12 +0200
Date: Tue, 21 Apr 2009 02:25:12 +0200
From: Marc Weber <marco-oweber@gmx.de>
To: zsh-workers@sunsite.dk
Subject: [PATCH] - some preliminary gitk completion support
Message-ID: <20090421002512.GD26612@gmx.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable
User-Agent: Mutt/1.5.16 (2007-06-09)
X-Y-GMX-Trusted: 0
X-FuHaFi: 0.51
X-Virus-Scanned: ClamAV 0.92.1/9261/Mon Apr 20 20:57:35 2009 on bifrost
X-Virus-Status: Clean

Probably this patch must be tweaked. It's not complete.
However you can complete branch names now on gitk..

Should I add the completion code to the $+functions hash?

Sincerly
Marc Weber

--- zsh-git	2009-04-21 02:08:35.000000000 +0200
+++ zsh-git-modified	2009-04-21 02:08:23.000000000 +0200
@@ -1,4 +1,4 @@
-#compdef git git-add git-am git-annotate git-apply git-applymbox git-apply=
patch git-archimport git-archive git-bisect git-blame git-branch git-cat-fi=
le git-check-attr git-check-ref-format git-checkout git-checkout-index git-=
cherry git-cherry-pick git-clean git-clone git-clone-pack git-commit git-co=
mmit-tree git-convert-objects git-count-objects git-cvsexportcommit git-cvs=
import git-cvsserver git-daemon git-describe git-diff git-diff-files git-di=
ff-index git-diff-stages git-diff-tree git-fast-import git-fetch git-fetch-=
pack git-fmt-merge-msg git-for-each-ref git-format-patch git-fsck git-gc gi=
t-get-tar-commit-id git-grep git-hash-object git-http-fetch git-http-push g=
it-imap-send git-index-pack git-init git-instaweb git-local-fetch git-log g=
it-lost-found git-ls-files git-ls-remote git-ls-tree git-mailinfo git-mails=
plit git-merge git-merge-base git-merge-file git-merge-index git-merge-one-=
file git-merge-tree git-mergetool git-mktag git-mktree git-mv git-name-rev =
git-pack-objects git-pack-redundant git-pack-refs git-patch-id git-peek-rem=
ote git-prune git-prune-packed git-pull git-push git-quiltimport git-read-t=
ree git-rebase git-receive-pack git-reflog git-relink git-remote git-repack=
 gut-runstatus git-config git-request-pull git-rerere git-reset git-rev-lis=
t git-rev-parse git-revert git-rm git-send-email git-send-pack git-sh-setup=
 git-shell git-shortlog git-show git-show-branch git-show-index git-show-re=
f git-ssh-fetch git-ssh-upload git-status git-stripspace git-svn git-svnimp=
ort git-symbolic-ref git-tag git-tar-tree git-unpack-file git-unpack-object=
s git-update-index git-update-ref git-update-server-info git-upload-archive=
 git-upload-pack git-var git-verify-pack git-verify-tag git-whatchanged git=
-write-tree
+#compdef git git-add git-am git-annotate git-apply git-applymbox git-apply=
patch git-archimport git-archive git-bisect git-blame git-branch git-cat-fi=
le git-check-attr git-check-ref-format git-checkout git-checkout-index git-=
cherry git-cherry-pick git-clean git-clone git-clone-pack git-commit git-co=
mmit-tree git-convert-objects git-count-objects git-cvsexportcommit git-cvs=
import git-cvsserver git-daemon git-describe git-diff git-diff-files git-di=
ff-index git-diff-stages git-diff-tree git-fast-import git-fetch git-fetch-=
pack git-fmt-merge-msg git-for-each-ref git-format-patch git-fsck git-gc gi=
t-get-tar-commit-id git-grep git-hash-object git-http-fetch git-http-push g=
it-imap-send git-index-pack git-init git-instaweb git-local-fetch git-log g=
it-lost-found git-ls-files git-ls-remote git-ls-tree git-mailinfo git-mails=
plit git-merge git-merge-base git-merge-file git-merge-index git-merge-one-=
file git-merge-tree git-mergetool git-mktag git-mktree git-mv git-name-rev =
git-pack-objects git-pack-redundant git-pack-refs git-patch-id git-peek-rem=
ote git-prune git-prune-packed git-pull git-push git-quiltimport git-read-t=
ree git-rebase git-receive-pack git-reflog git-relink git-remote git-repack=
 gut-runstatus git-config git-request-pull git-rerere git-reset git-rev-lis=
t git-rev-parse git-revert git-rm git-send-email git-send-pack git-sh-setup=
 git-shell git-shortlog git-show git-show-branch git-show-index git-show-re=
f git-ssh-fetch git-ssh-upload git-status git-stripspace git-svn git-svnimp=
ort git-symbolic-ref git-tag git-tar-tree git-unpack-file git-unpack-object=
s git-update-index git-update-ref git-update-server-info git-upload-archive=
 git-upload-pack git-var git-verify-pack git-verify-tag git-whatchanged git=
-write-tree gitk
=20
 # TODO: All if (( words[(I)-option] )) should be turned into
 # if (( words[(I)-option] > 0 && words[(I)-option] < CURRENT )), as the us=
er
@@ -4296,31 +4296,48 @@
   unset tmpwords expalias
 fi
=20
-if [[ $service =3D=3D git ]]; then
-  local state line
-  declare -A opt_args
-  _arguments -C \
-    '(- :)--version[display version information]' \
-    '(- :)--help[display help message]' \
-    '--exec-path=3D-[path containing core git-programs]::directory:_direct=
ories' \
-    '(-p --paginate)'{-p,--paginate}'[pipe output into $PAGER]' \
-    '--no-pager[do not pipe git output into a pager]' \
-    '--git-dir=3D-[path to repository]:directory:_directories' \
-    '--bare[use $PWD as repository]' \
-    '*::arg:->cmd_or_options' && return
-  case $state in
-    (cmd_or_options)
-      if (( CURRENT =3D=3D 1 )); then
-        __git_aliases_and_commands
-      else
-        curcontext=3D"${curcontext%:*:*}:git-$words[1]:"
-        _call_function ret _git-$words[1]
-      fi
-      ;;
-  esac
-else
+case $service in
+  git)
+    local state line
+    declare -A opt_args
+    _arguments -C \
+      '(- :)--version[display version information]' \
+      '(- :)--help[display help message]' \
+      '--exec-path=3D-[path containing core git-programs]::directory:_dire=
ctories' \
+      '(-p --paginate)'{-p,--paginate}'[pipe output into $PAGER]' \
+      '--no-pager[do not pipe git output into a pager]' \
+      '--git-dir=3D-[path to repository]:directory:_directories' \
+      '--bare[use $PWD as repository]' \
+      '*::arg:->cmd_or_options' && return
+    case $state in
+      (cmd_or_options)
+        if (( CURRENT =3D=3D 1 )); then
+          __git_aliases_and_commands
+        else
+          curcontext=3D"${curcontext%:*:*}:git-$words[1]:"
+          _call_function ret _git-$words[1]
+        fi
+        ;;
+    esac
+  ;;
+  gitk)
+    # move this into an extra function?
+    typeset -A opt_args
+    _arguments -S \
+         '-n+:Limits the number of commits to show:' \
+         '--max-count:Limits the number of commits to show:' \
+         '--since:commits more recent than a specific date:' \
+         '--until:commits older than a specific date:' \
+         '--all::' \
+         '--merge:list files leading to conflict:' \
+         '--argscmd:cmd outputting revs to show one per line:' \
+         '--select-commit:cmd outputting revs to show one per line:' \
+         '::commits to show:__git_commit_ranges2'
+    ;;
+  *)
   _call_function ret _$service
-fi
+  ;;
+esac
 }
=20
 _git

