From zsh-users-return-12377-mason-zsh=primenet.com.au@sunsite.dk Sat Dec 29 19:57:09 2007
Return-Path: <zsh-users-return-12377-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 23498 invoked from network); 29 Dec 2007 19:56:59 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.3 (2007-08-08) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.3
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 29 Dec 2007 19:56:59 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 86078 invoked from network); 29 Dec 2007 19:56:46 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 29 Dec 2007 19:56:46 -0000
Received: (qmail 21491 invoked by alias); 29 Dec 2007 19:56:36 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12377
Received: (qmail 21478 invoked from network); 29 Dec 2007 19:56:36 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 29 Dec 2007 19:56:36 -0000
Received: from virusfilter.dotsrc.org (bifrost [127.0.0.1])
	by spamfilter.dotsrc.org (Postfix) with ESMTP id B71C78058F9B
	for <zsh-users@sunsite.dk>; Sat, 29 Dec 2007 20:56:33 +0100 (CET)
Received: from vms044pub.verizon.net (vms044pub.verizon.net [206.46.252.44])
	by bifrost.dotsrc.org (Postfix) with ESMTP
	for <zsh-users@sunsite.dk>; Sat, 29 Dec 2007 20:56:33 +0100 (CET)
Received: from torch.brasslantern.com ([71.121.18.67])
 by vms044.mailsrvcs.net (Sun Java System Messaging Server 6.2-6.01 (built Apr
 3 2006)) with ESMTPA id <0JTT00DIMU1TDYF0@vms044.mailsrvcs.net> for
 zsh-users@sunsite.dk; Sat, 29 Dec 2007 13:56:18 -0600 (CST)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id lBTJuGtR007728	for
 <zsh-users@sunsite.dk>; Sat, 29 Dec 2007 11:56:17 -0800
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id lBTJuGEU007727	for zsh-users@sunsite.dk; Sat,
 29 Dec 2007 11:56:16 -0800
Date: Sat, 29 Dec 2007 11:56:16 -0800
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: history-incremental-search-backward and personnal zle widget
In-reply-to: <20071229012451.GC5256@localhost.localdomain>
In-reply-to: <47767B29.6050607@kotiportti.fi>
To: zsh-users@sunsite.dk
Message-id: <071229115616.ZM7726@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <20071229012451.GC5256@localhost.localdomain>
	<237967ef0712282235t77a64976p4d59fc4e992bc424@mail.gmail.com>
	<47767B29.6050607@kotiportti.fi>
Comments: In reply to antho.charles@gmail.com
 "history-incremental-search-backward and personnal zle widget" (Dec 29,
 2:24am)
Comments: In reply to Casper Gripenberg <casper.gripenberg@kotiportti.fi>
  "Re: history-incremental-search-backward and personnal zle widget" (Dec 29,
 6:51pm)
X-Virus-Scanned: ClamAV using ClamSMTP

On Dec 29,  2:24am, antho.charles@gmail.com wrote:
}
} zle -N rationalise-dot
} bindkey . rationalise-dot
} 
} but when I type a dot in a history-incremental-search-backward ( ^R ),
} it stops the search and insert a dot in the line instead of inserting
} a dot in the searched string.

history-incremental-search-* were added to the shell long before there
were user-defined widgets or multiple keymaps, so they are implemented
by hijacking existing widgets by name rather than by adding new widgets.
Consequently when the manual says "an undefined key" it really means a
key that is bound to anything outside the small number of widgets whose
names are recognized.

There are two possible approaches, then.  Casper has outlined one of
them:  Reset the key bindings around the search so that dot is bound
to a widget that the minibuffer knows about.  The other is to replace
a standard widget with a variation of your rationalise-dot function.

On Dec 29,  6:51pm, Casper Gripenberg wrote:
:
: function scrub-history-incremental-search-backward () {
:    bindkey -r "."
:    zle .history-incremental-search-backward
:    bindkey "." rationalise-dot
: }

This won't quite work.  You need to replace
   bindkey -r "."
with
   bindkey "." self-insert

Otherwise there is no binding for dot and it's truly an undefined key.
Further you need to replace both history-incremental-search-backward
and history-incremental-search-forward with similar functions.

That bindkey is a clue to how to implement the second option:

    rationalise-dot() {
       if [[ $KEYS = "." && $LBUFFER = *.. ]]; then
	  LBUFFER+=/..
       else
	  zle .self-insert "$@"
       fi
    }
    zle -N self-insert rationalise-dot

Now your rationalise-dot widget is actually *named* self-insert, which
is a widget known to the minibuffer and therefore everything works.

The drawback to the latter solution is that there are other tricks that
rely on redefining self-insert, so you may have to choose which of the
various possibilities is most important to you.

So instead you could pick another widget that the minibuffer "knows
about" and redefine that.  A good choice is "magic-space" because (1)
it's already "magic" and (2) it's designed to be bound to a specific
key, unlike self-insert which is bound to almost everything.

    magic-space-rationalise-dot() {
       case "$KEYS" in
       (" ") zle .magic-space "$@" ;;
       ( . ) [[ $LBUFFER = *.. ]] && LBUFFER+=/. ;&
       ( * ) zle .self-insert "$@" ;;
       esac
    }
    zle -N magic-space magic-space-rationalise-dot
    bindkey "." magic-space

Note that binding space to magic-space still works as it did before.

