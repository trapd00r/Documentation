From zsh-users-return-14598-mason-zsh=primenet.com.au@zsh.org Tue Nov 24 18:45:27 2009
Return-Path: <zsh-users-return-14598-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 10259 invoked by alias); 24 Nov 2009 18:45:27 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14598
Received: (qmail 28525 invoked from network); 24 Nov 2009 18:45:14 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-6.6 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_MED
	autolearn=ham version=3.2.5
Received-SPF: none (ns1.primenet.com.au: domain at Sun.COM does not designate permitted sender hosts)
MIME-version: 1.0
Content-transfer-encoding: 7BIT
Content-type: text/plain; CHARSET=US-ASCII
Date: Tue, 24 Nov 2009 13:33:45 -0500
From: Peter Miller <Peter.Miller@Sun.COM>
Subject: Re: Redirecting shell output to a pipe
In-reply-to: <20091124143140.GA7612@fermat.math.technion.ac.il>
Sender: Peter.Miller@Sun.COM
To: "Nadav Har'El" <nyh@math.technion.ac.il>
Cc: zsh-users@zsh.org
Message-id: <4B0C2709.5080307@sun.com>
References: <20091124143140.GA7612@fermat.math.technion.ac.il>
User-Agent: Thunderbird 2.0.0.19 (X11/20081227)

Nadav Har'El wrote:
> Hi,
>
> If a shell script wants all its output to go to a file, it's easy:
>
> 	exec >filename 2>&1
>
> Isn't it natural to assume that in the same fashion, you should also
> be able to redirect the scripts output to a pipe? E.g., a very useful
> idiom could have been
>
> 	exec | tee filename
>   

exec |& tee filename

> to redirect stdout both to a file, and to the terminal.
> But unfortunately, the above line does *not* work. Is there a reason why
> it doesn't? Wouldn't this be a useful feature?
>
> By the way, for the curious, there is actually a different solution to this
> need, but it is much more convoluted. The other solution is to write this:
>
> 	exec 3>&1
> 	coproc tee /tmp/b >&3
> 	exec >&p 2>&1
>
> (and perhaps do something, I'm not even sure what, at the end of the script
> to give the tee coprocess enough time to finish outputting before the script
> exits).
>
> Another downside of this solution, besides being extremely complex (99%
> of the zsh users will probably not be able to figure it out), is that
> it takes the only coprocess that zsh gives you, which won't work if your
> code is already using coprocesses.
>
>   

