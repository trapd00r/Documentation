From zsh-workers-return-22565-mason-zsh=primenet.com.au@sunsite.dk Sun Jul 30 19:48:30 2006
Return-Path: <zsh-workers-return-22565-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 26506 invoked from network); 30 Jul 2006 19:48:28 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=BAYES_00,FORGED_RCVD_HELO 
	autolearn=ham version=3.1.3
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 30 Jul 2006 19:48:28 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 22102 invoked from network); 30 Jul 2006 19:48:22 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 30 Jul 2006 19:48:22 -0000
Received: (qmail 27867 invoked by alias); 30 Jul 2006 19:48:19 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 22565
Received: (qmail 27857 invoked from network); 30 Jul 2006 19:48:18 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 30 Jul 2006 19:48:18 -0000
Received: (qmail 21810 invoked from network); 30 Jul 2006 19:48:18 -0000
Received: from mta08-winn.ispmail.ntl.com (HELO mtaout02-winn.ispmail.ntl.com) (81.103.221.48)
  by a.mx.sunsite.dk with SMTP; 30 Jul 2006 19:48:16 -0000
Received: from aamtaout02-winn.ispmail.ntl.com ([81.103.221.35])
          by mtaout02-winn.ispmail.ntl.com with ESMTP
          id <20060730194816.JFEM27023.mtaout02-winn.ispmail.ntl.com@aamtaout02-winn.ispmail.ntl.com>;
          Sun, 30 Jul 2006 20:48:16 +0100
Received: from pwslaptop.csr.com ([81.107.41.155])
          by aamtaout02-winn.ispmail.ntl.com with ESMTP
          id <20060730194815.FFBB23938.aamtaout02-winn.ispmail.ntl.com@pwslaptop.csr.com>;
          Sun, 30 Jul 2006 20:48:15 +0100
Received: from pwslaptop.csr.com (pwslaptop.csr.com [127.0.0.1])
	by pwslaptop.csr.com (8.13.7/8.13.7) with ESMTP id k6UJm7Io025324;
	Sun, 30 Jul 2006 20:48:07 +0100
Message-Id: <200607301948.k6UJm7Io025324@pwslaptop.csr.com>
From: Peter Stephenson <p.w.stephenson@ntlworld.com>
To: Christian Taylor <cht@chello.at>,
        zsh-workers@sunsite.dk (Zsh hackers list)
Subject: Re: segfault on repeated tab completion after menu selection 
In-Reply-To: Message from Christian Taylor <cht@chello.at> 
   of "Sun, 30 Jul 2006 20:56:10 +0200." <200607302056.10331.cht@chello.at> 
Date: Sun, 30 Jul 2006 20:48:07 +0100

Christian Taylor wrote:
> Hi,
> 
> I use zsh 4.2.6 on Linux (vanilla 2.6.17.7 kernel). Under the following 
> circumstances I can reliably produce a segfault:
> 
> % zsh -f
> % autoload -U compinit; compinit
> % bindkey '+' accept-and-infer-next-history
> % zstyle ':completion:*' menu select yes=long
> % zstyle ':completion:*:warnings' format 'No matches for: %d'
> 
> % cd <some directory with files/subdirectories in it>
> % mkdir xyz
> % ls <TAB><TAB>
> >From the menu, select the empty xyz directory, hit "+". zsh accepts the 
> selection and says that there are no further matches in that directory.
> At this point, pressing either "+<TAB>" or "<TAB><TAB>" will result in:
> zsh: segmentation fault  zsh -f

That's certainly a bug.

I've had some success with the following patch.  Does this fix it in
your case?  Unfortunately nobody currently has the seventeen years of
postdoctoral studies necessary to understand the code properly.

Index: Src/Zle/compcore.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/Zle/compcore.c,v
retrieving revision 1.84
diff -u -r1.84 compcore.c
--- Src/Zle/compcore.c	10 Jul 2006 13:08:24 -0000	1.84
+++ Src/Zle/compcore.c	30 Jul 2006 19:47:43 -0000
@@ -466,12 +466,12 @@
 
     /* If we are doing a menu-completion... */
 
-    if (menucmp && *lst != COMP_LIST_EXPAND && 
+    if (minfo.cur && menucmp && *lst != COMP_LIST_EXPAND && 
 	(menucmp != 1 || !compwidget || compwidget == lastcompwidget)) {
 	do_menucmp(*lst);
 	return 1;
     }
-    if (menucmp && validlist && *lst == COMP_LIST_COMPLETE) {
+    if (minfo.cur && menucmp && validlist && *lst == COMP_LIST_COMPLETE) {
 	showinglist = -2;
 	onlyexpl = listdat.valid = 0;
 	return 1;

-- 
Peter Stephenson <p.w.stephenson@ntlworld.com>
Web page now at http://homepage.ntlworld.com/p.w.stephenson/

