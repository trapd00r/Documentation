From zsh-users-return-15605-mason-zsh=primenet.com.au@zsh.org Sat Dec 04 19:36:33 2010
Return-Path: <zsh-users-return-15605-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 13961 invoked by alias); 4 Dec 2010 19:36:33 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15605
Received: (qmail 15802 invoked from network); 4 Dec 2010 19:36:22 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <101204113617.ZM6156@torch.brasslantern.com>
Date: Sat, 04 Dec 2010 11:36:17 -0800
In-reply-to: <20101204010313.GM1727@prunille.vinc17.org>
Comments: In reply to Vincent Lefevre <vincent@vinc17.net>
 "Re: exit status problem" (Dec  4,  2:03am)
References: <20101203152438.GL1727@prunille.vinc17.org>
	<20101203160916.42e78913@pwslap01u.europe.root.pri>
	<20101204010313.GM1727@prunille.vinc17.org>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-users@zsh.org
Subject: Re: exit status problem
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Dec 4,  2:03am, Vincent Lefevre wrote:
}
}   A backgrounded pipeline returns a status of zero.
} 
} It seems to be a bug in zsh 4.3.10 that has been fixed in the latest
} dev versions. Do you have more information?

It was a bug at least as far back as 4.2.0.  Backgrounded jobs appear
not to have changed the foreground status until sometime post-4.3.10,
but I'm not finding a likely-looking ChangeLog entry unless this fix
was a side-effect of adding POSIX_JOBS behavior.  Or maybe it's this:

	* users/15217: Src/Zle/zle_main.c: use top-level status
	when redrawing prompt.

} Back to my original problem, I can reproduce it with the dev version,
} using:
} 
} 1. I type "false".
} 2. I type "sleep 5 &".
} 3. I type "false".
} 4. I increase the window width.
} 5. I type [Enter].

The status you're displaying is $? stored in psvar[1], correct?  And
that's set by precmd, and you're explicitly calling precmd again on
TRAPCLD, rather than allowing it to be called in the proper context
with global status manipulated as it would be at hook time.

If I use %? instead, I get consistent behavior, that is, the status
shown in the prompt never changes on window resize.  So I have to
conclude that this is an effect you've introduced.

It's too bad it's necessary to construct such a ridiculously elaborate
chain of %?(.t.f) conditions to get the effect your precmd creates in
psvar[1].

(){
  local x y z
  for x in {1..255}
  do
    if (( x > 128 ))
    then y+="%$x(?.${signals[x-127]:-$x}."
    else y+="%$x(?.$x."
    fi
    z+=")"
  done
  PS1+="$y"0"$z"
}

