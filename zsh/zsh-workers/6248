From zsh-workers-return-6248-mason-zsh=primenet.com.au@sunsite.auc.dk Mon May 10 11:46:00 1999
Return-Path: <zsh-workers-return-6248-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 10390 invoked from network); 10 May 1999 11:45:58 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 10 May 1999 11:45:58 -0000
Received: (qmail 15516 invoked by alias); 10 May 1999 11:45:42 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 6248
Received: (qmail 15509 invoked from network); 10 May 1999 11:45:41 -0000
Message-Id: <9905101121.AA13919@ibmth.df.unipi.it>
To: zsh-workers@sunsite.auc.dk (Zsh hackers list)
Subject: Bug in mult_isarr
Date: Mon, 10 May 1999 13:21:20 +0200
From: Peter Stephenson <pws@ibmth.df.unipi.it>

Modifiers and split process substitutions don't seem to go together too
well with the mult_isarr patch (6046).

% print "${(@)${(@)=$(echo yan tan tethera dick)}:##t*}"

before:

yan dick

after:

yan tan tethera dick

The example that I originally found was presumably triggering the same
thing, 

% print "${(@)${(@f)$(typeset)}:#*local *\=*}"

where you get nothing after the patch.  However, I also noticed that in
that case if you miss out the `:' the shell hangs.

-- 
Peter Stephenson <pws@ibmth.df.unipi.it>       Tel: +39 050 844536
WWW:  http://www.ifh.de/~pws/
Dipartimento di Fisica, Via Buonarroti 2, 56127 Pisa, Italy

