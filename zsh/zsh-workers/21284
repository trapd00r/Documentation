From zsh-workers-return-21284-mason-zsh=primenet.com.au@sunsite.dk Fri May 27 11:47:46 2005
Return-Path: <zsh-workers-return-21284-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2367 invoked from network); 27 May 2005 11:47:45 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 27 May 2005 11:47:45 -0000
Received: (qmail 21024 invoked from network); 27 May 2005 11:47:38 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 27 May 2005 11:47:38 -0000
Received: (qmail 24364 invoked by alias); 27 May 2005 11:47:35 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 21284
Received: (qmail 24355 invoked from network); 27 May 2005 11:47:35 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 27 May 2005 11:47:35 -0000
Received: (qmail 20729 invoked from network); 27 May 2005 11:47:35 -0000
Received: from mailhost1.csr.com (HELO MAILSWEEPER01.csr.com) (81.105.217.43)
  by a.mx.sunsite.dk with SMTP; 27 May 2005 11:47:30 -0000
Received: from exchange03.csr.com (unverified [10.100.137.60]) by MAILSWEEPER01.csr.com
 (Content Technologies SMTPRS 4.3.12) with ESMTP id <T712a9878350a6c8d01618@MAILSWEEPER01.csr.com> for <zsh-workers@sunsite.dk>;
 Fri, 27 May 2005 12:45:39 +0100
Received: from news01.csr.com ([10.103.143.38]) by exchange03.csr.com with Microsoft SMTPSVC(5.0.2195.6713);
	 Fri, 27 May 2005 12:49:15 +0100
Received: from news01.csr.com (localhost.localdomain [127.0.0.1])
	by news01.csr.com (8.13.1/8.12.11) with ESMTP id j4RBlR2D015130
	for <zsh-workers@sunsite.dk>; Fri, 27 May 2005 12:47:27 +0100
Received: from csr.com (pws@localhost)
	by news01.csr.com (8.13.1/8.13.1/Submit) with ESMTP id j4RBlQ7d015127
	for <zsh-workers@sunsite.dk>; Fri, 27 May 2005 12:47:27 +0100
Message-Id: <200505271147.j4RBlQ7d015127@news01.csr.com>
X-Authentication-Warning: news01.csr.com: pws owned process doing -bs
To: zsh-workers@sunsite.dk (Zsh hackers list)
Subject: Re: Shell variable tables:setting value for elemet 1 overwrites element 0 
In-reply-to: <1050525144822.ZM19384@candle.brasslantern.com> 
References: <OFB8636392.BEFDACE9-ONC125700C.00408215@bull.com.pl> <5033.1117022743@csr.com> <1050525144822.ZM19384@candle.brasslantern.com>
Date: Fri, 27 May 2005 12:47:26 +0100
From: Peter Stephenson <pws@csr.com>
X-OriginalArrivalTime: 27 May 2005 11:49:15.0913 (UTC) FILETIME=[1BBEFF90:01C562B2]
X-Spam-Checker-Version: SpamAssassin 3.0.2 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=6.0 tests=BAYES_00 autolearn=ham 
	version=3.0.2
X-Spam-Hits: -2.6

Bart Schaefer wrote:
> On May 25,  1:05pm, Peter Stephenson wrote:
> } Subject: Re: Shell variable tables:setting value for elemet 1 overwrites e
> }
> } wojciech.szenajch@bull.com.pl wrote:
> } > If this is the case, then any operation performed on element 0 should
> } > return error message. This is misleading that operations like
> } > TB[0]=zero; echo ${TB[0]} are accepted.
> } 
> } Yes, it was probably the wrong decision to accept [0] in this case.
> } I hope no one's relying on it, but you can't be sure.
> 
> I don't think there's any reason to allow *assignment* to index zero,
> except perhaps as a way to accomplish array=(newelement $array).  The
> dereference of $array[0] is a different matter.

Unfortunately it doesn't seem to be that easy to change one but not the
other; retrieving the index is fairly well buried.  Extra flags could do
this but the proliferation of getvalue() and fetchvalue() in the code
makes it rather messy to test for failure in all the right places.
Also, getindex(), which would have to perform the test, is called
multiple times deep inside the code.

Generally, the whole structure of the code is wrong to be able to solve
this sort of problem simply.  The current logic is to try something
involving a deep hierarchy of code, and if it fails, try something else.
Handling error cases systematically in code like this is very difficult.

There is actually a good reason for the structure, however, namely a
horrendous degree of context sensitivity in subscripts... if $foo exists
and is an array or scalar, foo[0]=bar should fail; if foo exists but is a
hash it should succeed; if foo doesn't exist, it needs to be created
as an array but this should fail when the assignment is made.  And so on.

I don't think this comes as a great surprise.

-- 
Peter Stephenson <pws@csr.com>                  Software Engineer
CSR PLC, Churchill House, Cambridge Business Park, Cowley Road
Cambridge, CB4 0WZ, UK                          Tel: +44 (0)1223 692070


**********************************************************************
This email and any files transmitted with it are confidential and
intended solely for the use of the individual or entity to whom they
are addressed. If you have received this email in error please notify
the system manager.

**********************************************************************

