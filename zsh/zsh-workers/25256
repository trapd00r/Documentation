From zsh-workers-return-25256-mason-zsh=primenet.com.au@sunsite.dk Mon Jun 30 14:59:36 2008
Return-Path: <zsh-workers-return-25256-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 19251 invoked from network); 30 Jun 2008 14:59:34 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 30 Jun 2008 14:59:34 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 86316 invoked from network); 30 Jun 2008 14:14:07 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 30 Jun 2008 14:14:07 -0000
Received: (qmail 8270 invoked by alias); 30 Jun 2008 14:05:42 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 25256
Received: (qmail 3145 invoked from network); 30 Jun 2008 13:58:08 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 30 Jun 2008 13:58:08 -0000
Received: from vms044pub.verizon.net (vms044pub.verizon.net [206.46.252.44])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 7C9FE80524FA
	for <zsh-workers@sunsite.dk>; Mon, 30 Jun 2008 15:58:03 +0200 (CEST)
Received: from torch.brasslantern.com ([71.116.81.119])
 by vms044.mailsrvcs.net (Sun Java System Messaging Server 6.2-6.01 (built Apr
 3 2006)) with ESMTPA id <0K3A008GT443YXW2@vms044.mailsrvcs.net> for
 zsh-workers@sunsite.dk; Mon, 30 Jun 2008 08:57:40 -0500 (CDT)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id m5UDvbd9003286	for
 <zsh-workers@sunsite.dk>; Mon, 30 Jun 2008 06:57:38 -0700
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id m5UDvbFP003285	for zsh-workers@sunsite.dk; Mon,
 30 Jun 2008 06:57:37 -0700
Date: Mon, 30 Jun 2008 06:57:37 -0700
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: PATCH: anonymous functions, full patch
In-reply-to: <20080630112722.3e7eb215@news01>
To: zsh-workers@sunsite.dk (Zsh hackers list)
Message-id: <080630065737.ZM3284@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <18441.1214488302@csr.com>  <9646.1214491732@thecus>
	<200806261506.m5QF6aCd019139@news01.csr.com>
	<080626101233.ZM2893@torch.brasslantern.com>
	<200806261729.m5QHSr5F021201@news01.csr.com>	<20080630112722.3e7eb215@news01>
Comments: In reply to Peter Stephenson <pws@csr.com>
 "PATCH: anonymous functions, full patch" (Jun 30, 11:27am)
X-Virus-Scanned: ClamAV 0.92.1/7586/Mon Jun 30 04:17:49 2008 on bifrost
X-Virus-Status: Clean

On Jun 30, 11:27am, Peter Stephenson wrote:
}
} > > I'm of two minds on that score.  On the one hand it'd be nice to be able
} > > to get at the surrounding $@.  On the other it may often be a needless
} > > expense.
} 
} The way the internals work we would have to copy the list to pass down, but
} we wouldn't have to copy the strings.  Anything cleverer (that makes a
} significant difference) is quite a lot of work.  I've left this out for
} now.

Seems a little odd, though, to call something a function when you can't
pass any arguments to it.  I'm not going to have time to look today, but
how difficult is this?

    function { print $@ } args go here

Currently that's a parse error, so would not conflict with any existing
scripts.  [Of course (){ print oops } is NOT a parse error, which means
in some theoretical world somebody could be using it {un}intentionally
as a no-op block and we're about to mess them up.  Not a great worry.]

There's another syntax that this anonymous functions patch creates:

torch% function() { echo $0 }  
(anon)

Since only empty parens are currently valid there [anything else is a
parse error] it'd also be possible to use

    function(args go here) { print $@ }

but in other languages that would be naming the positional parameters
of a closure, not passing it arguments, so I suspect we should reserve
this syntax for that future enhancement.

Put a space between "function" and "()" and you have a fourth syntax,
where non-empty parens are parsed as a glob qualifier on an empty file
name and therefore either produce an error or always fail to match.  I
don't see anything useful there.

Two final remarks:  One: should this be considered a bug?

torch% torch% () ()
function function> {                 
function function> print oops
function function> }
zsh: parse error near `\n'

Once you've got the double empty parens there seems to be nowhere to go
that doesn't end in a parse error.  [If the second set of parens is not
empty you get a function whose body is a subshell.]

Two:  As usual with function definitions, the body doesn't have to be a
block.

torch% () print $0
(anon)
torch% x=3
torch% () local x=4
torch% print $x
3

