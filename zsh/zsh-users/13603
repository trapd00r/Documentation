From zsh-users-return-13603-mason-zsh=primenet.com.au@sunsite.dk Sat Dec 20 18:56:45 2008
Return-Path: <zsh-users-return-13603-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 20729 invoked from network); 20 Dec 2008 18:56:42 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 20 Dec 2008 18:56:42 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 20226 invoked from network); 20 Dec 2008 18:56:30 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 20 Dec 2008 18:56:30 -0000
Received: (qmail 25397 invoked by alias); 20 Dec 2008 18:56:14 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 13603
Received: (qmail 25388 invoked from network); 20 Dec 2008 18:56:13 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 20 Dec 2008 18:56:13 -0000
Received: from vms173009.mailsrvcs.net (vms173009pub.verizon.net [206.46.173.9])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 2815180590EB
	for <zsh-users@sunsite.dk>; Sat, 20 Dec 2008 19:56:09 +0100 (CET)
Received: from torch.brasslantern.com ([96.238.220.215])
 by vms173009.mailsrvcs.net
 (Sun Java(tm) System Messaging Server 6.3-7.04 (built Sep 26 2008; 32bit))
 with ESMTPA id <0KC6004KOV1SW430@vms173009.mailsrvcs.net> for
 zsh-users@sunsite.dk; Sat, 20 Dec 2008 12:51:33 -0600 (CST)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id mBKItvtd023968	for
 <zsh-users@sunsite.dk>; Sat, 20 Dec 2008 10:55:57 -0800
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id mBKItu7J023967	for zsh-users@sunsite.dk; Sat,
 20 Dec 2008 10:55:56 -0800
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <081220105556.ZM23966@torch.brasslantern.com>
Date: Sat, 20 Dec 2008 10:55:56 -0800
In-reply-to: <2d460de70812200740j50e87b2dn3744a119d0ec49ee@mail.gmail.com>
Comments: In reply to "Richard Hartmann" <richih.mailinglist@gmail.com>
 "Multi-level keybinding?" (Dec 20,  4:40pm)
References: <2d460de70812200740j50e87b2dn3744a119d0ec49ee@mail.gmail.com>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-users <zsh-users@sunsite.dk>
Subject: Re: Multi-level keybinding?
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
X-Virus-Scanned: ClamAV 0.92.1/8787/Sat Dec 20 08:10:43 2008 on bifrost
X-Virus-Status: Clean

On Dec 20,  4:40pm, Richard Hartmann wrote:
}
} I want to offer users of my RC files a short overview of what
} they can do with <Ctrl-E foo>.

Ctrl-e is normally bound to "end-of-line" which seems like a pretty
commonly-used operation to choose to override ... unless you're in
vi-mode, I suppose.

} Ideally, I would want to
} 
}   bindkey '^E' binding_overview
}   bindkey '^Ee' push_line
}   bindkey '^Ei' insert-unicode-char
} 
} etc etc.

Reading this I'm not sure what output you want from "binding_overview".
Since ^E is a prefix of other keys, it's only going to get invoked if
they press ^E and then wait a bit.  Once binding_overview does get
control, is it intended to immediately produce a listing of all the
available bindings, or to wait for a key and then explain that one?  If
the latter, is it your intention that they retype the ctrl-e or do you
mean e.g. to have <ctrl-e><pause><i> explain insert-unicode-char?

} Of course, I could make the binding_overview
} widget accept a letter and emulate 'proper' keybindings,
} but I would prefer a solution within the shell.

I'm also confused about the difference between "make the widget" do
something and "within the shell".  You mean you'd prefer that there
is a built-in solution to one you'd have to script yourself?

Have a look at the doc for the following widgets:

    describe-key-briefly
    read-command

The implementation of describe-key-briefly is approximately the same
as this shell code:

    describe-key-briefly() {
      zle -R -c 'Describe key briefly:'
      zle read-command
      zle -M "${(qqqV)KEYS} is $REPLY"
    }
    zle -N describe-key-briefly

However, there's a problem with this:  Because ^E is a prefix of some
of the other keys you want to describe, it will be very difficult for
the user to type e.g. ctrl-e i fast enough to get the widget to ever
respond with anything other than:	"^E" is describe-key-briefly
(and the vale of $KEYTIMEOUT is only consulted before the widget ever
begins executing, so you can't alter it locally within the widget).

So at least for now you probably need to bind this to a sequence that
is not a prefix of any other binding.

If you want to dump all the bindings, the only way is to invoke the
bindkey command:

    binding_overview() {
      zle -R -c '' ${(f)"$(bindkey)"}
    }

If you want only the bindings that begin with ^E, then:

    binding_overview() {
      zle -R -c '' ${(f)"$(bindkey | grep '^\"\^E')"}
    }

You can probably run with this from here.

