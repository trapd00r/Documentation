From zsh-workers-return-24240-mason-zsh=primenet.com.au@sunsite.dk Thu Dec 13 21:43:23 2007
Return-Path: <zsh-workers-return-24240-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 13858 invoked from network); 13 Dec 2007 21:43:14 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.3 (2007-08-08) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.3
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 13 Dec 2007 21:43:14 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 98349 invoked from network); 13 Dec 2007 21:43:04 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 13 Dec 2007 21:43:04 -0000
Received: (qmail 2809 invoked by alias); 13 Dec 2007 21:43:01 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 24240
Received: (qmail 2787 invoked from network); 13 Dec 2007 21:43:00 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 13 Dec 2007 21:43:00 -0000
Received: from virusfilter.dotsrc.org (bifrost [127.0.0.1])
	by spamfilter.dotsrc.org (Postfix) with ESMTP id 0DBB78058F54
	for <zsh-workers@sunsite.dk>; Thu, 13 Dec 2007 22:40:15 +0100 (CET)
Received: from mtaout01-winn.ispmail.ntl.com (mtaout01-winn.ispmail.ntl.com [81.103.221.47])
	by bifrost.dotsrc.org (Postfix) with ESMTP
	for <zsh-workers@sunsite.dk>; Thu, 13 Dec 2007 22:40:14 +0100 (CET)
Received: from aamtaout03-winn.ispmail.ntl.com ([81.103.221.35])
          by mtaout01-winn.ispmail.ntl.com with ESMTP
          id <20071213214325.ODUG13570.mtaout01-winn.ispmail.ntl.com@aamtaout03-winn.ispmail.ntl.com>
          for <zsh-workers@sunsite.dk>; Thu, 13 Dec 2007 21:43:25 +0000
Received: from pws-pc ([82.6.96.116]) by aamtaout03-winn.ispmail.ntl.com
          with SMTP
          id <20071213214406.YHKY26699.aamtaout03-winn.ispmail.ntl.com@pws-pc>
          for <zsh-workers@sunsite.dk>; Thu, 13 Dec 2007 21:44:06 +0000
Date: Thu, 13 Dec 2007 21:41:12 +0000
From: Peter Stephenson <p.w.stephenson@ntlworld.com>
To: Zsh hackers list <zsh-workers@sunsite.dk>
Subject: Re: vared 'functions[xx]'
Message-Id: <20071213214112.8cb1a094.p.w.stephenson@ntlworld.com>
In-Reply-To: <chaz20071213172705.GB24933@artesyncp.com>
References: <chaz20071213172705.GB24933@artesyncp.com>
X-Mailer: Sylpheed 2.4.7 (GTK+ 2.12.1; x86_64-redhat-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Virus-Scanned: ClamAV using ClamSMTP

On Thu, 13 Dec 2007 17:27:07 +0000
Stephane Chazelas <stephane_chazelas@yahoo.fr> wrote:
> ~$ vared functions\[a\]\
>         echo foobar

[and then only after hitting return to accept the edit...]

> zsh: not an identifier: functions[a]
> 
> Still, vared showed me the content of $functions[a]. I would
> have expected it to return with an error before (well instead
> of) allowing me to edit the content.

The story here is that vared is using the flag to the parameter that
indicates braces are present.  They aren't, actually, it's just a trick
to get extra parameter effects to work.  So the parameter code doesn't
care if there's extra stuff after the bits it's handled; the caller
needs to check.  When setting the value, the parameter code needs to be
able to parse the entire expression and gives an error if it can't.

Index: Src/Zle/zle_main.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/Zle/zle_main.c,v
retrieving revision 1.100
diff -u -r1.100 zle_main.c
--- Src/Zle/zle_main.c	19 Oct 2007 01:33:09 -0000	1.100
+++ Src/Zle/zle_main.c	13 Dec 2007 21:38:55 -0000
@@ -1441,6 +1441,10 @@
 	zwarnnam(name, "no such variable: %s", args[0]);
 	return 1;
     } else if (v) {
+	if (*s) {
+	    zwarnnam(name, "not an identifier: `%s'", args[0]);
+	    return 1;
+	}
 	if (v->isarr) {
 	    /* Array: check for separators and quote them. */
 	    char **arr = getarrvalue(v), **aptr, **tmparr, **tptr;


-- 
Peter Stephenson <p.w.stephenson@ntlworld.com>
Web page now at http://homepage.ntlworld.com/p.w.stephenson/

