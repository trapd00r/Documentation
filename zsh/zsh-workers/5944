From zsh-workers-return-5944-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Mar 25 16:38:50 1999
Return-Path: <zsh-workers-return-5944-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 12799 invoked from network); 25 Mar 1999 16:38:47 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 25 Mar 1999 16:38:47 -0000
Received: (qmail 14059 invoked by alias); 25 Mar 1999 16:38:12 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 5944
Received: (qmail 14048 invoked from network); 25 Mar 1999 16:38:11 -0000
From: "Andrej Borsenkow" <borsenkow.msk@sni.de>
To: "Sven Wischnowsky" <wischnow@informatik.hu-berlin.de>,
        <zsh-workers@sunsite.auc.dk>
Subject: RE: Still something strange with ambiguous prefix
Date: Thu, 25 Mar 1999 19:37:23 +0300
Message-ID: <000b01be76dd$c28998c0$21c9ca95@mowp.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="koi8-r"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)
In-Reply-To: <199903251609.RAA24821@beta.informatik.hu-berlin.de>
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2014.211

>
> > 2.
> >
> > bor@itsrm2:~> l /t/s/z/D/z*iTAB
> >
> > Yesterday it completed just to zsh.texi
>
> (globcomplete turned on, I guess.)
>
> This one again? With completeinword, no `*', and the cursor before the
> `i' it worked. With globcomplete set (as I guess you have) this is
> *correct* behavior. Correct in the sense that it always has been like
> that. And no, I don't want to change it. Compatibility and all that.
>
> Because of this I have written the `_match' completer:
>

We are back here again (remember, I quoted part of my ~/.zshrc in my
message).

bor@itsrm2:/tools/src/zsh-3.1.5-pws-13/Completion%> zsh -f
itsrm2% bindkey '^I' complete-word
itsrm2% fpath=($PWD/*(/))
itsrm2% . Core/compinit
itsrm2% compconf completer=_complete:_match match_original=yes
itsrm2% l /t/s/z/D/z*iTAB
itsrm2% l /tools/src/zsh-3.1.5-pws-13/Doc/zsh.info
zsh.info         zsh.info-5       zshbuiltins.1    zshoptions.1
zsh.info-1       zsh.info-6       zshbuiltins.yo   zshoptions.yo
zsh.info-10      zsh.info-7       zshcompwid.1     ztexi.yo
zsh.info-2       zsh.info-8       zshcompwid.yo
zsh.info-3       zsh.info-9       zshmisc.1
zsh.info-4       zsh.texi         zshmisc.yo

>
> > 3.
> >
> > bor@itsrm2:~%> l /t/s/gl/co*TAB
> > bor@itsrm2:~%> l /tools/src/glib-1.1.15/co* <= cursor here
> > glib-1.1.15/  glib-1.2.0/
> >
> > So, menu completion is started for prefix, but cursor is placed
> at the end
> > of word.
>
> Grrrr, I asked if you wanted the cursor placed in the middle of the
> word with menu-completion in message 5651 and you answered `Me not' in
> message 5657.
>

a) (with the same zsh as in 2)

itsrm2% l /u/l/lTAB
itsrm2% l /u/l/l
            ^ cursor here (after `/u')
u1/   usr/

May I kindly ask, what is the difference between this ang glib example?

b) Yes, I beg your pardon. But since then I actually used new completion for
some time - and it provides sometimes very different possibilities. And you
begin to think a bit differently ...

> Anyway, I don't know how I should change this easily for now. The
> problem is that the path suffix is just an ignored suffix for the
> completion code and normally one really wants to have the cursor at
> the end of the whole word with menu-completion.

That makes sense, if we complete the whole word. But what happens here -
that we actually complete just a single part of it. When I said "yes" to
your question - I implied, that a user will be presented with the complete
list (in the above example, this would mean *all* files that match gl*/co*).
Simply, because it was what compctl always did, and I was accustomed to it.
All of you said, it is "the bad thing". Now, after actually using it, I
agree.


cheers

/andrej

the patch list I have (after pws-13):

5868
5871
5872
5875
5889
5890
5895
5898
5899
5904
5905
5906
5912
5913
5914
5915
5916
5918
5925
5926
5928
5931
5933
5934

