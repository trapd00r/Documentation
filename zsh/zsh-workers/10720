From zsh-workers-return-10720-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Apr 13 06:35:55 2000
Return-Path: <zsh-workers-return-10720-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 27821 invoked from network); 13 Apr 2000 06:35:54 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 13 Apr 2000 06:35:54 -0000
Received: (qmail 17617 invoked by alias); 13 Apr 2000 06:35:26 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 10720
Received: (qmail 17580 invoked from network); 13 Apr 2000 06:35:21 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer david.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: "ZSH workers mailing list" <zsh-workers@sunsite.auc.dk>
Subject: Default tags in _arguments and some more ...
Date: Thu, 13 Apr 2000 10:35:18 +0400
Message-ID: <000101bfa512$6f7d72f0$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="koi8-r"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6700
Importance: Normal

For file arguments - is it possible to specify default set of patterns
that can be overridden using styles? More general - is there easy way to
assign a tag inside _arguments description? What I mean, is something
like

-I::compressed files:*.gz\:"compressed-files\:compressed-files"

with the effect, that tag name ``compressed-files'' with default pattern
*.gz is used when completing argument of -I option. More general,
something like

-F[file system type]::file system type:fsys-type(ufs vxfs)

that would use tag ``fsys-type'' when completing arguments of -F option.

As I understand, currently the latter is impossible (_inline_ - of
course, using states everything is possible), and the former is limited
to calling _files with patterns that will assign all patterns to
globbed-files.

There are a couple more issues I do not much like

- special usage of blanks; it is way too easy to accidentally miss ot
misplace them
- very strict syntax for values. It is hard to add something new (as we
have seen recently) and every new addition may be incompatible.

So, here is suggestion that may be useful:

use flags to define semantic values. Something like

...:::[l]foo bar baz    - for literal list of values
...:::[e]a shell string - for eval'ed string
etc

This has a major advantage of being extensible without breaking existing
usage. And we can easily define new flags like

...:::[p]*.gz *.Z       - for file patterns; or even
...:::[p]*.gz:gzip-file *.Z:compressed-files - using the same syntax as
for styles;

...:::[t/weird-tag/]... - use tag `weird-tag' when completing these
values

-andrej

Have a nice DOS!
B >>

