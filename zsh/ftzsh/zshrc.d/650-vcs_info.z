### vim:ft=zsh:foldmethod=marker

if ! (( ${+functions[prompt_ft_setup]} )); then
    zprintf 2 'Vcs_info is not in use, skipping setup.\n'
    return 0
fi

# Load vcsup addon.
zis_433 "atleast" && zrcautoload vcsupinit && vcsupinit

zstyle ':vcs_info:*' max-exports 2

zstyle ':vcs_info:*' actionformats \
    " %F{magenta}(%f%s%F{magenta})%F{yellow}-%F{magenta}[%F{green}%b%F{yellow}|%F{red}%a%F{magenta}]%f-" \
    "zsh: %r"

zstyle ':vcs_info:*' formats \
    " %F{magenta}(%f%s%F{magenta})%F{yellow}-%F{magenta}[%F{green}%b%F{red}+%Q%F{magenta}]%f%}-" \
    "zsh: %r"

zstyle ':vcs_info:git:*' actionformats \
    " %F{magenta}[%F{green}%b%F{red}%c%u%F{yellow}|%F{red}%a%F{magenta}]%f-" \
    "zsh: %r"

zstyle ':vcs_info:git:*' formats \
    " %F{magenta}[%F{green}%b%F{red}%c%u%F{magenta}]%f-" \
    "zsh: %r"

zstyle ':vcs_info:git-svn:*' actionformats \
    " %F{magenta}[%F{yellow}gitsvn%f:%F{green}%b%F{red}%c%u%F{yellow}|%F{red}%a%F{magenta}]%f-" \
    "zsh: %r"

zstyle ':vcs_info:git-svn:*' formats \
    " %F{magenta}[%F{yellow}gitsvn%f:%F{green}%b%F{red}%c%u%F{magenta}]%f-" \
    "zsh: %r"

zstyle ':vcs_info:cvs:*' formats \
    " %F{magenta}(%f%s%F{magenta})%F{yellow}-%F{magenta}[%F{green}%r%F{magenta}]%f-" \
    "zsh: %r"

zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat "%b%F{red}:%F{yellow}%r"

zstyle ':vcs_info:bzr:*' use-simple true
zstyle ':vcs_info:*'     enable git hg cvs svn bzr

function estyle-cfc() {
    local d
    local -a cfc_dirs
    cfc_dirs=( ${HOME}/src/code/*(/) )

    for d in ${cfc_dirs}; do
        d=${d%/##}
        [[ $PWD == $d(|/*) ]] && return 0
    done
    return 1
}

#zstyle -e ':vcs_info:git:*' check-for-changes 'estyle-cfc && reply=( true ) || reply=( false )'
zstyle ':vcs_info:git:*' check-for-changes true

### quilt setup

zstyle ':vcs_info:*' use-quilt true
zstyle ':vcs_info:*.quilt-addon:*' patch-format "%n"
zstyle ':vcs_info:*.quilt-addon:*' nopatch-format "0"
zstyle ':vcs_info:*' quilt-get-unapplied true
zstyle ':vcs_info:*.quilt-standalone:*:*' quilt-patch-dir debian/patches
zstyle ':vcs_info:-quilt-:*' \
    formats " %F{magenta}[%F{green}%Q%F{ma}]%f%}-" \
    "zsh: %r"

#zstyle ':vcs_info:*' quilt-standalone ft-quilt-standalone
#function ft-quilt-standalone() {
#    [[ $PWD == /usr/src/debian(|/*) ]] && return 0
#    return 1
#}

#zstyle -e ':vcs_info:*.quilt-addon:*:*' quilt-patch-dir 'ft-patches-func'
function ft-patches-func() {
    # TODO This one is probably broken...
    local p
    if [[ $PWD == ${HOME}/src/code/debian_fdm(|/*) ]]; then
        reply=( debian/patches )
        return 0
    fi
    if [[ $PWD == ${HOME}/src/code/pkg-zsh(|/*) ]]; then
        reply=( debian/patches )
        return 0
    fi

    if [[ -n ${user_data[vcs]} ]]; then
        if [[ ${${user_data[root]}%/##} == ${PWD%/##} ]]; then
            p="${HOME}/src/code/patches/${${PWD%/##}:t}"
        else
            p="${HOME}/src/code/patches/${${user_data[root]}:t}/${PWD#${user_data[root]}/}"
        fi
    else
        p="${HOME}/src/code/patches/standalone/${rrn}"
    fi
    if [[ ! -d $p ]]; then
        mkdir -p "$p"
    fi
    reply=( $p )
}

### hooks
#zstyle ':vcs_info:*+*:*' debug true

#zstyle ':vcs_info:*+post-quilt:*:*' hooks set-quilt-patches
function +vi-set-quilt-patches() {
    export QUILT_PATCHES="$2"
    return 0
}

#zstyle ':vcs_info:*+post-backend:*' hooks ft-quiltaddon
function +vi-ft-quiltaddon() {
    user_data[vcs]=${hook_com[vcs]}
    user_data[root]=${hook_com[base_orig]}
}
