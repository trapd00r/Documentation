From zsh-workers-return-17343-mason-zsh=primenet.com.au@sunsite.dk Thu Jun 20 21:32:03 2002
Return-Path: <zsh-workers-return-17343-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 6627 invoked from network); 20 Jun 2002 21:32:02 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 20 Jun 2002 21:32:02 -0000
Received: (qmail 26737 invoked by alias); 20 Jun 2002 21:31:53 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 17343
Received: (qmail 26726 invoked from network); 20 Jun 2002 21:31:51 -0000
Date: Thu, 20 Jun 2002 16:31:49 -0500
From: Dan Nelson <dnelson@allantgroup.com>
To: zsh-workers@sunsite.dk
Subject: Re: posix compliance
Message-ID: <20020620213149.GA64980@dan.emsphone.com>
References: <20020620180526.GA65950@lizzy.catnook.com> <Pine.LNX.4.44.0206201109330.10467-100000@ns1.sodaware.com> <20020620191755.GA84784@lizzy.catnook.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20020620191755.GA84784@lizzy.catnook.com>
X-OS: FreeBSD 5.0-CURRENT
X-message-flag: Outlook Error
User-Agent: Mutt/1.5.1i

In the last episode (Jun 20), Jos Backus said:
> On Thu, Jun 20, 2002 at 11:13:43AM -0700, Bart Schaefer wrote:
> > Assignable positional parameters are an intentional feature. 
> > There's no way they can cause a problem, because a POSIX conforming
> > shell script must not even attempt it.  (Even in POSIX the
> > positional parameters can be replaced with the `set' builtin, so
> > claiming that they should be read-only does not hold water.)
> 
> Indeed, his argument that things like these were causing them lots of
> problems with zsh point to poorly written scripts in the first place.
> But of course he's not going to admit that, least of all in public
> with the bash maintainer standing next to him.

The only reason I can think of to disallow non-POSIX-sanctioned
behvaiour is to prevent the rampant use of such features, as has
already happened in the Linux "sh == bash" world.  You could even make
the case that zsh in sh emulation mode should allow only what POSIX
says it can do and nothing more.

If we're talking about zsh mode, then I lean the other way and say zsh
can do whatever it wants, as long as what POSIX mandates it does a
certain way, it does.

-- 
	Dan Nelson
	dnelson@allantgroup.com

