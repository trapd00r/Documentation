From zsh-users-return-15610-mason-zsh=primenet.com.au@zsh.org Mon Dec 06 13:22:47 2010
Return-Path: <zsh-users-return-15610-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 24159 invoked by alias); 6 Dec 2010 13:22:47 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15610
Received: (qmail 14305 invoked from network); 6 Dec 2010 13:22:43 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-0.0 required=5.0 tests=BAYES_40,SPF_HELO_PASS
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at myproxylists.com does not designate permitted sender hosts)
X-Originating-IP: 127.0.0.1
Message-ID: <6741cd3f3c35661a5b89e0078c20a0f6.squirrel@gameframe.net>
Date: Mon, 6 Dec 2010 15:15:58 +0200
Subject: A strange function behaviour in random password generator
From: nix@myproxylists.com
To: zsh-users@zsh.org
User-Agent: SquirrelMail/1.4.20
MIME-Version: 1.0
Content-Type: text/plain;charset=iso-8859-1
Content-Transfer-Encoding: 8bit
X-Priority: 3 (Normal)
Importance: Normal

Hi, I have just coded a random password generator. It works good but one
might want to show me how to do it with rand48() as it´s output is
strange.

The problem:

./random_pass.sh
iNkiuG
iNkiuG6K

6 first chars are the same for both passwords.

The question:

How to fix the above problem without redefining the same function inside a
loop and calling it again?

[CODE]

#!/bin/zsh

zmodload zsh/terminfo
emulate zsh

function random () {

local length=$1

[ -z "$length" ] && { echo "Error: lenght" ; exit 0 }

if [[ $length != <-> ]] ; then
echo "Error: lenght is non-numeric" ; exit 0
fi

seeds="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
seeds_count="${#seeds}"

z="0"
local password=""
local variable=inside

until [ $z -eq $length ] ; do

pos=$((RANDOM%$seeds_count+1))
password+=$(echo $seeds[$pos])
let "z++"

done

echo -n $password
}

MY_RCON=$(random 6)

echo $MY_RCON

MY_PASS=$(random 8)

echo $MY_PASS



