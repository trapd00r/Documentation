From zsh-workers-return-25426-mason-zsh=primenet.com.au@sunsite.dk Sat Aug 09 16:38:42 2008
Return-Path: <zsh-workers-return-25426-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 7490 invoked from network); 9 Aug 2008 16:38:38 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 9 Aug 2008 16:38:38 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 66223 invoked from network); 9 Aug 2008 16:38:21 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 9 Aug 2008 16:38:21 -0000
Received: (qmail 1783 invoked by alias); 9 Aug 2008 16:38:10 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 25426
Received: (qmail 1764 invoked from network); 9 Aug 2008 16:38:08 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 9 Aug 2008 16:38:08 -0000
Received: from rv-out-0506.google.com (rv-out-0506.google.com [209.85.198.228])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 378B680561D1
	for <zsh-workers@sunsite.dk>; Sat,  9 Aug 2008 18:38:03 +0200 (CEST)
Received: by rv-out-0506.google.com with SMTP id g37so1286570rvb.21
        for <zsh-workers@sunsite.dk>; Sat, 09 Aug 2008 09:38:01 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:to
         :subject:mime-version:content-type:content-transfer-encoding
         :content-disposition;
        bh=xtkX03sIIZlzYXdlTYbson+VZMWtfxgUbUWpEW2e/jg=;
        b=Fn2M4+1mzZVxcgm9Ar02MpqPKHSKEDLt5UT6C3vC/ajVisdfHP018/F+tMdwqlmvBt
         3PJO/4E3a4UceHMwO6H2LS51SVZv1yAqZ/Y0hRpoS7w9a/VRqSyn1ob0sitMguUHTz5T
         Prw0UQGId10K62byAUxN21MUTjof8T8PRp/9A=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:to:subject:mime-version:content-type
         :content-transfer-encoding:content-disposition;
        b=Rnjp/fxwTLSKUt83LA6UH5iD6o8z5fzymXugKLfU3nYOdrBWKeVw24Isr7R329ehpG
         Jv1XmQc3yZYjOWwAUWL6qUJu0zg4NOvFtRc20Z4rilApGrDs3geupvdlrplnGZwrA22q
         nDGxHW6iD85p1DDUXm0kUCoXclfwtz+CkC1fI=
Received: by 10.114.73.1 with SMTP id v1mr888062waa.16.1218299881227;
        Sat, 09 Aug 2008 09:38:01 -0700 (PDT)
Received: by 10.114.159.2 with HTTP; Sat, 9 Aug 2008 09:38:01 -0700 (PDT)
Message-ID: <6cd6de210808090938h21024607qcb125d9d42c01d87@mail.gmail.com>
Date: Sat, 9 Aug 2008 12:38:01 -0400
From: "Rocky Bernstein" <rocky.bernstein@gmail.com>
To: "Zsh hackers list" <zsh-workers@sunsite.dk>
Subject: zsh debugger skeleton code
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
X-Virus-Scanned: ClamAV 0.92.1/7993/Sat Aug  9 16:54:16 2008 on bifrost
X-Virus-Status: Clean

I've put the skeletal zsh debugger code I've been working on
github. This code is probably not usable for novices (yet).

To browse code: http://github.com/rocky/zshdb/tree/master
To get a copy:

  git-clone git://github.com/rocky/zshdb.git

The README http://github.com/rocky/zshdb/tree/master/README has full
details and this is an summary of information from that.

To use and play the game, you'll need patched CVS zsh sources. In
particular the "functrace" function should report filenames and
absolute line numbers.  Also both "functrace" and "funcstack" should
include source'd files in their arrays. I don't have a check in right
now a compatible zsh in the code right now, will add this soon.

Assuming you have a compatible zsh and downlaoded:
  cd zshdb
  ./autogen.sh  # Add configure options. See ./configure --help
  make && make check

In the unlikely event this works for you, running ./zshdb with no
arguments in the checked out directory runs a silly test program
testing.sh. Of course you can give your own file name and down the
line testing.sh will be removed.

The initial gdb-like commands I've put in:
  alias     eval      run       trace     where
  continue  frame     source    untrace
  down      print     step      up

(actually alias, eval, trace and untrace aren't gdb) .

What's missing falls into a two categories:

  * Stuff that can be ported in a straightforward way from bashdb
  * Stuff that needs additional zsh support

A breakdown of some of the things missing right now. Again details of
why, how and when are in the README

 * source listing commands
 * breakpoints
 * next (step over function calls)
 * Showing frame arguments
 * Information persisting when a subshell is left
 * "skip" command
 * Setting $0
 * lots of other stuff including...
   display expressions, signal handling, invoking the debugger directly
   from a script, command history, command completion.

Share and Enjoy!

