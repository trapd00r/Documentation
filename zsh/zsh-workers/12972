From zsh-workers-return-12972-mason-zsh=primenet.com.au@sunsite.auc.dk Thu Oct 12 06:22:06 2000
Return-Path: <zsh-workers-return-12972-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 6256 invoked from network); 12 Oct 2000 06:22:06 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 12 Oct 2000 06:22:06 -0000
Received: (qmail 4325 invoked by alias); 12 Oct 2000 06:21:54 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 12972
Received: (qmail 4318 invoked from network); 12 Oct 2000 06:21:51 -0000
X-Envelope-Sender-Is: Andrej.Borsenkow@mow.siemens.ru (at relayer david.siemens.de)
From: "Andrej Borsenkow" <Andrej.Borsenkow@mow.siemens.ru>
To: "E. Jay Berkenbilt" <ejb@ql.org>
Cc: <zsh-workers@sunsite.auc.dk>
Subject: RE: completion widgets in menu selection
Date: Thu, 12 Oct 2000 10:21:47 +0400
Message-ID: <000001c03414$b2f513d0$21c9ca95@mow.siemens.ru>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
In-reply-to: <200010111737.NAA17124@soup.ql.org>
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400


> >
> >   Yes, all prerequisites are  implemented in current CVS. What is
> missing, is
> >   the widget/key binding itself, but if you use example from docs
> verbatim, it
> >   works. I've tried it and I confirm it.
>
> I just grabbed the latest CVS sources.  Care to give me a hint about
> where in the documentation I should look or what I should search for?

I'm using info; it is in "Completion system" - "Control Functions",
_all_matches completer or somewhere in 'man zshcompsys'. Small explanation:

example at the end of _all_matches description will simply include all items
completion system has generated at this point. But it won't do any completion
itself. What exactly completion system generates, depends on your completer
style for regular completion. My standard setting is

zstyle ':completion:*' completer _oldlist _complete _match

here first normal completion (where word on the line is taken verbatim) is
tried. If it fails (generates no matches), zsh tries to treat word on the line
as pattern and match possible completions against it. _oldlist just ensures
that zsh will reuse old list if it exists - it is not striclty neccessary and
is my personal preference.

I do not use _expand as part of normal completion (I prefer explict expansion
if needed) and I had problems with _correct/_approximate and path completion
(it was way too slow) - but, I have to try again.

Note, that _match is not related to file name globbing. It will equally well
work e.g. for any cvs completions (even those, that complete remote objects,
like modules). So, you can do something like 'cvs co *foo' to checkout
everything that ends with foo, even with remote repository

> :-) I'm not having any luck finding anything about that.
>

We desperately need somebody with fresh look to proofread zsh docs.

-andrej

