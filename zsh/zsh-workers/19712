From zsh-workers-return-19712-mason-zsh=primenet.com.au@sunsite.dk Wed Mar 31 13:22:22 2004
Return-Path: <zsh-workers-return-19712-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 28317 invoked from network); 31 Mar 2004 13:22:21 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 31 Mar 2004 13:22:21 -0000
Received: (qmail 24015 invoked by alias); 31 Mar 2004 13:22:14 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 19712
Received: (qmail 24003 invoked from network); 31 Mar 2004 13:22:13 -0000
Received: from localhost (HELO sunsite.dk) (127.0.0.1)
  by localhost with SMTP; 31 Mar 2004 13:22:13 -0000
X-MessageWall-Score: 0 (sunsite.dk)
Received: from [130.225.247.86] by sunsite.dk (MessageWall 1.0.8) with SMTP; 31 Mar 2004 13:22:13 -0000
Received: (qmail 24886 invoked from network); 31 Mar 2004 13:22:13 -0000
Received: from mail36.messagelabs.com (193.109.254.211)
  by a.mx.sunsite.dk with SMTP; 31 Mar 2004 13:22:04 -0000
X-VirusChecked: Checked
X-Env-Sender: okiddle@yahoo.co.uk
X-Msg-Ref: server-17.tower-36.messagelabs.com!1080739296!5085966
X-StarScan-Version: 5.2.10; banners=-,-,-
X-Originating-IP: [158.234.9.163]
Received: (qmail 29953 invoked from network); 31 Mar 2004 13:21:36 -0000
Received: from iris.logica.co.uk (158.234.9.163)
  by server-17.tower-36.messagelabs.com with SMTP; 31 Mar 2004 13:21:36 -0000
Received: from trentino.logica.co.uk ([158.234.142.61])
	by iris.logica.co.uk (8.12.3/8.12.3/Debian -4) with ESMTP id i2VDLaCk018928
	for <zsh-workers@sunsite.dk>; Wed, 31 Mar 2004 14:21:36 +0100
Received: from trentino.logica.co.uk (localhost [127.0.0.1])
	by trentino.logica.co.uk (Postfix) with ESMTP id A822B790E26C
	for <zsh-workers@sunsite.dk>; Wed, 31 Mar 2004 15:20:51 +0200 (CEST)
X-VirusChecked: Checked
X-StarScan-Version: 5.1.13; banners=.,-,-
From: Oliver Kiddle <okiddle@yahoo.co.uk>
To: Zsh workers <zsh-workers@sunsite.dk>
Subject: PATCH: subscript flags on lhs of assignment
Date: Wed, 31 Mar 2004 15:20:51 +0200
Message-ID: <15526.1080739251@trentino.logica.co.uk>
X-Spam-Checker-Version: SpamAssassin 2.63 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, hits=0.0 required=6.0 tests=none autolearn=no version=2.63
X-Spam-Hits: 0.0

This patch allows assignments to associative array elements where the
(i) or (r) subscript flag is used to select the element. This means you
can do:
  typeset -A assoc
  assoc=(one a two b)
  assoc[(r)a]=new
At the moment, this prints the message:
  "attempt to set slice of associative array"
but that is only really applicable for the (I), (K) and (R) subscript
flags. The SCANPM_MATCHMANY flag also seems to get set for the (k)
flag. Is that a bug?

There may well be better ways to implement this. Using the (k), (i) and
(r) flags seems to result in one element arrays instead of single
values so it would be better if fetchvalue was made to return with
v->pm pointing to the actual association element instead. That couldn't
easily maintain compatibility with (i) outputting keys instead of
values though. This seems to work and is fairly minimal in terms of the
number of changes.

Oliver

Index: Src/params.c
===================================================================
RCS file: /cvsroot/zsh/zsh/Src/params.c,v
retrieving revision 1.80
diff -u -r1.80 params.c
--- Src/params.c	30 Mar 2004 16:35:38 -0000	1.80
+++ Src/params.c	31 Mar 2004 08:59:17 -0000
@@ -381,6 +381,7 @@
 static Patprog scanprog;
 static char *scanstr;
 static char **paramvals;
+static Param foundparam;     
 
 /**/
 void
@@ -404,6 +405,7 @@
     } else if ((flags & SCANPM_MATCHKEY) && !pattry(scanprog, v.pm->nam)) {
 	return;
     }
+    foundparam = v.pm;
     if (flags & SCANPM_WANTKEYS) {
 	paramvals[numparamvals++] = v.pm->nam;
 	if (!(flags & (SCANPM_WANTVALS|SCANPM_MATCHVAL)))
@@ -1598,7 +1600,7 @@
 	zsfree(val);
 	return;
     }
-    if (v->pm->flags & PM_HASHED) {
+    if ((v->pm->flags & PM_HASHED) && (v->isarr & SCANPM_MATCHMANY)) {
 	zerr("%s: attempt to set slice of associative array", v->pm->nam, 0);
 	zsfree(val);
 	return;
@@ -1663,6 +1665,11 @@
 	    setarrvalue(v, ss);
 	}
 	break;
+    case PM_HASHED:
+        {
+	    (foundparam->sets.cfn) (foundparam, val);
+        }
+	break;
     }
     if ((!v->pm->env && !(v->pm->flags & PM_EXPORTED) &&
 	 !(isset(ALLEXPORT) && !(v->pm->flags & PM_HASHELEM))) ||

