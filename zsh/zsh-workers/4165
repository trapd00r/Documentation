From zsh-workers-request@math.gatech.edu Thu Jun 25 17:04:24 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 18063 invoked from network); 25 Jun 1998 17:04:22 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 25 Jun 1998 17:04:22 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.8.5/8.8.5) id MAA04191;
	Thu, 25 Jun 1998 12:57:41 -0400 (EDT)
Resent-Date: Thu, 25 Jun 1998 12:57:41 -0400 (EDT)
From: "Bart Schaefer" <schaefer@brasslantern.com>
Message-Id: <980625095752.ZM3603@candle.brasslantern.com>
Date: Thu, 25 Jun 1998 09:57:52 -0700
In-Reply-To: <9806250833.AA27200@ibmth.df.unipi.it>
Comments: In reply to Peter Stephenson <pws@ibmth.df.unipi.it>
        "Re: zsh exits suddenly." (Jun 25, 10:33am)
References: <9806250833.AA27200@ibmth.df.unipi.it>
X-Mailer: Z-Mail (4.0b.820 20aug96)
To: Peter Stephenson <pws@ibmth.df.unipi.it>,
        zsh-workers@math.gatech.edu (Zsh hackers list)
Subject: Re: zsh exits suddenly.
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-Message-ID: <"ojAOu2.0.Q11.56ear"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4165
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

On Jun 25, 10:33am, Peter Stephenson wrote:
} Subject: Re: zsh exits suddenly.
}
} The proper use of inerrflush() is when lexing the line just input.
} I've found the difference: it's in a case like this:
} 
} % print !!:s/foo/bar/<ESC><RET>
} print haha
} 
} The current code gives an error message for the substitution (assuming
} of course there was no `foo' in the previous line), but prints `haha'
} anyway.  Without the lastc stuff, the `print haha' is discarded along
} with the rest of the previous line.
} 
} So the question boils down to:  after a history subsitution failure,
} should the rest of the input be discarded, or just the rest of the
} line as at present?  (Note parsing failures don't flush the input in
} any case [...]

Aha.  I think both substitution errors -and- parsing failures ought to
consume the entire remainder of the input.   Consider what happens if
the statement following the error is something destructive like a "rm",
which was e.g. expected to happened in a different directory.

It's also probably a good idea in light of the strange way the results
end up in the history on a parse error.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

