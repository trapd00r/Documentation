From zsh-workers-return-10121-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Mar 13 16:52:26 2000
Return-Path: <zsh-workers-return-10121-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 24948 invoked from network); 13 Mar 2000 16:52:25 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 13 Mar 2000 16:52:25 -0000
Received: (qmail 29485 invoked by alias); 13 Mar 2000 16:52:14 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 10121
Received: (qmail 29460 invoked from network); 13 Mar 2000 16:52:11 -0000
From: "Bart Schaefer" <schaefer@candle.brasslantern.com>
Message-Id: <1000313165200.ZM2467@candle.brasslantern.com>
Date: Mon, 13 Mar 2000 16:52:00 +0000
In-Reply-To: <200003131042.LAA17110@beta.informatik.hu-berlin.de>
Comments: In reply to Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
        "Re: Default fpath" (Mar 13, 11:42am)
References: <200003131042.LAA17110@beta.informatik.hu-berlin.de>
X-Mailer: Z-Mail (5.0.0 30July97)
To: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>,
        zsh-workers@sunsite.auc.dk
Subject: Re: Default fpath
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Mar 13, 11:42am, Sven Wischnowsky wrote:
} Subject: Re: Default fpath
}
} Bart Schaefer wrote:
} 
} > Note 1 -- While we're on the topic of zcompile, it could use:
} > (1) a way to append to an existing .zwc, rather like `ar' works, and
} 
} That's a bit problematic because of the little/big-endian thing. I.e. we
} can't just append to a wordcode file (and I don't want to have
} multiple headers).

I was afraid of that.

} But of course we could make it read/change/re-write
} such files, also allowing deletion of functions. Is it worth it? I
} mean, creating wordcode files is quite fast for me...

Perhaps not.  Actually, what would suit me fine is a way to dump out a
.zwc of (a subset of the) functions defined in a running zsh.
 
} > (2) an option to say whether each function should be autoloaded zsh-style
} >     or ksh-style, so that the right thing happens regardless of the run-
} >     time setting of kshautoload.)
} 
} But currently it is the same as for loading from a normal file,
} wouldn't it probably be confusing if the wordcode file said how to
} load it?

Actually I'd like it if the text file could "say how to load it" as well,
but that wouldn't be portable -- the whole point of kshautoload is to be
able to write functions that can load into both zsh and ksh.  So if I set
kshautoload, I'm probably in a situation where I load ksh functions.  It
would be possible to require that zsh function text files include some
token that specifies NOT using kshautoload, but that would put the burden
on the ordinary zsh writer, which feels wrong.

There's no such problem with .zwc files -- only zsh will load them, and
the how-to token is invisible to the user.

Consider the current problem of initializing the completion system with
kshautoload set.  (I.e., you can't.)  The kshautoload user could solve
this problem by precompiling the completion system for zsh loading.

The one thing I can't decide is whether the default should be initialized
from the setting of kshautoload, or if it should always default to zsh.

} But don't get me wrong: I never use kshautoload, so I
} wouldn't be against allowing it. Per-function or per-wordcode file?

Per source file used to build the wordcode file would be the correct
granularity, which I guess means per-function?

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

