From zsh-workers-return-28174-mason-zsh=primenet.com.au@zsh.org Fri Aug 20 02:37:11 2010
Return-Path: <zsh-workers-return-28174-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 19575 invoked by alias); 20 Aug 2010 02:37:11 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28174
Received: (qmail 21062 invoked from network); 20 Aug 2010 02:37:09 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <100819193632.ZM27257@torch.brasslantern.com>
Date: Thu, 19 Aug 2010 19:36:30 -0700
In-reply-to: <20100819221442.GA95791@stack.nl>
Comments: In reply to Jilles Tjoelker <jilles@stack.nl>
 "Re: Bug#593426: zsh: Status of background jobs not updated" (Aug 20, 12:14am)
References: <20100819221442.GA95791@stack.nl>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: Jilles Tjoelker <jilles@stack.nl>, zsh-workers@zsh.org
Subject: Re: Bug#593426: zsh: Status of background jobs not updated
Cc: 593426@bugs.debian.org
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Aug 20, 12:14am, Jilles Tjoelker wrote:
}
} > [continuing a stopped background job using kill is not reflected in the
} > output of jobs]
} 
} I think hooking into the kill builtin is the wrong way to fix this.
} Instead, use the facilities provided by modern systems which can notify
} you if a child process continues. These are si_code CLD_CONTINUED for
} SIGCHLD and the WCONTINUED flag and WIFCONTINUED() macro for waitpid().

Zsh *soes* use those facilities.

The problem (if I understand the thread so far correctly) is, in order
to use those facilities, zsh has to wait for the job, i.e., call one of
waitpid() or the like.  But the shell doesn't just sit around all day
waiting for background jobs or polling the ones that are stopped to see
if they spontaneously started again -- in fact the whole point is that
it does NOT wait for background jobs.

So unless the OS sends a SIGCHLD when the background job changes state,
zsh isn't aware that it ought to check on the child status.  There is
a SIGCHLD sent to the parent when the background job stops, but that
signal is NOT sent when the child resumes running again.

You can even see this for yourself by installing a handler, e.g.,

    trap "print CHILD" SIGCHLD

Now run something in the background, kill it with -STOP/-CONT from some
other shell, and watch when CHILD is printed (or isn't).

-- 

