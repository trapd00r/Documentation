From zsh-workers-return-9630-mason-zsh=primenet.com.au@sunsite.auc.dk Wed Feb 09 07:33:51 2000
Return-Path: <zsh-workers-return-9630-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 3657 invoked from network); 9 Feb 2000 07:33:49 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 9 Feb 2000 07:33:49 -0000
Received: (qmail 14035 invoked by alias); 9 Feb 2000 07:33:37 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 9630
Received: (qmail 14028 invoked from network); 9 Feb 2000 07:33:36 -0000
Message-ID: <20000209073334.22966.qmail@web1303.mail.yahoo.com>
Date: Tue, 8 Feb 2000 23:33:34 -0800 (PST)
From: Felix Rosencrantz <f_rosencrantz@yahoo.com>
Subject: Clearcase and filename completion
To: zsh-workers <zsh-workers@sunsite.auc.dk>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

I'm seeing problems with directory and filename completion and Clearcase
elements.  Clearcase is a commercial source control system (home page:
http://www.rational.com/products/clearcase/index.jtmpl ) that uses its
own type of filesystem to represent the versions of a file.

CC has some interesting semantics.  If you search a directory (e.g. via
globbing, ls, or readdir) it will show you all the files in the directory.
For example,
        makefile main.c foo.c

But it also has an escape mechanism that allows you to jump into the version
tree of a file, which it represent as a sub-directory of the filesystem.  So,
in this example, you could look at foo.c@@/main/LATEST and that would show
you the latest version of foo.c on the "main" branch.

If you do a stat on foo.c@@/ it exists and has a type of directory. But look
at the parent directory of foo.c@@ and it doesn't list a foo.c@@, only foo.c.

Is there anyway to tell path_files to use the existing head of the filename,
if the head already exists.  So if I type "vi foo.c@@/" and then
attempt completion, zsh would check to see if foo.c@@/ exists, and if
it does, accept it, and complete files in that directory.  
It seems that the code seems to test for existence using globbing, which
fails in this case.

I looked at the man page, and looked at trace output to see what styles
are being checked, and none seemed to be what I wanted.

Old-style completion didn't have a problem with this because it just accepted
the head of the filename being completed.

-FR

__________________________________________________
Do You Yahoo!?
Talk to your friends online with Yahoo! Messenger.
http://im.yahoo.com

