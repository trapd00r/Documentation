From zsh-users-return-5197-mason-zsh=primenet.com.au@sunsite.dk Tue Jul 30 19:43:32 2002
Return-Path: <zsh-users-return-5197-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 21082 invoked from network); 30 Jul 2002 19:43:31 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 30 Jul 2002 19:43:31 -0000
Received: (qmail 11276 invoked by alias); 30 Jul 2002 19:43:11 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 5197
Received: (qmail 11236 invoked from network); 30 Jul 2002 19:43:08 -0000
Date: Tue, 30 Jul 2002 19:34:21 +0200
From: Roman Neuhauser <neuhauser@bellavista.cz>
To: zsh users <zsh-users@sunsite.dk>
Subject: userguide patch
Message-ID: <20020730173421.GK275@freepuppy.bellavista.cz>
Mail-Followup-To: zsh users <zsh-users@sunsite.dk>
Mime-Version: 1.0
Content-Type: multipart/mixed; boundary="FL5UXtIhxfXey3p5"
Content-Disposition: inline
User-Agent: Mutt/1.5.1i


--FL5UXtIhxfXey3p5
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline

some time ago i took a bottle of wine, sat down, and read quite a
portion of the userguide. i've found some typos in the first three
files. i don't remember if it was the wine or if i didn't read it
further.

-- 
FreeBSD 4.6-STABLE
7:28PM up 3:04, 5 users, load averages: 0.06, 0.07, 0.02

--FL5UXtIhxfXey3p5
Content-Type: text/plain; charset=us-ascii
Content-Disposition: attachment; filename="zshguide.patch"

diff -ur zshguide-clean/c1.yo zshguide/c1.yo
--- zshguide-clean/c1.yo	Thu Jun 20 00:06:07 2002
+++ zshguide/c1.yo	Tue Jul 30 19:09:35 2002
@@ -10,7 +10,7 @@
 
 The most basic basics: I shall assume you have access to a UNIX system,
 otherwise the rest of this is not going to be much use.  You can also use
-zsh under Windows by installing Cygwin, which provids a UNIX-like
+zsh under Windows by installing Cygwin, which provides a UNIX-like
 environment for programmes --- given the weakness of the standard Windows
 command interpreter, this is a good thing to do.  There are ports of older
 versions of zsh to Windows which run natively, i.e. without a UNIX
diff -ur zshguide-clean/c2.yo zshguide/c2.yo
--- zshguide-clean/c2.yo	Wed Jun 19 23:27:38 2002
+++ zshguide/c2.yo	Tue Jul 30 19:10:54 2002
@@ -1421,8 +1421,8 @@
 status 1, but nothing if it exited with status 0, followed by a
 yellow-on-black `tt(%)' or `tt(#)' if you are the superuser.  Note the
 use of the double quotes here to force the parameters to be expanded
-straight away --- the escape sequences are fixed, so don't need to
-re-extracted from the parameters every time the prompt is shown.
+straight away --- the escape sequences are fixed, so they don't need to
+be re-extracted from the parameters every time the prompt is shown.
 
 Even if your terminal does support colour, there's no guarantee all the
 possibilities work, although the basic ANSI colour scheme is fairly
@@ -1507,7 +1507,7 @@
 sophisticated in zsh, but to get the most out of them you need to use this
 option, as otherwise certain features are not enabled, so that people used
 to simpler patterns (maybe just `tt(*)', `tt(?)' and `tt([...])')  are not
-confused by strange happenings.  I'll say mcuh more about zsh's pattern
+confused by strange happenings.  I'll say much more about zsh's pattern
 features, but this is to remind you that you need this option if you're
 doing anything clever with `tt(~)', `tt(#)', `tt(^)' or globbing flags ---
 and also to remind you that those characters can have strange effects if
diff -ur zshguide-clean/c3.yo zshguide/c3.yo
--- zshguide-clean/c3.yo	Thu Jun 20 00:16:44 2002
+++ zshguide/c3.yo	Tue Jul 30 19:11:50 2002
@@ -462,7 +462,7 @@
 for example
 verb(  ln -s /usr/bin/ln ln)
 creates a file called tt(ln) in the current directory which does nothing
-but point to the file tt(/usr/local/bin/ln).  Symbolic links are very good
+but point to the file tt(/usr/bin/ln).  Symbolic links are very good
 at behaving as much like the original file as you usually want; for
 example, you can run the tt(ln) link you've just created as if it were
 tt(/usr/bin/ln).  They show up differently in a long file listing with
@@ -1542,7 +1542,7 @@
 By the way, `sleep' isn't a builtin.  Oddly enough, you can suspend a
 builtin command or sequence of commands (such as shell function) with
 tt(^Z), although since the shell has to continue executing your commands
-as well as being suspend, it does the only thing it can do --- fork, so
+as well as being suspended, it does the only thing it can do --- fork, so
 that the commands you suspend are put into the background.  Probably
 you will only rarely do this with builtins.  No other shell, so far as I
 know, has this feature.
@@ -1637,7 +1637,7 @@
   pws       8616   623  0 23:12 pts/0    00:00:00 ps -f)
 The process has disappeared the second time I look.  Notice that in the
 usual lugubrious UNIX way the shell didn't bother to tell you the process
-had been killed; however, it will report an error if it failed it to
+had been killed; however, it will report an error if it failed to
 send it the signal.  Sending it the signal is all the shell cares about;
 the shell won't warn if you if the process decided it didn't want to die
 when told to, so it's still a good idea to check.

--FL5UXtIhxfXey3p5--

