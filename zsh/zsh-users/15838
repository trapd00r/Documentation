From zsh-users-return-15838-mason-zsh=primenet.com.au@zsh.org Mon Mar 07 09:26:49 2011
Return-Path: <zsh-users-return-15838-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2162 invoked by alias); 7 Mar 2011 09:26:49 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 15838
Received: (qmail 21634 invoked from network); 7 Mar 2011 09:26:38 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <110307012625.ZM9254@torch.brasslantern.com>
Date: Mon, 07 Mar 2011 01:26:25 -0800
In-reply-to: <AANLkTi=GJPW=cVoA5hxbgVLsVMpeFehiZFjjU-dd04ow@mail.gmail.com>
Comments: In reply to Lyre <4179e1@gmail.com>        "string equal problem"
 (Mar  7,  5:04pm)
References: <AANLkTi=GJPW=cVoA5hxbgVLsVMpeFehiZFjjU-dd04ow@mail.gmail.com>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: Lyre <4179e1@gmail.com>, zsh-users@zsh.org
Subject: Re: string equal problem
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Mar 7,  5:04pm, Lyre wrote:
} Subject: string equal problem
}
} if [ "abc" == "def" ]; then echo y; else echo n; fi
} 
} doesn't work, it says "zsh: = not found".

 14.7.3 `=' expansion
 --------------------
 If a word begins with an unquoted `=' and the EQUALS option is set, the
 remainder of the word is taken as the name of a command.  If a command
 exists by that name, the word is replaced by the full pathname of the
 command.

What the doc doesn't go on to say is that if a command does NOT exist
by that name, it's an error.

The "test" command/builtin, for which "[" is an alias, doesn't normally
allow "==" as an operator; rather, it uses "=" for this comparison.

    /usr/bin/test: ==: binary operator expected

As it happens, zsh does allow == as an operator for test, but you must
either quote it or unsetopt EQUALS, because the arguments of test are
subject to filename expansion.

If you want to use == without messing with the option, try this way:

    if [[ "abc" == "def" ]]; then echo y; else echo n; fi

The "[[" reserved word imposes different parsing rules on the expression
it introduces, so there == is not subject to expansion.

} All of them doesn't work, except the zsh 4.2.0 on sles9.

SUSE must unsetopt EQUALS in /etc/zshenv, or some other startup file,
because no zsh since around version 2 (maybe longer) has been different
in this regard.

