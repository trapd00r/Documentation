From zsh-workers-return-11723-mason-zsh=primenet.com.au@sunsite.auc.dk Fri Jun 02 10:23:47 2000
Return-Path: <zsh-workers-return-11723-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 18361 invoked from network); 2 Jun 2000 10:23:46 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 2 Jun 2000 10:23:46 -0000
Received: (qmail 19481 invoked by alias); 2 Jun 2000 10:23:30 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 11723
Received: (qmail 19474 invoked from network); 2 Jun 2000 10:23:26 -0000
Date: Fri, 2 Jun 2000 03:23:20 -0700 (PDT)
From: Wayne Davison <wayned@users.sourceforge.net>
X-Sender: wayne@phong.blorf.net
To: Zsh Workers <zsh-workers@sunsite.auc.dk>
Subject: PATCH: glob-array indexing fix
Message-ID: <Pine.LNX.4.21.0006020315310.5302-100000@phong.blorf.net>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

I just added some more array-indexing tests to the new 14array.ztst
file (which is run by "make check").  In so doing I noticed that the
glob-array indexing was not working right in my latest patch.  The fix
is trivial:

Index: Src/glob.c
@@ -1435,7 +1435,7 @@
 	end += matchct + 1;
     else if (end > matchct)
 	end = matchct;
-    if (end -= first > 0) {
+    if ((end -= first) > 0) {
 	matchptr = matchbuf + matchct - first - end;
 	while (end-- > 0) {		/* insert matches in the arg list */
 	    insertlinknode(list, node, matchptr->name);

It's nice to know that the test suite will now catch this if it ever
breaks again.  After this change, the new array code looks solid to
me.

..wayne..

