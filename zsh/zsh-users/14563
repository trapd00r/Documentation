From zsh-users-return-14563-mason-zsh=primenet.com.au@zsh.org Thu Nov 12 19:42:19 2009
Return-Path: <zsh-users-return-14563-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 8233 invoked by alias); 12 Nov 2009 19:42:19 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14563
Received: (qmail 5258 invoked from network); 12 Nov 2009 19:42:16 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received-SPF: none (ns1.primenet.com.au: domain at benizi.com does not designate permitted sender hosts)
Date: Thu, 12 Nov 2009 14:42:43 -0500 (EST)
From: "Benjamin R. Haskell" <zsh@benizi.com>
To: Zsh Users <zsh-users@zsh.org>
Subject: Re: Using another command's completion function with an alias
In-Reply-To: <chaz20091112192523.GA4367@seebyte.com>
Message-ID: <alpine.LNX.2.01.0911121433370.26715@hp.internal>
References: <alpine.LNX.2.01.0911121316020.26715@hp.internal> <chaz20091112192523.GA4367@seebyte.com>
User-Agent: Alpine 2.01 (LNX 1266 2009-07-14)
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

On Thu, 12 Nov 2009, Stephane Chazelas wrote:

> 2009-11-12 14:00:56 -0500, Benjamin R. Haskell:
> [...]
> > alias noagent='env -u SSH_AGENT_PID -u SSH_AUTH_SOCK'
> > 
> > But, compdef noagent=-command-  doesn't have the desired effect.  I 
> > instead get the completion for 'env':
> > 
> > $ noagent <C-x><h>
> > tags in context :completion::complete:-u::
> >     all-files  (_files _default (eval))
> > tags in context :completion::complete:env::
> >     argument-rest  (_arguments _env (eval))
> > 
> > Obviously my completion-fu is still in its infancy.  Is there something 
> > simple to fix the 'alias' version?
> [...]
> 
> I don't have the answer to that exact question, but I think that
> if you used a function instead of an alias, your compdef trick
> would work. Like:
> 
> noagent() env -u SSH_AGENT_PID -u SSH_AUTH_SOCK "$@"
> compdef noagent=-command-

Hmm.  Interesting.  Thanks.


> BTW:
> 
> Manual> 6.7 Aliasing
> Manual> ============
> Manual>
> Manual> Every token in the shell input is checked to see if there
> Manual> is an alias defined for it.  If so, it is replaced by the
> Manual> text of the alias if it is in command position (if it
> Manual> could be the first word of a simple command), or if the
> Manual> alias is global.  If the text ends with a space, the next
>                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> Manual> word in the shell input is treated as though it were in
>         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> Manual> command position for purposes of alias expansion.
>         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> 
> So you may prefer:
> 
> alias noagent='env -u SSH_AGENT_PID -u SSH_AUTH_SOCK '

Also interesting.  On first read, I too thought this might help.  But, the 
problem is 'for purposes of alias expansion'.

I.e. that section allows:

$ alias A='echo foo' 
$ alias B='echo foo '
$ A A
foo A
$ B B
foo echo foo

Best,
Ben

