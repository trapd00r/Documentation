From zsh-workers-request@math.gatech.edu  Sat Sep 23 02:51:44 1995
Received: from gatech.edu (gatech.edu [130.207.244.244]) by werple.mira.net.au (8.6.12/8.6.12) with SMTP id CAA09259 for <mason@werple.mira.net.au>; Sat, 23 Sep 1995 02:51:42 +1000
Received: from math (math.skiles.gatech.edu) by gatech.edu with SMTP id AA02527
  (5.65c/Gatech-10.0-IDA for <mason@werple.mira.net.au>); Fri, 22 Sep 1995 12:43:08 -0400
Received: by math (5.x/SMI-SVR4)
	id AA23137; Fri, 22 Sep 1995 12:37:14 -0400
Resent-Date: Fri, 22 Sep 1995 09:38:15 -0700
Old-Return-Path: <zipx1!schaefer@z-code.ncd.com>
From: "Bart Schaefer" <schaefer@z-code.com>
Message-Id: <9509220938.ZM4578@zipx1.z-code.com>
Date: Fri, 22 Sep 1995 09:38:15 -0700
In-Reply-To: z-code!cs.elte.hu!hzoli (Zoltan Hidvegi)
        "Re: input.c and here documents bugfixes" (Sep 22,  6:09pm)
References: <9509221609.AA01612@turan.elte.hu>
Reply-To: schaefer@z-code.com
X-Mailer: Z-Mail (3.2.1 15feb95)
To: hzoli@cs.elte.hu (Zoltan Hidvegi)
Subject: Re: input.c and here documents bugfixes
Cc: zsh-workers@math.gatech.edu
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-Message-Id: <"zAlsR.0.Rf5.vOkOm"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/399
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

[ You sent your message only to me, Zoltan ... it didn't go to the list. ]

On Sep 22,  6:09pm, Zoltan Hidvegi wrote:
} Subject: Re: input.c and here documents bugfixes
}
} > I think Zoltan's input.c patch was incorrect
} > 
} -- patch deleted ---
} 
} Sorry, I forgot the semicolon at the end. The patch below should be correct.
} 
} The problem with the original file is that is can exit from the for loop on
} two conditions.  If it exits when the buffer is filled up, the l counter is
} one more than otherwise.

But that's the right thing to do, unless ingetc() has changed a lot from
hgetch().  Originally, hgetch() would return a space that wasn't really
in the input stream whenever lexstop was true; and hgets() [which became
ingets() recently] would have to trim that space off to return the real
input.  If the buffer is filled up, then the last character returned by
ingetc() is a real part of the stream, and the counter should be one
greater so that the '\0' string-terminator will be inserted after the
last character read.

Your loop is completely equivalent as far as I can tell, except that if
n <= 1 and lexstop happens to already be true before ingets() is called,
you'll write a '\0' into buf[-1].

I still think the original version is correct.  Can you give an example
where it fails and your version does something different?

-- 
Bart Schaefer                                      Vice President, Technology
schaefer@z-code.com                                Z-Code / NCD Software Inc.

What quantity of engineers is required to rotationally reconfigure an
electronically-actuated filament-enabled photon-wave generator?

