From zsh-users-return-14550-mason-zsh=primenet.com.au@zsh.org Wed Nov 11 17:45:20 2009
Return-Path: <zsh-users-return-14550-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 8605 invoked by alias); 11 Nov 2009 17:45:20 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14550
Received: (qmail 29988 invoked from network); 11 Nov 2009 17:45:17 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <091111094507.ZM30174@torch.brasslantern.com>
Date: Wed, 11 Nov 2009 09:45:07 -0800
In-reply-to: <m3eio56o4i.fsf@klanderman.net>
Comments: In reply to Greg Klanderman <gak@klanderman.net>
 "Re: the function to show a digit argument while it is being typed" (Nov 11,
 11:07am)
References: <10081257897632@webmail89.yandex.ru>
	<237967ef0911101822g5bfcf4fao25fc33ba0a2e8604@mail.gmail.com>
	<091110204748.ZM28704@torch.brasslantern.com>
	<237967ef0911102217m1325dc59y8d7388e9f6f21c7b@mail.gmail.com>
	<091111001419.ZM28852@torch.brasslantern.com>	<m3eio56o4i.fsf@klanderman.net>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-users@zsh.org
Subject: Re: the function to show a digit argument while it is being typed
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Nov 11, 11:07am, Greg Klanderman wrote:
} 
} This is pretty nice.. is there any way to have the argument appear on
} the following line instead?

Here's a summarized version based on everything that's gone by so far.

   function digit-argument-show {
     emulate -R zsh
     if [[ $LASTWIDGET == neg-argument && -n $NUMERIC ]]
     then zle -M "arg: $((NUMERIC*$KEYS[-1]))"
     else zle -M "arg: $NUMERIC$KEYS[-1]"
     fi
     zle -R
     zle .digit-argument
     if zle read-command
     then [[ $REPLY != digit-argument ]] && zle -M ""
     else zle send-break
     fi
     [[ -n $KEYS ]] && zle -U $KEYS
   }

I'm not sure why the "zle -R" is needed; odd things happen [*] if it's
left out, probably because .digit-argument does not normally change
BUFFER or CURSOR and therefore doesn't cause a full refresh.

[*] cursor moves to status line but message is not printed, then all the
messages spew out when something does change BUFFER.

} I had to add 'setopt localoptions unset'

The "emulate" should take care of that -- things like shwordsplit also
needed to be handled.

} Also would be nice if this worked with universal-argument.

Hmm, that one is a lot trickier; universal-argument effectively is a
trap on the next self-insert, such that if a digit is typed it behaves
like digit-argument (and also discards any "pending" neg-argument,
which may be yet another bug).  It handles that next keypress in a
way that makes it impossible to intercept in a wrapper widget, which
requires that the new widget not call .universal-argument.

For example, .universal-argument followed by the tty interrupt character
does not accomplish a send-break, which is another in the long line of
bugs that this exercise is uncovering.

Things get even hairier when argument-base is thrown in.

