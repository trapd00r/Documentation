From zsh-workers-return-11772-mason-zsh=primenet.com.au@sunsite.auc.dk Tue Jun 06 09:58:54 2000
Return-Path: <zsh-workers-return-11772-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1513 invoked from network); 6 Jun 2000 09:58:53 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 6 Jun 2000 09:58:53 -0000
Received: (qmail 17927 invoked by alias); 6 Jun 2000 09:58:43 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 11772
Received: (qmail 17918 invoked from network); 6 Jun 2000 09:58:42 -0000
Message-ID: <393CCB47.43BD74D7@u.genie.co.uk>
Date: Tue, 06 Jun 2000 10:58:31 +0100
From: Oliver Kiddle <opk@u.genie.co.uk>
X-Mailer: Mozilla 4.73 [en] (Win95; I)
X-Accept-Language: en
MIME-Version: 1.0
To: Zsh workers <zsh-workers@sunsite.auc.dk>
Subject: Re: zparseopts (Re: PATCH: _urls and _rpm)
References: <393C2510.5F7D3880@u.genie.co.uk> <1000606040813.ZM25973@candle.brasslantern.com>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

On the subject of my IRIX 5.3 compilation warnings, Bart Schaefer wrote:
> What does line 111 of sys/types.h look like?

typedef unsigned long   ino_t;          /* <inode> type */

If you look back it my previous message (11755), you'll see that I had
stuck a section of types.h in at the end. The line is after a
preprocessor check for _MIPS_SZLONG == 32.

I'll try your sed suggestion out this evening, thanks.

Bart Schaefer wrote:
> 
> No, that's no good.  The whole point of calling it zparseOPTS is that the
> things it is parsing are *optional*.

Fair enough.

> } +zparseopts -D -E 'g:=glob'
>                     ^       ^                   Why the quotes?

Because I cut and paste the line from the example in 11532 without
thinking much about it.

> } +(( $#glob )) || glob=( -g '' )
> You could use
>         : ${(A)=glob:=-g '*(^/)'}

Very true, I forgot about that, I'll commit those changes sometime
later.

> What I can't decide is whether I like the behavior of emptying the array
> when no matching option is found.

Actually, this is how I initially assumed it would work and I tried it
out as you suggested.

and Sven wrote:
> Should we add an option for this?

An option seems slightly over-kill but I really can't decide which
behaviour I prefer either so maybe. You could also allow
g:=glob:-'*(^/)' but I'm not sure that wouldn't only be unnecessary
bloat to zparseopts.

Oliver

Index: Completion/User/_urls
===================================================================
RCS file: /cvsroot/zsh/zsh/Completion/User/_urls,v
retrieving revision 1.11
diff -u -r1.11 _urls
--- Completion/User/_urls       2000/06/05 23:20:48     1.11
+++ Completion/User/_urls       2000/06/06 09:55:41
@@ -52,8 +52,8 @@
   _wanted -C -f files expl file _files "$@" && return 0
 fi

-zparseopts -D -E 'g:=glob'
-(( $#glob )) || glob=( -g '*(^/)' )
+zparseopts -D -E g:=glob
+: ${(A)=glob:=-g '*(^/)'}

 ipre="$IPREFIX"

