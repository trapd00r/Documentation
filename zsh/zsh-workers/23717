From zsh-workers-return-23717-mason-zsh=primenet.com.au@sunsite.dk Sat Jul 28 18:46:33 2007
Return-Path: <zsh-workers-return-23717-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1811 invoked from network); 28 Jul 2007 18:46:32 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.1 (2007-05-02) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.1
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 28 Jul 2007 18:46:32 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 26995 invoked from network); 28 Jul 2007 18:46:25 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 28 Jul 2007 18:46:25 -0000
Received: (qmail 12967 invoked by alias); 28 Jul 2007 18:46:23 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 23717
Received: (qmail 12957 invoked from network); 28 Jul 2007 18:46:23 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 28 Jul 2007 18:46:23 -0000
Received: (qmail 26727 invoked from network); 28 Jul 2007 18:46:23 -0000
Received: from flock1.newmail.ru (82.204.219.207)
  by a.mx.sunsite.dk with SMTP; 28 Jul 2007 18:46:19 -0000
Received: (qmail 10122 invoked from network); 28 Jul 2007 18:46:18 -0000
Received: from unknown (HELO cooker.net) (arvidjaar@newmail.ru@91.76.106.35)
  by smtpd.newmail.ru with SMTP; 28 Jul 2007 18:46:18 -0000
From: Andrey Borzenkov <arvidjaar@newmail.ru>
To: zsh-workers@sunsite.dk
Subject: Re: putenv()/environ bug
Date: Sat, 28 Jul 2007 22:46:15 +0400
User-Agent: KMail/1.9.7
Cc: "Sean C. Farley" <scf@freebsd.org>
References: <20070725093254.T20275@thor.farley.org> <20070725215321.00e3b110.p.w.stephenson@ntlworld.com> <20070725184302.S23862@thor.farley.org>
In-Reply-To: <20070725184302.S23862@thor.farley.org>
MIME-Version: 1.0
Content-Type: multipart/signed;
  boundary="nextPart3096481.8aS1E0ma5A";
  protocol="application/pgp-signature";
  micalg=pgp-sha1
Content-Transfer-Encoding: 7bit
Message-Id: <200707282246.16663.arvidjaar@newmail.ru>

--nextPart3096481.8aS1E0ma5A
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

On Thursday 26 July 2007, Sean C. Farley wrote:
> On Wed, 25 Jul 2007, Peter Stephenson wrote:
> > On Wed, 25 Jul 2007 10:09:22 -0500 (CDT)
> >
> > "Sean C. Farley" <scf@FreeBSD.org> wrote:
> >> As noticed here following a change in FreeBSD's *env() functions, zsh
> >> is mixing *env() (putenv() in this case) functions with direct access
> >> to the environ variable's contents against the IEEE Std 1003.1
> >> specification.
> >>
> >> BTW, is there a particular reason the standard *env() functions
> >> cannot be used for all operations to environ if found?
> >

The code in question is quite old and I believe it predates (un-)setenv. An=
d=20
you simply did not have any way to *unset* environment string in some=20
systems; I think (un-)setenv is BSD extension.

> > There's a long history of fiddling with these for problems on various
> > systems, so I'm a little unwilling to change it without some guidance.
> >
> > For example,
> >
> >    /*
> >     * Under Cygwin we must use putenv() to maintain consistency.
> >     * Unfortunately, current version (1.1.2) copies argument and may
> >     * silently reuse existing environment string. This tries to
> >     * check for both cases
> >     */
>
> I understand.
>
> > This is a little confusing since the code in question (addenv in
> > params.c) doesn't actually use putenv().
>
> Legacy comments are only meant to throw developers off the track.  :)
>

Huh? addenv() is using zputenv() that is using putenv() where avaialable. N=
ow=20
it may be legacy in the sense Cygwin implemenation has changed; but=20
unfortunately I use Cygwin no more nor have environment to check it.

> > Given we manipulate environ quite a lot anyway, is there any harm in
> > using only the zsh versions of zgetenv() and zputenv()?  There's a
> > getenv() instead of a zgetenv() in init.c:  I think that was just a
> > typo by me.
>
> *code snipped*
>
> Unfortunately, this does not fix the problem.  unsets are only affecting
> the zsh environment but not environ.

What about - check if (un-)setenv is available and use them. On legacy syst=
ems=20
use existing implementation. This probably will mean we will be using nativ=
e=20
utilities everywhere on modern systems.

=2Dandrey

--nextPart3096481.8aS1E0ma5A
Content-Type: application/pgp-signature; name=signature.asc 
Content-Description: This is a digitally signed message part.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.7 (GNU/Linux)

iD8DBQBGq474R6LMutpd94wRAhZXAJ9IlLV3Eia8Bz38dUnMWPozdx9K7gCfX/Px
MyWvcSoiIuko7/JCwRAVSfI=
=cRJQ
-----END PGP SIGNATURE-----

--nextPart3096481.8aS1E0ma5A--

