From zsh-workers-return-19982-mason-zsh=primenet.com.au@sunsite.dk Tue May 25 23:47:55 2004
Return-Path: <zsh-workers-return-19982-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 28978 invoked from network); 25 May 2004 23:47:53 -0000
Received: from thor.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.86)
  by ns1.primenet.com.au with SMTP; 25 May 2004 23:47:53 -0000
Received: (qmail 17701 invoked from network); 25 May 2004 23:47:38 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 25 May 2004 23:47:38 -0000
Received: (qmail 10255 invoked by alias); 25 May 2004 23:47:27 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 19982
Received: (qmail 10241 invoked from network); 25 May 2004 23:47:26 -0000
Received: from thor.dotsrc.org (HELO a.mx.sunsite.dk) (qmailr@130.225.247.86)
  by sunsite.dk with SMTP; 25 May 2004 23:47:23 -0000
Received: (qmail 17224 invoked from network); 25 May 2004 23:47:23 -0000
Received: from lorien.emufarm.org (64.81.48.166)
  by a.mx.sunsite.dk with SMTP; 25 May 2004 23:47:20 -0000
Received: from lorien.emufarm.org (localhost [127.0.0.1])
	by lorien.emufarm.org (8.12.7/8.12.7) with ESMTP id i4PNkq1t015818;
	Tue, 25 May 2004 16:46:52 -0700
Received: (from duvall@localhost)
	by lorien.emufarm.org (8.12.7/8.12.7/Submit) id i4PNknFA015817;
	Tue, 25 May 2004 16:46:49 -0700
Date: Tue, 25 May 2004 16:46:49 -0700
From: Danek Duvall <duvall@emufarm.org>
To: Thorsten Kampe <thorsten@thorstenkampe.de>
Cc: zsh-workers@sunsite.dk
Subject: Re: zsh 4.2.0 dumping core on completion attempt
Message-ID: <20040525234649.GA15556@lorien.emufarm.org>
Mail-Followup-To: Danek Duvall <duvall@emufarm.org>,
	Thorsten Kampe <thorsten@thorstenkampe.de>, zsh-workers@sunsite.dk
References: <3m5afmj8tzpu$.dlg@thorstenkampe.de> <20040525063239.19784.qmail@web51107.mail.yahoo.com> <1kfucegia4ux3.dlg@thorstenkampe.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1kfucegia4ux3.dlg@thorstenkampe.de>
User-Agent: Mutt/1.5.6i
X-Spam-Checker-Version: SpamAssassin 2.63 on a.mx.sunsite.dk
X-Spam-Level: 
X-Spam-Status: No, hits=-0.0 required=6.0 tests=BAYES_44 autolearn=no 
	version=2.63
X-Spam-Hits: -0.0

(Dropping zsh-users.)

On Wed, May 26, 2004 at 12:53:17AM +0200, Thorsten Kampe wrote:

> zsh -f
> autoload -U compinit; compinit -C
> zstyle ':completion:*' matcher-list 'm:[-._]=[-._] r:|[-./_]=**'
> mkdir bug; cd bug
> _f<TAB>
> zsh: 2588 segmentation fault  zsh -f

It dumps on Solaris, as well.  This stack trace is from S9/x86.  I don't
know why all the symbols are not being resolved (well, it's not a debug
build, that's why).  I've included the memory mapping as well, which may
help.  The SPARC stack is not the same; I can provide that as well, if
it'd be useful.

(dbx) where
=>[1] strncmp(0xceb63928, 0xceb61668, 0x1), at 0xce97f759 
  [2] 0xce8b262e(0xceb63928, 0xceb61668, 0x1), at 0xce8b262d 
  [3] join_clines(0xceb61668, 0xceb63928), at 0xce8b36f3 
  [4] add_match_data(0x0, 0xce7a2028, 0xce7c1068, 0xceb63928, 0xceb60258, 0x0, 0xceb60260, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0), at 0xce8ae4d3 
  [5] addmatches(0x8043fbc, 0xce7d27f8), at 0xce8ad70a 
  [6] 0xce8a6825(0xce863410, 0x8044040, 0x8044078, 0x0), at 0xce8a6824 
  [7] execbuiltin(0xce863380, 0xce8ca0c0), at 0x805a7de 
  [8] 0x806c4aa(0x8044b88, 0x0, 0x0, 0x12, 0x2), at 0x806c4a9 
  [9] 0x8069a83(0x8044b88, 0x1183, 0x12, 0x0, 0x0, 0x0), at 0x8069a82 
  [10] 0x8069202(0x8044b88, 0x1802, 0x12, 0x0), at 0x8069201 
  [11] execlist(0x8044b88, 0x1, 0x0), at 0x8068e1e 
  [12] execwhile(0x8044b88, 0x0), at 0x8086384 
  [13] 0x806c6ac(0x8044b88, 0x0, 0x0, 0x12, 0x2), at 0x806c6ab 
  [14] 0x8069a83(0x8044b88, 0x1143, 0x12, 0x0, 0x0, 0x0), at 0x8069a82 
  [15] 0x8069202(0x8044b88, 0x4802, 0x12, 0x0), at 0x8069201 
  [16] execlist(0x8044b88, 0x1, 0x0), at 0x8068e1e 
  [17] execif(0x8044b88, 0x0), at 0x808673a 
  [18] 0x806c6ac(0x8044b88, 0x0, 0x0, 0x12, 0x2), at 0x806c6ab 
  [19] 0x8069a83(0x8044b88, 0x7c3, 0x12, 0x0, 0x0, 0x0), at 0x8069a82 
  [20] 0x8069202(0x8044b88, 0x24002, 0x12, 0x0), at 0x8069201 
  [21] execlist(0x8044b88, 0x1, 0x0), at 0x8068e1e 
  [22] execif(0x8044b88, 0x0), at 0x808673a 
  [23] 0x806c6ac(0x8044b88, 0x0, 0x0, 0x12, 0x2), at 0x806c6ab 
  [24] 0x8069a83(0x8044b88, 0x643, 0x12, 0x0, 0x0, 0x0), at 0x8069a82 
  [25] 0x8069202(0x8044b88, 0x2bc02, 0x12, 0x0), at 0x8069201 
  [26] execlist(0x8044b88, 0x1, 0x0), at 0x8068e1e 
  [27] execfor(0x8044b88, 0x0), at 0x8085b37 
  [28] 0x806c6ac(0x8044b88, 0x0, 0x0, 0x2, 0x2), at 0x806c6ab 
  [29] 0x8069a83(0x8044b88, 0x603, 0x2, 0x0, 0x0, 0x0), at 0x8069a82 
  [30] 0x8069202(0x8044b88, 0x2d402, 0x2, 0x0), at 0x8069201 
  [31] execlist(0x8044b88, 0x1, 0x0), at 0x8068e1e 
  [32] execwhile(0x8044b88, 0x0), at 0x8086384 
  [33] 0x806c6ac(0x8044b88, 0x0, 0x0, 0x2, 0x2), at 0x806c6ab 
  [34] 0x8069a83(0x8044b88, 0x5c3, 0x2, 0x0, 0x0, 0x0), at 0x8069a82 
  [35] 0x8069202(0x8044b88, 0x32402, 0x2, 0x0), at 0x8069201 
  [36] execlist(0x8044b88, 0x1, 0x0), at 0x8068e1e 
  [37] execode(0x8116638, 0x1, 0x0), at 0x80689e2 
  [38] 0x806e380(0x8044d58, 0x0), at 0x806e37f 
  [39] 0x806c6ac(0x8044d58, 0x0, 0x0, 0x12, 0x2), at 0x806c6ab 
  [40] 0x8069a83(0x8044d58, 0x3, 0x12, 0x0, 0x0, 0x0), at 0x8069a82 
  [41] 0x8069202(0x8044d58, 0xc02, 0x12, 0x0), at 0x8069201 
  [42] execlist(0x8044d58, 0x1, 0x0), at 0x8068e1e 
  [43] execode(0x80fdfc0, 0x1, 0x0), at 0x80689e2 
  [44] runshfunc(0x80fdfc0, 0x0, 0xce862728), at 0x806ea55 
  [45] 0xce8a7ccc(0x80fdfc0, 0x0, 0xce862728), at 0xce8a7ccb 
  [46] runshfunc(0x80fdfc0, 0xce8ca018, 0xce862728), at 0x806e9f2 
  [47] doshfunc(0x80fd290, 0x80fdfc0, 0xce8624b8, 0x2200, 0x0), at 0x806e815 
  [48] 0x806e2eb(0x80fd278, 0xce8624b8), at 0x806e2ea 
  [49] 0x806c583(0x8045124, 0x0, 0x0, 0x12, 0x2), at 0x806c582 
  [50] 0x8069a83(0x8045124, 0x943, 0x12, 0x0, 0x0, 0x0), at 0x8069a82 
  [51] 0x8069202(0x8045124, 0x1802, 0x12, 0x0), at 0x8069201 
  [52] execlist(0x8045124, 0x1, 0x0), at 0x8068e1e 
  [53] execode(0x81158c0, 0x1, 0x0), at 0x80689e2 
  [54] 0x806e380(0x80452f4, 0x0), at 0x806e37f 
  [55] 0x806c6ac(0x80452f4, 0x0, 0x0, 0x12, 0x2), at 0x806c6ab 
  [56] 0x8069a83(0x80452f4, 0x3, 0x12, 0x0, 0x0, 0x0), at 0x8069a82 
  [57] 0x8069202(0x80452f4, 0xc02, 0x12, 0x0), at 0x8069201 
  [58] execlist(0x80452f4, 0x1, 0x0), at 0x8068e1e 
  [59] execode(0x80fed90, 0x1, 0x0), at 0x80689e2 
  [60] runshfunc(0x80fed90, 0x0, 0xce862138), at 0x806ea55 
  [61] 0xce8a7ccc(0x80fed90, 0x0, 0xce862138), at 0xce8a7ccb 
  [62] runshfunc(0x80fed90, 0xce8ca018, 0xce862138), at 0x806e9f2 
  [63] doshfunc(0x80fe778, 0x80fed90, 0xce862100, 0x2200, 0x0), at 0x806e815 
  [64] 0x806e2eb(0x80fe760, 0xce862100), at 0x806e2ea 
  [65] 0x806c583(0x8045660, 0x0, 0x0, 0x2, 0x2), at 0x806c582 
  [66] 0x8069a83(0x8045660, 0x103, 0x2, 0x0, 0x0, 0x0), at 0x8069a82 
  [67] 0x8069202(0x8045660, 0xc02, 0x2, 0x0), at 0x8069201 
  [68] execlist(0x8045660, 0x1, 0x0), at 0x8068e1e 
  [69] execode(0x81156e8, 0x1, 0x0), at 0x80689e2 
  [70] 0x806e380(0x8045830, 0x0), at 0x806e37f 
  [71] 0x806c6ac(0x8045830, 0x0, 0x0, 0x12, 0x2), at 0x806c6ab 
  [72] 0x8069a83(0x8045830, 0x3, 0x12, 0x0, 0x0, 0x0), at 0x8069a82 
  [73] 0x8069202(0x8045830, 0xc02, 0x12, 0x0), at 0x8069201 
  [74] execlist(0x8045830, 0x1, 0x0), at 0x8068e1e 
  [75] execode(0x80fe368, 0x1, 0x0), at 0x80689e2 
  [76] runshfunc(0x80fe368, 0x0, 0xce8620f0), at 0x806ea55 
  [77] 0xce8a7ccc(0x80fe368, 0x0, 0xce8620f0), at 0xce8a7ccb 
  [78] runshfunc(0x80fe368, 0xce8ca018, 0xce8620f0), at 0x806e9f2 
  [79] doshfunc(0x80e8e10, 0x80fe368, 0xce8620c8, 0x2200, 0x0), at 0x806e815 
  [80] 0x806e2eb(0x80fd4d0, 0xce8620c8), at 0x806e2ea 
  [81] 0x806c583(0x8045b8c, 0x0, 0x0, 0x12, 0x2), at 0x806c582 
  [82] 0x8069a83(0x8045b8c, 0x83, 0x12, 0x0, 0x0, 0x0), at 0x8069a82 
  [83] 0x8069202(0x8045b8c, 0xc02, 0x12, 0x0), at 0x8069201 
  [84] execlist(0x8045b8c, 0x1, 0x0), at 0x8068e1e 
  [85] execode(0xce862080, 0x1, 0x0), at 0x80689e2 
  [86] bin_eval(0xce862020, 0x8045bc8, 0x8045bfc, 0xe), at 0x8064129 
  [87] execbuiltin(0xce862000, 0x80c7c24), at 0x805a7de 
  [88] 0x806c4aa(0x8045fe4, 0x0, 0x0, 0x2, 0x2), at 0x806c4a9 
  [89] 0x8069a83(0x8045fe4, 0x4c3, 0x2, 0x0, 0x0, 0x0), at 0x8069a82 
  [90] 0x8069202(0x8045fe4, 0x1022, 0x2, 0x0), at 0x8069201 
  [91] execlist(0x8045fe4, 0x1, 0x0), at 0x8068cd9 
  [92] execif(0x8045fe4, 0x0), at 0x808673a 
  [93] 0x806c6ac(0x8045fe4, 0x0, 0x0, 0x2, 0x2), at 0x806c6ab 
  [94] 0x8069a83(0x8045fe4, 0x3c3, 0x2, 0x0, 0x0, 0x0), at 0x8069a82 
  [95] 0x8069202(0x8045fe4, 0xa802, 0x2, 0x0), at 0x8069201 
  [96] execlist(0x8045fe4, 0x1, 0x0), at 0x8068e1e 
  [97] execode(0x81152d8, 0x1, 0x0), at 0x80689e2 
  [98] 0x806e380(0x80461b4, 0x0), at 0x806e37f 
  [99] 0x806c6ac(0x80461b4, 0x0, 0x0, 0x12, 0x2), at 0x806c6ab 
  [100] 0x8069a83(0x80461b4, 0x3, 0x12, 0x0, 0x0, 0x0), at 0x8069a82 
(dbx) proc -map
Loadobject mappings for current core file:
0x08050000 /usr/sfw/bin/zsh 
0xceb70000 /usr/lib/libsocket.so.1 
0xceb90000 /usr/lib/libdl.so.1 
           is being filtered by: /usr/lib/ld.so.1
0xceab0000 /usr/lib/libnsl.so.1 
0xcea60000 /usr/lib/libcurses.so.1 
0xcea20000 /usr/lib/libm.so.1 
0xce960000 /usr/lib/libc.so.1 
0xce940000 /usr/lib/libmp.so.2 
0xce8f0000 /usr/sfw/lib/zsh/4.2.0/zsh/zle.so 
0xce8a0000 /usr/sfw/lib/zsh/4.2.0/zsh/complete.so 
0xce880000 /usr/sfw/lib/zsh/4.2.0/zsh/compctl.so 
0xce840000 /usr/sfw/lib/zsh/4.2.0/zsh/parameter.so 
0xce820000 /usr/sfw/lib/zsh/4.2.0/zsh/zutil.so 
0xce7f0000 /usr/sfw/lib/zsh/4.2.0/zsh/computil.so 
0xcebc0000 /usr/lib/ld.so.1 [LM_ID_LDSO]

core file address ranges:
0x08042000 - 0x08048000 (data)
0x08050000 - 0x080b6eda (text)
0x080c6000 - 0x080cd000 (data)
0x080cd000 - 0x0812b000 (data)
0xce7a0000 - 0xce7a4000 (data)
0xce7b0000 - 0xce7b4000 (data)
0xce7c0000 - 0xce7c4000 (data)
0xce7d0000 - 0xce7d4000 (data)
0xce7e0000 - 0xce7e1000 (data)
0xce7f0000 - 0xce7fc3d1 (text)
0xce80c000 - 0xce80d000 (data)
0xce820000 - 0xce824f29 (text)
0xce834000 - 0xce836000 (data)
0xce840000 - 0xce845666 (text)
0xce855000 - 0xce856000 (data)
0xce860000 - 0xce864000 (data)
0xce870000 - 0xce871000 (data)
0xce880000 - 0xce88c9f7 (text)
0xce89c000 - 0xce89e000 (data)
0xce8a0000 - 0xce8b96a5 (text)
0xce8c9000 - 0xce8cb000 (data)
0xce8e0000 - 0xce8e1000 (data)
0xce8f0000 - 0xce917232 (text)
0xce927000 - 0xce92d000 (data)
0xce92d000 - 0xce92e000 (data)
0xce940000 - 0xce94284c (text)
0xce953000 - 0xce954000 (data)
0xce960000 - 0xce9fe548 (text)
0xcea0f000 - 0xcea15000 (data)
0xcea15000 - 0xcea16000 (data)
0xcea20000 - 0xcea32a24 (text)
0xcea42000 - 0xcea44000 (data)
0xcea50000 - 0xcea51000 (data)
0xcea60000 - 0xcea85d52 (text)
0xcea96000 - 0xcea9d000 (data)
0xcea9d000 - 0xcea9f000 (data)
0xceab0000 - 0xceb392c0 (text)
0xceb4a000 - 0xceb4f000 (data)
0xceb4f000 - 0xceb57000 (data)
0xceb60000 - 0xceb64000 (data)
0xceb70000 - 0xceb7a488 (text)
0xceb8b000 - 0xceb8c000 (data)
0xceb90000 - 0xceb90868 (text)
0xcebb0000 - 0xcebb1000 (data)
0xcebc0000 - 0xcebe0f12 (text)
0xcebc0000 - 0xcebe0f12 (text)
0xcebf0000 - 0xcebf2000 (data)
0xcebf2000 - 0xcebf3000 (data)
(dbx)


Danek

