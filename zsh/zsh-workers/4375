From zsh-workers-request@math.gatech.edu Thu Sep 03 04:00:18 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 1666 invoked from network); 3 Sep 1998 04:00:16 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 3 Sep 1998 04:00:16 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.9.1/8.9.1) id XAA20119;
	Wed, 2 Sep 1998 23:50:13 -0400 (EDT)
Resent-Date: Wed, 2 Sep 1998 23:50:13 -0400 (EDT)
From: "Bart Schaefer" <schaefer@brasslantern.com>
Message-Id: <980902205229.ZM1419@candle.brasslantern.com>
Date: Wed, 2 Sep 1998 20:52:29 -0700
In-Reply-To: <m267f6koec.fsf@altair.xemacs.org>
Comments: In reply to SL Baur <steve@xemacs.org>
        "zsh-3.1.4 bug, parsing case ... esac" (Sep  2,  5:53pm)
References: <m267f6koec.fsf@altair.xemacs.org>
X-Mailer: Z-Mail (4.0b.820 20aug96)
To: SL Baur <steve@xemacs.org>, zsh-workers@math.gatech.edu
Subject: Re: zsh-3.1.4 bug, parsing case ... esac
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-Message-ID: <"xnIRE3.0.Iw4.r7Xxr"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4375
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

On Sep 2,  5:53pm, SL Baur wrote:
} Subject: zsh-3.1.4 bug, parsing case ... esac
}
} zsh: parse error near `echo'
} zsh: parse error in command substitution
} 
} 		esac else echo bison ;
} 
} adding a semicolon after the esac makes the messages go away, but I
} think this should work as is.

Blech.  That sure doesn't parse according to the bash manual.  The
stuff between "then" and "else" has to be a properly-terminated list,
which means it has to end with ; & or newline.

Anybody have access to a ksh manual?

It might be possible to special-case (ahem) this because esac is a
reserved word, but zsh's parser is doing exactly what it is documented
to do, so it can't be called a bug (except in egcs's makefile).

I'd report it to the egcs folks and see what they have to say.  My guess is
this wasn't intentional on their part.  It does appear that bash accepts
"esac", "done" or "fi" as termination of a "list", so it even accepts the
following gobbledygook:

if false; then if false; then if false; then; fi fi fi
if false; then case x in x);; esac else while true; do break; done fi
for y in y; do if true; then case x in x) break;; esac fi done

This only works in "list" context, e.g., if you run the above three lines
together it won't parse the "fi if".  I suspect all the above is terribly
unportable and should not be used in a reasonable shell script or makefile.

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

