From zsh-workers-return-28900-mason-zsh=primenet.com.au@zsh.org Thu Mar 17 15:26:11 2011
Return-Path: <zsh-workers-return-28900-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 15291 invoked by alias); 17 Mar 2011 15:26:10 -0000
Mailing-List: contact zsh-workers-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Workers List <zsh-workers.zsh.org>
List-Post: <mailto:zsh-workers@zsh.org>
List-Help: <mailto:zsh-workers-help@zsh.org>
Delivered-To: mailing list zsh-workers@zsh.org
X-Seq: 28900
Received: (qmail 15297 invoked from network); 17 Mar 2011 15:25:58 -0000
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-1.9 required=5.0 tests=BAYES_00,RCVD_IN_DNSWL_NONE
	autolearn=ham version=3.3.1
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <110317082534.ZM26573@torch.brasslantern.com>
Date: Thu, 17 Mar 2011 08:25:34 -0700
In-reply-to: <87tyf2hxe6.fsf@ft.bewatermyfriend.org>
Comments: In reply to Frank Terbeck <ft@bewatermyfriend.org>
 "Re: PATCH: edit-command-line: disable `monitor' option locally" (Mar 17,
 11:08am)
References: <1300306570-24592-1-git-send-email-ft@bewatermyfriend.org>
	<110316210401.ZM25580@torch.brasslantern.com>
	<87tyf2hxe6.fsf@ft.bewatermyfriend.org>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-workers@zsh.org
Subject: Re: PATCH: edit-command-line: disable `monitor' option locally
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Mar 17, 11:08am, Frank Terbeck wrote:
}
} Here is how to get the error:
} 
} a) Start a new shell. The error seems to only appear the first time the
}    `edit-command-line' widget is called.
} b) Enter something into the command line buffer.
} c) Strike your `edit-command-line' shortcut.
} d) "C-z" to suspend.
} e) Run another command while being suspended.
} f) "fg" to get the editor back.
} g) Exit the editor.

Nope, still nothing.  Even starting zsh with a ZDOTDIR pointing at a
file that does nothing but set up edit-command-line, I cannot make
this happen (with 4.3.11-dev-1 patchlevel 1.5223).

} > On the other hand if I put in this patch, then when I try to resume the
} > backgrounded editor
} 
} Um. How do you end up with a backgrounded editor with this patch?
} Shouldn't it be impossible to background the editor if `monitor' is
} unset? I can't seem to get that to happen on my linux-based laptop.

Here's with edit-command-line straight out of the distribution -- the
blank line is where I hit ^Z in the editor:

torch% echo something

zsh: suspended  
torch% echo something
torch% echo something

Now I hit enter and go on:

something
torch% jobs
[1]  + suspended  
torch% 

At this point I can bring vim back into the foreground with no trouble.
It's true the command line will be lost if I don't force vim to save it
somewhere, because the file has already been removed, the contents are
only in vim's working copy.

Now here's how it differs with your patch applied:

torch% echo otherthing

torch% echo otherthing
otherthing
torch% jobs
[1]  + suspended  
torch% 

I.e. the only thing that changed was whether I got notified about the
job being suspended.  Vim still handled the ^Z and stopped itself.
But bad things happen if I try to bring it back into the foreground
because zsh doesn't send CONT to the correct process group (I think
is what's going on, but I can't be sure).

} In any case, I think the widget should protect the user from losing the
} command line. And disallowing the editor from backgrounding should do
} that (and in fact does for me).

I agree but don't think twaddling no_monitor is sufficient.  If you
remove no_monitor but add xtrace to the setopts in edit-command-line,
what do you see after you hit ^Z in vim?  I get this:

----
torch% echo foo+edit-command-line:2> local 'tmpfile=/tmp/zshecl26567'
+edit-command-line:3> print -R - 'echo foo'
+edit-command-line:5> vi /tmp/zshecl26567


zsh: suspended  
torch% echo foo+edit-command-line:6> print -Rz - 'echo foo'
+edit-command-line:7> rm -f /tmp/zshecl26567
+edit-command-line:8> zle send-break

torch% echo foo
----

I suspect that in your case the entire edit-command-line function is
stopped, so rm -f / zle send-break never happens until after you bring
it into the foreground again, but I don't know why it differs for me.

