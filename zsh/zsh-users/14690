From zsh-users-return-14690-mason-zsh=primenet.com.au@zsh.org Sat Dec 26 22:56:02 2009
Return-Path: <zsh-users-return-14690-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 21230 invoked by alias); 26 Dec 2009 22:56:02 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14690
Received: (qmail 20000 invoked from network); 26 Dec 2009 22:56:01 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-0.5 required=5.0 tests=AWL,BAYES_00,
	RCVD_NUMERIC_HELO,SPF_HELO_PASS autolearn=no version=3.2.5
Received-SPF: pass (ns2.melb.primenet.com.au: SPF record at m.gmane.org designates 80.91.229.12 as permitted sender)
X-Injected-Via-Gmane: http://gmane.org/
To: zsh-users@zsh.org
From:  Lloyd Zusman <ljz@asfast.com>
Subject:  Encrypting history?
Date:  Sat, 26 Dec 2009 17:55:26 -0500
Organization:  Take a hippopotamus to lunch today.
Lines: 33
Message-ID:  <m2zl55uyzl.fsf@asfast.com>
Mime-Version:  1.0
Content-Type:  text/plain; charset=us-ascii
X-Complaints-To: usenet@ger.gmane.org
X-Gmane-NNTP-Posting-Host: 209.59.210.144
User-Agent: Gnus/5.110011 (No Gnus v0.11) Emacs/23.1.50 (darwin)
Cancel-Lock: sha1:JH9KSUVHREnWF2pEqq2bhcxe8XQ=
Cache-Post-Path: purity-of-essence.net!unknown@nadie.us
X-Cache: nntpcache 3.0.2 (see http://www.nntpcache.com/)
Sender: news <news@ger.gmane.org>

I would like my command history to be stored in an encrypted file. I
have read a few messages in this list from 2007 which state that there
isn't a straightforward way to do this within zsh, itself, and the use
of an encrypted file system is suggested.

However, I think that there might indeed be a way to accomplish this.

Is it possible to do the following?

Make sure that SAVEHIST is set to 0.

Then, on login, prompt the user for a password. Remember this password
for the duration of the shell session. Then, use this password along
with a decryption program to read an encrypted history file called, for
example, ~/.ehistory. Put the decrypted contents of this file into the
current shell's history list via the repeated use of the "print -s"
command.

Finally, on logout, pipe the output of "fc -ln 1" through a program
which uses the same password entered at login time to encrypt the
history and write it to the ~/.ehistory file.

Can any of you see any reason for why this would not work?

Or alternatively, is there perhaps a better way to do this within zsh?

Thanks in advance.
  

-- 
 Lloyd Zusman
 ljz@asfast.com
 God bless you.

