From zsh-users-return-14742-mason-zsh=primenet.com.au@zsh.org Sun Jan 24 08:13:27 2010
Return-Path: <zsh-users-return-14742-mason-zsh=primenet.com.au@zsh.org>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 2869 invoked by alias); 24 Jan 2010 08:13:27 -0000
Mailing-List: contact zsh-users-help@zsh.org; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Id: Zsh Users List <zsh-users.zsh.org>
List-Post: <mailto:zsh-users@zsh.org>
List-Help: <mailto:zsh-users-help@zsh.org>
Delivered-To: mailing list zsh-users@zsh.org
X-Seq: 14742
Received: (qmail 28314 invoked from network); 24 Jan 2010 08:13:26 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.5
Received-SPF: none (ns1.primenet.com.au: domain at closedmail.com does not designate permitted sender hosts)
From: Bart Schaefer <schaefer@brasslantern.com>
Message-id: <100124001320.ZM29784@torch.brasslantern.com>
Date: Sun, 24 Jan 2010 00:13:20 -0800
In-reply-to: <2d460de71001200934m9769985m9ad0281eae256d4a@mail.gmail.com>
Comments: In reply to Richard Hartmann <richih.mailinglist@gmail.com>
 "Re: More verbose && ?" (Jan 20,  6:34pm)
References: <2d460de71001200834i7037df54h647f7b01d6ebdc4@mail.gmail.com>
	<chaz20100120171020.GC3872@yahoo.fr>
	<2d460de71001200934m9769985m9ad0281eae256d4a@mail.gmail.com>
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
To: zsh-users@zsh.org
Subject: Re: More verbose && ?
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii

On Jan 20,  6:34pm, Richard Hartmann wrote:
}
} I would definitely prefer an invisible and automagic way, ideally
} activated via an option.

I think you're unlikely to get your wish in exactly that form, but
if someone is feeling ambitious, here are some pointers:

Look in Src/exec.c for the comment

    /* Get the text associated with this command. */

The variable "text" assigned there is the closest approximation to
what you'd like reported.  By the time zsh gets around to executing a
command, it has been rearranged by the parser into bytecode sequences,
and without going through the same exercises that the XTRACE option
enables, the exact text can't be regenerated.  For example, in a math
expression like (( 0 )) the "text" is entirely gone and would have
to be reconstructed in execarith().  There are a lot of special
cases to cover.

In any case, that text would then need to be stashed somewhere from
whence it could later be retrieved and printed.  E.g., if it were
stored in the parameter $ZSH_LAST_CMD, then Richard could almost get
what he wants by using

TRAPZERR() { print -R "Error($?): $ZSH_LAST_CMD" }

I say "almost" because when one of the "branches" of the && list is
a shell function or other complex command, it' unclear to me what
the "last command" will end up being.

Aside to -workers:  Shouldn't ZSH_DEBUG_CMD be mentioned in the section
of the manual for "parameters set by the shell"?

