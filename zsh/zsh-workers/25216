From zsh-workers-return-25216-mason-zsh=primenet.com.au@sunsite.dk Thu Jun 19 16:00:54 2008
Return-Path: <zsh-workers-return-25216-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 7456 invoked from network); 19 Jun 2008 16:00:52 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 19 Jun 2008 16:00:52 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 8265 invoked from network); 19 Jun 2008 16:00:38 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 19 Jun 2008 16:00:38 -0000
Received: (qmail 26005 invoked by alias); 19 Jun 2008 16:00:34 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 25216
Received: (qmail 25988 invoked from network); 19 Jun 2008 16:00:33 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 19 Jun 2008 16:00:33 -0000
Received: from prunille.vinc17.org (vinc17.pck.nerim.net [213.41.242.187])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 0F38B8084FA0
	for <zsh-workers@sunsite.dk>; Thu, 19 Jun 2008 18:00:26 +0200 (CEST)
Received: by prunille.vinc17.org (Postfix, from userid 501)
	id 7921E23687BA; Thu, 19 Jun 2008 18:00:25 +0200 (CEST)
Date: Thu, 19 Jun 2008 18:00:24 +0200
From: Vincent Lefevre <vincent@vinc17.org>
To: zsh-workers@sunsite.dk
Cc: "Jun T." <takimoto-j@kba.biglobe.ne.jp>
Subject: Re: arithmetic operator precedence
Message-ID: <20080619160024.GK10734@prunille.vinc17.org>
Mail-Followup-To: zsh-workers@sunsite.dk,
	"Jun T." <takimoto-j@kba.biglobe.ne.jp>
References: <20080616144211.276fb0e3@pws-pc> <2d460de70806170219k12ff4cadn441b52c48bf8076f@mail.gmail.com> <20080617094509.GC5016@sc.homeunix.net> <2d460de70806170324o5a44609x9383cc2445d67dd6@mail.gmail.com> <20080617103829.GD5016@sc.homeunix.net> <20080617114340.398c731f@news01> <20080617112815.GF10734@prunille.vinc17.org> <200806171146.m5HBkhfR013230@news01.csr.com> <a0600102dc47fd2c6184e@kba.biglobe.ne.jp> <20080619095454.GE5016@sc.homeunix.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <20080619095454.GE5016@sc.homeunix.net>
X-Mailer-Info: http://www.vinc17.org/mutt/
User-Agent: Mutt/1.5.18-vl-r22984 (2008-06-11)
X-Virus-Scanned: ClamAV 0.92.1/7506/Thu Jun 19 16:51:14 2008 on bifrost
X-Virus-Status: Clean

On 2008-06-19 10:54:54 +0100, Stephane Chazelas wrote:
> With all the existing operators, one can do
> 
> x=$(( some-expression ))
> y=$(( some-other-expression ))
> z=$(( $x <op> $y ))
> 
> and it's OK whatever some-expression and some-other-expression
> and <op> as long as they are POSIX.

This is not guaranteed to work. Indeed POSIX allows constants other
than the "canonical" ones to be recognized. With such constants,
you can get wrong results. Whether such constants can occur for some
reason is another matter. In *practice*, it is safer to write:

  z=$(( ($x) <op> ($y) ))

and even safer to write:

  z=$(( x <op> y ))

though it may not work in non-POSIX shells.

> The syntax above is the only one you can write in a POSIX
> script, and POSIX guarantees it to work at the moment.
> 
> If you change ** so that it has  higher precedence than the
> unary minus, you break that harmony.

That's a completely stupid reason. In practice, many shells recognize
other constants, such as "1+1" (this is allowed by POSIX), even more
than those which support **. For instance:

$ a='1+1'; echo $((a * 2)); echo $((3**2))
4
pdksh: 3**2: unexpected `*'

and:

$ a='1+1'; echo $((a * 2)); echo $((3**2))
4
posh: 3**2: unexpected `*'

So, writing z=$(( $x <op> $y )) will not work anyway.

Shells should be designed to work *in practice* (and do what the
user expects to get), not to work specifically on theoretical
implementations that will never exist.

-- 
Vincent Lefèvre <vincent@vinc17.org> - Web: <http://www.vinc17.org/>
100% accessible validated (X)HTML - Blog: <http://www.vinc17.org/blog/>
Work: CR INRIA - computer arithmetic / Arenaire project (LIP, ENS-Lyon)

