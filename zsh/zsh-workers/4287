From zsh-workers-request@math.gatech.edu Fri Aug 07 13:23:34 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 12923 invoked from network); 7 Aug 1998 13:23:33 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 7 Aug 1998 13:23:33 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.9.1/8.9.1) id JAA04499;
	Fri, 7 Aug 1998 09:02:52 -0400 (EDT)
Resent-Date: Fri, 7 Aug 1998 09:02:52 -0400 (EDT)
Sender: B.Stephens@isode.com
To: zsh-workers@math.gatech.edu
Subject: EZ-compctl (was Re: ideas: free-search-complete, noexpand)
References: <199808071213.OAA20646@beta.informatik.hu-berlin.de>
Mime-Version: 1.0 (generated by tm-edit 7.108)
Content-Type: text/plain; charset=US-ASCII
From: Bruce Stephens <b.stephens@isode.com>
Date: 07 Aug 1998 14:04:39 +0100
In-Reply-To: Sven Wischnowsky's message of "Fri, 7 Aug 1998 14:13:57 +0200 (MET DST)"
Message-ID: <vbu33p3pug.fsf@snake.isode.com>
Lines: 21
X-Mailer: Gnus v5.6.27/XEmacs 20.4 - "Emerald"
Resent-Message-ID: <"mBM5n3.0.E61.xhlor"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4287
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Sven Wischnowsky <wischnow@informatik.hu-berlin.de> writes:

> If you meant that the description should be on a somewhat higher
> level (something like: these options, or these options followed by
> filenames, than an optional directory-name, then all files), then I
> would like to agree, but I'm not sure, how easy we can make that
> (thinking about commands like `find').

find is an extreme case.  Most people (me, for example) want to be
able to construct completions for fairly simple things like the tar
example, and some kind of easy way to do that would be useful, I
think.  A Perl script or something that would produce human-readable
compctl commands from something similar to the syntax you get in
manpages (in as much as compctl commands are ever human-readable)
would be ideal.

i.e., stuff the complex cases: just provide something that's handy.
If it produces compctl that one can read, then it'll probably help in
learning compctl too.  (Let's be honest, although the documentation to
compctl is *lots* better than it once was, this is still one of the
harder bits of zsh to learn.)

