From zsh-workers-request@math.gatech.edu Wed Jun 10 10:59:40 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 24723 invoked from network); 10 Jun 1998 10:59:39 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 10 Jun 1998 10:59:39 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.8.5/8.8.5) id GAA05565;
	Wed, 10 Jun 1998 06:54:51 -0400 (EDT)
Resent-Date: Wed, 10 Jun 1998 06:54:51 -0400 (EDT)
From: Zefram <zefram@tao.co.uk>
Message-Id: <199806101055.LAA13182@taos.demon.co.uk>
Subject: Re: Variable namespaces, goals for ZLE, etc.
To: schaefer@brasslantern.com (Bart Schaefer)
Date: Wed, 10 Jun 1998 11:55:36 +0100 (BST)
Cc: zsh-workers@math.gatech.edu
In-Reply-To: <980609232639.ZM9523@candle.brasslantern.com> from "Bart Schaefer" at Jun 9, 98 11:26:39 pm
X-Mailer: ELM [version 2.4 PL25]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Resent-Message-ID: <"AukyE.0.uM1.xNcVr"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4085
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Bart Schaefer wrote:
>
>} If we *don't* introduce a proper namespace scheme, I hate to think what
>} will happen when modules gain the ability to define special parameters.
>
>I don't expect it'd be any worse than the current situation with external
>programs having to come up with names for their environment variables.
>If you can explain why a namespace like "zsh." is better than a simple
>convention like "ZSH_", I'm willing to be persuaded.

The advantage of a "zsh." prefix is that *nothing* currently relies
on such a variable name existing or behaving in any particular manner,
whereas "ZSH_" names are defined by POSIX to have no special semantics.
I think it is reasonable for a script, for any shell, to be able to define
parameters with any name, including "_" characters, without having to
worry about whether (a future version of) the shell will attach unwanted
semantics to the variable name.  Of course, we can't do anything about
"PATH", etc., but we *can* get zsh-specific variables out of the way,
making zsh more reliably usable as a scripting language.

-zefram

