From zsh-workers-return-16312-mason-zsh=primenet.com.au@sunsite.dk Sat Dec 08 17:58:08 2001
Return-Path: <zsh-workers-return-16312-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 3145 invoked from network); 8 Dec 2001 17:58:07 -0000
Received: from sunsite.dk (130.225.247.90)
  by ns1.primenet.com.au with SMTP; 8 Dec 2001 17:58:07 -0000
Received: (qmail 28495 invoked by alias); 8 Dec 2001 17:58:02 -0000
Mailing-List: contact zsh-workers-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.dk
X-Seq: 16312
Received: (qmail 28481 invoked from network); 8 Dec 2001 17:58:00 -0000
From: Bart Schaefer <schaefer@brasslantern.com>
Message-Id: <1011208175131.ZM24707@candle.brasslantern.com>
Date: Sat, 8 Dec 2001 17:51:31 +0000
In-Reply-To: <1007824073.29799.1.camel@localhost.localdomain>
Comments: In reply to Borsenkow Andrej <Andrej.Borsenkow@mow.siemens.ru>
        "Caching between matchers" (Dec  8,  6:07pm)
References: <1007824073.29799.1.camel@localhost.localdomain>
X-Mailer: Z-Mail (5.0.0 30July97)
To: Borsenkow Andrej <Andrej.Borsenkow@mow.siemens.ru>,
        Zsh hackers list <zsh-workers@sunsite.dk>
Subject: Re: Caching between matchers
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii

On Dec 8,  6:07pm, Borsenkow Andrej wrote:
} Subject: Caching between matchers
}
} When completion generates list of matche on-the-fly (like installed RPMs
} or list of available RPMs in urpmi completion) it currently does it for
} every matcher that is tried. If list is long (urpmi has ~3000 packages
} in database) or needs some time to build (esp. when forking off) it may
} take quite a bit of time.

This is why the caching mechanism (_store_cache, _retrieve_cache, and
_cache_invalid) was introduced; _urpmi should be doing its own caching.

} Because the list obviously is not changed between matchers, is it
} possible to reuse it?

This isn't precisely true.  Many completers test $_matcher_num, which is
set by main complete, and do nothing if it is greater than 1.  On the
other hand, _path_files tests whether the *last* matcher is being tried,
and may add more path expansions to the list in that case.

} Actually, is it possible to traverse matchers list internally in
} compadd?

I don't think so, because the matchers may be traversed multiple times
(e.g.  the _prefix and _ignored completers re-traverse the matcher-list).

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

Zsh: http://www.zsh.org | PHPerl Project: http://phperl.sourceforge.net   

