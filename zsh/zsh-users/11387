From zsh-users-return-11387-mason-zsh=primenet.com.au@sunsite.dk Thu Apr 12 00:20:08 2007
Return-Path: <zsh-users-return-11387-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 551 invoked from network); 12 Apr 2007 00:20:05 -0000
X-Spam-Checker-Version: SpamAssassin 3.1.8 (2007-02-13) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=BAYES_00,FORGED_RCVD_HELO
	autolearn=ham version=3.1.8
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 12 Apr 2007 00:20:05 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 65291 invoked from network); 11 Apr 2007 18:53:18 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 11 Apr 2007 18:53:18 -0000
Received: (qmail 603 invoked by alias); 11 Apr 2007 18:53:03 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 11387
Received: (qmail 588 invoked from network); 11 Apr 2007 18:53:02 -0000
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by sunsite.dk with SMTP; 11 Apr 2007 18:53:02 -0000
Received: (qmail 63556 invoked from network); 11 Apr 2007 18:53:01 -0000
Received: from mabruk.micah.cowan.name (66.150.225.51)
  by a.mx.sunsite.dk with SMTP; 11 Apr 2007 18:52:58 -0000
Received: from [192.168.6.57] (unknown [69.36.252.2])
	by mabruk.micah.cowan.name (Postfix) with ESMTP id 9D7AE3C8A95A
	for <zsh-users@sunsite.dk>; Wed, 11 Apr 2007 11:52:54 -0700 (PDT)
Message-ID: <461D2E79.6070907@cowan.name>
Date: Wed, 11 Apr 2007 11:52:41 -0700
From: Micah Cowan <micah@cowan.name>
User-Agent: Thunderbird 1.5.0.10 (X11/20070306)
MIME-Version: 1.0
To:  zsh-users@sunsite.dk
Subject: Re: Reading line by line
References: <242911.74922.qm@web8402.mail.in.yahoo.com> <461D2541.1080104@cowan.name> <20070411183602.GD4996@sc.homeunix.net>
In-Reply-To: <20070411183602.GD4996@sc.homeunix.net>
Content-Type: text/plain; charset=ISO-8859-15; format=flowed
Content-Transfer-Encoding: 7bit

Stephane Chazelas wrote:
> On Wed, Apr 11, 2007 at 11:13:21AM -0700, Micah Cowan wrote:
>> sac wrote:
>>> 2. Like Micah J. Cowan pointed out, 
>>>
>>> while read i
>>> do
>>> echo $i
>>> done < filename
>> As Stephane points out, -r is preferable, as it disables
>> backslash-escaping. IFS= should not be necessary--and isn't, in zsh--but
>> dash, bash and ksh all violate POSIX (as I read it) by inserting new
>> field separators after splitting, instead of using the original
>> separation; so using IFS= is portable.
> [...]
> 
> Don't know what you mean, but IFS= is necessary even with zsh,
> and the behavior is POSIX in every shell AFAICT, could you
> please expand.
> 
> $ echo '  a  ' | read -r
> $ echo "<$REPLY>"
> <a>
> $ echo '  a  ' | IFS= read -r
> $ echo "<$REPLY>"
> <  a  >

Good point, I hadn't been thinking about whitespace at the beginning of 
the line.

My assertion wrt POSIX was in the case of something like:

$ echo 'a   b' | read -r

zsh will preserve all whitespace between a and b, whereas other shells 
will condense it to a single space. POSIX states that, after splitting 
the fields, if there is only one variable name left in the args, all 
remaining fields will be assigned to that variable, with "their 
intervening separation", which IMO is difficult to interpret as anything 
other than the original separation that had been encountered.

-- 
Micah J. Cowan
Programmer, musician, typesetting enthusiast, gamer...
http://micah.cowan.name/

