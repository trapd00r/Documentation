From zsh-workers-request@math.gatech.edu Thu Jun 04 20:19:50 1998
Return-Path: <zsh-workers-request@math.gatech.edu>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 7118 invoked from network); 4 Jun 1998 20:19:49 -0000
Received: from math.gatech.edu (list@130.207.146.50)
  by ns1.primenet.com.au with SMTP; 4 Jun 1998 20:19:49 -0000
Received: (from list@localhost)
	by math.gatech.edu (8.8.5/8.8.5) id PAA05746;
	Thu, 4 Jun 1998 15:55:13 -0400 (EDT)
Resent-Date: Thu, 4 Jun 1998 15:55:13 -0400 (EDT)
From: "Bart Schaefer" <schaefer@brasslantern.com>
Message-Id: <980604125604.ZM14808@candle.brasslantern.com>
Date: Thu, 4 Jun 1998 12:56:04 -0700
X-Mailer: Z-Mail (5.0.0 30July97)
To: zsh-workers@math.gatech.edu
Subject: PATCH: Misc. minor documentation tweaks
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-Message-ID: <"4P8-5.0.jP1.WklTr"@math>
Resent-From: zsh-workers@math.gatech.edu
X-Mailing-List: <zsh-workers@math.gatech.edu> archive/latest/4045
X-Loop: zsh-workers@math.gatech.edu
Precedence: list
Resent-Sender: zsh-workers-request@math.gatech.edu

Changes;

* The definition of sxitem in ztexi.yo mentions an ARG2 that is not provided.

* Delete stray .PP in expn.yo

* Minor clarification to :s/l/r/ modifier.

* Capitalize chapter name "Options".

* Note that LOCAL_OPTIONS does not affect RESTRICTED.

* Replace "implicit indirection" with "implicit redirection" where that
  seemed to be what was meant.

* Replace one call to sectref() with noderef().  There's still a problem
  in that sectref isn't defined anywhere, but is used in one remaining
  place to cross-reference to a sect() that can't be referenced any other
  way.  See the last hunk below for context.

Index: Doc/ztexi.yo
===================================================================
--- ztexi.yo	1998/06/01 17:08:42	1.1.1.1
+++ ztexi.yo	1998/06/04 17:47:34
@@ -163,7 +163,7 @@
   item(ARG1)(NL()ARG2)\
 )
 def(sxitem)(1)(\
-  xitem(ARG1)(ARG2)\
+  xitem(ARG1)\
 )
 
 def(startlist)(0)(\
Index: Doc/Zsh/expn.yo
===================================================================
--- expn.yo	1998/06/01 17:08:42	1.1.1.1
+++ expn.yo	1998/06/04 18:30:53
@@ -107,7 +107,7 @@
 All such behaviour can be
 disabled by quoting the `tt(~)', the `tt(=)', or the whole expression (but not
 simply the colon); the tt(EQUALS) option is also respected.
-.PP
+
 If the option tt(MAGIC_EQUAL_SUBST) is set, any unquoted shell
 argument in the form `var(identifier)tt(=)var(expression)' becomes eligible
 for file expansion as described in the previous paragraph.  Quoting the
@@ -972,13 +972,14 @@
 substitutions are not regular expressions, but character strings.  Any
 character can be used as the delimiter in place of `tt(/)'.  A
 backslash quotes the delimiter character.  The character `tt(&)', in
-the right hand side, is replaced by the text from the left-hand-side.
-The `tt(&)' can be quoted with a backslash.  A null var(l) uses the
-previous string either from a var(l) or from a contextual scan string
-var(s) from `tt(!?)var(s)'.  You can omit the rightmost delimiter if a
-newline immediately follows var(r); the rightmost `tt(?)' in a context
-scan can similarly be omitted.  Note the same record of the last
-var(l) and var(r) is maintained across all forms of expansion.
+the right-hand-side var(r), is replaced by the text from the
+left-hand-side var(l).  The `tt(&)' can be quoted with a backslash.  A
+null var(l) uses the previous string either from the previous var(l)
+or from the contextual scan string var(s) from `tt(!?)var(s)'.  You can
+omit the rightmost delimiter if a newline immediately follows var(r);
+the rightmost `tt(?)' in a context scan can similarly be omitted.
+Note the same record of the last var(l) and var(r) is maintained
+across all forms of expansion.
 
 By default, a history reference with no event specification refers to the same
 line as the last history reference on that command line, unless it is the
Index: Doc/Zsh/options.yo
===================================================================
--- options.yo	1998/06/01 17:08:43	1.1.1.1
+++ options.yo	1998/06/04 19:09:18
@@ -1,5 +1,5 @@
 texinode(Options)(Shell Builtin Commands)(Parameters)(Top)
-chapter(options)
+chapter(Options)
 cindex(options)
 startmenu()
 menu(Specifying Options)
@@ -751,7 +751,10 @@
 pindex(RESTRICTED)
 cindex(restricted shell)
 item(tt(RESTRICTED) (tt(-r)))(
-Enables restricted mode.  See noderef(Restricted Shell).
+Enables restricted mode.  This option cannot be changed using
+tt(unsetopt), and setting it inside a function always changes it
+globally regardless of the tt(LOCAL_OPTIONS) option.  See
+noderef(Restricted Shell).
 )
 pindex(RM_STAR_SILENT)
 cindex(rm *, querying before)
Index: Doc/Zsh/redirect.yo
===================================================================
--- redirect.yo	1998/06/01 17:08:43	1.1.1.1
+++ redirect.yo	1998/06/04 17:35:13
@@ -126,7 +126,7 @@
 nofill(tt(date >foo >bar))
 
 writes the date to two files, named `tt(foo)' and `tt(bar)'.
-Note that a pipe is an implicit indirection; thus
+Note that a pipe is an implicit redirection; thus
 
 nofill(tt(date >foo | cat))
 
@@ -158,7 +158,7 @@
 
 nofill(tt(echo exit 0 >> *.sh))
 
-Note that a pipe is in implicit indirection; thus
+Note that a pipe is in implicit redirection; thus
 
 nofill(tt(cat bar | sort <foo))
 
Index: Doc/Zsh/zle.yo
===================================================================
--- zle.yo	1998/06/01 17:08:43	1.1.1.1
+++ zle.yo	1998/06/04 19:31:55
@@ -86,7 +86,7 @@
 There are 162 standard widgets built in to ZLE (see sectref(Standard Widgets)).
 Other built-in widgets can be defined by other modules (see
 ifzman(zmanref(zshmodules))\
-ifnzman(sectref(Zsh Modules))\
+ifnzman(noderef(Zsh Modules))\
 ).  Each built-in widget has two names: its normal canonical name, and the
 same name preceded by a `tt(.)'.  The `tt(.)' name is special: it can't be
 rebound to a different widget.  This makes the widget available even when

-- 
Bart Schaefer                                 Brass Lantern Enterprises
http://www.well.com/user/barts              http://www.brasslantern.com

