From zsh-users-return-12855-mason-zsh=primenet.com.au@sunsite.dk Sun May 18 19:03:59 2008
Return-Path: <zsh-users-return-12855-mason-zsh=primenet.com.au@sunsite.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 3157 invoked from network); 18 May 2008 19:03:57 -0000
X-Spam-Checker-Version: SpamAssassin 3.2.4 (2008-01-01) on f.primenet.com.au
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham
	version=3.2.4
Received: from news.dotsrc.org (HELO a.mx.sunsite.dk) (130.225.247.88)
  by ns1.primenet.com.au with SMTP; 18 May 2008 19:03:57 -0000
Received-SPF: none (ns1.primenet.com.au: domain at sunsite.dk does not designate permitted sender hosts)
Received: (qmail 29178 invoked from network); 18 May 2008 19:03:40 -0000
Received: from sunsite.dk (130.225.247.90)
  by a.mx.sunsite.dk with SMTP; 18 May 2008 19:03:40 -0000
Received: (qmail 10782 invoked by alias); 18 May 2008 19:03:29 -0000
Mailing-List: contact zsh-users-help@sunsite.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-users@sunsite.dk
X-Seq: 12855
Received: (qmail 10767 invoked from network); 18 May 2008 19:03:29 -0000
Received: from bifrost.dotsrc.org (130.225.254.106)
  by sunsite.dk with SMTP; 18 May 2008 19:03:29 -0000
Received: from vms173003pub.verizon.net (vms173003pub.verizon.net [206.46.173.3])
	by bifrost.dotsrc.org (Postfix) with ESMTP id 602F280589A4
	for <zsh-users@sunsite.dk>; Sun, 18 May 2008 21:03:24 +0200 (CEST)
Received: from torch.brasslantern.com ([71.116.113.54])
 by vms173003.mailsrvcs.net
 (Sun Java System Messaging Server 6.2-6.01 (built Apr  3 2006))
 with ESMTPA id <0K1200041VGK63UL@vms173003.mailsrvcs.net> for
 zsh-users@sunsite.dk; Sun, 18 May 2008 14:00:21 -0500 (CDT)
Received: from torch.brasslantern.com (localhost.localdomain [127.0.0.1])
	by torch.brasslantern.com (8.13.1/8.13.1) with ESMTP id m4IJ3BWK004214	for
 <zsh-users@sunsite.dk>; Sun, 18 May 2008 12:03:12 -0700
Received: (from schaefer@localhost)	by torch.brasslantern.com
 (8.13.1/8.13.1/Submit) id m4IJ3BQd004213	for zsh-users@sunsite.dk; Sun,
 18 May 2008 12:03:11 -0700
Date: Sun, 18 May 2008 12:03:11 -0700
From: Bart Schaefer <schaefer@brasslantern.com>
Subject: Re: Question on filename completion
In-reply-to: <d53cb3110805181023p1e823d8drb196db9e52f79b33@mail.gmail.com>
To: "Zsh Users" <zsh-users@sunsite.dk>
Message-id: <080518120311.ZM4212@torch.brasslantern.com>
MIME-version: 1.0
X-Mailer: OpenZMail Classic (0.9.2 24April2005)
Content-type: text/plain; charset=us-ascii
References: <d53cb3110805181023p1e823d8drb196db9e52f79b33@mail.gmail.com>
Comments: In reply to "Gowtham M" <gowthamgowtham@gmail.com>
 "Question on filename completion" (May 18, 10:53pm)
X-Virus-Scanned: ClamAV 0.91.2/7150/Sun May 18 20:10:15 2008 on bifrost
X-Virus-Status: Clean

On May 18, 10:53pm, Gowtham M wrote:
}
} When I hit tab at
} zsh> ls /some/path/to/something/761/xyz/_  # Tab is hit when cursor is at _
} 
} zsh spends a lot of time in stat64()ing all the directories from
} /some/path/to/something/0 to /some/path/to/something/9999
} 
} I do not understand why this is required to complete the filename
} after /some/path/to/something/761/xyz

This is _path_files at work.  Try typing

    zsh> ls /s/p/t/s<TAB>

and you'll find that it gets competed to

    zsh> ls /some/path/to/something/

On any given completion attempt, _path_files doesn't know whether any
path component might be only part of a directory name which, if it were
completed, would lead to additional matches among the sub-directories,
etc.  So it re-scans the whole hierarchy.

One way to prevent this from happening for hierarchies that you know
to be very broad is:

  zstyle ':completion:*' preserve-prefix '/some/path/to/something/*/'

That's not really the intended use of preserve-prefix but it has the
desired effect.  Note that preserve-prefix is a single string, not a
list of patterns (too bad, really) so if you want to use it for more
than one pattern, you have to construct the alternatives yourself:

  zstyle ':completion:*' preserve-prefix \
      '(/|?:|/some/path/to/something/*|/another/large/dir/*)/'

The preserve-prefix pattern is matched against a string, not against
files on disk, so it can have slashes inside the parens and cannot
use glob qualifiers that test file attributes.

