From zsh-workers-return-11537-mason-zsh=primenet.com.au@sunsite.auc.dk Tue May 23 15:14:03 2000
Return-Path: <zsh-workers-return-11537-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 18255 invoked from network); 23 May 2000 15:14:01 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 23 May 2000 15:14:01 -0000
Received: (qmail 1301 invoked by alias); 23 May 2000 15:13:53 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 11537
Received: (qmail 1291 invoked from network); 23 May 2000 15:13:48 -0000
Date: Tue, 23 May 2000 16:13:20 +0100
From: Peter Stephenson <pws@cambridgesiliconradio.com>
Subject: Re: PATCH: Re: complete (real C) tags
In-reply-to: "Your message of Tue, 23 May 2000 16:19:19 +0200."
 <200005231419.QAA27360@beta.informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk (Zsh hackers list)
Message-id: <0FV000KH2QA8D7@la-la.cambridgesiliconradio.com>
Content-transfer-encoding: 7BIT

> This adds -a to make the words be used as names of arrays
> (actually I used get_user_var(), so '(foo bar)' is possible, should we 
> document this?) and complete their values. It also adds -k to make the 
> words be taken as names of assocs and complete their keys.

That's a huge improvement.  Here is _complete_tag.

Index: Completion/Commands/.distfiles
===================================================================
RCS file: /cvsroot/zsh/zsh/Completion/Commands/.distfiles,v
retrieving revision 1.2
diff -u -r1.2 .distfiles
--- Completion/Commands/.distfiles	2000/04/30 21:04:54	1.2
+++ Completion/Commands/.distfiles	2000/05/23 15:11:24
@@ -2,5 +2,5 @@
     .distfiles
     _bash_completions _complete_debug _correct_filename _correct_word
     _expand_word _history_complete_word _read_comp _most_recent_file
-    _complete_help _next_tags
+    _complete_help _next_tags _complete_tag
 '
Index: Completion/Commands/_complete_tag
===================================================================
RCS file: _complete_tag
diff -N _complete_tag
--- /dev/null	Tue May  5 13:32:27 1998
+++ _complete_tag	Tue May 23 08:11:24 2000
@@ -0,0 +1,57 @@
+#compdef -k complete-word \C-xt
+
+# Complete tags using either TAGS or tags.  Looks up your directory
+# hierarchy to find one.  If both exist, uses TAGS.
+#
+# You can override the choice of tags file with $TAGSFILE (for TAGS)
+# or $tagsfile (for tags).
+#
+# Could be rewritten by some sed expert to use sed instead of perl.
+
+emulate -L zsh
+
+# Tags file to look for
+local c_Tagsfile=${TAGSFILE:-TAGS} c_tagsfile=${tagsfile:-tags} expl
+# Max no. of directories to scan up through
+integer c_maxdir=10
+# Context.
+local curcontext="$curcontext"
+local -a c_tags_array
+
+if [[ -z "$curcontext" ]]; then
+  curcontext="complete-tag:::"
+else
+  curcontext="complete-tag:${curcontext#*:}"
+fi
+
+local c_path=
+integer c_idir
+while [[ ! -f $c_path$c_Tagsfile &&
+         ! -f $c_path$c_tagsfile && $c_idir -lt $c_maxdir ]]; do
+  (( c_idir++ ))
+  c_path=../$c_path
+done
+
+if [[ -f $c_path$c_Tagsfile ]]; then
+  # prefer the more comprehensive TAGS, which unfortunately is a
+  # little harder to parse.
+  # could do this with sed, just can't be bothered to work out how,
+  # after quarter of an hour of trying, except for
+  #  rm -f =sed; ln -s /usr/local/bin/perl /usr/bin/sed
+  # but that's widely regarded as cheating.
+  c_tags_array=($(sed -n \
+        -e 's/^\(.*[a-zA-Z_0-9]\)[[ '$'\t'':;,()]*'$'\177''.*$/\1/' \
+        -e 's/^.*[^a-zA-Z_0-9]//' \
+        -e '/^[a-zA-Z_].*/p' $c_path$c_Tagsfile))
+#  c_tags_array=($(perl -ne '/([a-zA-Z_0-9]+)[ \t:;,\(]*\x7f/ &&
+#                  print "$1\n"' $c_path$c_Tagsfile))
+  _main_complete - '' _wanted etags expl 'emacs tags' \
+      compadd -a c_tags_array
+elif [[ -f $c_tagspath ]]; then
+  # tags doesn't have as much in, but the tag is easy to find.
+  # we can use awk here.
+  c_tags_array=($(awk '{ print $1 }' $c_path$c_Tagsfile))
+  _main_complete - '' _wanted vtags expl 'vi tags' compadd -a c_tags_array
+else
+  return 1
+fi
Index: Doc/Zsh/compsys.yo
===================================================================
RCS file: /cvsroot/zsh/zsh/Doc/Zsh/compsys.yo,v
retrieving revision 1.53
diff -u -r1.53 compsys.yo
--- Doc/Zsh/compsys.yo	2000/05/22 09:28:35	1.53
+++ Doc/Zsh/compsys.yo	2000/05/23 15:11:24
@@ -2460,6 +2460,18 @@
 completion attempt gets its own file.  A command to view each of these
 files is pushed onto the editor buffer stack.
 )
+findex(_complete_tag (^Xt))
+item(tt(_complete_tag (^Xt)))(
+This widget completes symbol tags created by the tt(etags) or tt(ctags)
+programmes (note there is no connection with the completion system's tags)
+stored in a file tt(TAGS), in the format used by tt(etags), or tt(tags), in the
+format created by tt(ctags).  It will look back up the path hierarchy for
+the first occurrence of either file; if both exist, the file tt(TAGS) is
+preferred.  You can specify the full path to a tt(TAGS) or tt(tags) file by
+setting the parameter tt($TAGSFILE) or tt($tagsfile) respectively.
+The corresponding completion tags used are tt(etags) and tt(vtags), after
+emacs and vi respectively.
+)
 enditem()
 
 texinode(Completion Functions)(Completion Directories)(Bindable Commands)(Completion System)

-- 
Peter Stephenson <pws@cambridgesiliconradio.com>
Cambridge Silicon Radio, Unit 300, Science Park, Milton Road,
Cambridge, CB4 0XL, UK                          Tel: +44 (0)1223 392070

