From zsh-workers-return-6738-mason-zsh=primenet.com.au@sunsite.auc.dk Mon Jun 21 08:10:30 1999
Return-Path: <zsh-workers-return-6738-mason-zsh=primenet.com.au@sunsite.auc.dk>
Delivered-To: mason-zsh@primenet.com.au
Received: (qmail 16754 invoked from network); 21 Jun 1999 08:10:29 -0000
Received: from sunsite.auc.dk (130.225.51.30)
  by ns1.primenet.com.au with SMTP; 21 Jun 1999 08:10:29 -0000
Received: (qmail 23212 invoked by alias); 21 Jun 1999 08:09:53 -0000
Mailing-List: contact zsh-workers-help@sunsite.auc.dk; run by ezmlm
Precedence: bulk
X-No-Archive: yes
Delivered-To: mailing list zsh-workers@sunsite.auc.dk
X-Seq: 6738
Received: (qmail 23205 invoked from network); 21 Jun 1999 08:09:52 -0000
Date: Mon, 21 Jun 1999 10:09:51 +0200 (MET DST)
Message-Id: <199906210809.KAA11740@beta.informatik.hu-berlin.de>
From: Sven Wischnowsky <wischnow@informatik.hu-berlin.de>
To: zsh-workers@sunsite.auc.dk
In-reply-to: Peter Stephenson's message of Sun, 20 Jun 1999 16:31:28 +0200
Subject: Re: Non-patch: zle argument handling


Peter Stephenson wrote:

> I haven't bothered sending a patch for the merged changes, which will
> appear in pws-23, if I haven't lost count, but below are the documentation
> changes only (Sven, please look and see if I've missed any of your changes
> which I claim to have included) --- don't apply this, except to read, since
> there aren't any code changes to go with it.

As far as I can see now, it looks good.

> - Sven's read builtin changes

I was thinking about this some more. Maybe we should make this return
key in the same way as they are reported by the `keys' special
parameter? I.e. `C-a' instead of ASCII-1.
Maybe I'll produce a patch for this sometime this week so we can play
with it...

> - Sven's zle -R change

There are other things along this line we might want to think
of. E.g.: a way to put the cursor under the command line (a la
trashzle()). Probably even a way to redisplay the prompt after that
and saying that we have just printed n lines (I'm talking about
user-programmable alwayslastprompt-behavior).

> - My change to specify a numeric argument to zle with -N or -n <number>.
>   I didn't like "zle widget '' args" to call a widget with argument args
>   using the current numeric argument, since it's unclear and error-prone.
>   (This means the zle calls in Sven's example isearch function need
>   changing.)

I didn't like that either, I was just too lazy to implement more
sophisticated argument handling.

> I have not included:
> - Any way of aliasing widgets.  You need to defined a function to do
>   anything like this.  We can add something like this if and when we decide
>   it's necessary.

That's ok for me.

> Another possible suggestion: We could remove all the feep()'s from the code
> and feep() if and only if the widget returned 1.  For user-defined widgets,
> we could have a special function to allow them to feep and a special option
> to zle that will suppress the feep for any other widget, so that simple zle
> -N's work without extra error handling.  If there are times we need to
> return 1 internally but not feep, we could return 2 instead; that would
> also allow a widget to know if a function had failed but not feeped.
> (By the way, what does feep mean?)

No opinion here -- I always switch off all [bf]eeps.

Bart Schaefer wrote:

> Does this imply when called from that var(num) is ignored and exactly one
> key is read regardless?  That seems broken to me.  If that's not what it
> means, then what difference does it make that zle is involved?  Things
> should only get documented if they are visible behavior changes; and then
> what you need to document is the behavior, not the implementation.

Of course it reads multiple keys (and without `-[kq]' it reads anything
up to the next `\n').
Maybe we should just say that `read' also works inside zle widgets? Or 
would every user expect this? Does everyone know about `read'? We had
some questions about accessing the command line inside completion
functions after all. Maybe we should just say that keys can be read
inside zle widgets in the zle docs?

Btw.: do we want to have a way to read a key sequence (relative to a
keymap)? A way to look up a key (-sequence) in a keymap?

Bye
 Sven


--
Sven Wischnowsky                         wischnow@informatik.hu-berlin.de

